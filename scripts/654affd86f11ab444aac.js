(this.webpackChunkdiscord_app = this.webpackChunkdiscord_app || []).push([
  ["36897"],
  {
    447479: function (e) {
      e.exports = function (e, t, n, s) {
        var a = -1,
          i = null == e ? 0 : e.length;
        for (s && i && (n = e[++a]); ++a < i; ) n = t(n, e[a], a, e);
        return n;
      };
    },
    826193: function (e) {
      e.exports = function (e) {
        return e.split("");
      };
    },
    160739: function (e) {
      var t = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;
      e.exports = function (e) {
        return e.match(t) || [];
      };
    },
    975412: function (e) {
      e.exports = function (e) {
        return function (t) {
          return null == e ? void 0 : e[t];
        };
      };
    },
    448730: function (e, t, n) {
      var s = n(801282);
      e.exports = function (e, t, n) {
        var a = e.length;
        return (n = void 0 === n ? a : n), !t && n >= a ? e : s(e, t, n);
      };
    },
    128971: function (e, t, n) {
      var s = n(448730),
        a = n(386015),
        i = n(232396),
        r = n(263604);
      e.exports = function (e) {
        return function (t) {
          var n = a((t = r(t))) ? i(t) : void 0,
            l = n ? n[0] : t.charAt(0),
            o = n ? s(n, 1).join("") : t.slice(1);
          return l[e]() + o;
        };
      };
    },
    145983: function (e, t, n) {
      var s = n(447479),
        a = n(658141),
        i = n(401427),
        r = RegExp("['’]", "g");
      e.exports = function (e) {
        return function (t) {
          return s(i(a(t).replace(r, "")), e, "");
        };
      };
    },
    851707: function (e, t, n) {
      var s = n(975412),
        a = s({
          À: "A",
          Á: "A",
          Â: "A",
          Ã: "A",
          Ä: "A",
          Å: "A",
          à: "a",
          á: "a",
          â: "a",
          ã: "a",
          ä: "a",
          å: "a",
          Ç: "C",
          ç: "c",
          Ð: "D",
          ð: "d",
          È: "E",
          É: "E",
          Ê: "E",
          Ë: "E",
          è: "e",
          é: "e",
          ê: "e",
          ë: "e",
          Ì: "I",
          Í: "I",
          Î: "I",
          Ï: "I",
          ì: "i",
          í: "i",
          î: "i",
          ï: "i",
          Ñ: "N",
          ñ: "n",
          Ò: "O",
          Ó: "O",
          Ô: "O",
          Õ: "O",
          Ö: "O",
          Ø: "O",
          ò: "o",
          ó: "o",
          ô: "o",
          õ: "o",
          ö: "o",
          ø: "o",
          Ù: "U",
          Ú: "U",
          Û: "U",
          Ü: "U",
          ù: "u",
          ú: "u",
          û: "u",
          ü: "u",
          Ý: "Y",
          ý: "y",
          ÿ: "y",
          Æ: "Ae",
          æ: "ae",
          Þ: "Th",
          þ: "th",
          ß: "ss",
          Ā: "A",
          Ă: "A",
          Ą: "A",
          ā: "a",
          ă: "a",
          ą: "a",
          Ć: "C",
          Ĉ: "C",
          Ċ: "C",
          Č: "C",
          ć: "c",
          ĉ: "c",
          ċ: "c",
          č: "c",
          Ď: "D",
          Đ: "D",
          ď: "d",
          đ: "d",
          Ē: "E",
          Ĕ: "E",
          Ė: "E",
          Ę: "E",
          Ě: "E",
          ē: "e",
          ĕ: "e",
          ė: "e",
          ę: "e",
          ě: "e",
          Ĝ: "G",
          Ğ: "G",
          Ġ: "G",
          Ģ: "G",
          ĝ: "g",
          ğ: "g",
          ġ: "g",
          ģ: "g",
          Ĥ: "H",
          Ħ: "H",
          ĥ: "h",
          ħ: "h",
          Ĩ: "I",
          Ī: "I",
          Ĭ: "I",
          Į: "I",
          İ: "I",
          ĩ: "i",
          ī: "i",
          ĭ: "i",
          į: "i",
          ı: "i",
          Ĵ: "J",
          ĵ: "j",
          Ķ: "K",
          ķ: "k",
          ĸ: "k",
          Ĺ: "L",
          Ļ: "L",
          Ľ: "L",
          Ŀ: "L",
          Ł: "L",
          ĺ: "l",
          ļ: "l",
          ľ: "l",
          ŀ: "l",
          ł: "l",
          Ń: "N",
          Ņ: "N",
          Ň: "N",
          Ŋ: "N",
          ń: "n",
          ņ: "n",
          ň: "n",
          ŋ: "n",
          Ō: "O",
          Ŏ: "O",
          Ő: "O",
          ō: "o",
          ŏ: "o",
          ő: "o",
          Ŕ: "R",
          Ŗ: "R",
          Ř: "R",
          ŕ: "r",
          ŗ: "r",
          ř: "r",
          Ś: "S",
          Ŝ: "S",
          Ş: "S",
          Š: "S",
          ś: "s",
          ŝ: "s",
          ş: "s",
          š: "s",
          Ţ: "T",
          Ť: "T",
          Ŧ: "T",
          ţ: "t",
          ť: "t",
          ŧ: "t",
          Ũ: "U",
          Ū: "U",
          Ŭ: "U",
          Ů: "U",
          Ű: "U",
          Ų: "U",
          ũ: "u",
          ū: "u",
          ŭ: "u",
          ů: "u",
          ű: "u",
          ų: "u",
          Ŵ: "W",
          ŵ: "w",
          Ŷ: "Y",
          ŷ: "y",
          Ÿ: "Y",
          Ź: "Z",
          Ż: "Z",
          Ž: "Z",
          ź: "z",
          ż: "z",
          ž: "z",
          Ĳ: "IJ",
          ĳ: "ij",
          Œ: "Oe",
          œ: "oe",
          ŉ: "'n",
          ſ: "s",
        });
      e.exports = a;
    },
    386015: function (e) {
      var t = RegExp(
        "[\\u200d\ud800-\udfff\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff\\ufe0e\\ufe0f]",
      );
      e.exports = function (e) {
        return t.test(e);
      };
    },
    988513: function (e) {
      var t =
        /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;
      e.exports = function (e) {
        return t.test(e);
      };
    },
    232396: function (e, t, n) {
      var s = n(826193),
        a = n(386015),
        i = n(12276);
      e.exports = function (e) {
        return a(e) ? i(e) : s(e);
      };
    },
    12276: function (e) {
      var t = "\ud800-\udfff",
        n = "[\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff]",
        s = "\ud83c[\udffb-\udfff]",
        a = "[^" + t + "]",
        i = "(?:\ud83c[\udde6-\uddff]){2}",
        r = "[\ud800-\udbff][\udc00-\udfff]",
        l = "(?:" + n + "|" + s + ")?",
        o = "[\\ufe0e\\ufe0f]?",
        c = "(?:\\u200d(?:" + [a, i, r].join("|") + ")" + o + l + ")*",
        d = RegExp(
          s +
            "(?=" +
            s +
            ")|" +
            ("(?:" + [a + n + "?", n, i, r, "[" + t + "]"].join("|") + ")") +
            (o + l + c),
          "g",
        );
      e.exports = function (e) {
        return e.match(d) || [];
      };
    },
    519342: function (e) {
      var t = "\ud800-\udfff",
        n = "\\u2700-\\u27bf",
        s = "a-z\\xdf-\\xf6\\xf8-\\xff",
        a = "A-Z\\xc0-\\xd6\\xd8-\\xde",
        i =
          "\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000",
        r = "['’]",
        l = "[" + i + "]",
        o = "[" + s + "]",
        c = "[^" + t + i + "\\d+" + n + s + a + "]",
        d = "(?:\ud83c[\udde6-\uddff]){2}",
        u = "[\ud800-\udbff][\udc00-\udfff]",
        _ = "[" + a + "]",
        I = "(?:" + o + "|" + c + ")",
        E = "(?:" + _ + "|" + c + ")",
        T = "(?:" + r + "(?:d|ll|m|re|s|t|ve))?",
        m = "(?:" + r + "(?:D|LL|M|RE|S|T|VE))?",
        N =
          "(?:[\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff]|\ud83c[\udffb-\udfff])?",
        S = "[\\ufe0e\\ufe0f]?",
        g =
          "(?:\\u200d(?:" +
          ["[^" + t + "]", d, u].join("|") +
          ")" +
          S +
          N +
          ")*",
        h = "(?:" + ["[" + n + "]", d, u].join("|") + ")" + (S + N + g),
        C = RegExp(
          [
            _ + "?" + o + "+" + T + "(?=" + [l, _, "$"].join("|") + ")",
            E + "+" + m + "(?=" + [l, _ + I, "$"].join("|") + ")",
            _ + "?" + I + "+" + T,
            _ + "+" + m,
            "\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])",
            "\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])",
            "\\d+",
            h,
          ].join("|"),
          "g",
        );
      e.exports = function (e) {
        return e.match(C) || [];
      };
    },
    877921: function (e, t, n) {
      var s = n(14469),
        a = n(145983)(function (e, t, n) {
          return (t = t.toLowerCase()), e + (n ? s(t) : t);
        });
      e.exports = a;
    },
    14469: function (e, t, n) {
      var s = n(263604),
        a = n(278759);
      e.exports = function (e) {
        return a(s(e).toLowerCase());
      };
    },
    658141: function (e, t, n) {
      var s = n(851707),
        a = n(263604),
        i = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g,
        r = RegExp("[\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff]", "g");
      e.exports = function (e) {
        return (e = a(e)) && e.replace(i, s).replace(r, "");
      };
    },
    278759: function (e, t, n) {
      var s = n(128971)("toUpperCase");
      e.exports = s;
    },
    401427: function (e, t, n) {
      var s = n(160739),
        a = n(988513),
        i = n(263604),
        r = n(519342);
      e.exports = function (e, t, n) {
        return ((e = i(e)), void 0 === (t = n ? void 0 : t))
          ? a(e)
            ? r(e)
            : s(e)
          : e.match(t) || [];
      };
    },
    461647: function (e) {
      "use strict";
      e.exports = "/assets/2d419043d0603c440363.svg";
    },
    177266: function (e) {
      "use strict";
      e.exports = "/assets/c118f02ca2b6012645dc.svg";
    },
    909425: function (e) {
      "use strict";
      e.exports = "/assets/ffeba76b7ac022471e90.svg";
    },
    691466: function (e) {
      "use strict";
      e.exports = "/assets/a91f2fe1ec9cb9814b2a.png";
    },
    663346: function (e) {
      "use strict";
      e.exports = "/assets/1c31b3de540118162c60.svg";
    },
    532747: function (e) {
      "use strict";
      e.exports = "/assets/cda085d959d7040960ca.svg";
    },
    433466: function (e) {
      "use strict";
      e.exports = "/assets/9927535f3a57b86a89ca.svg";
    },
    458601: function (e) {
      "use strict";
      e.exports = "/assets/1248c5404ae1ad9c1e18.svg";
    },
    673557: function (e) {
      "use strict";
      e.exports = "/assets/96e2639de7bec6a0f7e5.svg";
    },
    322393: function (e) {
      "use strict";
      e.exports = "/assets/3debf88acd8ec8c936f0.svg";
    },
    278058: function (e) {
      "use strict";
      e.exports = "/assets/64757c2bd0ed12af8efa.svg";
    },
    91716: function (e) {
      "use strict";
      e.exports = "/assets/ee7c60d547e216226cc0.png";
    },
    470264: function (e) {
      "use strict";
      e.exports = "/assets/d43380f44e70297c4079.png";
    },
    710043: function (e) {
      "use strict";
      e.exports = "/assets/666dedbc382faa521e61.png";
    },
    847950: function (e) {
      "use strict";
      e.exports = "/assets/59f60de36a3d0fb85c3d.png";
    },
    329488: function (e) {
      "use strict";
      e.exports = "/assets/5a82d0404d1612050791.svg";
    },
    359449: function (e) {
      "use strict";
      e.exports = "/assets/8bc3253759bd2eb42fc5.svg";
    },
    827793: function (e) {
      "use strict";
      e.exports = "/assets/7ff3f608be7955fd2a27.svg";
    },
    438705: function (e) {
      "use strict";
      e.exports = "/assets/b002c761c9a815b7d983.svg";
    },
    387631: function (e) {
      "use strict";
      e.exports = "/assets/183100e75f47b0b8605f.svg";
    },
    438471: function (e) {
      "use strict";
      e.exports = "/assets/75f8d0fe6b6ba49eb369.svg";
    },
    872732: function (e) {
      "use strict";
      e.exports = "/assets/decdc9e3ca6777004148.svg";
    },
    179517: function (e) {
      "use strict";
      e.exports = "/assets/735935272f6d8c0d11fd.svg";
    },
    79829: function (e) {
      "use strict";
      e.exports = "/assets/52b66569e1a625a35a39.svg";
    },
    935653: function (e) {
      "use strict";
      e.exports = "/assets/2339e476d45f76f419a4.png";
    },
    449874: function (e) {
      "use strict";
      e.exports = "/assets/73e003a6eb75cdc3f42e.png";
    },
    14372: function (e) {
      "use strict";
      e.exports = "/assets/5ad360d37035d103ae6d.svg";
    },
    619282: function (e) {
      "use strict";
      e.exports = "/assets/e609b975bd407771e696.png";
    },
    500789: function (e) {
      "use strict";
      e.exports = "/assets/6baf73c68d6d419ff6b1.png";
    },
    934961: function (e) {
      "use strict";
      e.exports = "/assets/45fb0261e990ad8843ad.svg";
    },
    568294: function (e) {
      "use strict";
      e.exports = "/assets/94d8322648e3fdb98bac.svg";
    },
    867861: function (e) {
      "use strict";
      e.exports = "/assets/b667faa30bf224efea50.svg";
    },
    860790: function (e) {
      "use strict";
      e.exports = "/assets/eb1257c42bde7f77e1b9.svg";
    },
    268953: function (e) {
      "use strict";
      e.exports = "/assets/efecfc62ade6d32fc49a.svg";
    },
    487703: function (e) {
      "use strict";
      e.exports = "/assets/3767d536ae7d83681548.svg";
    },
    961618: function (e) {
      "use strict";
      e.exports = "/assets/80ea9ac2ca81eb32b67f.svg";
    },
    217684: function (e) {
      "use strict";
      e.exports = "/assets/5641a930cfbcd6f4067e.svg";
    },
    174618: function (e) {
      "use strict";
      e.exports = "/assets/644050012a889702b93e.svg";
    },
    458050: function (e) {
      "use strict";
      e.exports = "/assets/c3eaac3fac8fcb50bc23.svg";
    },
    334364: function (e) {
      "use strict";
      e.exports = "/assets/f3e2dc06f8eeb45eac01.svg";
    },
    431712: function (e) {
      "use strict";
      e.exports = "/assets/e32f9d2d5c175cefebcb.svg";
    },
    270395: function (e) {
      "use strict";
      e.exports = "/assets/42684397a05d86c6fd80.svg";
    },
    28269: function (e) {
      "use strict";
      e.exports = "/assets/90d76146cf8dc0c17b19.svg";
    },
    357115: function (e) {
      "use strict";
      e.exports = "/assets/c2d3560eaed920451bc5.svg";
    },
    287837: function (e) {
      "use strict";
      e.exports = "/assets/c0928008984eaab0eb41.svg";
    },
    573189: function (e) {
      "use strict";
      e.exports = "/assets/8e460160096960c12f96.svg";
    },
    899947: function (e) {
      "use strict";
      e.exports = "/assets/27f2620b8d174d10c975.svg";
    },
    117831: function (e) {
      "use strict";
      e.exports = "/assets/c934e9aa401058846a32.svg";
    },
    996737: function (e) {
      "use strict";
      e.exports = "/assets/ad056db6563fae305f28.svg";
    },
    33631: function (e) {
      "use strict";
      e.exports = "/assets/9a3a6625a268b94dda7b.svg";
    },
    21846: function (e) {
      "use strict";
      e.exports = "/assets/7389cab01e0a0e4815b7.svg";
    },
    280632: function (e) {
      "use strict";
      e.exports = "/assets/e229c43874bfea17f2e4.svg";
    },
    44234: function (e) {
      "use strict";
      e.exports = "/assets/5e77d5fc97672b214383.svg";
    },
    117428: function (e) {
      "use strict";
      e.exports = "/assets/b072fa31b4f5b69e6471.svg";
    },
    91055: function (e) {
      "use strict";
      e.exports = "/assets/fa709eff6d47b16a1f1a.svg";
    },
    507003: function (e) {
      "use strict";
      e.exports = "/assets/59783d189a5c48f13b9e.svg";
    },
    552557: function (e) {
      "use strict";
      e.exports = "/assets/22fecde6fd938a41e1f2.svg";
    },
    696388: function (e) {
      "use strict";
      e.exports = "/assets/a49803ddc562793bd880.svg";
    },
    315529: function (e) {
      "use strict";
      e.exports = "/assets/2942c6ced9db5b6462dd.svg";
    },
    709239: function (e) {
      "use strict";
      e.exports = "/assets/e60447b86307cc541a48.svg";
    },
    52008: function (e) {
      "use strict";
      e.exports = "/assets/8a6595ccdd6e274b920a.svg";
    },
    145136: function (e) {
      "use strict";
      e.exports = "/assets/5b2af02dcbb53469bebe.svg";
    },
    531945: function (e) {
      "use strict";
      e.exports = "/assets/907e9c4cab93c9d699e0.svg";
    },
    913414: function (e) {
      "use strict";
      e.exports = "/assets/ba86628a9c74727d9cf1.svg";
    },
    14215: function (e) {
      "use strict";
      e.exports = "/assets/da852170b8e1f96cfc5d.svg";
    },
    128724: function (e) {
      "use strict";
      e.exports = "/assets/3c3d94b02f0551403f0c.svg";
    },
    236140: function (e) {
      "use strict";
      e.exports = "/assets/bdefc176ff9ab24ba5bc.svg";
    },
    922905: function (e) {
      "use strict";
      e.exports = "/assets/122af2fdba334d284b1a.svg";
    },
    716455: function (e) {
      "use strict";
      e.exports = "/assets/70184499038113a82481.svg";
    },
    37069: function (e) {
      "use strict";
      e.exports = "/assets/961e37c9e07f0c6efd91.png";
    },
    518513: function (e) {
      "use strict";
      e.exports = "/assets/1b9987f7aad74a2069a0.png";
    },
    168179: function (e) {
      "use strict";
      e.exports = "/assets/af4030497d0b67fc40a3.svg";
    },
    348986: function (e) {
      "use strict";
      e.exports = "/assets/7c98b268af9bbfd9edd8.png";
    },
    930065: function (e) {
      "use strict";
      e.exports = "/assets/0b798a16709cc20e08ae.png";
    },
    345669: function (e) {
      "use strict";
      e.exports = "/assets/52bda49efd6837bbe6b6.png";
    },
    841470: function (e, t, n) {
      "use strict";
      var s = n(735250);
      n(470079);
      var a = n(692547),
        i = n(481060),
        r = n(355011),
        l = n(689938),
        o = n(993617);
      t.Z = (e) => {
        let {
            title: t,
            subtext: n = l.Z.Messages.NOT_AVAILABLE,
            localizedNumber: c,
            isTrendingUp: d,
            isTrendingDown: u,
            tooltipText: _,
          } = e,
          I = "string" == typeof _ ? _ : t,
          E =
            null != _
              ? (0, s.jsx)(i.Tooltip, {
                  text: _,
                  position: "top",
                  "aria-label": I,
                  children: (e) =>
                    (0, s.jsx)(i.CircleInformationIcon, {
                      size: "xs",
                      color: "currentColor",
                      ...e,
                      className: o.infoIcon,
                    }),
                })
              : null;
        return (0, s.jsxs)("div", {
          className: o.analyticsCard,
          children: [
            (0, s.jsxs)(i.FormTitle, {
              className: o.analyticsCardTitle,
              children: [t, E],
            }),
            (0, s.jsx)("div", {
              className: o.analyticsCardContent,
              children: (0, s.jsx)(i.Heading, {
                className:
                  null != c
                    ? o.analyticsCardNumber
                    : o.analyticsCardNumberNotAvailable,
                variant: "heading-xl/semibold",
                children: null != c ? c : l.Z.Messages.NOT_AVAILABLE,
              }),
            }),
            (0, s.jsxs)("div", {
              className: o.analyticsCardArrowSubText,
              children: [
                d
                  ? (0, s.jsx)(r.Z, {
                      className: o.trendingArrow,
                      color: a.Z.unsafe_rawColors.GREEN_360.css,
                      "aria-label": l.Z.Messages.TRENDING_ARROW_UP,
                      width: 14,
                      height: 12,
                    })
                  : null,
                u
                  ? (0, s.jsx)(r.Z, {
                      className: o.trendingArrowIconDown,
                      color: a.Z.unsafe_rawColors.RED_400.css,
                      "aria-label": l.Z.Messages.TRENDING_ARROW_DOWN,
                      width: 14,
                      height: 12,
                    })
                  : null,
                (0, s.jsx)(i.Text, { variant: "text-xs/normal", children: n }),
              ],
            }),
          ],
        });
      };
    },
    558324: function (e, t, n) {
      "use strict";
      n(47120);
      var s = n(735250),
        a = n(470079),
        i = n(120356),
        r = n.n(i),
        l = n(481060),
        o = n(981631),
        c = n(159720);
      t.Z = (e) => {
        let {
            className: t,
            tags: n,
            value: i,
            onRemoveTag: d,
            onAddTag: u,
            maxTaxLength: _,
            maxTags: I,
            disabled: E,
            placeholder: T,
            ...m
          } = e,
          [N, S] = a.useState(null != i ? i : ""),
          g = n.map((e, t) =>
            (0, s.jsxs)(
              "span",
              {
                className: r()(c.tag, { [c.__invalid_disabledTag]: E }),
                children: [
                  e,
                  !E &&
                    (0, s.jsx)(l.Clickable, {
                      className: c.closeWrapper,
                      onClick: () => d(t),
                      children: (0, s.jsx)(l.XSmallIcon, {
                        size: "xs",
                        color: "currentColor",
                        className: c.close,
                      }),
                    }),
                ],
              },
              t,
            ),
          ),
          h = a.useCallback(() => {
            let e = N.trim();
            if (0 !== e.length)
              (null == I || !(n.length >= I)) && (u(e), S(""));
          }, [N, I, u, n.length]),
          C = a.useCallback(
            (e) => {
              switch (e.keyCode) {
                case o.yXg.BACKSPACE:
                  0 === N.length &&
                    n.length > 0 &&
                    (e.preventDefault(), e.stopPropagation(), d(n.length - 1));
                  break;
                case o.yXg.ENTER:
                case o.yXg.TAB:
                case o.yXg.COMMA:
                  e.preventDefault(), e.stopPropagation(), h();
              }
            },
            [h, N.length, d, n.length],
          );
        return (0, s.jsxs)("div", {
          className: r()(t, c.inputWrapper, { [c.disabled]: E }),
          children: [
            g,
            (0, s.jsx)(l.TextInput, {
              className: c.inputOuter,
              inputClassName: c.inputInner,
              ...m,
              value: N,
              onKeyDown: C,
              onChange: S,
              maxLength: _,
              disabled: E,
              onBlur: h,
              placeholder: T,
            }),
          ],
        });
      };
    },
    327802: function (e, t, n) {
      "use strict";
      var s = n(735250);
      n(470079);
      var a = n(205822),
        i = n(731994),
        r = n(689938);
      t.Z = function (e) {
        let { className: t, style: n, onDrop: l } = e;
        return (0, s.jsx)(a.Z, {
          className: t,
          style: n,
          title: r.Z.Messages.UPLOAD_EMOJI,
          description: r.Z.Messages.UPLOAD_EMOJI_INSTRUCTIONS,
          icons: i.pA,
          onDrop: l,
        });
      };
    },
    672917: function (e, t, n) {
      "use strict";
      n.d(t, {
        X: function () {
          return s.X;
        },
      });
      var s = n(289092);
    },
    827334: function (e, t, n) {
      "use strict";
      n.d(t, {
        $: function () {
          return s.$;
        },
      });
      var s = n(870199);
    },
    410319: function (e, t, n) {
      "use strict";
      n.d(t, {
        i: function () {
          return s.i;
        },
      });
      var s = n(587693);
    },
    205641: function (e, t, n) {
      "use strict";
      n(47120);
      var s,
        a,
        i,
        r = n(735250),
        l = n(470079),
        o = n(120356),
        c = n.n(o),
        d = n(392711),
        u = n.n(d),
        _ = n(82923),
        I = n(814961);
      function E(e, t, n) {
        return (
          t in e
            ? Object.defineProperty(e, t, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0,
              })
            : (e[t] = n),
          e
        );
      }
      ((i = s || (s = {}))[(i.HOVERING = 0)] = "HOVERING"),
        (i[(i.FLYING = 1)] = "FLYING");
      let T = Object.freeze({
        HOVERING: {
          Y_DURATION: 1500,
          Y_VALUE: -5,
          Y_VALUE_MODIFIER: -1,
          FIRE_COUNT: 10,
          FIRE_MIN_INTENSITY_FALLING: 0.8,
          FIRE_MAX_INTENSITY_FALLING: 1,
          FIRE_MIN_INTENSITY_RISING: 1,
          FIRE_MAX_INTENSITY_RISING: 1.2,
        },
        FALLING: { Y_VALUE: 10, FIRE_COUNT: 10, FIRE_VALUE: 0.2 },
        STAGING: {
          DURATION: 500,
          Y_VALUE: 22,
          SHAKE_COUNT: 10,
          SHAKE_INTENSITY: 2,
          FIRE_COUNT: 4,
          FIRE_MIN_INTENSITY: 0.6,
          FIRE_MAX_INTENSITY: 1,
        },
        FLYING: {
          DURATION: 500,
          Y_VALUE: -1e3,
          Y_EASING: _.Z.Easing.bezier(0.46, 0.01, 1, -0.3),
          X_VALUE: 200,
          X_EASING: _.Z.Easing.bezier(0.65, 0.05, 1, 0.25),
          FIRE_COUNT: 10,
          FIRE_MIN_INTENSITY: 1.2,
          FIRE_MAX_INTENSITY: 1.4,
          OPACITY_VALUE: 0,
          OPACITY_DURATION_DIVIDEND: 2,
        },
      });
      function m(e, t, n, s) {
        return _.Z.sequence(
          u().times(t, (a) =>
            _.Z.timing(e, { toValue: s(a), duration: n / t }),
          ),
        );
      }
      class N extends (a = l.Component) {
        componentDidMount() {
          this.startAnimation();
        }
        componentWillUnmount() {
          this.isUnmounted = !0;
        }
        componentDidUpdate(e) {
          this.props.stage !== e.stage && this.startAnimation();
        }
        startAnimation() {
          switch (
            (null != this.currentAnimation && this.currentAnimation.stop(),
            this.props.stage)
          ) {
            case 0:
              return this.startHoverAnimate();
            case 1:
              return this.flyAnimate();
          }
        }
        resetAnimation() {
          this.y.setValue(0),
            this.x.setValue(0),
            this.opacity.setValue(1),
            this.fireScale.setValue(1);
        }
        startHoverAnimate() {
          this.resetAnimation(), this.hoverAnimate(T.HOVERING.Y_VALUE);
        }
        createFireAnimation(e, t, n, s) {
          return m(this.fireScale, e, t, () => u().random(n, s));
        }
        async hoverAnimate(e) {
          var t;
          if (0 !== this.props.stage || this.isUnmounted) return;
          let n = e > 1,
            s = n
              ? T.HOVERING.FIRE_MIN_INTENSITY_FALLING
              : T.HOVERING.FIRE_MIN_INTENSITY_RISING,
            a = n
              ? T.HOVERING.FIRE_MAX_INTENSITY_FALLING
              : T.HOVERING.FIRE_MAX_INTENSITY_RISING,
            i = this.createFireAnimation(
              T.HOVERING.FIRE_COUNT,
              T.HOVERING.Y_DURATION,
              s,
              a,
            ),
            r = _.Z.timing(this.y, {
              toValue: e,
              duration: T.HOVERING.Y_DURATION,
              easing: _.Z.Easing.inOut(_.Z.Easing.ease),
            });
          (this.currentAnimation = _.Z.parallel([r, i])),
            await (null === (t = this.currentAnimation) || void 0 === t
              ? void 0
              : t.start()),
            this.hoverAnimate(e * T.HOVERING.Y_VALUE_MODIFIER);
        }
        createShakeAnimation(e, t, n) {
          return m(
            this.x,
            e,
            t,
            (e) => u().random(1, n) * (e % 2 == 0 ? 1 : -1),
          );
        }
        async flyAnimate() {
          var e;
          let t = _.Z.spring(this.y, {
              toValue: T.FALLING.Y_VALUE,
              overshootClamping: !0,
            }),
            n = _.Z.spring(this.fireScale, {
              toValue: T.FALLING.FIRE_VALUE,
              overshootClamping: !0,
            }),
            s = _.Z.parallel([t, n]),
            a = _.Z.timing(this.y, {
              toValue: T.STAGING.Y_VALUE,
              duration: T.STAGING.DURATION,
            }),
            i = this.createShakeAnimation(
              T.STAGING.SHAKE_COUNT,
              T.STAGING.DURATION,
              T.STAGING.SHAKE_INTENSITY,
            ),
            r = this.createFireAnimation(
              T.STAGING.FIRE_COUNT,
              T.STAGING.DURATION,
              T.STAGING.FIRE_MIN_INTENSITY,
              T.STAGING.FIRE_MAX_INTENSITY,
            ),
            l = _.Z.parallel([a, i, r]),
            o = _.Z.timing(this.y, {
              toValue: T.FLYING.Y_VALUE,
              duration: T.FLYING.DURATION,
              easing: T.FLYING.Y_EASING,
            }),
            c = _.Z.timing(this.x, {
              toValue: T.FLYING.X_VALUE,
              duration: T.FLYING.DURATION,
              easing: T.FLYING.X_EASING,
            }),
            d = _.Z.timing(this.opacity, {
              toValue: T.FLYING.OPACITY_VALUE,
              duration: T.FLYING.DURATION / T.FLYING.OPACITY_DURATION_DIVIDEND,
              delay: T.FLYING.DURATION / T.FLYING.OPACITY_DURATION_DIVIDEND,
            }),
            u = this.createFireAnimation(
              T.FLYING.FIRE_COUNT,
              T.FLYING.DURATION,
              T.FLYING.FIRE_MIN_INTENSITY,
              T.FLYING.FIRE_MAX_INTENSITY,
            ),
            I = _.Z.parallel([o, c, d, u]);
          if (
            ((this.currentAnimation = _.Z.sequence([s, l, I])),
            await (null === (e = this.currentAnimation) || void 0 === e
              ? void 0
              : e.start()),
            !this.isUnmounted)
          ) {
            let { onFlyingComplete: e } = this.props;
            null != e && e();
          }
        }
        getWumpusStyle() {
          return {
            transform: [
              {
                translateY: this.y.interpolate({
                  inputRange: [0, 1],
                  outputRange: ["0px", "1px"],
                }),
              },
              {
                translateX: this.x.interpolate({
                  inputRange: [0, 1],
                  outputRange: ["0px", "1px"],
                }),
              },
            ],
            opacity: this.opacity,
          };
        }
        getFireStyle() {
          return { transform: [{ scale: this.fireScale }] };
        }
        render() {
          let { className: e, style: t } = this.props;
          return (0, r.jsxs)(_.Z.div, {
            className: c()(I.animation, e),
            style: { ...t, ...this.getWumpusStyle() },
            children: [
              (0, r.jsx)("div", {
                className: I.fireTopWrapper,
                children: (0, r.jsx)(_.Z.div, {
                  className: I.fire,
                  style: this.getFireStyle(),
                }),
              }),
              (0, r.jsx)("div", {
                className: I.fireBottomWrapper,
                children: (0, r.jsx)(_.Z.div, {
                  className: I.fire,
                  style: this.getFireStyle(),
                }),
              }),
              (0, r.jsx)("div", { className: I.wumpus }),
            ],
          });
        }
        constructor(...e) {
          super(...e),
            E(this, "x", new _.Z.Value(0)),
            E(this, "y", new _.Z.Value(0)),
            E(this, "opacity", new _.Z.Value(1)),
            E(this, "fireScale", new _.Z.Value(1)),
            E(this, "currentAnimation", null),
            E(this, "isUnmounted", !1);
        }
      }
      E(N, "Stages", s), (t.Z = N);
    },
    2070: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return r;
        },
      }),
        n(47120);
      var s = n(470079),
        a = n(881052),
        i = n(728345);
      function r() {
        let [e, t] = s.useState(!1),
          [n, r] = s.useState(),
          l = s.useRef();
        return {
          createGuildApplication: async (e, n, s, o) => {
            r(void 0);
            try {
              if ((t(!0), null == l.current)) {
                let t = await i.Z.createApplication({
                  name: o,
                  guildId: e.id,
                  type: s,
                  teamId: n,
                });
                l.current = t;
              }
              return (
                await i.Z.getApplicationsForGuild(e.id, {
                  type: s,
                  includeTeam: !0,
                }),
                !0
              );
            } catch (e) {
              return r(new a.Hx(e)), !1;
            } finally {
              t(!1);
            }
          },
          submitting: e,
          error: n,
        };
      }
    },
    725803: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return o;
        },
      }),
        n(47120);
      var s = n(470079),
        a = n(442837),
        i = n(881052),
        r = n(728345),
        l = n(812206);
      function o(e, t) {
        let n = (0, a.e7)([l.Z], () => l.Z.getGuildApplication(e, t)),
          [o, c] = s.useState(null == n),
          [d, u] = s.useState(),
          [_, I] = s.useState(!1),
          E = s.useCallback(async () => {
            if (null == n && null != e) {
              I(!0), c(!0);
              try {
                await r.Z.getApplicationsForGuild(e, {
                  type: t,
                  includeTeam: !0,
                });
              } catch (e) {
                u(new i.Hx(e));
              } finally {
                c(!1);
              }
            }
          }, [n, t, e]);
        return (
          s.useEffect(() => {
            !_ && E();
          }, [_, E]),
          { application: n, error: d, loading: o }
        );
      }
    },
    941524: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return l;
        },
      });
      var s = n(735250);
      n(470079);
      var a = n(512508),
        i = n(706371),
        r = n(563115);
      function l(e) {
        let {
            guildId: t,
            selectedChannelIds: n,
            selectedRoleIds: l,
            onChange: o,
            placeholder: c,
            disableEveryoneRole: d,
            includeRoleRestrictedPrivateChannels: u = !1,
            includeStageVoiceChannels: _ = !1,
            helperText: I,
            className: E,
          } = e,
          T = (0, i.r)(t, n, u, _),
          m = (0, r.h)(t, l, d);
        return (0, s.jsx)(a.ZP, {
          channelRows: T,
          roleRows: m,
          guildId: t,
          selectedChannelIds: n,
          selectedRoleIds: l,
          onChange: o,
          placeholder: c,
          helperText: I,
          className: E,
        });
      }
    },
    706371: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return d;
        },
        r: function () {
          return c;
        },
      }),
        n(47120),
        n(653041),
        n(724458);
      var s = n(735250);
      n(470079);
      var a = n(442837),
        i = n(447003),
        r = n(984933),
        l = n(512508),
        o = n(981631);
      function c(e, t) {
        let n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2],
          s = arguments.length > 3 && void 0 !== arguments[3] && arguments[3];
        return (0, a.Wu)(
          [r.ZP],
          () => {
            let a = r.ZP.getChannels(e)[o.d4z.GUILD_CATEGORY],
              c = [...r.ZP.getChannels(e)[r.sH], ...r.ZP.getChannels(e)[r.Zb]],
              d = [],
              u = {};
            return (
              a.forEach((e) => {
                let { channel: t, comparator: n } = e;
                "null" !== t.id &&
                  ((u[t.id] = []), d.push({ channel: t, comparator: n }));
              }),
              c.forEach((e) => {
                let { channel: a, comparator: r } = e;
                if (
                  !(
                    a.isThread() ||
                    t.has(a.id) ||
                    (a.isGuildStageVoice() && !s) ||
                    (!n && (0, i.Z)(a))
                  )
                )
                  null == a.parent_id
                    ? d.push({ channel: a, comparator: r })
                    : (null == u[a.parent_id] && (u[a.parent_id] = []),
                      u[a.parent_id].push({ channel: a, comparator: r }));
              }),
              d
                .sort((e, t) => {
                  let { comparator: n, channel: s } = e,
                    { comparator: a, channel: i } = t;
                  return s.isCategory() && !i.isCategory()
                    ? 1
                    : !s.isCategory() && i.isCategory()
                      ? -1
                      : a - n;
                })
                .reduce((e, n) => {
                  let { channel: s } = n;
                  if (s.isGuildStageVoice() || s.isThread() || t.has(s.id))
                    return e;
                  e.push((0, l.PM)(s).row);
                  let a = u[s.id];
                  return (
                    null != a &&
                      a.length > 0 &&
                      a.forEach((t) => {
                        let { channel: n } = t;
                        e.push((0, l.PM)(n).row);
                      }),
                    e
                  );
                }, [])
            );
          },
          [e, n, s, t],
        );
      }
      function d(e) {
        let {
            guildId: t,
            selectedChannelIds: n,
            onChange: a,
            placeholder: i,
            includeRoleRestrictedPrivateChannels: r = !1,
            includeStageVoiceChannels: o = !1,
            helperText: d,
            className: u,
          } = e,
          _ = c(t, n, r, o);
        return (0, s.jsx)(l.ZP, {
          channelRows: _,
          guildId: t,
          selectedChannelIds: n,
          onChange: (e, t) => a(e),
          placeholder: i,
          helperText: d,
          className: u,
        });
      }
    },
    593128: function (e, t, n) {
      "use strict";
      n(47120);
      var s = n(735250),
        a = n(470079),
        i = n(526629),
        r = n(442837),
        l = n(215569),
        o = n(481060),
        c = n(224706),
        d = n(425493),
        u = n(852860),
        _ = n(493544),
        I = n(585483),
        E = n(931240),
        T = n(970606),
        m = n(389134),
        N = n(35313),
        S = n(94963),
        g = n(745628),
        h = n(950279),
        C = n(796918),
        x = n(513532),
        p = n(741595),
        R = n(974842),
        L = n(359380),
        f = n(308083),
        O = n(981631),
        A = n(231338),
        M = n(689938),
        D = n(766064);
      let v = (e) => [
          {
            section: _.ID.HEADER,
            label: M.Z.Messages.CLAN_SETTINGS_BASIC_INFO,
          },
          {
            section: f.Wy.GAMES,
            label: M.Z.Messages.CLAN_SETTTINGS_SELECT_GAMES,
            hasError: (null == e ? void 0 : e.gameApplicationIds) != null,
          },
          {
            section: f.Wy.PLAYSTYLE,
            label: M.Z.Messages.CLAN_SETTTINGS_SELECT_PLAYSTYLE,
            hasError: (null == e ? void 0 : e.playstyle) != null,
          },
          { section: _.ID.DIVIDER },
          {
            section: _.ID.HEADER,
            label: M.Z.Messages.CLAN_SETTINGS_PERSONALITY_INFO,
          },
          {
            section: f.Wy.UTILITY_TRAITS,
            label: M.Z.Messages.CLAN_SETTINGS_SELECT_TRAITS,
          },
          {
            section: f.Wy.INTERESTS,
            label: M.Z.Messages.CLAN_SETTINGS_SELECT_INTERESTS,
            hasError: (null == e ? void 0 : e.interests) != null,
          },
          {
            section: f.Wy.DESCRIPTION,
            label: M.Z.Messages.CLAN_SETTINGS_WRITE_DESCRIPTION,
            hasError:
              (null == e ? void 0 : e.description) != null ||
              (null == e ? void 0 : e.wildcardDescriptors) != null,
          },
          { section: _.ID.DIVIDER },
          {
            section: _.ID.HEADER,
            label: M.Z.Messages.CLAN_SETTINGS_CUSTOMIZE_IDENTITY,
          },
          {
            section: f.Wy.CUSTOMIZE_TAG_BADGE,
            label: M.Z.Messages.CLAN_SETTINGS_CLAN_BADGE,
            hasError:
              (null == e ? void 0 : e.tag) != null ||
              (null == e ? void 0 : e.badgeKind) != null ||
              (null == e ? void 0 : e.badgePrimaryColor) != null ||
              (null == e ? void 0 : e.badgeSecondaryColor) != null,
          },
          {
            section: f.Wy.CUSTOMIZE_BANNER,
            label: M.Z.Messages.CLAN_SETTINGS_CLAN_PROFILE,
            hasError:
              (null == e ? void 0 : e.banner) != null ||
              (null == e ? void 0 : e.brandPrimaryColor) != null ||
              (null == e ? void 0 : e.brandSecondaryColor) != null,
          },
          { section: _.ID.DIVIDER },
          {
            section: f.Wy.MEMBER_APPLICATION,
            label: M.Z.Messages.MEMBER_VERIFICATION_MEMBER_APPLICATION_SETUP,
            hasError: (null == e ? void 0 : e.verificationForm) != null,
          },
          { section: _.ID.DIVIDER },
          {
            section: _.ID.CUSTOM,
            label: M.Z.Messages.CLAN_SETTINGS_DISABLE_CLAN,
            element: j,
          },
        ],
        j = (e) => {
          let { guildId: t, onClose: i, dirty: r } = e,
            [l, c] = a.useState(!1),
            d = async () => {
              c(!0);
              try {
                await (0, E.nr)(t), i();
              } catch (e) {
                throw (c(!1), e);
              }
            };
          return (0, s.jsxs)(o.TabBar.Item, {
            selectedItem: !1,
            className: D.deleteItem,
            "aria-label": M.Z.Messages.CLAN_SETTINGS_DISABLE_CLAN,
            onClick: () => {
              if (r) {
                I.S.dispatch(O.CkL.EMPHASIZE_NOTICE);
                return;
              }
              (0, o.openModalLazy)(async () => {
                let { ConfirmModal: e } = await Promise.resolve().then(
                  n.bind(n, 481060),
                );
                return (t) =>
                  (0, s.jsx)(e, {
                    ...t,
                    header: M.Z.Messages.CLAN_SETTINGS_DISABLE_CONFIRM_TITLE,
                    confirmText: M.Z.Messages.CONFIRM,
                    cancelText: M.Z.Messages.CANCEL,
                    loading: l,
                    onConfirm: d,
                    children: (0, s.jsx)(o.Text, {
                      variant: "text-md/normal",
                      children: M.Z.Messages.CLAN_SETTINGS_DISABLE_CONFIRM_BODY,
                    }),
                  });
              });
            },
            children: [
              (0, s.jsx)(o.TrashIcon, {
                size: "xs",
                color: "currentColor",
                className: D.statusDanger,
              }),
              (0, s.jsx)(o.Text, {
                variant: "text-md/medium",
                color: "status-danger",
                children: M.Z.Messages.CLAN_SETTINGS_DISABLE_CLAN,
              }),
            ],
          });
        },
        Z = (e) => {
          let { isErrorVisible: t } = e,
            n = (0, o.useToken)(o.tokens.colors.HEADER_PRIMARY, A.BR.DARK),
            a = (0, o.useToken)(o.tokens.colors.TEXT_MUTED, A.BR.DARK);
          return t
            ? (0, s.jsxs)("div", {
                className: D.tooltipContents,
                children: [
                  (0, s.jsx)(o.WarningIcon, {
                    size: "xs",
                    color: "currentColor",
                    className: D.errorIconTooltip,
                  }),
                  (0, s.jsxs)("div", {
                    children: [
                      (0, s.jsx)(o.Text, {
                        variant: "text-sm/medium",
                        style: { color: n.hex() },
                        children: M.Z.Messages.CLAN_SUBMIT_ERROR_TITLE,
                      }),
                      (0, s.jsx)(o.Text, {
                        variant: "text-xs/normal",
                        style: { color: a.hex() },
                        children: M.Z.Messages.CLAN_SUBMIT_ERROR_SUBTITLE,
                      }),
                    ],
                  }),
                ],
              })
            : null;
        };
      t.Z = (e) => {
        let { guildId: t, onClose: n } = e,
          [A, j] = a.useState(f.Wy.GAMES),
          {
            initialSettings: b,
            settings: U,
            errors: G,
            submitting: P,
            dirty: B,
          } = (0, r.cj)([m.Z], () => {
            var e;
            let t = m.Z.getState();
            return {
              initialSettings: t.initialSettings,
              settings: t.settings,
              errors: null !== (e = t.errors) && void 0 !== e ? e : {},
              submitting: t.submitting,
              dirty: t.dirty,
            };
          }),
          y = a.useCallback(
            (e) => {
              B ? I.S.dispatch(O.CkL.EMPHASIZE_NOTICE) : j(e);
            },
            [B],
          ),
          F = (0, N.f)(),
          k = a.useCallback(
            (e) => {
              "Escape" === e.key && (e.stopPropagation(), n());
            },
            [n],
          );
        a.useEffect(() => {
          (0, T.GO)(t, (0, T.Qh)(A));
        }, [t, A]),
          a.useEffect(
            () => (
              window.addEventListener("keydown", k),
              () => {
                window.removeEventListener("keydown", k);
              }
            ),
            [k],
          ),
          a.useEffect(() => {
            c.Z.getDetectableGames();
          }, []),
          a.useEffect(() => {
            (0, E.aH)(t);
          }, [t]);
        let w = a.useCallback(
            (e) => (0, E.mf)(t, { gameApplicationIds: e }),
            [t],
          ),
          H = a.useCallback((e) => (0, E.mf)(t, { playstyle: e }), [t]),
          V = a.useCallback((e) => (0, E.mf)(t, { interests: e }), [t]),
          Y = a.useCallback((e) => (0, E.mf)(t, e), [t]),
          W = a.useCallback(() => {
            B ? I.S.dispatch(O.CkL.EMPHASIZE_NOTICE) : n();
          }, [B, n]),
          z = async () => {
            await (0, E.Ii)(t, U), (0, T.Af)(t);
          },
          K = a.useMemo(
            () => null != G && Object.values(G).some((e) => null != e),
            [G],
          );
        if (null == U) return null;
        let q = v(G);
        return (0, s.jsxs)(i.animated.div, {
          style: F,
          className: D.modal,
          children: [
            (0, s.jsx)(o.Tooltip, {
              color: o.Tooltip.Colors.GREY,
              tooltipClassName: D.tooltip,
              text: (0, s.jsx)(Z, { isErrorVisible: K }),
              position: "left",
              "aria-label":
                null != K ? M.Z.Messages.CLAN_SUBMIT_ERROR_TITLE : void 0,
              shouldShow: K,
              forceOpen: K,
              children: (e) =>
                (0, s.jsx)(d.Z, {
                  ...e,
                  className: D.closeButton,
                  closeAction: W,
                  keybind: "ESC",
                }),
            }),
            (0, s.jsxs)("div", {
              className: D.modalContents,
              children: [
                (0, s.jsx)("div", {
                  className: D.sidebarWrapper,
                  children: (0, s.jsx)(o.TabBar, {
                    className: D.sidebar,
                    selectedItem: A,
                    onItemSelect: y,
                    orientation: "vertical",
                    children: q.map((e, a) => {
                      switch (e.section) {
                        case _.ID.HEADER:
                          return (0, s.jsx)(
                            o.TabBar.Header,
                            { children: e.label },
                            "header-".concat(a),
                          );
                        case _.ID.DIVIDER:
                          return (0, s.jsx)(
                            o.TabBar.Separator,
                            {},
                            "divider-".concat(a),
                          );
                        case _.ID.CUSTOM:
                          let i = e.element;
                          return (0, s.jsx)(
                            i,
                            { dirty: B, guildId: t, onClose: n },
                            e.label,
                          );
                        default:
                          return (0, s.jsx)(
                            o.TabBar.Item,
                            {
                              className: D.settingsTab,
                              "aria-label": e.label,
                              id: e.section,
                              children: (0, s.jsxs)(s.Fragment, {
                                children: [
                                  e.label,
                                  e.hasError &&
                                    (0, s.jsx)(o.Tooltip, {
                                      color: o.Tooltip.Colors.GREY,
                                      position: "right",
                                      text: M.Z.Messages
                                        .CLAN_SUBMIT_ERROR_TITLE,
                                      children: (e) =>
                                        (0, s.jsx)(o.WarningIcon, {
                                          size: "xs",
                                          color: "currentColor",
                                          ...e,
                                          className: D.errorIcon,
                                        }),
                                    }),
                                ],
                              }),
                            },
                            e.section,
                          );
                      }
                    }),
                  }),
                }),
                (0, s.jsxs)("div", {
                  className: D.mainContent,
                  children: [
                    (0, s.jsx)(o.ScrollerThin, {
                      children: (() => {
                        switch (A) {
                          case f.Wy.GAMES:
                            var e;
                            return (0, s.jsx)(h.Z, {
                              title: M.Z.Messages.CLAN_SETUP_GAMES_TITLE,
                              description:
                                M.Z.Messages.CLAN_SETUP_GAMES_SUBTITLE,
                              onUpdateGames: w,
                              gameApplicationIds:
                                null !== (e = U.gameApplicationIds) &&
                                void 0 !== e
                                  ? e
                                  : new Set(),
                              error: G.gameApplicationIds,
                              guildId: t,
                              includeSuggestedGames: !0,
                            });
                          case f.Wy.PLAYSTYLE:
                            return (0, s.jsx)(p.Z, {
                              title: M.Z.Messages.CLAN_SETUP_PLAYSTYLE_TITLE,
                              description:
                                M.Z.Messages.CLAN_SETUP_PLAYSTYLE_SUBTITLE,
                              onUpdatePlaystyle: H,
                              playstyle: U.playstyle,
                              error: G.playstyle,
                            });
                          case f.Wy.UTILITY_TRAITS:
                            return (0, s.jsx)(L.Z, {
                              guildId: t,
                              title:
                                M.Z.Messages.CLAN_SETUP_UTILITY_TRAITS_TITLE,
                              description:
                                M.Z.Messages.CLAN_SETUP_UTILITY_TRAITS_SUBTITLE,
                              onUpdateTraits: V,
                              progress: U,
                            });
                          case f.Wy.INTERESTS:
                            return (0, s.jsx)(C.Z, {
                              guildId: t,
                              handleUpdate: Y,
                              progress: U,
                              error: G.interests,
                            });
                          case f.Wy.DESCRIPTION:
                            return (0, s.jsx)(g.Z, {
                              guildId: t,
                              handleUpdate: Y,
                              progress: U,
                              errors: G,
                            });
                          case f.Wy.CUSTOMIZE_TAG_BADGE:
                            return (0, s.jsx)(R.Z, {
                              handleUpdate: Y,
                              tag: U.tag,
                              error: G.tag,
                              badge: U.badgeKind,
                              primaryColor: U.badgePrimaryColor,
                              secondaryColor: U.badgeSecondaryColor,
                              furthestStep: f.Wy.CUSTOMIZE_TAG_BADGE,
                              inSettings: !0,
                            });
                          case f.Wy.MEMBER_APPLICATION:
                            return (0, s.jsx)(x.Z, {
                              guildId: t,
                              inSettings: !0,
                              error: G.verificationForm,
                            });
                          case f.Wy.CUSTOMIZE_BANNER:
                            return (0, s.jsx)(S.Z, {
                              guildId: t,
                              handleUpdate: Y,
                              progress: U,
                            });
                          default:
                            return null;
                        }
                      })(),
                    }),
                    (0, s.jsx)(l.W, {
                      component: "div",
                      children:
                        B &&
                        (0, s.jsx)(o.SlideIn, {
                          className: D.noticeRegion,
                          children: (0, s.jsx)(u.Z, {
                            onSave: z,
                            submitting: P,
                            onReset: () => {
                              (0, E.mf)(t, b);
                            },
                            errorMessage: Object.values(G).find(
                              (e) => null != e,
                            ),
                          }),
                        }),
                    }),
                  ],
                }),
              ],
            }),
          ],
        });
      };
    },
    561654: function (e, t, n) {
      "use strict";
      n(47120);
      var s,
        a,
        i,
        r,
        l = n(442837),
        o = n(570140),
        c = n(430824);
      let d = new Map();
      class u extends (s = l.ZP.Store) {
        initialize() {
          this.waitFor(c.Z);
        }
        getGuildRoleConnectionsConfiguration(e) {
          return d.get(e);
        }
      }
      (r = "GuildRoleConnectionsConfigurationStore"),
        (i = "displayName") in (a = u)
          ? Object.defineProperty(a, i, {
              value: r,
              enumerable: !0,
              configurable: !0,
              writable: !0,
            })
          : (a[i] = r),
        (t.Z = new u(o.Z, {
          GUILD_ROLE_CONNECTIONS_CONFIGURATIONS_FETCH_SUCCESS: (e) => {
            let { roleId: t, roleConnectionConfigurations: n } = e;
            d.set(t, n);
          },
        }));
    },
    395586: function (e, t, n) {
      "use strict";
      n.d(t, {
        AL: function () {
          return o;
        },
        f3: function () {
          return l;
        },
      }),
        n(411104);
      var s = n(735250),
        a = n(470079),
        i = n(674180);
      let r = a.createContext(void 0);
      function l() {
        let e = a.useContext(r);
        if (null == e)
          throw Error(
            "useCreatorMonetizationSettingsDisabled must be used within a CreatorMonetizationSettingsDisabledContext",
          );
        return e;
      }
      function o(e) {
        let { guildId: t, children: n } = e,
          { shouldRestrictUpdatingCreatorMonetizationSettings: a } = (0, i.gX)(
            t,
          );
        return (0, s.jsx)(r.Provider, { value: a, children: n });
      }
    },
    766434: function (e, t, n) {
      "use strict";
      n.d(t, {
        Br: function () {
          return i;
        },
        Uj: function () {
          return r;
        },
        j0: function () {
          return a;
        },
      }),
        n(47120);
      var s = n(198139);
      let a = (e) => {
        var t, n;
        let s = Object.values(
            null !== (n = null == e ? void 0 : e.ppgs) && void 0 !== n ? n : {},
          )[0],
          a = null == s ? void 0 : s.status,
          i =
            null == s
              ? void 0
              : null === (t = s.payout) || void 0 === t
                ? void 0
                : t.status,
          r = null == s ? void 0 : s.deferral_reasons;
        return {
          ppgStatus: a,
          payoutStatus: i,
          ppgDeferralReasons: r,
          periodEndDate: null == s ? void 0 : s.period_ending_at,
        };
      };
      function i(e) {
        let t, n;
        let { ppgStatus: i } = a(e[0]);
        return (
          i === s.x_.OPEN ? ([t, ...n] = e) : (n = e),
          { currentPeriod: t, previousPeriods: n }
        );
      }
      function r(e, t) {
        let n, s, a, i;
        return (
          null != e &&
            ((n = e.amount),
            (a = e.paymentsCount),
            null != t &&
              ((s = e.amount / t.amount - 1),
              (i = e.paymentsCount - t.paymentsCount))),
          {
            revenue: n,
            revenuePctChange: s,
            paymentsCount: a,
            paymentsCountChange: i,
          }
        );
      }
    },
    646892: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return u;
        },
      });
      var s = n(735250);
      n(470079);
      var a = n(120356),
        i = n.n(a),
        r = n(442837),
        l = n(481060),
        o = n(607070),
        c = n(307537),
        d = n(776362);
      function u(e) {
        let { className: t, shouldShine: n = !0, size: a = 14 } = e,
          u = (0, r.e7)([o.Z], () => o.Z.useReducedMotion);
        return (0, s.jsxs)("div", {
          className: i()([d.guildProductRoleIcon, t]),
          children: [
            (0, s.jsx)(c.Z, { height: a, width: a }),
            (0, s.jsx)(l.Shine, {
              className: d.shine,
              shinePaused: u || !n,
              shineSize: l.ShinyButton.ShineSizes.SMALL,
            }),
          ],
        });
      }
    },
    724598: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return m;
        },
      });
      var s = n(735250);
      n(470079);
      var a = n(120356),
        i = n.n(a),
        r = n(481060),
        l = n(367907),
        o = n(357352),
        c = n(434404),
        d = n(626135),
        u = n(629481),
        _ = n(981631),
        I = n(689938),
        E = n(60303);
      function T(e) {
        let { pills: t } = e;
        return (0, s.jsx)("div", {
          className: E.row,
          children: t.map((e) =>
            (0, s.jsx)(
              "div",
              {
                className: E.pill,
                children: (0, s.jsx)(r.Text, {
                  variant: "text-sm/normal",
                  children: e,
                }),
              },
              e,
            ),
          ),
        });
      }
      function m(e) {
        let { guildId: t, showCTA: n, responsive: a = !0 } = e,
          m = [
            [
              I.Z.Messages.GUILD_STORE_PREVIEW_CHIP_ROLE_ACCESS,
              I.Z.Messages.GUILD_STORE_PREVIEW_CHIP_GAME_TUTORIALS,
            ],
            [
              I.Z.Messages.GUILD_STORE_PREVIEW_CHIP_DOPE_WALLPAPERS,
              I.Z.Messages.GUILD_STORE_PREVIEW_CHIP_PFP_ART,
            ],
            [
              I.Z.Messages.GUILD_STORE_PREVIEW_CHIP_FILTER_PRESETS,
              I.Z.Messages.GUILD_STORE_PREVIEW_CHIP_SONG_DROPS,
            ],
            [
              I.Z.Messages.GUILD_STORE_PREVIEW_CHIP_COSPLAY_PICS,
              I.Z.Messages.GUILD_STORE_PREVIEW_CHIP_3D_MODELS,
            ],
          ];
        return (0, s.jsx)("div", {
          className: i()({ [E.responsive]: a }),
          children: (0, s.jsxs)("div", {
            className: E.container,
            children: [
              (0, s.jsxs)("div", {
                className: E.content,
                children: [
                  (0, s.jsx)("div", {
                    className: E.pillContainer,
                    children: m.map((e, t) =>
                      (0, s.jsx)(T, { pills: e }, "pill-row-".concat(t)),
                    ),
                  }),
                  (0, s.jsxs)("div", {
                    className: E.ctaContent,
                    children: [
                      (0, s.jsx)(r.Text, {
                        variant: "text-lg/medium",
                        color: "header-primary",
                        children: I.Z.Messages.GUILD_STORE_PREVIEW_MURAL_TITLE,
                      }),
                      n &&
                        (0, s.jsxs)(r.ShinyButton, {
                          size: r.Button.Sizes.MEDIUM,
                          className: E.getStartedButton,
                          innerClassName: E.getStartedButtonContents,
                          shineSize: r.ShinyButton.ShineSizes.SMALL,
                          onClick: () => {
                            d.default.track(_.rMx.GUILD_SHOP_PREVIEW_CLICK, {
                              ...(0, l.hH)(t),
                              action_taken: u.mz.GET_STARTED_CLICK,
                            }),
                              c.Z.open(t, _.pNK.GUILD_PRODUCTS);
                          },
                          children: [
                            I.Z.Messages.GUILD_SHOP_PREVIEW_CTA_BUTTON,
                            (0, s.jsx)(r.ArrowSmallRightIcon, {
                              size: "md",
                              color: "currentColor",
                              className: E.getStartedArrow,
                            }),
                          ],
                        }),
                    ],
                  }),
                ],
              }),
              (0, s.jsxs)("div", {
                className: E.muralImageContainer,
                children: [
                  (0, s.jsx)("img", {
                    src: (0, o.b)(
                      "server_products/storefront/preview-mural.png",
                    ),
                    alt: "",
                    className: E.muralImage,
                  }),
                  (0, s.jsx)("img", {
                    src: (0, o.b)(
                      "server_products/storefront/preview-mural-reduced.png",
                    ),
                    alt: "",
                    className: E.muralImageReducedWidth,
                  }),
                ],
              }),
            ],
          }),
        });
      }
    },
    307537: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return i;
        },
      });
      var s = n(735250);
      n(470079);
      var a = n(325767);
      function i(e) {
        let {
          width: t = 24,
          height: n = 24,
          color: i = "currentColor",
          ...r
        } = e;
        return (0, s.jsx)("svg", {
          ...(0, a.Z)(r),
          xmlns: "http://www.w3.org/2000/svg",
          width: t,
          height: n,
          viewBox: "0 0 21 20",
          fill: "none",
          children: (0, s.jsx)("path", {
            fillRule: "evenodd",
            clipRule: "evenodd",
            d: "M14.571 6.66585H17.166C18.086 6.66585 18.8327 7.41335 18.8327 8.33251V9.99918H2.16602V8.33251C2.16602 7.41335 2.91352 6.66585 3.83268 6.66585H6.42768C6.05185 6.47001 5.69602 6.23085 5.39852 5.93418C4.42352 4.95918 4.42352 3.37335 5.39852 2.39918C6.34268 1.45501 7.98768 1.45501 8.93352 2.39751C10.2977 3.76168 10.4818 6.32918 10.4977 6.61751C10.4986 6.62709 10.4965 6.63567 10.4944 6.64421C10.4927 6.65127 10.491 6.6583 10.491 6.66585H10.5077C10.5077 6.65822 10.5059 6.65112 10.5042 6.64407C10.5022 6.6357 10.5001 6.62739 10.501 6.61835C10.5177 6.33001 10.701 3.76251 12.0652 2.39835C13.011 1.45418 14.6543 1.45501 15.6002 2.39751C16.5744 3.37418 16.5744 4.96001 15.6002 5.93418C15.3027 6.23085 14.9468 6.47001 14.571 6.66585ZM6.57685 4.75585C6.25185 4.43001 6.25185 3.90168 6.57685 3.57668C6.73352 3.41918 6.94268 3.33335 7.16602 3.33335C7.38935 3.33335 7.59852 3.41918 7.75518 3.57668C8.24685 4.06835 8.53352 4.95001 8.68685 5.68501C7.95352 5.53251 7.06518 5.24418 6.57685 4.75585ZM12.311 5.68668C12.4652 4.95085 12.751 4.06918 13.2435 3.57751C13.4002 3.41918 13.6093 3.33335 13.8327 3.33335C14.056 3.33335 14.2652 3.41918 14.421 3.57585C14.746 3.90168 14.7469 4.43001 14.4219 4.75585C13.9293 5.24835 13.0468 5.53501 12.311 5.68668ZM2.99935 11.6658V16.6658C2.99935 17.585 3.74685 18.3325 4.66602 18.3325H9.66602V11.6658H2.99935ZM11.3327 11.6658V18.3325H16.3327C17.2527 18.3325 17.9993 17.585 17.9993 16.6658V11.6658H11.3327Z",
            fill: i,
          }),
        });
      }
    },
    310291: function (e, t, n) {
      "use strict";
      n(47120);
      var s = n(470079),
        a = n(392711),
        i = n.n(a),
        r = n(232473);
      let l = (e) => {
        let t = {};
        for (let n of e) {
          let e = "".concat(n.period_starting_at, ",").concat(n.status);
          null == t[e] &&
            (t[e] = {
              key: e,
              periodStartingAt: n.period_starting_at,
              ppgs: {},
              paymentsCount: 0,
              amount: 0,
            });
          let s = t[e];
          (s.amount += n.amount),
            (s.paymentsCount += n.payments_count),
            (s.ppgs[n.grouping_id] = n);
        }
        return i().orderBy(Object.values(t), ["periodStartingAt"], ["desc"]);
      };
      t.Z = (e, t) => {
        let { groupType: n, teamId: a } = t,
          [i, o] = s.useState(!0),
          [c, d] = s.useState([]),
          u = s.useCallback(async () => {
            if ((d([]), null == e)) {
              o(!1);
              return;
            }
            try {
              o(!0);
              let t = await r.C(e, { grouping_type: n });
              d(t);
            } catch {
            } finally {
              o(!1);
            }
          }, [e, n]);
        return (
          s.useEffect(() => {
            u();
          }, [u]),
          {
            payoutsByPeriod: s.useMemo(
              () => l(null != a ? c.filter((e) => e.user_id === a) : c),
              [c, a],
            ),
            loading: i,
          }
        );
      };
    },
    809086: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return c;
        },
        e: function () {
          return d;
        },
      });
      var s = n(735250);
      n(470079);
      var a = n(468194),
        i = n(477690),
        r = n(166081),
        l = n(841762);
      let o = (0, a.Mg)(i.Z.ASPECT_STABLE_IMAGE_CONTAINER_PADDING);
      function c(e) {
        let { listing: t, imageSize: n, alt: a, ...i } = e,
          l = (0, r.U)(t, n);
        return (0, s.jsx)("img", { src: l, alt: a, ...i });
      }
      function d(e) {
        let { listing: t, aspectRatio: n = 16 / 9, height: a, ...i } = e,
          c = (a - 2 * o) * n,
          d = (0, r.U)(t, c),
          u = (0, r.U)(t, c, { shouldAnimate: !1 });
        return (0, s.jsx)(l.Z, {
          src: d,
          backgroundSrc: u,
          aspectRatio: n,
          ...i,
        });
      }
    },
    825055: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return r;
        },
      });
      var s = n(735250);
      n(470079);
      var a = n(481060),
        i = n(371412);
      function r(e) {
        let { children: t } = e;
        return (0, s.jsx)("div", {
          className: i.container,
          children: (0, s.jsx)(a.Text, {
            variant: "text-sm/normal",
            color: "text-normal",
            className: i.text,
            children: (0, s.jsxs)(s.Fragment, {
              children: [
                (0, s.jsx)(a.CircleWarningIcon, {
                  size: "custom",
                  width: 20,
                  height: 20,
                  color: "currentColor",
                  className: i.noticeIcon,
                  "aria-hidden": !0,
                }),
                t,
              ],
            }),
          }),
        });
      }
    },
    204875: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return r;
        },
      });
      var s = n(735250);
      n(470079);
      var a = n(481060),
        i = n(400698);
      function r(e) {
        let { children: t, disabled: n, disabledTooltip: r, id: l, ...o } = e;
        return (0, s.jsx)(a.TooltipContainer, {
          text: n ? r : null,
          children: (0, s.jsx)(a.TabBar.Item, {
            className: i.tabBarItem,
            id: l,
            disabled: n,
            ...o,
            children: t,
          }),
        });
      }
    },
    217597: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return r;
        },
      });
      var s = n(735250);
      n(470079);
      var a = n(481060),
        i = n(967790);
      function r(e) {
        let {
          label: t,
          sublabel: n,
          value: r,
          additionalContent: l,
          tooltip: o,
        } = e;
        return (0, s.jsxs)("div", {
          className: i.metricCard,
          "aria-label": t,
          children: [
            (0, s.jsxs)("div", {
              className: i.metricCardLabelContainer,
              children: [
                (0, s.jsx)(a.Text, {
                  className: i.metricCardLabel,
                  variant: "text-xs/medium",
                  color: "interactive-normal",
                  "aria-hidden": !0,
                  children: t,
                }),
                null != o &&
                  (0, s.jsx)(a.Tooltip, {
                    text: o,
                    children: (e) =>
                      (0, s.jsx)(a.CircleInformationIcon, {
                        size: "xs",
                        color: "currentColor",
                        className: i.__invalid_labelTooltipIcon,
                        ...e,
                      }),
                  }),
                null != n
                  ? (0, s.jsx)(a.Text, {
                      variant: "text-xs/normal",
                      color: "text-muted",
                      children: n,
                    })
                  : null,
              ],
            }),
            (0, s.jsx)(a.Text, {
              tag: "span",
              variant: "heading-xl/medium",
              color: "header-primary",
              children: r,
            }),
            l,
          ],
        });
      }
    },
    685389: function (e, t, n) {
      "use strict";
      n.d(t, {
        H: function () {
          return i;
        },
      });
      var s = n(735250);
      n(470079);
      var a = n(967790);
      function i(e) {
        let { children: t } = e;
        return (0, s.jsx)("div", {
          className: a.metricsContainer,
          children: t,
        });
      }
    },
    755930: function (e, t, n) {
      "use strict";
      n.d(t, {
        GW: function () {
          return g;
        },
        Qg: function () {
          return E;
        },
        Yn: function () {
          return h;
        },
        ZP: function () {
          return L;
        },
        bL: function () {
          return x;
        },
        i$: function () {
          return S;
        },
        nn: function () {
          return N;
        },
        qN: function () {
          return C;
        },
        wy: function () {
          return T;
        },
      }),
        n(47120);
      var s = n(735250),
        a = n(470079),
        i = n(120356),
        r = n.n(i);
      n(913527);
      var l = n(481060),
        o = n(167533),
        c = n(937615),
        d = n(809086),
        u = n(981631),
        _ = n(689938),
        I = n(422041);
      function E(e) {
        return (t, n, s) => {
          let a = e(t),
            i = e(n);
          return null != a && null != i ? (a === i ? 0 : a < i ? -1 : 1) : 0;
        };
      }
      function T(e) {
        let {
          key: t,
          cellClassName: n,
          renderHeader: s,
          renderContent: a,
          ...i
        } = e;
        return {
          key: t,
          bodyCellClassName: I.cell,
          cellClassName: n,
          renderHeader: s,
          render: a,
          ...i,
        };
      }
      function m() {
        return (0, s.jsx)(l.Text, {
          variant: "text-xs/medium",
          className: I.unpublishedBadge,
          children: _.Z.Messages.GUILD_PRODUCT_UNPUBLISHED_TITLE,
        });
      }
      function N(e) {
        let { cellClassName: t, key: n, renderHeader: a, ...i } = e;
        return T({
          cellClassName: t,
          key: n,
          renderHeader: a,
          renderContent(e) {
            let { listing: t } = e,
              n = null;
            return (
              null != t &&
                (n = (0, s.jsxs)(s.Fragment, {
                  children: [
                    (0, s.jsx)(d.Z, {
                      listing: t,
                      imageSize: 128,
                      alt: "",
                      className: I.listingImage,
                    }),
                    (0, s.jsxs)(l.Text, {
                      variant: "text-md/medium",
                      color: "header-primary",
                      className: I.listingNameLabel,
                      children: [t.name, !t.published && (0, s.jsx)(m, {})],
                    }),
                  ],
                })),
              (0, s.jsx)(x, { className: I.listingNameCell, children: n })
            );
          },
          ...i,
        });
      }
      function S(e) {
        let {
          cellClassName: t,
          getAmount: n,
          key: a,
          renderHeader: i,
          ...r
        } = e;
        return T({
          key: a,
          cellClassName: t,
          renderHeader: i,
          renderContent(e) {
            let t = n(e);
            return (0, s.jsx)(p, { children: t });
          },
          ...r,
        });
      }
      function g(e) {
        let {
          cellClassName: t,
          getCount: n,
          key: a,
          renderHeader: i,
          ...r
        } = e;
        return T({
          key: a,
          cellClassName: t,
          renderHeader: i,
          renderContent(e) {
            let t = n(e);
            return (0, s.jsx)(R, { children: t });
          },
          ...r,
        });
      }
      function h(e) {
        let t = [...e];
        for (let n = 1; n < e.length; ++n) {
          let s = e[n];
          t[n] = {
            ...s,
            cellClassName: r()(s.cellClassName, I.cellAlignRight),
          };
        }
        return t;
      }
      let C = (e) => {
          let { children: t } = e;
          return (0, s.jsx)(l.Text, {
            className: I.headerCell,
            variant: "text-xs/medium",
            color: "interactive-normal",
            "aria-hidden": !0,
            children: t,
          });
        },
        x = (e) => {
          let { children: t, className: n } = e;
          return (0, s.jsx)(l.Text, {
            className: n,
            variant: "text-md/normal",
            color: "interactive-normal",
            children: t,
          });
        },
        p = (e) => {
          let { children: t } = e;
          return (0, s.jsx)(x, {
            children: (0, c.T4)(null != t ? t : 0, u.pKx.USD),
          });
        },
        R = (e) => {
          let { children: t } = e;
          return (0, s.jsxs)(x, {
            className: I.personCountCell,
            children: [
              null != t ? t : "-",
              " ",
              (0, s.jsx)(l.UserIcon, {
                size: "md",
                color: "currentColor",
                className: I.personCountIcon,
                "aria-hidden": !0,
              }),
            ],
          });
        };
      function L(e) {
        let {
            className: t,
            headerClassName: n,
            rowClassName: i,
            enableRowSeparators: l = !1,
            initialSortKey: c,
            initialSortDirection: d = u.sHY.ASCENDING,
            ..._
          } = e,
          [E, T] = a.useState(c),
          [m, N] = a.useState(d);
        return (0, s.jsx)("div", {
          className: r()(I.tableContainer, t),
          children: (0, s.jsx)(o.Z, {
            className: r()({ [I.tableWithoutSeparators]: !l }, I.table),
            rowClassName: r()({ [I.rowWithSeparators]: l }, i),
            headerClassName: r()(
              I.header,
              { [I.headerWithoutSeparators]: !l },
              n,
            ),
            sortKey: E,
            sortDirection: m,
            onSort: (e, t) => {
              T(e), N(t);
            },
            ..._,
          }),
        });
      }
    },
    334820: function (e, t, n) {
      "use strict";
      n.d(t, {
        Fd: function () {
          return I;
        },
        GN: function () {
          return E;
        },
        rM: function () {
          return _;
        },
      }),
        n(47120),
        n(653041);
      var s = n(735250),
        a = n(470079),
        i = n(120356),
        r = n.n(i),
        l = n(512722),
        o = n.n(l),
        c = n(481060),
        d = n(755930),
        u = n(363620);
      function _(e, t) {
        let { expandableToggleColumnKey: n } = t,
          a = (0, d.Yn)(
            e.map((e) => ({
              ...e,
              sort: !1,
              renderHeader() {
                var t;
                return null === (t = e.renderHeader) || void 0 === t
                  ? void 0
                  : t.call(e, e, []);
              },
              render(t, n, s) {
                var a, i;
                if (t.isExpandedItem)
                  return "renderExpandedContent" in e
                    ? e.renderExpandedContent(t.item, n)
                    : null;
                return null !==
                  (i =
                    null === (a = e.render) || void 0 === a
                      ? void 0
                      : a.call(e, t.item, n, s)) && void 0 !== i
                  ? i
                  : null;
              },
            })),
          );
        return [
          (function (e) {
            let { key: t } = e;
            return {
              key: t,
              cellClassName: u.toggleExpandColumn,
              renderHeader: () => null,
              render(e, t) {
                if (
                  (o()(null != t, "Cell props missing; did you use the hook?"),
                  e.isExpandedItem)
                )
                  return null;
                let { expandedRows: n, onToggleExpandRow: a } = t,
                  i = n.has(e.key);
                return (0, s.jsx)(c.Clickable, {
                  className: u.toggleExpandCell,
                  onClick: () => a(e.key),
                  children: (0, s.jsx)(d.bL, {
                    children: (0, s.jsx)(c.ChevronSmallRightIcon, {
                      size: "md",
                      color: "currentColor",
                      className: r()(u.caretIcon, { [u.caretDownIcon]: i }),
                    }),
                  }),
                });
              },
            };
          })({ key: n }),
          ...a,
        ];
      }
      function I(e) {
        let { renderExpandedContent: t, ...n } = e;
        return { ...(0, d.wy)(n), renderExpandedContent: t };
      }
      function E(e, t) {
        let { generateExpandedRows: n } = t,
          s = (function () {
            let [e, t] = a.useState(new Set());
            return {
              expandedRows: e,
              onToggleExpandRow: a.useCallback(
                (e) => {
                  t((t) => {
                    let n = new Set(t);
                    return n.has(e) ? n.delete(e) : n.add(e), n;
                  });
                },
                [t],
              ),
            };
          })();
        return {
          data: a.useMemo(() => {
            let t = [];
            for (let a of e)
              if (
                (t.push({ isExpandedItem: !1, key: a.key, item: a }),
                s.expandedRows.has(a.key))
              )
                for (let e of n(a))
                  t.push({ isExpandedItem: !0, key: e.key, item: e });
            return t;
          }, [s.expandedRows, e, n]),
          cellProps: s,
        };
      }
    },
    909667: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return c;
        },
      });
      var s = n(735250);
      n(470079);
      var a = n(481060),
        i = n(723047),
        r = n(463939),
        l = n(981631),
        o = n(689938);
      function c(e) {
        let { team: t, ...n } = e,
          c =
            (0, i.mY)() || null == t
              ? null
              : o.Z.Messages.GUILD_ROLE_SUBSCRIPTION_EARNINGS_EDIT_PAYMENT_METHOD_LINK.format(
                  { url: l.EYA.DEVELOPER_PORTAL_PAYOUT_SETTINGS(t.id) },
                );
        return 0 === n.payoutsByPeriod.length
          ? (0, s.jsxs)(a.FormText, {
              type: a.FormText.Types.DESCRIPTION,
              children: [
                o.Z.Messages
                  .GUILD_ROLE_SUBSCRIPTION_EARNINGS_EARNINGS_HISTORY_EMPTY,
                " ",
                c,
              ],
            })
          : (0, s.jsxs)(s.Fragment, {
              children: [
                (0, s.jsxs)(a.FormText, {
                  type: a.FormText.Types.DESCRIPTION,
                  children: [
                    o.Z.Messages
                      .GUILD_ROLE_SUBSCRIPTION_EARNINGS_EARNINGS_HISTORY_DESCRIPTION,
                    " ",
                    c,
                  ],
                }),
                (0, s.jsx)(a.Spacer, { size: 16 }),
                (0, s.jsx)(r.Z, { ...n }),
              ],
            });
      }
    },
    463939: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return f;
        },
      });
      var s,
        a,
        i = n(735250),
        r = n(470079),
        l = n(512722),
        o = n.n(l),
        c = n(913527),
        d = n.n(c),
        u = n(481060),
        _ = n(264451),
        I = n(759178),
        E = n(462087),
        T = n(685201),
        m = n(766434),
        N = n(755930),
        S = n(334820),
        g = n(198139),
        h = n(689938),
        C = n(853909);
      ((s = a || (a = {})).DROPDOWN = "DROPDOWN"),
        (s.PERIOD = "PERIOD"),
        (s.AMOUNT = "AMOUNT "),
        (s.STATUS = "STATUS ");
      let x = (e) => {
        let { dateUtc: t } = e;
        return (0, i.jsx)(u.Text, {
          variant: "text-md/medium",
          color: "interactive-active",
          children: d()(t).utc().format("MMMM YYYY"),
        });
      };
      function p(e) {
        let { item: t } = e,
          {
            ppgStatus: n,
            payoutStatus: s,
            ppgDeferralReasons: a,
            periodEndDate: r,
          } = (0, m.j0)(t),
          l = null != r ? d()(r).add(15, "days").toISOString() : void 0,
          o = (0, _.Zo)(l, "MMM D");
        switch (n) {
          case g.x_.OPEN:
            return (0, i.jsxs)(i.Fragment, {
              children: [
                null != o
                  ? h.Z.Messages.GUILD_ROLE_SUBSCRIPTION_EARNINGS_TABLE_STATUS_PENDING_OR_SCHEDULED_WITH_DATE.format(
                      { payoutDate: o },
                    )
                  : h.Z.Messages
                      .GUILD_ROLE_SUBSCRIPTION_EARNINGS_TABLE_STATUS_PENDING,
                (0, i.jsx)(E.Z, { className: C.statusScheduledIcon }),
              ],
            });
          case g.x_.CANCELED:
            return (0, i.jsxs)(i.Fragment, {
              children: [
                h.Z.Messages
                  .GUILD_ROLE_SUBSCRIPTION_EARNINGS_TABLE_STATUS_CANCELLED,
                (0, i.jsx)(u.CircleXIcon, {
                  size: "md",
                  color: "currentColor",
                  className: C.statusErrorIcon,
                }),
              ],
            });
          case g.x_.PAYOUT_DEFERRED:
            if ((null == a ? void 0 : a.includes(g.XL.PAYOUT_SEIZED)) === !0)
              return (0, i.jsxs)(i.Fragment, {
                children: [
                  h.Z.Messages
                    .GUILD_ROLE_SUBSCRIPTION_EARNINGS_TABLE_STATUS_CANCELLED,
                  (0, i.jsx)(u.CircleXIcon, {
                    size: "md",
                    color: "currentColor",
                    className: C.statusErrorIcon,
                  }),
                ],
              });
            return (0, i.jsxs)(i.Fragment, {
              children: [
                h.Z.Messages
                  .GUILD_ROLE_SUBSCRIPTION_EARNINGS_TABLE_STATUS_DEFERRED,
                (0, i.jsx)(T.Z, { className: C.statusDeferredIcon }),
              ],
            });
        }
        switch (s) {
          case g.jw.MANUAL:
          case g.jw.OPEN:
          case g.jw.PENDING:
          case g.jw.PROCESSING:
          case g.jw.SUBMITTED:
          case g.jw.PENDING_FUNDS:
          case g.jw.CANCELED:
          case g.jw.ERROR:
            return (0, i.jsxs)(i.Fragment, {
              children: [
                null != o
                  ? h.Z.Messages.GUILD_ROLE_SUBSCRIPTION_EARNINGS_TABLE_STATUS_PENDING_OR_SCHEDULED_WITH_DATE.format(
                      { payoutDate: o },
                    )
                  : h.Z.Messages
                      .GUILD_ROLE_SUBSCRIPTION_EARNINGS_TABLE_STATUS_SCHEDULED,
                (0, i.jsx)(E.Z, { className: C.statusScheduledIcon }),
              ],
            });
          case g.jw.PAID:
            return (0, i.jsxs)(i.Fragment, {
              children: [
                h.Z.Messages.GUILD_ROLE_SUBSCRIPTION_EARNINGS_TABLE_STATUS_PAID,
                (0, i.jsx)(u.CircleCheckIcon, {
                  size: "md",
                  color: "currentColor",
                  className: C.statusPaidIcon,
                }),
              ],
            });
          case g.jw.DEFERRED:
          case g.jw.DEFERRED_INTERNAL:
          case g.jw.REJECTED:
          case g.jw.RISK_REVIEW:
            return (0, i.jsxs)(i.Fragment, {
              children: [
                I.Z.getStatusErrorText(s),
                (0, i.jsx)(u.CircleXIcon, {
                  size: "md",
                  color: "currentColor",
                  className: C.statusErrorIcon,
                }),
              ],
            });
        }
        return null;
      }
      let R = (0, N.i$)({
          key: "AMOUNT ",
          cellClassName: C.amountColumn,
          renderHeader() {
            let e = (0, i.jsx)(u.Tooltip, {
              text: h.Z.Messages
                .GUILD_ROLE_SUBSCRIPTION_EARNINGS_TABLE_AMOUNT_DISCLAIMER,
              children: (e) =>
                (0, i.jsx)(u.CircleInformationIcon, {
                  size: "xs",
                  color: "currentColor",
                  className: C.amountDisclaimer,
                  ...e,
                }),
            });
            return (0, i.jsxs)(N.qN, {
              children: [
                h.Z.Messages.GUILD_PRODUCT_EARNINGS_TABLE_PRICE_COLUMN_TITLE,
                e,
              ],
            });
          },
          getAmount: (e) => e.amount,
        }),
        L = (0, S.rM)(
          [
            (0, S.Fd)({
              key: "PERIOD",
              cellClassName: C.periodColumn,
              renderHeader: () =>
                (0, i.jsx)(N.qN, {
                  children:
                    h.Z.Messages.GUILD_ROLE_SUBSCRIPTION_EARNINGS_TABLE_PERIOD,
                }),
              renderContent: (e) =>
                (0, i.jsx)(x, { dateUtc: e.periodStartingAt }),
              renderExpandedContent(e, t) {
                o()(null != t, "CellProps should always be provided");
                let { ListingIdLabel: n } = t;
                return (0, i.jsx)(n, { listingId: e.listingId });
              },
            }),
            (0, S.Fd)({
              ...R,
              renderContent: R.render,
              renderExpandedContent: (e, t) => R.render(e, t),
            }),
            (0, N.wy)({
              key: "STATUS ",
              cellClassName: C.statusColumn,
              renderHeader() {
                let e = (0, i.jsx)(u.Tooltip, {
                  text: h.Z.Messages
                    .GUILD_ROLE_SUBSCRIPTION_EARNINGS_METRIC_NEXT_PAYMENT_DISCLAIMER,
                  children: (e) =>
                    (0, i.jsx)(u.CircleInformationIcon, {
                      size: "xs",
                      color: "currentColor",
                      className: C.statusDisclaimer,
                      ...e,
                    }),
                });
                return (0, i.jsxs)(N.qN, {
                  children: [
                    h.Z.Messages.GUILD_ROLE_SUBSCRIPTION_EARNINGS_TABLE_STATUS,
                    e,
                  ],
                });
              },
              renderContent: (e) =>
                (0, i.jsx)(N.bL, {
                  className: C.statusCell,
                  children: (0, i.jsx)(p, { item: e }),
                }),
            }),
          ],
          { expandableToggleColumnKey: "DROPDOWN" },
        );
      function f(e) {
        let { ListingIdLabel: t, payoutsByPeriod: n } = e,
          { cellProps: s, data: a } = (0, S.GN)(n, {
            generateExpandedRows: (e) =>
              Object.keys(e.ppgs).map((t) => {
                var n;
                return {
                  key: e.key + t,
                  listingId: t,
                  amount:
                    null === (n = e.ppgs[t]) || void 0 === n
                      ? void 0
                      : n.amount,
                };
              }),
          }),
          l = r.useMemo(() => ({ ListingIdLabel: t, ...s }), [s, t]);
        return (0, i.jsx)(N.ZP, { columns: L, data: a, cellProps: l });
      }
    },
    968820: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return _;
        },
      });
      var s = n(735250);
      n(470079);
      var a = n(481060),
        i = n(791382),
        r = n(937615),
        l = n(217597),
        o = n(685389),
        c = n(981631),
        d = n(689938),
        u = n(967790);
      function _(e) {
        let {
          children: t,
          revenue: n,
          revenueTrend: _,
          summaryMetricLabel: I,
          summaryMetricValue: E,
          summaryMetricTrend: T,
          summaryMetricTrendIsPercent: m,
        } = e;
        return (0, s.jsx)(a.FormSection, {
          title: d.Z.Messages.GUILD_ROLE_SUBSCRIPTION_EARNINGS_HEADER,
          children: (0, s.jsxs)("div", {
            className: u.paymentInfoGroup,
            children: [
              (0, s.jsxs)(o.H, {
                children: [
                  (0, s.jsx)(l.Z, {
                    label:
                      d.Z.Messages
                        .GUILD_ROLE_SUBSCRIPTION_EARNINGS_METRIC_REVENUE,
                    value: (0, r.T4)(null != n ? n : 0, c.pKx.USD),
                    additionalContent: (0, s.jsx)(i.H, {
                      value: _,
                      isPercent: !0,
                    }),
                  }),
                  (0, s.jsx)(l.Z, {
                    label: I,
                    value: E,
                    additionalContent: (0, s.jsx)(i.H, {
                      value: T,
                      isPercent: m,
                    }),
                  }),
                ],
              }),
              t,
            ],
          }),
        });
      }
    },
    200472: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return i;
        },
      });
      var s = n(735250);
      n(470079);
      var a = n(784206);
      function i(e) {
        let { children: t } = e;
        return (0, s.jsx)("div", { className: a.paymentSections, children: t });
      }
    },
    715796: function (e, t, n) {
      "use strict";
      n.d(t, {
        P: function () {
          return c;
        },
      });
      var s = n(735250),
        a = n(470079),
        i = n(442837),
        r = n(481060),
        l = n(594174),
        o = n(981631);
      function c(e) {
        let t =
            (null == e
              ? void 0
              : e.hasFeature(
                  o.oNc.CREATOR_MONETIZABLE_PENDING_NEW_OWNER_ONBOARDING,
                )) === !0,
          c =
            (null == e
              ? void 0
              : e.hasFeature(o.oNc.ROLE_SUBSCRIPTIONS_ENABLED)) === !0,
          d = (0, i.e7)([l.default], () => l.default.getCurrentUser()),
          u = (null == e ? void 0 : e.isOwner(d)) === !0;
        a.useEffect(() => {
          null != e &&
            t &&
            u &&
            (0, r.openModalLazy)(async () => {
              let { default: t } = await n.e("710").then(n.bind(n, 32342));
              return (n) =>
                (0, s.jsx)(t, { ...n, guildId: e.id, requireTeamSetup: c });
            });
        }, [t, c, e, u]);
      }
    },
    581050: function (e, t, n) {
      "use strict";
      var s, a, i, r;
      n.d(t, {
        X: function () {
          return s;
        },
        q: function () {
          return a;
        },
      }),
        ((i = s || (s = {})).OPEN = "OPEN"),
        (i.REJECTED = "REJECTED"),
        (i.APPROVED = "APPROVED"),
        (i.ACTION_REQUIRED = "ACTION_REQUIRED"),
        ((r = a || (a = {})).HOW_IT_WORKS = "HOW_IT_WORKS"),
        (r.BENEFITS = "BENEFITS"),
        (r.OTHER_CREATORS = "OTHER_CREATORS");
    },
    377176: function (e, t, n) {
      "use strict";
      n.d(t, {
        f: function () {
          return r;
        },
      });
      var s = n(63063),
        a = n(981631),
        i = n(689938);
      function r() {
        return i.Z.Messages.GUILD_ROLE_SUBSCRIPTION_WELCOME_V2_ACCEPT_TERMS_CHECKBOX.format(
          {
            fullTermsUrl: s.Z.getArticleURL(a.BhN.CREATOR_TERMS),
            creatorRevenuePolicyUrl: s.Z.getArticleURL(a.BhN.CREATOR_POLICY),
          },
        );
      }
    },
    651711: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return u;
        },
      }),
        n(653041);
      var s = n(470079),
        a = n(782568),
        i = n(635142),
        r = n(63063),
        l = n(827086),
        o = n(431516),
        c = n(981631),
        d = n(689938);
      function u(e) {
        let {
            onEligibilityBecameStale: t,
            actions: n,
            sortedByIneligible: u,
          } = arguments.length > 1 && void 0 !== arguments[1]
            ? arguments[1]
            : {},
          { isUserMFAEnabled: _, isModerationMFAEnabled: I } = (0, o.N)(),
          E = s.useCallback(async () => {
            var e, s;
            _
              ? !I &&
                (await (null == n
                  ? void 0
                  : null === (s = n.onRequireModeratorMFAClick) || void 0 === s
                    ? void 0
                    : s.call(n)))
              : await (null == n
                  ? void 0
                  : null === (e = n.onEnableMFAClick) || void 0 === e
                    ? void 0
                    : e.call(n)),
              null == t || t();
          }, [_, I, t, n]),
          T = (0, l.R)({ onEnableMFAClick: E });
        return s.useMemo(() => {
          if (null == e) return null;
          let { minimumOwnerAgeInYears: t, minimumSize: s } = e,
            l = !e.noRecentViolations,
            o = [
              {
                key: "no_violations_requirement",
                checkedLabel:
                  d.Z.Messages
                    .GUILD_ROLE_SUBSCRIPTION_SETTINGS_ELIGIBILITY_REQUIREMENT_VIOLATIONS_ELIGIBLE,
                uncheckedLabel:
                  d.Z.Messages
                    .GUILD_ROLE_SUBSCRIPTION_SETTINGS_ELIGIBILITY_REQUIREMENT_VIOLATIONS_NOT_ELIGIBLE,
                description:
                  d.Z.Messages.GUILD_ROLE_SUBSCRIPTION_SETTINGS_ELIGIBILITY_REQUIREMENT_VIOLATIONS_DESCRIPTION.format(
                    {
                      communityGuidelinesUrl: r.Z.getArticleURL(
                        c.BhN.PUBLIC_GUILD_GUILDLINES,
                      ),
                    },
                  ),
                checked: e.noRecentViolations,
                actionLabel: l
                  ? d.Z.Messages
                      .GUILD_ROLE_SUBSCRIPTION_SETTINGS_RECENT_VIOLATION_ELIGIBILITY_CTA
                  : void 0,
                actionHandler: l
                  ? () => (0, a.Z)(r.Z.getSubmitRequestURL())
                  : void 0,
              },
            ];
          if (
            (null != t &&
              null != e.meetsOwnerAgeRequirement &&
              o.push({
                key: "owner_age_requirement",
                checkedLabel:
                  d.Z.Messages
                    .GUILD_ROLE_SUBSCRIPTION_SETTINGS_ELIGIBILITY_REQUIREMENT_OWNER_AGE_ELIGIBLE,
                uncheckedLabel:
                  d.Z.Messages
                    .GUILD_ROLE_SUBSCRIPTION_SETTINGS_ELIGIBILITY_REQUIREMENT_OWNER_AGE_NOT_ELIGIBLE,
                description:
                  d.Z.Messages.GUILD_ROLE_SUBSCRIPTION_SETTINGS_ELIGIBILITY_REQUIREMENT_OWNER_AGE_DESCRIPTION.format(
                    { minimumOwnerAgeInYears: t },
                  ),
                checked: e.meetsOwnerAgeRequirement,
              }),
            null != s &&
              null != e.hasSufficientMembers &&
              o.push({
                key: "member_count_requirement",
                checkedLabel:
                  d.Z.Messages
                    .GUILD_ROLE_SUBSCRIPTION_SETTINGS_ELIGIBILITY_REQUIREMENT_MEMBERS_ELIGIBLE,
                uncheckedLabel:
                  d.Z.Messages
                    .GUILD_ROLE_SUBSCRIPTION_SETTINGS_ELIGIBILITY_REQUIREMENT_MEMBERS_NOT_ELIGIBLE,
                description:
                  d.Z.Messages.GUILD_ROLE_SUBSCRIPTION_SETTINGS_ELIGIBILITY_REQUIREMENT_MEMBERS_DESCRIPTION.format(
                    { minimumSize: s },
                  ),
                checked: e.hasSufficientMembers,
              }),
            null != e.minimumAgeInDays &&
              null != e.meetsServerAgeRequirement &&
              o.push({
                key: "server_age_requirement",
                checkedLabel:
                  d.Z.Messages
                    .GUILD_ROLE_SUBSCRIPTION_SETTINGS_ELIGIBILITY_REQUIREMENT_AGE_ELIGIBLE,
                uncheckedLabel:
                  d.Z.Messages
                    .GUILD_ROLE_SUBSCRIPTION_SETTINGS_ELIGIBILITY_REQUIREMENT_AGE_NOT_ELIGIBLE,
                description:
                  d.Z.Messages.GUILD_ROLE_SUBSCRIPTION_SETTINGS_ELIGIBILITY_REQUIREMENT_AGE_DESCRIPTION.format(
                    { minimumAge: (0, i.Z)(e.minimumAgeInDays) },
                  ),
                checked: e.meetsServerAgeRequirement,
              }),
            null != e.weeklyCommunicators &&
              o.push({
                key: "weekly_communicator_count_requirement",
                checkedLabel:
                  d.Z.Messages
                    .GUILD_ROLE_SUBSCRIPTION_SETTINGS_ELIGIBILITY_REQUIREMENT_COMMUNICATORS_ELIGIBLE,
                uncheckedLabel:
                  d.Z.Messages
                    .GUILD_ROLE_SUBSCRIPTION_SETTINGS_ELIGIBILITY_REQUIREMENT_COMMUNICATORS_NOT_ELIGIBLE,
                description:
                  d.Z.Messages
                    .GUILD_ROLE_SUBSCRIPTION_SETTINGS_ELIGIBILITY_REQUIREMENT_COMMUNICATORS_DESCRIPTION,
                checked: e.weeklyCommunicators,
              }),
            null != e.hasMemberRetention &&
              o.push({
                key: "member_retention_requirement",
                checkedLabel:
                  d.Z.Messages
                    .GUILD_ROLE_SUBSCRIPTION_SETTINGS_ELIGIBILITY_REQUIREMENT_RETENTION_ELIGIBLE,
                uncheckedLabel:
                  d.Z.Messages
                    .GUILD_ROLE_SUBSCRIPTION_SETTINGS_ELIGIBILITY_REQUIREMENT_RETENTION_NOT_ELIGIBLE,
                description:
                  d.Z.Messages
                    .GUILD_ROLE_SUBSCRIPTION_SETTINGS_ELIGIBILITY_REQUIREMENT_RETENTION_DESCRIPTION,
                checked: e.hasMemberRetention,
              }),
            o.push({
              key: "nsfw_requirement",
              checkedLabel:
                d.Z.Messages
                  .GUILD_ROLE_SUBSCRIPTION_SETTINGS_ELIGIBILITY_REQUIREMENT_NSFW_CONTENT_ELIGIBLE,
              uncheckedLabel:
                d.Z.Messages
                  .GUILD_ROLE_SUBSCRIPTION_SETTINGS_ELIGIBILITY_REQUIREMENT_NSFW_CONTENT_NOT_ELIGIBLE,
              description:
                d.Z.Messages
                  .GUILD_ROLE_SUBSCRIPTION_SETTINGS_ELIGIBILITY_REQUIREMENT_NSFW_CONTENT_DESCRIPTION,
              checked: e.notNSFW,
            }),
            null != e.hasEnabled2FA)
          ) {
            let t =
                !e.hasEnabled2FA &&
                !_ &&
                (null == n ? void 0 : n.onEnableMFAClick) != null,
              s =
                !e.hasEnabled2FA &&
                !I &&
                (null == n ? void 0 : n.onRequireModeratorMFAClick) != null,
              a = t || s;
            o.push({
              key: "2fa_requirement",
              checkedLabel:
                d.Z.Messages
                  .GUILD_ROLE_SUBSCRIPTION_SETTINGS_ELIGIBILITY_REQUIREMENT_2FA_ELIGIBLE,
              uncheckedLabel:
                d.Z.Messages
                  .GUILD_ROLE_SUBSCRIPTION_SETTINGS_ELIGIBILITY_REQUIREMENT_2FA_NOT_ELIGIBLE,
              description:
                d.Z.Messages.GUILD_ROLE_SUBSCRIPTION_SETTINGS_ELIGIBILITY_REQUIREMENT_2FA_DESCRIPTION.format(
                  { enableMFAHook: T },
                ),
              checked: e.hasEnabled2FA,
              actionLabel: a
                ? d.Z.Messages
                    .GUILD_ROLE_SUBSCRIPTION_SETTINGS_2MFA_ELIGIBILITY_CTA
                : void 0,
              actionHandler: a ? E : void 0,
            });
          }
          return !0 === u && o.sort((e) => (e.checked ? 0 : -1)), o;
        }, [e, u, _, n, I, T, E]);
      }
    },
    605288: function (e, t, n) {
      "use strict";
      n.d(t, {
        j: function () {
          return a;
        },
      }),
        n(390547);
      var s = n(651711);
      function a(e) {
        let t = (0, s.Z)(e),
          n = null == t ? void 0 : t.flatMap((e) => (e.checked ? [] : [e.key]));
        return null != n ? n : null;
      }
    },
    787051: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return r;
        },
      }),
        n(47120);
      var s = n(470079),
        a = n(881052),
        i = n(53365);
      function r(e) {
        let [t, n] = s.useState(!0),
          [r, l] = s.useState(),
          [o, c] = s.useState(),
          d = s.useCallback(async (e) => {
            n(!0), l(void 0);
            try {
              let t = await i.wZ(e);
              c(t);
            } catch (e) {
              l(new a.Hx(e));
            } finally {
              n(!1);
            }
          }, []);
        return (
          s.useEffect(() => {
            d(e);
          }, [e, d]),
          { isLoading: t, error: r, creatorMonetizationOnboardingMarketing: o }
        );
      }
    },
    827086: function (e, t, n) {
      "use strict";
      n.d(t, {
        R: function () {
          return o;
        },
      });
      var s = n(735250),
        a = n(470079),
        i = n(690221),
        r = n(431516);
      function l(e) {
        return e;
      }
      function o(e) {
        let { onEnableMFAClick: t, onMFAEnabled: n } = e,
          { isUserMFAEnabled: o, isModerationMFAEnabled: c } = (0, r.N)(),
          d = a.useCallback(async () => {
            await t(), null == n || n();
          }, [t, n]),
          u = a.useCallback(
            (e) => (0, s.jsx)(i.Z, { onClick: d, children: e }),
            [d],
          );
        return o && c ? l : u;
      }
    },
    431516: function (e, t, n) {
      "use strict";
      n.d(t, {
        N: function () {
          return l;
        },
      });
      var s = n(399606),
        a = n(999382),
        i = n(594174),
        r = n(981631);
      function l() {
        let e = (0, s.e7)([i.default], () => i.default.getCurrentUser()),
          t = (0, s.e7)([a.Z], () => a.Z.getProps().mfaLevel),
          n = (null == e ? void 0 : e.mfaEnabled) === !0;
        return {
          isUserMFAEnabled: n,
          isModerationMFAEnabled: t === r.BpS.ELEVATED,
        };
      }
    },
    346163: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return T;
        },
      });
      var s = n(470079),
        a = n(399606),
        i = n(674180),
        r = n(594174),
        l = n(63063),
        o = n(223892),
        c = n(747988),
        d = n(158992),
        u = n(159361),
        _ = n(377176),
        I = n(981631),
        E = n(689938);
      function T(e) {
        let t;
        let n = (0, o.Ob)(e),
          T =
            null == e
              ? void 0
              : e.hasFeature(I.oNc.CREATOR_MONETIZABLE_PROVISIONAL),
          m = null == e ? void 0 : e.hasFeature(I.oNc.CREATOR_MONETIZABLE),
          N = (0, a.e7)([r.default], () => {
            let t = r.default.getCurrentUser();
            return (null == e ? void 0 : e.isOwner(t)) === !0;
          }),
          {
            error: S,
            loading: g,
            createEnableRequest: h,
            submittedRequest: C,
          } = (0, c.Z)(null == e ? void 0 : e.id),
          {
            loading: x,
            error: p,
            refresh: R,
            eligibility: L,
          } = (0, d.Z)(null == e ? void 0 : e.id),
          { isApplicationRejected: f, requestCooldownDuration: O } = (0, u.Z)(
            L,
          ),
          A =
            (null == e
              ? void 0
              : e.hasFeature(I.oNc.CREATOR_MONETIZABLE_RESTRICTED)) === !0 ||
            (null == e
              ? void 0
              : e.hasFeature(I.oNc.CREATOR_MONETIZABLE_DISABLED)) === !0,
          { isMonetizationReapplicationDisabled: M } = (0, i.eC)(
            null == e ? void 0 : e.id,
          ),
          D = C || (null == L ? void 0 : L.isApplicationPending) === !0,
          v = (null == L ? void 0 : L.canApply) === !0,
          j =
            E.Z.Messages.GUILD_ROLE_SUBSCRIPTION_SETTINGS_ENABLE_REQUIREMENTS_DESCRIPTION.format(
              { faqUrl: l.Z.getArticleURL(I.BhN.CREATOR_FAQ) },
            );
        f && M
          ? (t =
              !0 === T
                ? E.Z.Messages.GUILD_ROLE_SUBSCRIPTION_SETTINGS_ENABLE_REQUEST_REJECTED_HIGH_HARM.format(
                    { communityGuidelineUrl: I.EYA.GUIDELINES },
                  )
                : E.Z.Messages.GUILD_ROLE_SUBSCRIPTION_SETTINGS_ENABLE_REQUEST_REJECTED_HIGH_HARM_ALT.format(
                    { communityGuidelineUrl: I.EYA.GUIDELINES },
                  ))
          : f &&
            null != O &&
            (t =
              E.Z.Messages.GUILD_ROLE_SUBSCRIPTION_SETTINGS_ENABLE_REQUEST_REJECTED_V2.format(
                {
                  requestCooldownDuration: O,
                  creatorRevenuePolicyUrl: l.Z.getArticleURL(
                    I.BhN.CREATOR_POLICY,
                  ),
                },
              ));
        let Z = n && N && !1 === m,
          b = n && !1 === T,
          U = (0, _.f)(),
          G =
            f && v && N
              ? E.Z.Messages.GUILD_ROLE_SUBSCRIPTION_SETTINGS_ENABLE_REQUEST_RESUBMIT_V2.format()
              : void 0;
        return (
          s.useEffect(() => {
            Z && R();
          }, [R, Z]),
          {
            resubmittingEnableRequest: g,
            resubmissionError: S,
            isGuildOwner: N,
            createEnableRequest: h,
            resubmittedRequest: C,
            eligibilityLoading: x,
            eligibilityError: p,
            refreshEligibility: R,
            eligibility: L,
            eligibleForMonetization: v,
            isApplicationPending: D,
            hasPreviousApplicationRejection: f,
            requestRejectedNoticeText: t,
            reapplyNoticeText: G,
            showAcceptTermsFlow: b,
            wasRejectedInV1: b && (A || f),
            requirementsFinePrintText: j,
            acceptTermsCheckboxText: U,
          }
        );
      }
    },
    90815: function (e, t, n) {
      "use strict";
      n.d(t, {
        q: function () {
          return i;
        },
      });
      var s = n(735250);
      n(470079);
      var a = n(952265);
      function i(e) {
        let { demonetized: t = !1 } =
          arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
        (0, a.ZD)(
          async () => {
            let { default: a } = await n.e("90220").then(n.bind(n, 418225));
            return (n) => (0, s.jsx)(a, { guildId: e, demonetized: t, ...n });
          },
          { onCloseRequest: () => {} },
        );
      }
    },
    747988: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return r;
        },
      }),
        n(47120);
      var s = n(470079),
        a = n(479531),
        i = n(53365);
      function r(e) {
        let [t, n] = s.useState(),
          [r, l] = s.useState(!1),
          [o, c] = s.useState(!1);
        return {
          error: t,
          loading: r,
          createEnableRequest: s.useCallback(async () => {
            if (null != e) {
              l(!0), n(void 0), c(!1);
              try {
                await i.He(e), c(!0);
              } catch (e) {
                n(new a.Z(e));
              } finally {
                l(!1);
              }
            }
          }, [e]),
          submittedRequest: o,
        };
      }
    },
    957011: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return d;
        },
      }),
        n(47120);
      var s = n(470079),
        a = n(442837),
        i = n(479531),
        r = n(430824),
        l = n(594174),
        o = n(53365),
        c = n(223892);
      function d(e, t) {
        let n = (0, a.e7)([r.Z], () => r.Z.getGuild(e)),
          [d, u] = s.useState(),
          [_, I] = s.useState(!1),
          E = (0, c.Ob)(n),
          T = (0, a.e7)(
            [l.default],
            () => {
              let e = l.default.getCurrentUser();
              return (null == n ? void 0 : n.isOwner(e)) === !0;
            },
            [n],
          );
        return {
          canSubmitAcceptance: T,
          error: d,
          loading: _,
          submitAcceptTermsRequest: s.useCallback(async () => {
            if (null != e && (E || null != t)) {
              I(!0), u(void 0);
              try {
                null != t ? await o.wE(e, t) : await o.zo(e);
              } catch (e) {
                u(new i.Z(e));
              } finally {
                I(!1);
              }
            }
          }, [e, t, E]),
        };
      }
    },
    158992: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return l;
        },
      }),
        n(47120);
      var s = n(470079),
        a = n(479531),
        i = n(53365),
        r = n(581050);
      function l(e) {
        let [t, n] = s.useState(null != e),
          [l, o] = s.useState(),
          [c, d] = s.useState(),
          u = s.useCallback(async (e) => {
            n(!0), o(void 0);
            try {
              var t, s, l, c, u;
              let n = await i.yk(e);
              d({
                isEligibleForMonetization: n.sufficient,
                hasSufficientMembers: n.size,
                hasEnabled2FA: n.mfa,
                meetsServerAgeRequirement: n.age,
                meetsOwnerAgeRequirement: n.owner_age,
                noRecentViolations: n.safe_environment,
                weeklyCommunicators: n.engagement_healthy,
                hasMemberRetention: n.retention_healthy,
                notNSFW: 0 === Object.keys(n.nsfw_properties).length,
                canApply: n.can_apply,
                isApplicationPending:
                  (null === (t = n.latest_request) || void 0 === t
                    ? void 0
                    : t.state) === r.X.OPEN,
                actionRequired:
                  (null === (s = n.latest_request) || void 0 === s
                    ? void 0
                    : s.state) === r.X.ACTION_REQUIRED,
                minimumAgeInDays: n.minimum_age_in_days,
                minimumOwnerAgeInYears: n.minimum_owner_age_in_years,
                minimumSize: n.minimum_size,
                latestRequest: n.latest_request,
                rejection: n.rejection,
                guildMemberCount:
                  null === (l = n.health_score) || void 0 === l
                    ? void 0
                    : l.guild_size,
                communicatorCount:
                  null === (c = n.health_score) || void 0 === c
                    ? void 0
                    : c.communicators,
                retentionScore:
                  null === (u = n.health_score) || void 0 === u
                    ? void 0
                    : u.perc_ret_w1,
              });
            } catch (e) {
              o(new a.Z(e));
            } finally {
              n(!1);
            }
          }, []);
        return {
          error: l,
          loading: t,
          eligibility: c,
          refresh: s.useCallback(() => {
            null != e && u(e);
          }, [e, u]),
        };
      }
    },
    159361: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return i;
        },
      });
      var s = n(581050),
        a = n(689938);
      function i(e) {
        var t, n;
        let i =
          (null == e
            ? void 0
            : null === (t = e.latestRequest) || void 0 === t
              ? void 0
              : t.state) === s.X.REJECTED;
        return {
          isApplicationRejected: i,
          requestCooldownDuration: (function (e) {
            let t;
            if (null == e) return;
            let n = Date.parse(e),
              s = Date.now();
            if (isNaN(n) || n < s) return;
            let i = 1440,
              r = 10080,
              l = 43200,
              o = Math.round((n - s) / 6e4),
              c = (e) => Math.round(o / e);
            return (t =
              o >= 43200
                ? a.Z.Messages.DURATION_MONTHS.format({ months: c(l) })
                : o >= r
                  ? a.Z.Messages.DURATION_WEEKS.format({ weeks: c(r) })
                  : o >= i
                    ? a.Z.Messages.DURATION_DAYS.format({ days: c(i) })
                    : o >= 60
                      ? a.Z.Messages.DURATION_HOURS.format({ hours: c(60) })
                      : a.Z.Messages.DURATION_MINUTES.format({ minutes: o }));
          })(
            null == e
              ? void 0
              : null === (n = e.rejection) || void 0 === n
                ? void 0
                : n.can_reapply_at,
          ),
        };
      }
    },
    719879: function (e, t, n) {
      "use strict";
      n.d(t, {
        VP: function () {
          return o;
        },
      }),
        n(653041);
      var s,
        a,
        i = n(626135),
        r = n(946314),
        l = n(981631);
      function o(e) {
        let t = r.ZP.getDiscoveryChecklist(e),
          n = [];
        if (!(null == t ? void 0 : t.sufficient)) {
          var s;
          !(null == t ? void 0 : t.safeEnvironment) && n.push("TNS"),
            (!(null == t ? void 0 : t.healthy) ||
              (null == t ? void 0 : t.healthScorePending)) &&
              n.push("HEALTH"),
            !(null == t ? void 0 : t.size) && n.push("MEMBER_COUNT"),
            Object.keys(
              null !== (s = null == t ? void 0 : t.nsfwProperties) &&
                void 0 !== s
                ? s
                : {},
            ).length > 0 && n.push("BAD_WORDS"),
            !(null == t ? void 0 : t.protected) && n.push("2FA");
        }
        i.default.track(l.rMx.GUILD_SETTINGS_DISCOVERY_VIEWED, {
          guild_id: e,
          failed_reasons: n,
        });
      }
      ((a = s || (s = {})).SAFE_ENVIRONMENT = "TNS"),
        (a.HEALTHY = "HEALTH"),
        (a.SIZE = "MEMBER_COUNT"),
        (a.NSFW = "BAD_WORDS"),
        (a.PROTECTED = "2FA");
    },
    59970: function (e, t, n) {
      "use strict";
      n.d(t, {
        k: function () {
          return r;
        },
      });
      var s = n(544891),
        a = n(570140),
        i = n(981631);
      async function r(e) {
        a.Z.dispatch({ type: "DISCOVER_CHECKLIST_FETCH_START", guildId: e });
        try {
          let t = await s.tn.get({
            url: i.ANM.GUILD_DISCOVERY_REQUIREMENTS(e),
            oldFormErrors: !0,
          });
          a.Z.dispatch({
            type: "DISCOVER_CHECKLIST_FETCH_SUCCESS",
            guildId: e,
            checklist: t.body,
          });
        } catch (t) {
          a.Z.dispatch({
            type: "DISCOVER_CHECKLIST_FETCH_FAILURE",
            guildId: e,
          });
        }
      }
    },
    938502: function (e, t, n) {
      "use strict";
      n.d(t, {
        P5: function () {
          return _;
        },
        TJ: function () {
          return d;
        },
        UA: function () {
          return u;
        },
        d5: function () {
          return a;
        },
      }),
        n(47120),
        n(470079),
        n(442837),
        n(430824);
      var s,
        a,
        i,
        r,
        l = n(626135);
      n(59970), n(946314);
      var o = n(731455),
        c = n(981631);
      function d(e, t) {
        let n = e.hasFeature(c.oNc.VERIFIED),
          s = e.hasFeature(c.oNc.DISCOVERABLE),
          a = e.hasFeature(c.oNc.ENABLED_DISCOVERABLE_BEFORE);
        if (n) return "settings";
        if (!s && !a) return "intro";
        if (null == t) return "settings";
        let i =
          t.sufficientWithoutGracePeriod &&
          null != t.gracePeriodEndDate &&
          t.gracePeriodEndDate > new Date();
        return t.sufficient || i || !s
          ? t.sufficient || i
            ? "settings"
            : "intro"
          : "disqualified";
      }
      function u(e, t) {
        let n = !1,
          s = { guild_id: e.id, automatic: !1 };
        (null == t || e.discoverySplash !== t.discoverySplash) &&
          ((s.discovery_splash_edit_type =
            null == e.discoverySplash ? "removed" : "uploaded"),
          (n = !0)),
          (null == t ||
            e.features.has(c.oNc.DISCOVERABLE) !==
              t.features.has(c.oNc.DISCOVERABLE)) &&
            ((s.is_discoverable = e.features.has(c.oNc.DISCOVERABLE)),
            (n = !0)),
          (null == t || e.rulesChannelId !== t.rulesChannelId) &&
            ((s.rules_channel_id = e.rulesChannelId), (n = !0)),
          n && l.default.track(c.rMx.GUILD_SETTINGS_DISCOVERY_UPDATED, s);
      }
      function _(e) {
        var t, n;
        return null !==
          (n =
            null === (t = o.U2[e]) || void 0 === t
              ? void 0
              : t.map((e) => e())) && void 0 !== n
          ? n
          : [];
      }
      ((i = s || (s = {})).UPLOADED = "uploaded"),
        (i.REMOVED = "removed"),
        ((r = a || (a = {})).INTRO = "intro"),
        (r.DISQUALIFIED = "disqualified"),
        (r.SETTINGS = "settings");
    },
    891864: function (e, t, n) {
      "use strict";
      function s(e) {
        return {
          id: e.id,
          name: e.name,
          description: e.description,
          splash: e.splash,
          banner: e.banner,
          icon: e.icon,
          features: new Set(e.features),
          presenceCount: e.approximate_presence_count,
          memberCount: e.approximate_member_count,
          premiumSubscriptionCount: e.premium_subscription_count,
          preferredLocale: e.preferred_locale,
          discoverySplash: e.discovery_splash,
          emojis: e.emojis,
        };
      }
      n.d(t, {
        Z: function () {
          return s;
        },
      }),
        n(47120);
    },
    967916: function (e, t, n) {
      "use strict";
      n.d(t, {
        z: function () {
          return l;
        },
      });
      var s = n(664751),
        a = n(544891),
        i = n(570140);
      n(900849), n(719879);
      var r = n(981631);
      async function l(e) {
        i.Z.dispatch({ type: "DISCOVER_GUILDS_FETCH_START", guildIds: e });
        try {
          let { guilds: t } = (
            await a.tn.get({
              url: r.ANM.GUILD_DISCOVERY,
              query: s.stringify({ guild_ids: e }),
              oldFormErrors: !0,
            })
          ).body;
          i.Z.dispatch({ type: "DISCOVER_GUILDS_FETCH_SUCCESS", guilds: t });
        } catch (e) {
          i.Z.dispatch({ type: "DISCOVER_GUILDS_FETCH_FAILURE" });
        }
      }
    },
    68638: function (e, t, n) {
      "use strict";
      var s,
        a,
        i,
        r,
        l = n(392711),
        o = n.n(l),
        c = n(442837),
        d = n(570140),
        u = n(314897),
        _ = n(823379),
        I = n(891864);
      let E = {},
        T = 0;
      class m extends (r = c.ZP.Store) {
        initialize() {
          this.waitFor(u.default);
        }
        isFetching() {
          return T > 0;
        }
        getGuild(e) {
          return E[e];
        }
        getGuilds(e) {
          return e.map((e) => E[e]).filter(_.lm);
        }
      }
      (i = "DiscoverGuildsStore"),
        (a = "displayName") in (s = m)
          ? Object.defineProperty(s, a, {
              value: i,
              enumerable: !0,
              configurable: !0,
              writable: !0,
            })
          : (s[a] = i),
        (t.Z = new m(d.Z, {
          DISCOVER_GUILDS_FETCH_START: function (e) {
            T += 1;
          },
          DISCOVER_GUILDS_FETCH_SUCCESS: function (e) {
            let { guilds: t } = e;
            (T -= 1),
              o()
                .map(t, I.Z)
                .forEach((e) => (E[e.id] = e));
          },
          DISCOVER_GUILDS_FETCH_FAILURE: function (e) {
            T -= 1;
          },
        }));
    },
    816817: function (e, t, n) {
      "use strict";
      n(47120);
      var s = n(735250),
        a = n(470079),
        i = n(120356),
        r = n.n(i),
        l = n(780384),
        o = n(481060),
        c = n(410030),
        d = n(686546),
        u = n(372769),
        _ = n(134432),
        I = n(768581),
        E = n(624138),
        T = n(689938),
        m = n(583628),
        N = n(129512),
        S = n(330065);
      let g = [16, 16, 14, 14, 12, 10, 8];
      t.Z = function (e) {
        var t, n;
        let {
            guild: i,
            disabled: h,
            small: C,
            loading: x = !1,
            description: p,
            memberCount: R,
            presenceCount: L,
            className: f,
          } = e,
          O = (0, c.ZP)(),
          [A, M] = a.useState(!1);
        if (null == i || x)
          return (0, s.jsx)("div", {
            className: r()(f, m.card, m.cardPlaceholder, {
              [m.cardSmall]: C,
              [m.cardDisabled]: h,
            }),
          });
        let { name: D } = i,
          v =
            null != i.discoverySplash && /^data:/.test(i.discoverySplash)
              ? i.discoverySplash
              : I.ZP.getGuildDiscoverySplashURL({
                  id: i.id,
                  splash: i.discoverySplash,
                  size: 240 * (0, _.x_)(),
                }),
          j = (0, l.wj)(O) ? N : S,
          Z =
            null !==
              (t = I.ZP.getGuildIconURL({
                id: i.id,
                icon: i.icon,
                size: 40,
              })) && void 0 !== t
              ? t
              : void 0,
          b = null != i.description ? i.description : p,
          U = null != R ? R : null == i ? void 0 : i.memberCount,
          G = null != L ? L : null == i ? void 0 : i.presenceCount,
          P = null;
        if (null != Z)
          P = (0, s.jsx)("img", { src: Z, alt: "", className: m.avatar });
        else {
          let e = (0, E.Zg)(i.name);
          P = (0, s.jsx)("div", {
            className: m.defaultIcon,
            children: (0, s.jsx)(o.Text, {
              className: m.acronym,
              style: {
                fontSize:
                  null !== (n = g[e.length]) && void 0 !== n
                    ? n
                    : g[g.length - 1],
              },
              variant: "text-sm/normal",
              children: e,
            }),
          });
        }
        return (0, s.jsxs)("div", {
          className: r()(f, m.card, {
            [m.cardSmall]: C,
            [m.cardDisabled]: h,
            [m.splashLoaded]: A,
          }),
          children: [
            (0, s.jsxs)("div", {
              className: m.cardHeader,
              children: [
                (0, s.jsx)("div", {
                  className: m.splash,
                  children: (0, s.jsx)("img", {
                    src: null != v ? v : j,
                    alt: "",
                    className: m.splashImage,
                    onLoad: () => M(!0),
                  }),
                }),
                (0, s.jsx)("div", {
                  className: m.guildIcon,
                  children: (0, s.jsx)(d.ZP, {
                    mask: d.ZP.Masks.SQUIRCLE,
                    width: 48,
                    height: 48,
                    children: (0, s.jsx)("div", {
                      className: m.iconMask,
                      children: (0, s.jsx)(d.ZP, {
                        mask: d.ZP.Masks.SQUIRCLE,
                        width: 40,
                        height: 40,
                        children: null != P ? P : null,
                      }),
                    }),
                  }),
                }),
              ],
            }),
            (0, s.jsxs)("div", {
              className: m.guildInfo,
              children: [
                (0, s.jsxs)("div", {
                  className: m.title,
                  children: [
                    (0, s.jsx)(u.Z, {
                      className: m.verifiedIcon,
                      guild: i,
                      tooltipColor: o.Tooltip.Colors.PRIMARY,
                    }),
                    (0, s.jsx)(o.Text, {
                      className: m.guildName,
                      variant: "text-md/normal",
                      children: (0, s.jsx)("span", { children: D }),
                    }),
                  ],
                }),
                (0, s.jsx)(o.Text, {
                  className: m.description,
                  variant: "text-sm/normal",
                  children: (0, s.jsx)("span", { children: b }),
                }),
                (0, s.jsxs)("div", {
                  className: m.memberInfo,
                  children: [
                    null != G &&
                      (0, s.jsxs)("div", {
                        className: m.memberCount,
                        children: [
                          (0, s.jsx)("div", { className: m.dotOnline }),
                          (0, s.jsx)(o.Text, {
                            variant: "text-xs/normal",
                            children: C
                              ? T.Z.Messages.NUMBERS_ONLY.format({ count: G })
                              : T.Z.Messages.INSTANT_INVITE_GUILD_MEMBERS_ONLINE.format(
                                  { membersOnline: G },
                                ),
                          }),
                        ],
                      }),
                    null != U &&
                      (0, s.jsxs)("div", {
                        className: m.memberCount,
                        children: [
                          (0, s.jsx)("div", { className: m.dotOffline }),
                          (0, s.jsx)(o.Text, {
                            variant: "text-xs/normal",
                            children: C
                              ? T.Z.Messages.NUMBERS_ONLY.format({ count: U })
                              : T.Z.Messages.INSTANT_INVITE_GUILD_MEMBERS_TOTAL.format(
                                  { count: U },
                                ),
                          }),
                        ],
                      }),
                  ],
                }),
              ],
            }),
          ],
        });
      };
    },
    219369: function (e, t, n) {
      "use strict";
      n.d(t, {
        Nx: function () {
          return c;
        },
        lW: function () {
          return d;
        },
        tK: function () {
          return a;
        },
      });
      var s,
        a,
        i = n(367907),
        r = n(626135),
        l = n(63063),
        o = n(981631);
      ((s = a || (a = {})).DESCRIPTION = "description"),
        (s.CATEGORIES = "categories"),
        (s.TAGS = "tags"),
        (s.AGREE_TO_RULES = "agree_to_rules");
      let c = (e, t, n) => {
          r.default.track(o.rMx.USER_FLOW_TRANSITION, {
            flow_type: o.jXE.DISCOVERY_SETUP_MODAL,
            from_step: e,
            to_step: t,
            ...(0, i.hH)(n),
          });
        },
        d = (e) => {
          let {
            articleId: t,
            guildId: n,
            modalStep: s = null,
            pageView: a = null,
          } = e;
          open(l.Z.getArticleURL(t)),
            r.default.track(o.rMx.DISCOVERY_SETUP_CTA_CLICKED, {
              cta_name: o.b8q,
              discovery_settings_view: a,
              help_center_article_id: t,
              modal_step: s,
              ...(0, i.hH)(n),
            });
        };
    },
    730089: function (e, t, n) {
      "use strict";
      n.d(t, {
        G: function () {
          return m;
        },
      });
      var s = n(36793),
        a = n(668781),
        i = n(80932),
        r = n(426642),
        l = n(626135),
        o = n(176354),
        c = n(956664),
        d = n(185923),
        u = n(981631),
        _ = n(689938),
        I = n(413135).Buffer;
      let E = (e, t, n, s) => (
          l.default.track(u.rMx.EMOJI_UPLOAD_FILE_SIZE_LIMIT_EXCEEDED, {
            guild_id: n,
            file_size: t,
            upload_id: s,
          }),
          r.d.TOO_BIG
        ),
        T = (e, t, n) => {
          l.default.track(u.rMx.EMOJI_FILE_RESIZED, {
            is_animated: !1,
            file_type: e.type.split("/").pop(),
            original_file_size_bytes: e.size,
            resized_file_size_bytes: (0, c.QB)(t),
            resized_file_too_big: n,
          });
        },
        m = async (e) => {
          let {
              data: t,
              file: n,
              guildId: c,
              uploadId: m,
              roles: N,
              image: S,
              hideErrorModal: g,
            } = e,
            h = o.ZP.sanitizeEmojiName(n.name.split(".")[0]);
          if (o.ZP.isFileTooBig(n)) {
            if ("image/gif" === n.type) return E(n.name, n.size, c, m);
            if (null != S) {
              let e;
              t = (0, s.Ae)(S, 128, 128);
              try {
                e = o.ZP.isDataTooBig(t);
              } catch (e) {
                return E(n.name, n.size, c, m);
              }
              if ((T(n, t, e), e)) return E(n.name, n.size, c, m);
            }
          }
          try {
            await (0, i.rS)({ guildId: c, image: t, name: h, roles: N }),
              l.default.track(u.rMx.EMOJI_UPLOAD_COMPLETED, {
                guild_id: c,
                upload_id: m,
              });
          } catch (o) {
            let e, n;
            let { body: s, status: i } = o;
            return (
              null != s &&
                (s.code === u.evJ.TOO_MANY_EMOJI
                  ? ((e = _.Z.Messages.TOO_MANY_EMOJI),
                    (n = r.d.TOO_MANY_EMOJI))
                  : s.code === u.evJ.TOO_MANY_ANIMATED_EMOJI
                    ? ((e = _.Z.Messages.TOO_MANY_ANIMATED_EMOJI),
                      (n = r.d.TOO_MANY_ANIMATED_EMOJI))
                    : null != s.image ||
                        s.code === u.evJ.INVALID_FILE_ASSET_SIZE
                      ? (l.default.track(
                          u.rMx.EMOJI_UPLOAD_FILE_SIZE_LIMIT_EXCEEDED,
                          {
                            guild_id: c,
                            file_size: I.byteLength(t),
                            upload_id: m,
                          },
                        ),
                        (e = _.Z.Messages.EMOJI_TOO_BIG.format({
                          maxSize: d.xG,
                        })),
                        (n = r.d.TOO_BIG))
                      : (null != s.image ||
                          s.code ===
                            u.evJ.INVALID_FILE_ASSET_SIZE_RESIZE_GIF) &&
                        (n = r.d.RESIZE_GIF)),
              429 === i &&
                ((e = _.Z.Messages.RATE_LIMITED), (n = r.d.RATE_LIMIT)),
              null != e &&
                !g &&
                a.Z.show({ title: _.Z.Messages.GENERIC_ERROR_TITLE, body: e }),
              n
            );
          }
        };
    },
    132580: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return o;
        },
      });
      var s = n(735250);
      n(470079);
      var a = n(481060),
        i = n(44315),
        r = n(981631),
        l = n(689938);
      function o(e) {
        let { className: t, color: n = (0, i.Lq)(r.Ilk.BRAND_500), ...o } = e;
        return (0, s.jsx)(a.TextBadge, {
          ...o,
          text: l.Z.Messages.ALPHA,
          color: n,
          className: t,
        });
      }
    },
    970061: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return I;
        },
      }),
        n(47120),
        n(390547);
      var s = n(735250),
        a = n(470079),
        i = n(120356),
        r = n.n(i),
        l = n(526629),
        o = n(692547),
        c = n(481060),
        d = n(259580),
        u = n(340051);
      function _(e) {
        let { checked: t, children: n } = e;
        return (0, s.jsxs)("div", {
          className: u.row,
          children: [
            (0, s.jsx)(c.Text, {
              variant: "text-md/normal",
              color: "interactive-active",
              className: u.rowText,
              children: n,
            }),
            t
              ? (0, s.jsx)(c.CircleCheckIcon, {
                  size: "md",
                  color: "currentColor",
                  secondaryColor: o.Z.unsafe_rawColors.WHITE_500.css,
                  className: r()(u.rowIcon, u.rowIconChecked),
                })
              : (0, s.jsx)("div", {
                  className: r()(u.rowIcon, u.rowIconEmpty),
                }),
          ],
        });
      }
      function I(e) {
        let {
            title: t,
            children: n,
            buttonLabel: i,
            buttonCallback: r,
            disabled: o,
          } = e,
          [I, E] = a.useState(!1),
          T = n.flatMap((e) => e.items.map((e) => e.completed)),
          m = T.filter((e) => e).length / T.length,
          N = (0, c.useSpring)({ width: "".concat(100 * m, "%") });
        return (0, s.jsxs)("div", {
          className: u.container,
          children: [
            (0, s.jsxs)(c.Clickable, {
              className: u.headerBar,
              onClick: () => E((e) => !e),
              children: [
                (0, s.jsx)(c.Heading, {
                  variant: "heading-md/semibold",
                  className: u.headerText,
                  children: t,
                }),
                (0, s.jsx)(d.Z, {
                  direction: I ? d.Z.Directions.DOWN : d.Z.Directions.UP,
                  className: u.headerCaret,
                }),
              ],
            }),
            (0, s.jsx)("div", {
              className: u.progressBarOuter,
              children: (0, s.jsx)(l.animated.div, {
                className: u.progressBarInner,
                style: N,
              }),
            }),
            !I &&
              n.map((e, t) => {
                let { title: n, items: i } = e;
                return (0, s.jsxs)(
                  a.Fragment,
                  {
                    children: [
                      t > 0 &&
                        (0, s.jsx)(c.FormDivider, { className: u.divider }),
                      (0, s.jsx)(c.FormTitle, {
                        className: u.categoryTitle,
                        children: n,
                      }),
                      i.map((e, t) =>
                        (0, s.jsx)(
                          _,
                          { children: e.description, checked: e.completed },
                          t,
                        ),
                      ),
                    ],
                  },
                  t,
                );
              }),
            null !== i &&
              "" !== i &&
              null !== r &&
              (0, s.jsxs)("div", {
                children: [
                  (0, s.jsx)(c.FormDivider, { className: u.divider }),
                  (0, s.jsx)(c.Button, {
                    className: u.button,
                    size: c.Button.Sizes.SMALL,
                    color: c.Button.Colors.BRAND,
                    onClick: r,
                    disabled: 1 !== m || o,
                    children: i,
                  }),
                ],
              }),
          ],
        });
      }
    },
    263145: function (e, t, n) {
      "use strict";
      var s = n(735250),
        a = n(470079),
        i = n(120356),
        r = n.n(i),
        l = n(600164),
        o = n(485591),
        c = n(113207);
      function d(e, t, n) {
        return (
          t in e
            ? Object.defineProperty(e, t, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0,
              })
            : (e[t] = n),
          e
        );
      }
      class u extends a.PureComponent {
        render() {
          let { focused: e } = this.state,
            {
              value: t,
              placeholder: n,
              error: a,
              className: i,
              maxLength: d,
              autoFocus: u,
              prefix: _,
              disabled: I,
            } = this.props;
          return (0, s.jsxs)(l.Z, {
            align: l.Z.Align.CENTER,
            justify: l.Z.Justify.START,
            className: r()(o.prefixInput, i, { [o.focused]: e, [o.error]: a }),
            onClick: this.handleFocusInput,
            children: [
              (0, s.jsx)(l.Z.Child, {
                grow: 0,
                className: o.prefixInputPrefix,
                children: _,
              }),
              (0, s.jsx)(l.Z.Child, {
                className: c.marginReset,
                children: (0, s.jsx)("input", {
                  ref: this.setInputRef,
                  className: o.prefixInputInput,
                  value: t,
                  placeholder: n,
                  maxLength: d,
                  onChange: this.handleChange,
                  onFocus: this.handleFocus,
                  onBlur: this.handleBlur,
                  autoFocus: u,
                  disabled: I,
                }),
              }),
            ],
          });
        }
        constructor(e) {
          super(e),
            d(this, "_inputRef", void 0),
            d(this, "setInputRef", (e) => {
              this._inputRef = e;
            }),
            d(this, "handleChange", (e) => {
              let { onChange: t } = this.props;
              t(e.currentTarget.value);
            }),
            d(this, "handleFocus", () => {
              this.setState({ focused: !0 });
            }),
            d(this, "handleBlur", () => {
              this.setState({ focused: !1 });
            }),
            d(this, "handleFocusInput", () => {
              null != this._inputRef && this._inputRef.focus();
            });
          let { autoFocus: t } = this.props;
          this.state = { focused: null != t && t };
        }
      }
      t.Z = u;
    },
    577330: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return r;
        },
      });
      var s = n(735250);
      n(470079);
      var a = n(481060),
        i = n(463781);
      function r() {
        return (0, s.jsx)("div", {
          className: i.centerContainer,
          children: (0, s.jsx)(a.Spinner, {
            type: a.Spinner.Type.SPINNING_CIRCLE,
          }),
        });
      }
    },
    874993: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return R;
        },
      }),
        n(47120),
        n(536091);
      var s = n(735250),
        a = n(470079),
        i = n(442837),
        r = n(692547),
        l = n(481060),
        o = n(999382),
        c = n(279542),
        d = n(823379),
        u = n(63063),
        _ = n(426563),
        I = n(727072),
        E = n(85960),
        T = n(577330),
        m = n(65912),
        N = n(51248),
        S = n(546513),
        g = n(572456),
        h = n(273504),
        C = n(981631),
        x = n(689938),
        p = n(603211);
      function R(e) {
        var t, n;
        let { guildId: R, setPreventNavigation: L = () => {} } = e,
          { editingRule: f, setEditingRule: O } = (0, m.V)(),
          { guild: A, subsection: M } = (0, i.cj)([o.Z], () => o.Z.getProps()),
          D =
            null !==
              (n =
                null !== (t = null == A ? void 0 : A.id) && void 0 !== t
                  ? t
                  : R) && void 0 !== n
              ? n
              : C.lds,
          v = null != f,
          [j] = (0, I.RD)(D),
          { rulesByTriggerType: Z } = (0, I.pH)(D),
          b = {
            [E.vh.MEMBERS]:
              x.Z.Messages.GUILD_SETTINGS_AUTOMOD_MEMBER_CATEGORY_TITLE,
            [E.vh.CONTENT]:
              x.Z.Messages.GUILD_SETTINGS_AUTOMOD_CONTENT_CATEGORY_TITLE,
          },
          U = a.useMemo(
            () =>
              Object.values(null != Z ? Z : {})
                .flat()
                .filter(d.lm),
            [Z],
          );
        a.useEffect(() => {
          v && O(null);
        }, [D]);
        let G = a.useCallback(
            (e, t) => {
              if (null != e) {
                var n, s;
                return null !==
                  (s =
                    null ===
                      (n = U.find((t) => {
                        let { id: n } = t;
                        return n === e;
                      })) || void 0 === n
                      ? void 0
                      : n.name) && void 0 !== s
                  ? s
                  : null;
              }
              return null != t ? E.I6[t].getDefaultRuleName() : null;
            },
            [U],
          ),
          P = a.useMemo(() => {
            var e, t;
            return G(
              null !== (e = null == f ? void 0 : f.id) && void 0 !== e
                ? e
                : null,
              null !== (t = null == f ? void 0 : f.triggerType) && void 0 !== t
                ? t
                : null,
            );
          }, [G, f]);
        a.useEffect(() => {
          L(v, (0, g.af)(P));
        }, [L, v, P]);
        let B = (0, E.Z6)(D),
          y = (e) =>
            (0, s.jsx)(s.Fragment, {
              children: e.map((e) => {
                var t;
                return (0, s.jsx)(
                  S.Z,
                  {
                    guildId: D,
                    triggerType: e,
                    rules: null !== (t = Z[e]) && void 0 !== t ? t : [],
                    initWithEdit:
                      M === C.KsC.AUTOMOD_MENTION_SPAM &&
                      e === h.fX.MENTION_SPAM,
                  },
                  e,
                );
              }),
            });
        return (0, s.jsxs)(l.FormSection, {
          title: x.Z.Messages.GUILD_SETTINGS_AUTOMOD_TITLE,
          tag: "h1",
          children: [
            (0, s.jsxs)("div", {
              className: p.descriptionContainer,
              children: [
                (0, s.jsxs)(l.FormSection, {
                  tag: "h3",
                  className: p.description,
                  titleClassName: p.descriptionHeader,
                  children: [
                    (0, s.jsx)(l.Text, {
                      variant: "text-md/medium",
                      color: "header-secondary",
                      children:
                        x.Z.Messages
                          .GUILD_SETTINGS_AUTOMOD_MESSAGE_FILTER_DESCRIPTION,
                    }),
                    (0, s.jsx)(l.Text, {
                      variant: "text-sm/medium",
                      className: p.helpUrl,
                      children:
                        x.Z.Messages.GUILD_AUTOMOD_LEARN_MORE_LINK.format({
                          helpUrl: u.Z.getArticleURL(
                            C.BhN.GUILD_AUTOMOD_BLOCKED_MESSAGE,
                          ),
                        }),
                    }),
                  ],
                }),
                (0, s.jsxs)("div", {
                  className: p.descriptionAvatarContainer,
                  children: [
                    (0, s.jsx)(l.Avatar, {
                      src: (0, _.j)(),
                      size: l.AvatarSizes.SIZE_80,
                      "aria-label": x.Z.Messages.GUILD_AUTOMOD_USERNAME,
                    }),
                    (0, s.jsx)(l.TextBadge, {
                      text: (0, s.jsxs)("div", {
                        className: p.automodBadgeText,
                        children: [
                          (0, s.jsx)(l.CheckmarkLargeBoldIcon, {
                            size: "xxs",
                            color: "currentColor",
                            className: p.checkmarkIcon,
                          }),
                          (0, s.jsx)(l.Text, {
                            variant: "text-xs/bold",
                            className: p.automodText,
                            children: x.Z.Messages.GUILD_AUTOMOD_USERNAME,
                          }),
                        ],
                      }),
                      color: r.Z.unsafe_rawColors.BRAND_500.css,
                      className: p.textBadge,
                    }),
                  ],
                }),
              ],
            }),
            j
              ? (0, s.jsx)(T.Z, {})
              : Object.entries(B).map((e) => {
                  let [t, n] = e;
                  if (0 === n.length) return (0, s.jsx)(a.Fragment, {}, t);
                  let i =
                    null != b[t]
                      ? (0, s.jsx)(l.FormSection, {
                          tag: "h3",
                          className: p.categoryHeader,
                          children: (0, s.jsx)(l.Text, {
                            variant: "text-lg/normal",
                            color: "header-primary",
                            children: b[t],
                          }),
                        })
                      : null;
                  return (0, s.jsxs)(
                    "div",
                    { className: p.categoryContainer, children: [i, y(n)] },
                    t,
                  );
                }),
            null != A &&
              (0, s.jsx)(c.k0, {
                guild: A,
                withDivider: !1,
                className: p.explicitContentFilterSection,
              }),
            (0, s.jsx)(N.Z, { guildId: D, existingRules: U }),
            v && (0, s.jsx)("div", { className: p.endSpacer }),
          ],
        });
      }
    },
    51248: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return _;
        },
      });
      var s = n(735250);
      n(470079);
      var a = n(215569),
        i = n(481060),
        r = n(852860),
        l = n(236413),
        o = n(727072),
        c = n(65912),
        d = n(689938),
        u = n(540365);
      function _(e) {
        let { guildId: t, existingRules: n } = e,
          {
            cancelEditingRule: _,
            isLoading: I,
            hasChanges: E,
            editingRule: T,
            errorMessage: m,
            saveEditingRule: N,
          } = (0, c.w)(),
          { updateRule: S } = (0, o.pH)(t),
          g = null != T,
          h = g && !(0, l.Vb)(T),
          C = g || E || h,
          x = async () => {
            if (!E && !h) return _();
            null != T && !h && S(T);
            let e = n.find((e) => {
              let { id: t } = e;
              return t === (null == T ? void 0 : T.id);
            });
            try {
              let e = await N(n);
              null != e && S(e);
            } catch (t) {
              null != e && S(e);
            }
          },
          p = d.Z.Messages.CANCEL,
          R =
            !E && g
              ? d.Z.Messages.GUILD_AUTOMOD_EDIT_NO_CHANGES.format({
                  ruleName: null == T ? void 0 : T.name,
                })
              : void 0;
        return (
          null != m &&
            (R = (0, s.jsx)(i.Text, {
              variant: "text-md/normal",
              color: "text-danger",
              className: u.message,
              children: m,
            })),
          (0, s.jsx)(a.W, {
            component: "div",
            className: u.saveNoticeContainer,
            children:
              C &&
              (0, s.jsx)(i.SlideIn, {
                children: (0, s.jsx)(r.Z, {
                  submitting: I,
                  disabled: I,
                  onSave: x,
                  onReset: _,
                  onResetText: p,
                  message: R,
                }),
              }),
          })
        );
      }
    },
    683579: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return _;
        },
      });
      var s = n(735250);
      n(470079);
      var a = n(481060),
        i = n(556012),
        r = n(862085),
        l = n(769998),
        o = n(671066),
        c = n(273504),
        d = n(794078);
      function u(e) {
        let { action: t, triggerType: n, toggled: r, onToggleAction: l } = e,
          o = (0, i.c)(t.type, t, n);
        if (null == o) return null;
        let { headerText: c, descriptionText: u, icon: _ } = o;
        return (0, s.jsxs)("div", {
          className: d.actionContainer,
          children: [
            (0, s.jsx)("div", {
              className: d.actionIconContainer,
              children: (0, s.jsx)(_, {
                size: "md",
                color: "currentColor",
                className: d.actionIcon,
              }),
            }),
            (0, s.jsxs)("div", {
              className: d.actionTextContainer,
              children: [
                (0, s.jsx)(a.Heading, {
                  variant: "heading-sm/semibold",
                  children: c,
                }),
                (0, s.jsx)(a.Text, {
                  color: "interactive-normal",
                  variant: "text-xs/medium",
                  children: u,
                }),
              ],
            }),
            (0, s.jsx)("div", {
              children: (0, s.jsx)(a.Checkbox, {
                disabled: !o.isEditable,
                type: a.Checkbox.Types.INVERTED,
                value: r,
                onChange: () => l(!1),
                className: d.__invalid_actionCheckbox,
              }),
            }),
          ],
        });
      }
      function _(e) {
        let {
          action: t,
          guildId: n,
          triggerType: a,
          toggled: i,
          onToggleAction: d,
        } = e;
        switch (t.type) {
          case c.jj.FLAG_TO_CHANNEL:
            return (0, s.jsx)(o.Z, {
              action: t,
              triggerType: a,
              toggled: i,
              onToggleAction: d,
            });
          case c.jj.USER_COMMUNICATION_DISABLED:
            return (0, s.jsx)(l.Z, {
              action: t,
              guildId: n,
              triggerType: a,
              toggled: i,
              onToggleAction: d,
            });
          case c.jj.BLOCK_MESSAGE:
            return (0, s.jsx)(r.Z, {
              action: t,
              triggerType: a,
              toggled: i,
              onToggleAction: d,
            });
          default:
            return (0, s.jsx)(u, {
              action: t,
              guildId: n,
              toggled: i,
              triggerType: a,
              onToggleAction: d,
            });
        }
      }
    },
    489776: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return E;
        },
      }),
        n(47120);
      var s = n(735250),
        a = n(470079),
        i = n(526629),
        r = n(722770),
        l = n(481060),
        o = n(236413),
        c = n(85960),
        d = n(65912),
        u = n(564488),
        _ = n(689938),
        I = n(825723);
      function E(e) {
        let { guildId: t, triggerType: n } = e,
          E = a.useMemo(() => () => (0, o.ep)(t, n), [t, n]),
          [T] = a.useState(E),
          [m, N] = a.useState(!1),
          { editingRule: S, createNewEditingRule: g } = (0, d.V)(),
          { getDefaultRuleName: h } = c.I6[n],
          C = !(0, o.Vb)(S) && (null == S ? void 0 : S.triggerType) === n,
          [x, p] = a.useState(C ? S : T),
          R = (0, l.useSpring)({
            opacity: C ? 0 : 1,
            pointerEvents: C ? "none" : "all",
            config: { ...i.config.stiff, clamp: !0 },
          }),
          L = (0, l.useSpring)({
            opacity: C ? 1 : 0,
            pointerEvents: C ? "all" : "none",
            config: { ...i.config.stiff, clamp: !0 },
            onStart: () => {
              p(C ? S : T);
            },
            onRest: () => {
              p(C ? S : T), N(C);
            },
          });
        return null == S || C
          ? (0, s.jsxs)("div", {
              className: I.mainRuleContainer,
              style: { height: C ? "auto" : "60px" },
              children: [
                (0, s.jsx)(i.animated.div, {
                  className: I.animatedRuleCardContainer,
                  style: L,
                  children: (0, s.jsx)(u.Z, { rule: x, persistEdit: m }),
                }),
                (0, s.jsx)(i.animated.div, {
                  className: I.animatedNewRuleContainer,
                  style: R,
                  children: (0, s.jsxs)(l.Clickable, {
                    className: I.addAnotherRuleCardContainer,
                    onClick: () => {
                      g(t, n);
                    },
                    children: [
                      (0, s.jsx)(l.CirclePlusIcon, {
                        size: "custom",
                        width: 20,
                        height: 20,
                        color: r.Z.BLUE_345,
                        className: I.plusIcon,
                      }),
                      (0, s.jsx)(l.Text, {
                        variant: "text-md/semibold",
                        color: "text-link",
                        children:
                          _.Z.Messages.GUILD_AUTOMOD_ADD_ADDITIONAL_RULE.format(
                            { ruleName: h() },
                          ),
                      }),
                    ],
                  }),
                }),
              ],
            })
          : null;
      }
    },
    252121: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return l;
        },
      }),
        n(47120);
      var s = n(735250),
        a = n(470079),
        i = n(236413),
        r = n(564488);
      function l(e) {
        let { guildId: t, triggerType: n } = e,
          l = a.useMemo(() => () => (0, i.ep)(t, n), [t, n]),
          [o] = a.useState(l);
        return (0, s.jsx)(r.Z, { rule: o });
      }
    },
    536982: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return c;
        },
      }),
        n(47120);
      var s = n(735250),
        a = n(470079),
        i = n(481060),
        r = n(428760),
        l = n(689938),
        o = n(359540);
      function c(e) {
        let {
            onChange: t,
            initialValue: n,
            maxWordCount: c,
            collapsed: d = !1,
          } = e,
          [u, _] = a.useState(!d);
        return (0, s.jsx)(i.Collapsible, {
          isExpanded: u,
          collapsibleContent: (0, s.jsx)(r.Z, {
            onChangeText: t,
            maxWordCount: c,
            className: o.keywordTextAreaContainer,
            textAreaClassName: o.keywordTextArea,
            subtitleText: l.Z.Messages.GUILD_AUTOMOD_ALLOW_LIST_SUBTITLE,
            initialValue: n,
          }),
          className: o.collapseable,
          children: (e) => {
            let { onClick: t } = e;
            return (0, s.jsx)(i.Clickable, {
              onClick: (e) => {
                _(!u), t(e);
              },
              children: (0, s.jsxs)("div", {
                className: o.header,
                children: [
                  (0, s.jsx)(i.Heading, {
                    variant: "text-sm/medium",
                    children: l.Z.Messages.GUILD_AUTOMOD_ALLOW_LIST_TITLE,
                  }),
                  u
                    ? (0, s.jsx)(i.ChevronSmallUpIcon, {
                        size: "md",
                        color: "currentColor",
                        className: o.arrow,
                      })
                    : (0, s.jsx)(i.ChevronSmallDownIcon, {
                        size: "md",
                        color: "currentColor",
                        className: o.arrow,
                      }),
                ],
              }),
            });
          },
        });
      }
    },
    853276: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return E;
        },
      }),
        n(47120);
      var s = n(735250),
        a = n(470079),
        i = n(120356),
        r = n.n(i),
        l = n(442837),
        o = n(481060),
        c = n(393238),
        d = n(607070),
        u = n(596390),
        _ = n(396601);
      let I = a.forwardRef(function (e, t) {
        var n, i;
        let {
            value: l,
            isSelected: c,
            isEditing: d,
            forceShowErrorTooltip: u = !1,
            error: I,
          } = e,
          [E, T, m] = a.useMemo(() => {
            if (null == I) return [];
            let {
                erroringCharacterOffset: e = 0,
                erroringCharacterLength: t = l.length,
              } = null != I ? I : {},
              n = l.slice(0, e),
              s = l.slice(e, e + t);
            return [n, s, l.slice(e + t)];
          }, [l, I]);
        return null == I
          ? (0, s.jsx)("div", {
              className: r()(_.chipletValue, {
                [_.isEditing]: d,
                [_.isSelected]: c,
              }),
              ref: t,
              children: l,
            })
          : (null !== (n = null == E ? void 0 : E.length) && void 0 !== n
                ? n
                : 0) +
                (null !== (i = null == T ? void 0 : T.length) && void 0 !== i
                  ? i
                  : 0) >
              70
            ? (0, s.jsx)(o.Tooltip, {
                "aria-label": I.message,
                text: () =>
                  (0, s.jsxs)("div", {
                    "aria-label": I.message,
                    children: [
                      I.message,
                      " ",
                      (0, s.jsx)("span", {
                        className: _.errorOverflowValue,
                        children: T,
                      }),
                    ],
                  }),
                tooltipClassName: _.errorTooltip,
                color: o.Tooltip.Colors.RED,
                position: "left",
                forceOpen: u || void 0,
                children: (e) =>
                  (0, s.jsxs)("div", {
                    ref: t,
                    className: r()(_.chipletValue, {
                      [_.isEditing]: d,
                      [_.isError]: null != I && !d,
                      [_.isOverflowing]: null != I && !d,
                    }),
                    ...e,
                    children: [
                      (0, s.jsx)("span", { children: E }),
                      (0, s.jsx)("span", {
                        className: _.errorValue,
                        children: T,
                      }),
                      (0, s.jsx)("span", { children: m }),
                    ],
                  }),
              })
            : (0, s.jsxs)("div", {
                ref: t,
                className: r()(_.chipletValue, {
                  [_.isEditing]: d,
                  [_.isError]: null != I && !d,
                }),
                children: [
                  (0, s.jsx)("span", { children: E }),
                  (0, s.jsx)(o.Tooltip, {
                    text: I.message,
                    color: o.Tooltip.Colors.RED,
                    position: "top",
                    forceOpen: u || void 0,
                    children: (e) =>
                      (0, s.jsx)("span", {
                        ...e,
                        className: _.errorValue,
                        children: T,
                      }),
                  }),
                  (0, s.jsx)("span", { children: m }),
                ],
              });
      });
      function E(e) {
        let {
            value: t,
            onChange: n,
            onBlur: i,
            onFocus: E,
            onRemove: T,
            isSelected: m,
            isSelecting: N,
            error: S,
            forceShowErrorTooltip: g,
          } = e,
          h = a.useRef(null),
          C = a.useRef(null),
          [x, p] = a.useState(!1),
          { ref: R, width: L = 0 } = (0, c.Z)(x),
          { ref: f, width: O = 0 } = (0, c.Z)(x),
          A = (0, l.e7)([d.Z], () => d.Z.useReducedMotion),
          [M, D] = a.useState(g),
          v = a.useRef(null),
          j = L > O ? L : O;
        a.useEffect(() => {
          g
            ? (D(!0),
              (v.current = setTimeout(() => {
                D(!1), (v.current = null);
              }, u.I5)))
            : D(!1);
        }, [g]),
          a.useEffect(
            () => () => {
              clearTimeout(v.current);
            },
            [],
          );
        let Z = a.useCallback(
            (e) => {
              n(e.target.value);
            },
            [n],
          ),
          b = a.useCallback(
            function () {
              let e =
                arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
              if (
                (t.trim().length <= 0 && T(),
                null != h.current && null != R.current && null != C.current)
              ) {
                var n;
                h.current.scrollTo(0, 0),
                  h.current.setSelectionRange(0, 0),
                  (h.current.scrollLeft = 0),
                  (R.current.scrollLeft = 0),
                  (null === (n = C.current) || void 0 === n ? void 0 : n.ref) !=
                    null && (C.current.ref.scrollLeft = 0);
              }
              p(!1), i(e);
            },
            [t, R, i, T],
          ),
          U = a.useCallback(
            (e) => {
              let n = t.trim().length <= 0;
              u.ye.has(e.key)
                ? (e.preventDefault(), e.stopPropagation(), b(!0))
                : "Backspace" === e.key &&
                  n &&
                  (e.preventDefault(), e.stopPropagation(), b(!0));
            },
            [b, t],
          ),
          G = a.useCallback(
            (e) => {
              let t = e.metaKey || e.ctrlKey;
              E(t), t ? e.preventDefault() : p(!0), e.stopPropagation();
            },
            [E],
          ),
          P = a.useCallback(
            (e) => {
              T();
            },
            [T],
          );
        return (0, s.jsx)("div", {
          className: _.chipletFlexContainer,
          children: (0, s.jsxs)("div", {
            ref: f,
            className: r()(_.chipletContainer, {
              [_.isEditing]: x,
              [_.smallBlink]: !x && !A,
              [_.isSelected]: m,
              [_.isSelecting]: N,
              [_.isError]: null != S && !x,
            }),
            children: [
              (0, s.jsxs)(o.Clickable, {
                tag: "div",
                onBlur: () => b(!1),
                onClick: G,
                ignoreKeyPress: !0,
                onMouseEnter: () => D(!0),
                onMouseLeave: () => D(!1),
                className: r()(_.chipletContainerInner, {
                  [_.isSelecting]: N,
                  [_.isEditing]: x,
                }),
                ref: C,
                children: [
                  (0, s.jsx)("input", {
                    className: r()(_.chipletInput, {
                      [_.isEditing]: x,
                      [_.isSelecting]: N,
                    }),
                    ref: h,
                    onChange: Z,
                    onKeyDownCapture: U,
                    value: t,
                    style: {
                      width: j > 0 ? j : "calc(".concat(t.length, "ch + 10px)"),
                    },
                  }),
                  (0, s.jsx)(I, {
                    ref: R,
                    value: t,
                    isEditing: x,
                    isSelected: m,
                    error: S,
                    forceShowErrorTooltip: M || x,
                  }),
                ],
              }),
              !x &&
                (0, s.jsx)(o.Clickable, {
                  className: _.closeIconContainer,
                  onClick: P,
                  children: (0, s.jsx)(o.XSmallIcon, {
                    size: "xxs",
                    color: "currentColor",
                    className: _.closeIcon,
                  }),
                }),
            ],
          }),
        });
      }
    },
    256569: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return T;
        },
      }),
        n(47120),
        n(177593);
      var s = n(735250),
        a = n(470079),
        i = n(120356),
        r = n.n(i),
        l = n(481060),
        o = n(347469),
        c = n(853276),
        d = n(596390),
        u = n(870472),
        _ = n(89634);
      function I(e) {
        let { resizableNode: t, onResize: n, onResizeEnd: a } = e,
          i = (0, o.Z)({
            minDimension: d.tq,
            resizableDomNodeRef: t,
            onElementResize: n,
            onElementResizeEnd: a,
            orientation: o.y.VERTICAL_BOTTOM,
            throttleDuration: 16,
          });
        return (0, s.jsx)("div", { onMouseDown: i, className: _.resizeHandle });
      }
      let E = a.forwardRef(function (e, t) {
        let { children: n, onFocus: i, onBlur: r, onClick: o } = e,
          c = a.useRef(null),
          [u, E] = a.useState(d.tq);
        return (0, s.jsxs)(l.Clickable, {
          className: _.textArea,
          onFocus: i,
          onBlur: r,
          onClick: o,
          innerRef: c,
          ignoreKeyPress: !0,
          style: { minHeight: u },
          children: [
            (0, s.jsx)(l.AdvancedScroller, {
              className: _.innerScroller,
              style: { minHeight: u - 2 },
              ref: t,
              children: n,
            }),
            (0, s.jsx)(I, {
              resizableNode: c,
              onResize: E,
              onResizeEnd: (e) => {
                E(e), null == i || i();
              },
            }),
          ],
        });
      });
      function T(e) {
        var t;
        let {
            initialValue: n,
            onChangeTags: i,
            onChangeNewTagValue: o,
            tagErrors: d = {},
            placeholder: I,
            className: T,
            maxTags: m,
          } = e,
          N = a.useRef(null),
          S = a.useRef(null),
          g = a.useRef(null),
          h = (0, u.V)(n),
          {
            handlePasteEvent: C,
            handleInputChange: x,
            handleKeyDown: p,
            handleContainerKeyUp: R,
            handleRemoveTag: L,
            handleTagChangeEvent: f,
            handleSelectTag: O,
            handleUnselectTag: A,
            handleResetTagSelections: M,
            handleInputBlurEvent: D,
          } = (0, u.Q)(h, {
            scrollerRef: g,
            mainInputRef: N,
            mainContainerRef: S,
          }),
          {
            state: { value: v, tags: j, selections: Z, isSelecting: b },
          } = h,
          [U, G] = a.useState(!1),
          P = a.useCallback(() => {
            var e;
            G(!1),
              M(),
              null === (e = N.current) ||
                void 0 === e ||
                e.focus({ preventScroll: !0 });
          }, [M]);
        a.useEffect(() => {
          if (!U) i(j);
        }, [i, j, U]),
          a.useEffect(() => {
            if (!U) o(v);
          }, [o, v, U]);
        let B = a.useCallback(
            function () {
              let e =
                arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
              e && P(), G(!1);
            },
            [P],
          ),
          y = a.useCallback(
            (e) => (t) => {
              if (t) {
                var n;
                let t = Z.includes(j[e]);
                null === (n = N.current) || void 0 === n || n.focus(),
                  t
                    ? A(e)
                    : (O(e),
                      setImmediate(() => {
                        var e;
                        null === (e = N.current) || void 0 === e || e.blur(),
                          setTimeout(() => {
                            var e;
                            return null === (e = S.current) || void 0 === e
                              ? void 0
                              : e.focus();
                          }, 16);
                      }));
              } else A(e, !0), G(!0);
            },
            [O, A, Z, j],
          );
        return (0, s.jsxs)("div", {
          className: r()(_.mainContainer, T),
          ref: S,
          tabIndex: 0,
          onKeyUp: R,
          children: [
            (0, s.jsxs)(E, {
              ref: g,
              onClick: P,
              children: [
                j.map((e, t) =>
                  (0, s.jsx)(
                    c.Z,
                    {
                      value: e,
                      onChange: f(t),
                      onBlur: B,
                      onFocus: y(t),
                      onRemove: () => L(t),
                      isSelected: Z.includes(e),
                      isSelecting: b,
                      error: d[e],
                      forceShowErrorTooltip: !U && t === j.length - 1,
                    },
                    t,
                  ),
                ),
                (0, s.jsx)("input", {
                  className: r()(_.mainTextInput, {
                    [_.isEditingOtherNodes]: U,
                  }),
                  ref: N,
                  onChange: x,
                  onKeyDownCapture: p,
                  onPaste: C,
                  onBlur: D,
                  placeholder: 0 === j.length ? I : void 0,
                  value: v,
                }),
              ],
            }),
            null != m &&
              (0, s.jsxs)(l.Text, {
                variant: "text-xs/normal",
                color: "text-muted",
                className: _.maxTags,
                children: [
                  null !== (t = null == j ? void 0 : j.length) && void 0 !== t
                    ? t
                    : 0,
                  "/",
                  m,
                ],
              }),
          ],
        });
      }
    },
    596390: function (e, t, n) {
      "use strict";
      n.d(t, {
        Bd: function () {
          return a;
        },
        I5: function () {
          return i;
        },
        tq: function () {
          return r;
        },
        uz: function () {
          return l;
        },
        ye: function () {
          return s;
        },
      }),
        n(47120);
      let s = new Set(["Enter", "Tab"]),
        a = new Set(["z", "y"]),
        i = 5e3,
        r = 100,
        l = /[\n\t\r\f\v\x10]/;
    },
    285318: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return d;
        },
      }),
        n(47120);
      var s = n(735250),
        a = n(470079),
        i = n(481060),
        r = n(273504),
        l = n(689938),
        o = n(357044);
      function c(e) {
        let { preset: t, toggled: n, onToggle: a } = e,
          { headerText: c, subtitleText: d } = (function (e) {
            let t = null,
              n = null;
            switch (e) {
              case r.Ux.PROFANITY:
                (t =
                  l.Z.Messages
                    .GUILD_AUTOMOD_DEFAULT_KEYWORD_LIST_PROFANITY_HEADER),
                  (n = (0, s.jsx)(s.Fragment, {
                    children:
                      l.Z.Messages
                        .GUILD_AUTOMOD_DEFAULT_KEYWORD_LIST_PROFANITY_SUBTITLE,
                  }));
                break;
              case r.Ux.SEXUAL_CONTENT:
                (t =
                  l.Z.Messages
                    .GUILD_AUTOMOD_DEFAULT_KEYWORD_LIST_SEXUAL_CONTENT_HEADER),
                  (n = (0, s.jsx)(s.Fragment, {
                    children:
                      l.Z.Messages
                        .GUILD_AUTOMOD_DEFAULT_KEYWORD_LIST_SEXUAL_CONTENT_SUBTITLE,
                  }));
                break;
              case r.Ux.SLURS:
                (t =
                  l.Z.Messages.GUILD_AUTOMOD_DEFAULT_KEYWORD_LIST_SLURS_HEADER),
                  (n = (0, s.jsx)(s.Fragment, {
                    children:
                      l.Z.Messages
                        .GUILD_AUTOMOD_DEFAULT_KEYWORD_LIST_SLURS_SUBTITLE,
                  }));
                break;
              default:
                (t = "Error"), (n = "Unrecognized list");
            }
            return { headerText: t, subtitleText: n };
          })(t);
        return (0, s.jsxs)("div", {
          className: o.keywordListContainer,
          children: [
            (0, s.jsxs)("div", {
              className: o.keywordListTextContainer,
              children: [
                (0, s.jsx)(i.Heading, {
                  variant: "heading-sm/semibold",
                  children: c,
                }),
                (0, s.jsx)(i.Text, {
                  color: "interactive-normal",
                  variant: "text-xs/medium",
                  children: d,
                }),
              ],
            }),
            (0, s.jsx)(i.Checkbox, {
              className: o.toggle,
              type: i.Checkbox.Types.INVERTED,
              value: n,
              onChange: () => a(t),
            }),
          ],
        });
      }
      function d(e) {
        var t;
        let { rule: n, onChangeRule: i } = e,
          [l, o] = a.useState(
            new Set(
              null == n
                ? void 0
                : null === (t = n.triggerMetadata) || void 0 === t
                  ? void 0
                  : t.presets,
            ),
          ),
          d = a.useMemo(
            () => (e) => {
              i({
                ...n,
                triggerMetadata: { ...n.triggerMetadata, presets: e },
              });
            },
            [i, n],
          ),
          u = (e) => {
            let t = new Set(l);
            t.has(e) ? t.delete(e) : t.add(e), o(t), d(Array.from(t));
          };
        return (0, s.jsxs)("div", {
          children: [
            (0, s.jsx)(c, {
              preset: r.Ux.PROFANITY,
              toggled: l.has(r.Ux.PROFANITY),
              onToggle: u,
            }),
            (0, s.jsx)(c, {
              preset: r.Ux.SLURS,
              toggled: l.has(r.Ux.SLURS),
              onToggle: u,
            }),
            (0, s.jsx)(c, {
              preset: r.Ux.SEXUAL_CONTENT,
              toggled: l.has(r.Ux.SEXUAL_CONTENT),
              onToggle: u,
            }),
          ],
        });
      }
    },
    961926: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return E;
        },
      });
      var s = n(735250),
        a = n(470079),
        i = n(536982),
        r = n(285318),
        l = n(456677),
        o = n(55889),
        c = n(300453),
        d = n(620436),
        u = n(273504),
        _ = n(689938),
        I = n(739864);
      function E(e) {
        var t, n, E;
        let { rule: T, onChangeRule: m } = e,
          N = a.useCallback(
            (e) => {
              m({
                ...T,
                triggerMetadata: { ...T.triggerMetadata, allowList: e },
              });
            },
            [m, T],
          );
        return (0, s.jsx)(s.Fragment, {
          children: (0, s.jsxs)("div", {
            className: I.cardContentsContainer,
            children: [
              (0, s.jsxs)(c.Z, {
                step: 1,
                header:
                  _.Z.Messages
                    .GUILD_AUTOMOD_DEFAULT_KEYWORD_LIST_TRIGGER_DESCRIPTION,
                children: [
                  (0, s.jsx)(r.Z, { rule: T, onChangeRule: m }),
                  (0, s.jsx)(i.Z, {
                    onChange: N,
                    initialValue:
                      null === (t = T.triggerMetadata) || void 0 === t
                        ? void 0
                        : t.allowList,
                    maxWordCount: u.I3,
                    collapsed:
                      (null === (n = T.triggerMetadata) || void 0 === n
                        ? void 0
                        : n.allowList) == null ||
                      (null === (E = T.triggerMetadata) || void 0 === E
                        ? void 0
                        : E.allowList.length) === 0,
                  }),
                ],
              }),
              (0, s.jsx)(d.Z, { type: d.Z.Type.ARROW_DOWN }),
              (0, s.jsx)(c.Z, {
                step: 2,
                header: _.Z.Messages.GUILD_AUTOMOD_ACTIONS_HEADER,
                children: (0, s.jsx)(l.Z, { rule: T, onChangeRule: m }),
              }),
              (0, s.jsx)(d.Z, { type: d.Z.Type.CROSS }),
              (0, s.jsx)(c.Z, {
                step: 3,
                header: _.Z.Messages.GUILD_AUTOMOD_EXEMPTION_HEADER,
                children: (0, s.jsx)(o.Z, { rule: T, onChangeRule: m }),
              }),
            ],
          }),
        });
      }
    },
    154502: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return l;
        },
      });
      var s = n(735250);
      n(470079);
      var a = n(481060),
        i = n(556012),
        r = n(561240);
      function l(e) {
        var t;
        let { action: n, actionType: l, triggerType: o } = e,
          c = (0, i.c)(
            null !== (t = null == n ? void 0 : n.type) && void 0 !== t ? t : l,
            n,
            o,
          );
        if (null == c) return null;
        let { headerText: d, helperText: u, icon: _ } = c;
        return (0, s.jsxs)("div", {
          className: r.actionContainer,
          children: [
            (0, s.jsx)("div", {
              className: r.actionIconContainer,
              children: (0, s.jsx)(_, {
                size: "custom",
                color: "currentColor",
                width: 14,
                height: 14,
                className: r.actionIcon,
              }),
            }),
            (0, s.jsx)("div", {
              className: r.actionTextContainer,
              children: (0, s.jsxs)(a.Text, {
                className: r.actionTextHeader,
                variant: "text-xs/medium",
                color: "interactive-normal",
                children: [
                  d,
                  null != u &&
                    (0, s.jsx)(a.Text, {
                      className: r.actionTextHelper,
                      variant: "text-xs/medium",
                      color: "text-muted",
                      tag: "span",
                      children: u,
                    }),
                ],
              }),
            }),
          ],
        });
      }
    },
    862085: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return o;
        },
      });
      var s = n(735250);
      n(470079);
      var a = n(481060),
        i = n(556012),
        r = n(689938),
        l = n(794078);
      function o(e) {
        let { action: t, triggerType: n, toggled: o, onToggleAction: c } = e,
          d = (e) => () => c(e),
          u = (0, i.c)(t.type, t, n);
        if (null == u) return null;
        let { headerText: _, descriptionText: I, icon: E } = u;
        return (0, s.jsxs)("div", {
          className: l.actionContainer,
          children: [
            (0, s.jsx)("div", {
              className: l.actionIconContainer,
              children: (0, s.jsx)(E, {
                size: "custom",
                color: "currentColor",
                className: l.actionIcon,
              }),
            }),
            (0, s.jsxs)("div", {
              className: l.actionTextContainer,
              children: [
                (0, s.jsx)(a.Heading, {
                  variant: "heading-sm/semibold",
                  children: _,
                }),
                (0, s.jsx)(a.Text, {
                  color: "interactive-normal",
                  variant: "text-xs/medium",
                  children: I,
                }),
                o
                  ? (0, s.jsxs)(a.Text, {
                      color: "text-muted",
                      variant: "text-xs/medium",
                      children: [
                        r.Z.Messages
                          .GUILD_AUTOMOD_ACTIONS_BLOCK_MESSAGE_CUSTOM_MESSAGE_HELPER,
                        (0, s.jsx)(a.Clickable, {
                          onClick: d(!0),
                          className: l.editChannel,
                          tag: "span",
                          role: "link",
                          children:
                            r.Z.Messages
                              .GUILD_AUTOMOD_ACTIONS_BLOCK_MESSAGE_CUSTOM_MESSAGE_CTA,
                        }),
                      ],
                    })
                  : null,
              ],
            }),
            (0, s.jsx)("div", {
              children: (0, s.jsx)(a.Checkbox, {
                type: a.Checkbox.Types.INVERTED,
                value: o,
                onChange: d(!1),
                className: l.__invalid_actionCheckbox,
              }),
            }),
          ],
        });
      }
    },
    769998: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return E;
        },
      });
      var s = n(735250);
      n(470079);
      var a = n(442837),
        i = n(481060),
        r = n(430824),
        l = n(496675),
        o = n(556012),
        c = n(273504),
        d = n(981631),
        u = n(590433),
        _ = n(689938),
        I = n(794078);
      function E(e) {
        var t;
        let {
            action: n,
            triggerType: E,
            guildId: T,
            toggled: m,
            onToggleAction: N,
          } = e,
          S = (e) => () => N(e),
          g = (0, o.c)(n.type, n, E),
          h =
            null === (t = n.metadata) || void 0 === t
              ? void 0
              : t.durationSeconds,
          C = null != h ? (0, u.L9)(h) : null,
          x = (0, a.e7)(
            [l.Z, r.Z],
            () => l.Z.can(d.Plq.MODERATE_MEMBERS, r.Z.getGuild(T)),
            [T],
          );
        if (null == g) return null;
        let { headerText: p, descriptionText: R, icon: L } = g;
        return (0, s.jsxs)("div", {
          className: I.actionContainer,
          children: [
            (0, s.jsx)("div", {
              className: I.actionIconContainer,
              children: (0, s.jsx)(L, {
                size: "md",
                color: "currentColor",
                className: I.actionIcon,
              }),
            }),
            (0, s.jsxs)("div", {
              className: I.actionTextContainer,
              children: [
                (0, s.jsx)(i.Heading, {
                  variant: "heading-sm/semibold",
                  children: p,
                }),
                (0, s.jsx)(i.Text, {
                  color: "interactive-normal",
                  variant: "text-xs/medium",
                  children: R,
                }),
                m &&
                  (0, s.jsxs)(i.Text, {
                    color: "interactive-normal",
                    variant: "text-xs/medium",
                    children: [
                      (function (e, t) {
                        if (null === t) return null;
                        if (e === c.fX.MENTION_SPAM)
                          return _.Z.Messages.GUILD_AUTOMOD_ACTIONS_TIMEOUT_EDIT_HELPER_MENTION_SPAM.format(
                            { friendlyDurationString: t },
                          );
                        return _.Z.Messages.GUILD_AUTOMOD_ACTIONS_TIMEOUT_EDIT_HELPER.format(
                          { friendlyDurationString: t },
                        );
                      })(E, C),
                      x &&
                        (0, s.jsx)(i.Clickable, {
                          onClick: S(!0),
                          className: I.editChannel,
                          tag: "span",
                          role: "link",
                          children:
                            _.Z.Messages
                              .GUILD_AUTOMOD_ACTIONS_TIMEOUT_UPDATE_DURATION,
                        }),
                    ],
                  }),
              ],
            }),
            (0, s.jsx)(i.Tooltip, {
              text: _.Z.Messages.GUILD_AUTOMOD_MISSING_TIMEOUT_PERMISSIONS.format(),
              "aria-label":
                _.Z.Messages.GUILD_AUTOMOD_MISSING_TIMEOUT_PERMISSIONS.plainFormat(),
              shouldShow: !x,
              children: (e) =>
                (0, s.jsx)("div", {
                  ...e,
                  children: (0, s.jsx)(i.Checkbox, {
                    type: i.Checkbox.Types.INVERTED,
                    value: m,
                    onChange: S(!1),
                    disabled: !x,
                    className: I.__invalid_actionCheckbox,
                  }),
                }),
            }),
          ],
        });
      }
    },
    671066: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return I;
        },
      });
      var s = n(735250);
      n(470079);
      var a = n(442837),
        i = n(481060),
        r = n(933557),
        l = n(592125),
        o = n(699516),
        c = n(594174),
        d = n(556012),
        u = n(689938),
        _ = n(794078);
      function I(e) {
        var t;
        let { action: n, triggerType: I, toggled: E, onToggleAction: T } = e,
          m = (e) => () => T(e),
          N = (0, d.c)(n.type, n, I),
          S = null === (t = n.metadata) || void 0 === t ? void 0 : t.channelId,
          g = (0, a.e7)(
            [c.default, o.Z, l.Z],
            () => {
              let e = l.Z.getChannel(S);
              return null == e ? null : (0, r.F6)(e, c.default, o.Z);
            },
            [S],
          );
        if (null == N) return null;
        let { headerText: h, descriptionText: C, icon: x } = N;
        return (0, s.jsxs)("div", {
          className: _.actionContainer,
          children: [
            (0, s.jsx)("div", {
              className: _.actionIconContainer,
              children: (0, s.jsx)(x, {
                size: "md",
                color: "currentColor",
                className: _.actionIcon,
              }),
            }),
            (0, s.jsxs)("div", {
              className: _.actionTextContainer,
              children: [
                (0, s.jsx)(i.Heading, {
                  variant: "heading-sm/semibold",
                  children: h,
                }),
                (0, s.jsx)(i.Text, {
                  color: "interactive-normal",
                  variant: "text-xs/medium",
                  children: C,
                }),
                E &&
                  (0, s.jsxs)(i.Text, {
                    color: "text-muted",
                    variant: "text-xs/medium",
                    children: [
                      null != g &&
                        u.Z.Messages.GUILD_AUTOMOD_ACTIONS_FLAG_TO_CHANNEL_EDIT_HELPER.format(
                          { channelName: g },
                        ),
                      (0, s.jsx)(i.Clickable, {
                        onClick: m(!0),
                        className: _.editChannel,
                        tag: "span",
                        role: "link",
                        children: u.Z.Messages.EDIT_CHANNEL,
                      }),
                    ],
                  }),
              ],
            }),
            (0, s.jsx)("div", {
              children: (0, s.jsx)(i.Checkbox, {
                type: i.Checkbox.Types.INVERTED,
                value: E,
                onChange: m(!1),
                className: _.__invalid_actionCheckbox,
              }),
            }),
          ],
        });
      }
    },
    456677: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return c;
        },
      }),
        n(47120);
      var s = n(735250),
        a = n(470079),
        i = n(866830),
        r = n(85960),
        l = n(226192),
        o = n(683579);
      function c(e) {
        let { rule: t, onChangeRule: n } = e,
          c = a.useMemo(() => (0, r.V9)(t.triggerType), [t.triggerType]),
          d = l.km(t.guildId),
          u = a.useMemo(() => (0, i.U5)(), []),
          _ = (e, s) => {
            if (null == s) return;
            let a = t.actions.some((e) => e.type === s.type),
              i = [...t.actions, s];
            if (a) {
              let n = t.actions.filter((e) => e.type !== s.type);
              i = e ? [...n, s] : n;
            }
            n({ ...t, actions: i });
          },
          I = (e) => async (n) => {
            let s = t.actions.find((t) => t.type === e),
              a = null != s,
              i = u[e],
              r = n ? s : i;
            if (null != r && (!a || n)) {
              let n = d[e];
              null != n ? _(!0, await n(t, r)) : _(!0, r);
            } else _(!1, a ? s : i);
          };
        return (0, s.jsx)(s.Fragment, {
          children: c.map((e) => {
            let n = t.actions.find((t) => t.type === e);
            return (0, s.jsx)(
              o.Z,
              {
                guildId: t.guildId,
                triggerType: t.triggerType,
                action: null != n ? n : u[e],
                toggled: null != n,
                onToggleAction: I(e),
              },
              e,
            );
          }),
        });
      }
    },
    59192: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return d;
        },
      });
      var s = n(735250);
      n(470079);
      var a = n(236413),
        i = n(961926),
        r = n(314224),
        l = n(849715),
        o = n(591026),
        c = n(813922);
      function d(e) {
        let { rule: t, isLoading: n, onChangeRule: d } = e;
        return null == t
          ? null
          : (0, a.DO)(t)
            ? (0, s.jsx)(r.Z, { rule: t, isLoading: n, onChangeRule: d })
            : (0, a.vo)(t)
              ? (0, s.jsx)(l.Z, { rule: t, isLoading: n, onChangeRule: d })
              : (0, a.Fn)(t)
                ? (0, s.jsx)(i.Z, { rule: t, isLoading: n, onChangeRule: d })
                : (0, a.nC)(t)
                  ? (0, s.jsx)(o.Z, { rule: t, isLoading: n, onChangeRule: d })
                  : (0, a.Jq)(t)
                    ? (0, s.jsx)(c.Z, {
                        rule: t,
                        isLoading: n,
                        onChangeRule: d,
                      })
                    : null;
      }
    },
    314224: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return T;
        },
      });
      var s = n(735250),
        a = n(470079),
        i = n(536982),
        r = n(456677),
        l = n(951665),
        o = n(428760),
        c = n(55889),
        d = n(300453),
        u = n(620436),
        _ = n(273504),
        I = n(689938),
        E = n(739864);
      function T(e) {
        var t, n, T, m, N, S;
        let { rule: g, onChangeRule: h } = e,
          C = a.useCallback(
            (e) => {
              h({
                ...g,
                triggerMetadata: { ...g.triggerMetadata, keywordFilter: e },
              });
            },
            [h, g],
          ),
          x = a.useCallback(
            (e) => {
              h({
                ...g,
                triggerMetadata: { ...g.triggerMetadata, allowList: e },
              });
            },
            [h, g],
          );
        return (0, s.jsx)(s.Fragment, {
          children: (0, s.jsxs)("div", {
            className: E.cardContentsContainer,
            children: [
              (0, s.jsxs)(d.Z, {
                step: 1,
                header:
                  I.Z.Messages.GUILD_AUTOMOD_KEYWORD_FILTER_TRIGGER_HEADER,
                children: [
                  (0, s.jsx)(o.Z, {
                    onChangeText: C,
                    maxWordCount: _.RH,
                    initialValue:
                      null === (t = g.triggerMetadata) || void 0 === t
                        ? void 0
                        : t.keywordFilter,
                  }),
                  (0, s.jsx)(l.Z, {
                    rule: g,
                    onChangeRule: h,
                    collapsed:
                      (null == g
                        ? void 0
                        : null === (n = g.triggerMetadata) || void 0 === n
                          ? void 0
                          : n.regexPatterns) == null ||
                      (null == g
                        ? void 0
                        : null === (T = g.triggerMetadata) || void 0 === T
                          ? void 0
                          : T.regexPatterns.length) === 0,
                  }),
                  (0, s.jsx)(i.Z, {
                    onChange: x,
                    initialValue:
                      null === (m = g.triggerMetadata) || void 0 === m
                        ? void 0
                        : m.allowList,
                    maxWordCount: _.n4,
                    collapsed:
                      (null === (N = g.triggerMetadata) || void 0 === N
                        ? void 0
                        : N.allowList) == null ||
                      (null === (S = g.triggerMetadata) || void 0 === S
                        ? void 0
                        : S.allowList.length) === 0,
                  }),
                ],
              }),
              (0, s.jsx)(u.Z, { type: u.Z.Type.ARROW_DOWN }),
              (0, s.jsx)(d.Z, {
                step: 2,
                header: I.Z.Messages.GUILD_AUTOMOD_ACTIONS_HEADER,
                children: (0, s.jsx)(r.Z, { rule: g, onChangeRule: h }),
              }),
              (0, s.jsx)(u.Z, { type: u.Z.Type.CROSS }),
              (0, s.jsx)(d.Z, {
                step: 3,
                header: I.Z.Messages.GUILD_AUTOMOD_EXEMPTION_HEADER,
                children: (0, s.jsx)(c.Z, { rule: g, onChangeRule: h }),
              }),
            ],
          }),
        });
      }
    },
    951665: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return d;
        },
      }),
        n(47120);
      var s = n(735250),
        a = n(470079),
        i = n(481060),
        r = n(457414),
        l = n(311173),
        o = n(689938),
        c = n(343189);
      function d(e) {
        var t;
        let { rule: n, onChangeRule: d, collapsed: u = !1 } = e,
          [_, I] = a.useState(!u),
          E = a.useCallback(() => {
            I(!_);
          }, [_, I]),
          T = a.useCallback(
            (e) => {
              d({
                ...n,
                triggerMetadata: { ...n.triggerMetadata, regexPatterns: e },
              });
            },
            [d, n],
          );
        return (0, r.S)(n.triggerType)
          ? (0, s.jsx)(i.Collapsible, {
              isExpanded: _,
              collapsibleContent: (0, s.jsx)(l.Z, {
                rule: n,
                onChangeText: T,
                className: c.textAreaContainer,
                initialValue:
                  null === (t = n.triggerMetadata) || void 0 === t
                    ? void 0
                    : t.regexPatterns,
              }),
              className: c.collapseable,
              children: (e) => {
                let { onClick: t } = e;
                return (0, s.jsx)(i.Clickable, {
                  onClick: (e) => {
                    E(), t(e);
                  },
                  children: (0, s.jsxs)("div", {
                    className: c.header,
                    children: [
                      (0, s.jsx)(i.Heading, {
                        variant: "text-sm/medium",
                        children:
                          o.Z.Messages.GUILD_AUTOMOD_REGEX_TEXTAREA_TITLE,
                      }),
                      _
                        ? (0, s.jsx)(i.ChevronSmallUpIcon, {
                            size: "md",
                            color: "currentColor",
                            className: c.arrow,
                          })
                        : (0, s.jsx)(i.ChevronSmallDownIcon, {
                            size: "md",
                            color: "currentColor",
                            className: c.arrow,
                          }),
                    ],
                  }),
                });
              },
            })
          : null;
      }
    },
    311173: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return N;
        },
      }),
        n(47120),
        n(724458);
      var s = n(735250),
        a = n(470079),
        i = n(120356),
        r = n.n(i),
        l = n(481060),
        o = n(63063),
        c = n(256569),
        d = n(858457),
        u = n(273504),
        _ = n(981631),
        I = n(689938),
        E = n(301738);
      let T = o.Z.getArticleURL(_.BhN.GUILD_AUTOMOD_REGEX);
      function m(e) {
        let { hasErrors: t, text: n, errorText: a } = e;
        return t
          ? (0, s.jsx)("div", {
              className: r()(E.subtext),
              children: (0, s.jsx)(l.Text, {
                className: r()(E.errorSpan),
                variant: "text-xs/medium",
                color: "text-danger",
                children:
                  null != a
                    ? a
                    : I.Z.Messages.GUILD_AUTOMOD_REGEX_ERROR_HELP.format({
                        helpArticle: T,
                      }),
              }),
            })
          : (0, s.jsx)(l.Text, {
              className: E.subtext,
              variant: "text-xs/medium",
              color: "text-muted",
              children: n,
            });
      }
      function N(e) {
        var t, n;
        let { rule: i, onChangeText: l, className: o } = e,
          {
            patterns: _,
            valueError: N,
            errors: S,
            validatePatternsChanged: g,
            validateEditingValueChanged: h,
          } = (0, d.Z)(i, l),
          [C] = a.useState(() => ({
            tags: _,
            value: "",
            selections: [],
            isSelecting: !1,
          })),
          x = a.useMemo(
            () =>
              S.reduce((e, t) => {
                let {
                  pattern: n,
                  message: s,
                  description: a,
                  erroringCharacterLength: i = n.length,
                  erroringCharacterOffset: r = 0,
                } = t;
                return null == _.find((e) => e === n)
                  ? e
                  : ((e[n] = {
                      value: n,
                      message: null != a ? a : s,
                      erroringCharacterLength: i,
                      erroringCharacterOffset: r,
                    }),
                    e);
              }, {}),
            [S, _],
          ),
          p = a.useCallback(
            (e) => {
              g(e, _);
            },
            [g, _],
          ),
          R = a.useCallback(
            (e) => {
              h(e);
            },
            [h],
          );
        return (0, s.jsxs)("div", {
          className: r()(E.keywordsContainer, o),
          children: [
            (0, s.jsx)(c.Z, {
              placeholder: "^b(a|@)d$\nw(o|0)rd(s|$)",
              initialValue: C,
              onChangeTags: p,
              onChangeNewTagValue: R,
              tagErrors: x,
              maxTags: u.VW,
            }),
            (0, s.jsx)(m, {
              text: I.Z.Messages.GUILD_AUTOMOD_REGEX_SUBTEXT.format({
                helpArticle: T,
              }),
              hasErrors: S.length > 0 || null != N,
              errorText:
                null !==
                  (n =
                    null ===
                      (t = S.find((e) => {
                        let { pattern: t } = e;
                        return t === d.r;
                      })) || void 0 === t
                      ? void 0
                      : t.message) && void 0 !== n
                  ? n
                  : null == N
                    ? void 0
                    : N.message,
            }),
          ],
        });
      }
    },
    428760: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return u;
        },
      });
      var s = n(735250),
        a = n(470079),
        i = n(120356),
        r = n.n(i),
        l = n(481060),
        o = n(730671),
        c = n(689938),
        d = n(107636);
      function u(e) {
        let {
            onChangeText: t,
            maxWordCount: n,
            className: i,
            textAreaClassName: u,
            subtitleText: _,
            initialValue: I,
          } = e,
          E = a.useMemo(() => (null != I ? I : []), [I]),
          { value: T, onChange: m, errorMessage: N } = (0, o.Z)(t, I, n);
        return (0, s.jsxs)(s.Fragment, {
          children: [
            (0, s.jsxs)("div", {
              className: r()(d.keywordsContainer, i),
              children: [
                (0, s.jsx)(l.TextAreaAutosize, {
                  className: r()(d.keywordsTextArea, u),
                  value: T,
                  onChange: m,
                  placeholder: c.Z.Messages.GUILD_AUTOMOD_KEYWORDS_PLACEHOLDER,
                }),
                (0, s.jsx)(l.Text, {
                  className: d.keywordsCounter,
                  variant: "text-xs/normal",
                  color: "text-muted",
                  children: "".concat(E.length, " / ").concat(n),
                }),
              ],
            }),
            null != N
              ? (0, s.jsx)(l.Text, {
                  className: r()(d.paddingTop, d.errorText),
                  variant: "text-xs/medium",
                  color: "text-danger",
                  children: N,
                })
              : (0, s.jsx)(l.Text, {
                  className: d.paddingTop,
                  variant: "text-xs/normal",
                  color: "header-secondary",
                  children:
                    null != _
                      ? _
                      : c.Z.Messages.GUILD_AUTOMOD_KEYWORD_ENTRY_HINT,
                }),
          ],
        });
      }
    },
    849715: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return d;
        },
      });
      var s = n(735250);
      n(470079);
      var a = n(456677),
        i = n(55889),
        r = n(300453),
        l = n(620436),
        o = n(689938),
        c = n(739864);
      function d(e) {
        let { rule: t, onChangeRule: n } = e;
        return (0, s.jsx)(s.Fragment, {
          children: (0, s.jsxs)("div", {
            className: c.cardContentsContainer,
            children: [
              (0, s.jsx)(r.Z, {
                step: 1,
                header:
                  o.Z.Messages.GUILD_AUTOMOD_ML_SPAM_FILTER_TRIGGER_HEADER,
              }),
              (0, s.jsx)(l.Z, { type: l.Z.Type.ARROW_DOWN }),
              (0, s.jsx)(r.Z, {
                step: 2,
                header: o.Z.Messages.GUILD_AUTOMOD_ACTIONS_HEADER,
                children: (0, s.jsx)(a.Z, { rule: t, onChangeRule: n }),
              }),
              (0, s.jsx)(l.Z, { type: l.Z.Type.CROSS }),
              (0, s.jsx)(r.Z, {
                step: 3,
                header: o.Z.Messages.GUILD_AUTOMOD_EXEMPTION_HEADER,
                children: (0, s.jsx)(i.Z, { rule: t, onChangeRule: n }),
              }),
            ],
          }),
        });
      }
    },
    591026: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return E;
        },
      }),
        n(47120);
      var s = n(735250),
        a = n(470079),
        i = n(481060),
        r = n(467319),
        l = n(456677),
        o = n(55889),
        c = n(300453),
        d = n(620436),
        u = n(273504),
        _ = n(689938),
        I = n(375065);
      function E(e) {
        var t, n;
        let { rule: E, onChangeRule: T } = e,
          [m, N] = a.useState(
            null === (t = E.triggerMetadata) || void 0 === t
              ? void 0
              : t.mentionTotalLimit,
          ),
          S = (0, r.a)(E.guildId, !1);
        return (0, s.jsx)(s.Fragment, {
          children: (0, s.jsxs)("div", {
            className: I.cardContentsContainer,
            children: [
              (0, s.jsxs)(c.Z, {
                step: 1,
                header:
                  _.Z.Messages.GUILD_AUTOMOD_MENTION_SPAM_FILTER_TRIGGER_HEADER,
                children: [
                  (0, s.jsxs)("div", {
                    className: I.mentionLimitContainer,
                    children: [
                      (0, s.jsx)("div", {
                        className: I.mentionLimitIconContainer,
                        children: (0, s.jsx)(i.AtIcon, {
                          size: "md",
                          color: "currentColor",
                          className: I.mentionLimitIcon,
                        }),
                      }),
                      (0, s.jsxs)("div", {
                        className: I.mentionLimitTextContainer,
                        children: [
                          (0, s.jsx)(i.Heading, {
                            variant: "heading-sm/semibold",
                            children:
                              _.Z.Messages
                                .GUILD_AUTOMOD_MENTION_SPAM_FILTER_TRIGGER_DESCRIPTION,
                          }),
                          (0, s.jsx)(i.Text, {
                            color: "interactive-normal",
                            variant: "text-xs/medium",
                            className: I.descriptionHint,
                            children:
                              _.Z.Messages
                                .GUILD_AUTOMOD_MENTION_SPAM_FILTER_TRIGGER_DESCRIPTION_HINT,
                          }),
                        ],
                      }),
                      (0, s.jsx)("div", {
                        className: I.stepperContainer,
                        children: (0, s.jsx)(i.NumberInputStepper, {
                          value: m,
                          onChange: (e) => {
                            N(e),
                              T({
                                ...E,
                                triggerMetadata: {
                                  ...E.triggerMetadata,
                                  mentionTotalLimit: e,
                                },
                              });
                          },
                          minValue: u.Vg,
                          maxValue: u.Lg,
                          className: I.stepper,
                        }),
                      }),
                    ],
                  }),
                  S
                    ? (0, s.jsxs)("div", {
                        className: I.mentionLimitContainer,
                        children: [
                          (0, s.jsx)("div", {
                            className: I.mentionLimitIconContainer,
                            children: (0, s.jsx)(i.ShieldAtIcon, {
                              size: "md",
                              color: "currentColor",
                              className: I.mentionLimitIcon,
                            }),
                          }),
                          (0, s.jsxs)("div", {
                            className: I.mentionLimitTextContainer,
                            children: [
                              (0, s.jsx)(i.Heading, {
                                variant: "heading-sm/semibold",
                                children:
                                  _.Z.Messages
                                    .GUILD_AUTOMOD_MENTION_SPAM_FILTER_RAID_DESCRIPTION,
                              }),
                              (0, s.jsx)(i.Text, {
                                color: "interactive-normal",
                                variant: "text-xs/medium",
                                className: I.descriptionHint,
                                children:
                                  _.Z.Messages
                                    .GUILD_AUTOMOD_MENTION_SPAM_FILTER_RAID_DESCRIPTION_HINT,
                              }),
                            ],
                          }),
                          (0, s.jsx)("div", {
                            children: (0, s.jsx)(i.Checkbox, {
                              type: i.Checkbox.Types.INVERTED,
                              value:
                                null === (n = E.triggerMetadata) || void 0 === n
                                  ? void 0
                                  : n.mentionRaidProtectionEnabled,
                              onChange: (e, t) => {
                                T({
                                  ...E,
                                  triggerMetadata: {
                                    ...E.triggerMetadata,
                                    mentionRaidProtectionEnabled: t,
                                  },
                                });
                              },
                              className: I.__invalid_actionCheckbox,
                            }),
                          }),
                        ],
                      })
                    : null,
                ],
              }),
              (0, s.jsx)(d.Z, { type: d.Z.Type.ARROW_DOWN }),
              (0, s.jsx)(c.Z, {
                step: 2,
                header: _.Z.Messages.GUILD_AUTOMOD_ACTIONS_HEADER,
                children: (0, s.jsx)(l.Z, { rule: E, onChangeRule: T }),
              }),
              (0, s.jsx)(d.Z, { type: d.Z.Type.CROSS }),
              (0, s.jsx)(c.Z, {
                step: 3,
                header: _.Z.Messages.GUILD_AUTOMOD_EXEMPTION_HEADER,
                children: (0, s.jsx)(o.Z, { rule: E, onChangeRule: T }),
              }),
            ],
          }),
        });
      }
    },
    564488: function (e, t, n) {
      "use strict";
      n(47120);
      var s = n(735250),
        a = n(470079),
        i = n(236413),
        r = n(866894),
        l = n(65912),
        o = n(572456),
        c = n(59192),
        d = n(11265),
        u = n(495892);
      t.Z = a.memo(function (e) {
        let { rule: t, persistEdit: n = !1, initWithEdit: _ = !1 } = e,
          {
            hasChanges: I,
            editingRule: E,
            createNewEditingRule: T,
            setEditingRule: m,
          } = (0, l.V)(),
          { isLoading: N } = (0, l.w)(),
          [S] = a.useState(() => !(0, i.Vb)(t)),
          g = (null == E ? void 0 : E.id) === t.id || n,
          h = (0, r.U)(null == t ? void 0 : t.id),
          C = g && null != E ? E : t,
          x = a.useMemo(() => (0, o.af)(t.name), [null == t ? void 0 : t.name]),
          p = a.useCallback(() => {
            T(t.guildId, t.triggerType);
          }, [t.guildId, t.triggerType, T]),
          R = a.useCallback(
            (e) => {
              if (!N) m(e, !0);
            },
            [N, m],
          );
        a.useEffect(() => {
          _ && m(t, !0);
        }, [_, t, m]);
        let L = a.useCallback(() => {
          g
            ? !I && m(null)
            : I
              ? x(() => {
                  m(t);
                })
              : m(t);
        }, [g, I, x, t, m]);
        return (0, s.jsx)(d.Z, {
          renderHeader: (0, s.jsx)(u.Z, {
            rule: C,
            forceSetup: S && !g && !h,
            triggerType: t.triggerType,
            isEditMode: g,
            isDefaultRule: h,
            onChangeRule: R,
            onSetupRule: p,
          }),
          isStuck: g && I,
          isExpanded: g,
          onExpand: L,
          children:
            g && (0, s.jsx)(c.Z, { rule: C, isLoading: N, onChangeRule: R }),
        });
      });
    },
    55889: function (e, t, n) {
      "use strict";
      var s = n(735250),
        a = n(470079),
        i = n(481060),
        r = n(941524),
        l = n(563115),
        o = n(689938),
        c = n(419704);
      t.Z = a.memo(function (e) {
        let { rule: t, onlyRoles: n = !1, onChangeRule: a } = e,
          d = (0, s.jsx)(r.Z, {
            guildId: t.guildId,
            selectedChannelIds: t.exemptChannels,
            selectedRoleIds: t.exemptRoles,
            onChange: (e, n) => a({ ...t, exemptChannels: e, exemptRoles: n }),
            disableEveryoneRole: !0,
            includeRoleRestrictedPrivateChannels: !0,
          });
        return (
          n &&
            (d = (0, s.jsx)(l.Z, {
              guildId: t.guildId,
              selectedRoleIds: t.exemptRoles,
              onChange: (e) => a({ ...t, exemptRoles: e }),
              placeholder:
                o.Z.Messages.GUILD_AUTOMOD_EXEMPTION_SEARCH_ROLE_PLACEHOLDER,
              disableEveryoneRole: !0,
            })),
          (0, s.jsxs)(i.FormItem, {
            children: [
              d,
              (0, s.jsx)(i.Text, {
                color: "header-secondary",
                variant: "text-xs/normal",
                className: c.exemptionHint,
                children: o.Z.Messages.GUILD_AUTOMOD_EXEMPTION_HINT,
              }),
            ],
          })
        );
      });
    },
    495892: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return A;
        },
      }),
        n(724458),
        n(653041),
        n(47120);
      var s = n(735250),
        a = n(470079),
        i = n(392711),
        r = n(481060),
        l = n(239091),
        o = n(132580),
        c = n(688465),
        d = n(236413),
        u = n(727072),
        _ = n(85960),
        I = n(65912),
        E = n(457414),
        T = n(154502),
        m = n(295708),
        N = n(273504),
        S = n(689938),
        g = n(15327);
      function h(e) {
        let { rule: t, triggerType: n } = e,
          i = a.useMemo(
            () =>
              null == t
                ? (0, _.V9)(n).map((e) =>
                    (0, s.jsx)(T.Z, { actionType: e, triggerType: n }, e),
                  )
                : (0, _.V9)(n).reduce((e, a) => {
                    var i;
                    let r = t.actions.find((e) => {
                      let { type: t } = e;
                      return a === t;
                    });
                    return null == r
                      ? e
                      : (e.push(
                          (0, s.jsx)(
                            T.Z,
                            {
                              actionType: a,
                              action: r,
                              triggerType:
                                null !==
                                  (i = null == t ? void 0 : t.triggerType) &&
                                void 0 !== i
                                  ? i
                                  : n,
                            },
                            a,
                          ),
                        ),
                        e);
                  }, []),
            [t, n],
          );
        return 0 === i.length
          ? null
          : (0, s.jsx)("div", {
              className: g.actionRuleListContainer,
              children: i,
            });
      }
      let C = (e, t) => () => t({ ...e, enabled: !e.enabled }),
        x = (e) => {
          e.stopPropagation(), e.preventDefault();
        },
        p = (e) => {
          let { className: t, children: n, ...a } = e;
          return (0, s.jsx)(r.Clickable, {
            className: t,
            onClick: x,
            onMouseDown: x,
            onMouseUp: x,
            ...a,
            children: n,
          });
        };
      function R(e) {
        var t;
        let { rule: n, onChangeRule: a, onContextMenu: i } = e,
          l = C(n, a),
          o = (e) => {
            x(e), i(e);
          };
        return (0, s.jsxs)(s.Fragment, {
          children: [
            (0, s.jsx)("div", {
              className: g.ruleTextContainer,
              children: (0, s.jsx)(m.Z, { rule: n, onChangeRule: a }),
            }),
            (0, s.jsxs)(p, {
              className: g.actionContainer,
              children: [
                (0, s.jsx)(r.Switch, {
                  className: g.toggle,
                  onChange: l,
                  checked:
                    null !== (t = null == n ? void 0 : n.enabled) &&
                    void 0 !== t &&
                    t,
                }),
                (0, s.jsx)(r.Tooltip, {
                  text: S.Z.Messages.MORE,
                  position: "top",
                  "aria-label": S.Z.Messages.MORE_OPTIONS,
                  children: (e) =>
                    (0, s.jsx)(r.Clickable, {
                      ...e,
                      onClick: o,
                      className: g.menuIconButton,
                      children: (0, s.jsx)(r.MoreVerticalIcon, {
                        size: "md",
                        color: "currentColor",
                        className: g.menuIcon,
                      }),
                    }),
                }),
              ],
            }),
          ],
        });
      }
      function L(e) {
        return (0, _.r5)(e, _.vT.ALPHA)
          ? (0, s.jsx)(o.Z, { className: g.alphaBetaTag })
          : (0, _.r5)(e, _.vT.BETA)
            ? (0, s.jsx)(c.Z, { className: g.alphaBetaTag })
            : null;
      }
      function f(e) {
        let { rule: t, isDefaultRule: n, onContextMenu: l } = e,
          o = (0, E.w)(t.triggerType, t),
          { isLoading: c, saveRule: _ } = (0, I.w)(),
          { updateRule: T } = (0, u.pH)(t.guildId),
          [m, N] = a.useState(t.enabled),
          C = (0, i.throttle)(async (e, n) => {
            if ((n.preventDefault(), n.stopPropagation(), !c)) {
              let e = { ...t, enabled: !m };
              N(!m);
              let n = await _(e, []);
              if (null != n) T(n), N(n.enabled);
            }
          }, 300),
          R = (e) => {
            x(e), l(e);
          };
        if (null == o) return null;
        let {
            headerText: f,
            headerSubtext: O,
            descriptionText: A,
            icon: M,
          } = o,
          D = !(0, d.Vb)(t);
        return (0, s.jsxs)(s.Fragment, {
          children: [
            (0, s.jsx)("div", {
              className: g.ruleIconContainer,
              children: (0, s.jsx)(M, {
                size: "md",
                color: "currentColor",
                className: g.ruleIcon,
              }),
            }),
            (0, s.jsxs)("div", {
              className: g.ruleTextContainer,
              children: [
                (0, s.jsxs)(r.Heading, {
                  variant: "text-md/semibold",
                  color: "header-primary",
                  className: g.ruleTextHeaderContainer,
                  children: [
                    (0, s.jsxs)("div", {
                      className: g.ruleTextHeader,
                      children: [f, L(t.triggerType)],
                    }),
                    (0, s.jsx)(r.Text, {
                      className: g.ruleSubtextHeader,
                      variant: "text-sm/normal",
                      children: O,
                    }),
                  ],
                }),
                D &&
                  (0, s.jsx)(r.Text, {
                    className: g.ruleTextDescription,
                    variant: "text-sm/normal",
                    children: A,
                  }),
                (0, s.jsx)(h, { rule: t, triggerType: t.triggerType }),
              ],
            }),
            (0, s.jsxs)(p, {
              className: g.actionContainer,
              children: [
                (0, s.jsx)(r.Switch, {
                  className: g.toggle,
                  onChange: C,
                  checked: null != m && m,
                }),
                !n &&
                  (0, s.jsx)(r.Tooltip, {
                    text: S.Z.Messages.MORE,
                    position: "top",
                    "aria-label": S.Z.Messages.MORE_OPTIONS,
                    children: (e) =>
                      (0, s.jsx)(r.Clickable, {
                        ...e,
                        onClick: R,
                        className: g.menuIconButton,
                        children: (0, s.jsx)(r.MoreVerticalIcon, {
                          size: "md",
                          color: "currentColor",
                          className: g.menuIcon,
                        }),
                      }),
                  }),
              ],
            }),
          ],
        });
      }
      function O(e) {
        let { triggerType: t, onSetupRule: n } = e,
          i = a.useMemo(() => (0, E.w)(t), [t]);
        if (null == i) return null;
        let { headerText: l, descriptionText: o, icon: c } = i;
        return (0, s.jsxs)(s.Fragment, {
          children: [
            (0, s.jsx)("div", {
              className: g.ruleIconContainer,
              children: (0, s.jsx)(c, {
                color: "currentColor",
                size: "md",
                className: g.ruleIcon,
              }),
            }),
            (0, s.jsxs)("div", {
              className: g.ruleTextContainer,
              children: [
                (0, s.jsx)(r.Heading, {
                  className: g.ruleTextHeader,
                  variant: "text-md/semibold",
                  color: "header-primary",
                  children: (0, s.jsxs)("div", {
                    className: g.ruleTextHeader,
                    children: [l, L(t)],
                  }),
                }),
                (0, s.jsx)(r.Text, {
                  className: g.ruleTextDescription,
                  variant: "text-sm/normal",
                  children: o,
                }),
                (0, s.jsx)(h, { triggerType: t }),
              ],
            }),
            (0, s.jsx)(p, {
              className: g.actionContainer,
              children: (0, s.jsx)(r.Button, {
                size: r.Button.Sizes.SMALL,
                onClick: n,
                children:
                  t === N.fX.KEYWORD
                    ? S.Z.Messages.CREATE
                    : S.Z.Messages.GUILD_AUTOMOD_RULE_SETUP_BUTTON,
              }),
            }),
          ],
        });
      }
      function A(e) {
        let {
            rule: t,
            triggerType: a,
            isEditMode: i,
            isDefaultRule: o,
            forceSetup: c,
            onSetupRule: d,
            onChangeRule: u,
          } = e,
          _ = (e) => {
            if (null != t)
              e.preventDefault(),
                e.stopPropagation(),
                (0, l.jW)(e, async () => {
                  let { default: e } = await n
                    .e("25443")
                    .then(n.bind(n, 46577));
                  return (n) => (0, s.jsx)(e, { rule: t, ...n });
                });
          },
          I = (0, s.jsx)(O, { triggerType: a, onSetupRule: d });
        return (
          null != t &&
            !c &&
            (I = i
              ? (0, s.jsx)(R, { rule: t, onChangeRule: u, onContextMenu: _ })
              : (0, s.jsx)(f, { rule: t, isDefaultRule: o, onContextMenu: _ })),
          (0, s.jsx)(r.Clickable, {
            className: g.mainContainer,
            onContextMenu: _,
            children: I,
          })
        );
      }
    },
    295708: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return u;
        },
      }),
        n(47120);
      var s = n(735250),
        a = n(470079),
        i = n(481060),
        r = n(273504),
        l = n(981631),
        o = n(689938),
        c = n(753925),
        d = n(707524);
      function u(e) {
        let { rule: t, onChangeRule: n } = e,
          [u, _] = a.useState(t.name);
        return (0, s.jsxs)(i.FormItem, {
          children: [
            (0, s.jsx)(i.Text, {
              className: d.triggerHeader,
              variant: "text-sm/semibold",
              children: o.Z.Messages.GUILD_AUTOMOD_INPUT_FILTER_NAME,
            }),
            (0, s.jsx)(i.TextInput, {
              className: c.ruleNameInput,
              onChange: (e) => {
                _(e), n({ ...t, name: e });
              },
              onClick: (e) => e.stopPropagation(),
              onKeyPress: (e) => {
                e.which === l.yXg.SPACE && e.stopPropagation();
              },
              placeholder:
                o.Z.Messages.GUILD_AUTOMOD_INPUT_FILTER_NAME_PLACEHOLDER,
              maxLength: r.OU,
              value: u,
            }),
          ],
        });
      }
    },
    546513: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return o;
        },
      });
      var s = n(735250);
      n(470079);
      var a = n(85960),
        i = n(489776),
        r = n(252121),
        l = n(564488);
      function o(e) {
        let { guildId: t, rules: n, triggerType: o, initWithEdit: c } = e,
          { perGuildMaxCount: d } = a.I6[o],
          u = 0 === n.length,
          _ = d > n.length && !u;
        return (0, s.jsxs)(s.Fragment, {
          children: [
            u && (0, s.jsx)(r.Z, { guildId: t, triggerType: o }),
            n.map((e) => (0, s.jsx)(l.Z, { rule: e, initWithEdit: c }, e.id)),
            _ && (0, s.jsx)(i.Z, { guildId: t, triggerType: o }),
          ],
        });
      }
    },
    300453: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return r;
        },
      });
      var s = n(735250);
      n(470079);
      var a = n(481060),
        i = n(707524);
      function r(e) {
        let { step: t, header: n, children: r } = e;
        return (0, s.jsxs)("div", {
          className: i.triggerContainer,
          children: [
            (0, s.jsx)("div", {
              className: i.triggerCounterContainer,
              children: (0, s.jsx)("div", {
                className: i.stepCountIcon,
                children: (0, s.jsx)(a.Text, {
                  className: i.stepCount,
                  variant: "text-sm/bold",
                  children: t,
                }),
              }),
            }),
            (0, s.jsxs)("div", {
              className: i.triggerMainContainer,
              children: [
                (0, s.jsx)("div", {
                  className: i.__invalid_triggerHeaderContainer,
                  children: (0, s.jsx)(a.Text, {
                    className: i.triggerHeader,
                    variant: "text-sm/normal",
                    children: n,
                  }),
                }),
                null != r &&
                  (0, s.jsx)("div", {
                    className: i.triggerSettingsContainer,
                    children: r,
                  }),
              ],
            }),
          ],
        });
      }
    },
    620436: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return o;
        },
      });
      var s,
        a,
        i = n(735250);
      n(470079);
      var r = n(481060),
        l = n(750959);
      ((s = a || (a = {})).ARROW_DOWN = "arrow_down"), (s.CROSS = "cross");
      function o(e) {
        let { type: t } = e;
        return (0, i.jsx)("div", {
          className: l.dividerContainer,
          children: (0, i.jsx)("div", {
            className: l.dividerIconContainer,
            children: (function (e) {
              switch (e) {
                case "arrow_down":
                  return (0, i.jsx)(r.ArrowSmallDownIcon, {
                    size: "md",
                    color: "currentColor",
                    className: l.dividierIcon,
                  });
                case "cross":
                  return (0, i.jsx)(r.XSmallIcon, {
                    size: "md",
                    color: "currentColor",
                    className: l.dividierIcon,
                  });
                default:
                  return null;
              }
            })(t),
          }),
        });
      }
      o.Type = a;
    },
    813922: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return T;
        },
      });
      var s = n(735250),
        a = n(470079),
        i = n(536982),
        r = n(456677),
        l = n(951665),
        o = n(428760),
        c = n(55889),
        d = n(300453),
        u = n(620436),
        _ = n(273504),
        I = n(689938),
        E = n(739864);
      function T(e) {
        var t, n, T, m, N, S;
        let { rule: g, onChangeRule: h } = e,
          C = a.useCallback(
            (e) => {
              h({
                ...g,
                triggerMetadata: { ...g.triggerMetadata, keywordFilter: e },
              });
            },
            [h, g],
          ),
          x = a.useCallback(
            (e) => {
              h({
                ...g,
                triggerMetadata: { ...g.triggerMetadata, allowList: e },
              });
            },
            [h, g],
          );
        return (0, s.jsx)(s.Fragment, {
          children: (0, s.jsxs)("div", {
            className: E.cardContentsContainer,
            children: [
              (0, s.jsxs)(d.Z, {
                step: 1,
                header:
                  I.Z.Messages.GUILD_AUTOMOD_KEYWORD_FILTER_TRIGGER_HEADER,
                children: [
                  (0, s.jsx)(o.Z, {
                    onChangeText: C,
                    maxWordCount: _.RH,
                    initialValue:
                      null === (t = g.triggerMetadata) || void 0 === t
                        ? void 0
                        : t.keywordFilter,
                  }),
                  (0, s.jsx)(l.Z, {
                    rule: g,
                    onChangeRule: h,
                    collapsed:
                      (null == g
                        ? void 0
                        : null === (n = g.triggerMetadata) || void 0 === n
                          ? void 0
                          : n.regexPatterns) == null ||
                      (null == g
                        ? void 0
                        : null === (T = g.triggerMetadata) || void 0 === T
                          ? void 0
                          : T.regexPatterns.length) === 0,
                  }),
                  (0, s.jsx)(i.Z, {
                    onChange: x,
                    initialValue:
                      null === (m = g.triggerMetadata) || void 0 === m
                        ? void 0
                        : m.allowList,
                    maxWordCount: _.n4,
                    collapsed:
                      (null === (N = g.triggerMetadata) || void 0 === N
                        ? void 0
                        : N.allowList) == null ||
                      (null === (S = g.triggerMetadata) || void 0 === S
                        ? void 0
                        : S.allowList.length) === 0,
                  }),
                ],
              }),
              (0, s.jsx)(u.Z, { type: u.Z.Type.ARROW_DOWN }),
              (0, s.jsx)(d.Z, {
                step: 2,
                header: I.Z.Messages.GUILD_AUTOMOD_ACTIONS_HEADER,
                children: (0, s.jsx)(r.Z, { rule: g, onChangeRule: h }),
              }),
              (0, s.jsx)(u.Z, { type: u.Z.Type.CROSS }),
              (0, s.jsx)(d.Z, {
                step: 3,
                header: I.Z.Messages.GUILD_AUTOMOD_ROLES_EXEMPTION_HEADER,
                children: (0, s.jsx)(c.Z, {
                  rule: g,
                  onChangeRule: h,
                  onlyRoles: !0,
                }),
              }),
            ],
          }),
        });
      }
    },
    870472: function (e, t, n) {
      "use strict";
      n.d(t, {
        Q: function () {
          return c;
        },
        V: function () {
          return o;
        },
      }),
        n(47120),
        n(653041),
        n(177593);
      var s = n(470079),
        a = n(348327),
        i = n.n(a),
        r = n(699581),
        l = n(596390);
      function o(e) {
        let [t, n] = s.useState([e]),
          [a, r] = s.useState(0),
          l = s.useMemo(() => t[a], [t, a]),
          o = s.useCallback(
            (e) => {
              let s = e(l);
              if (i()(l, s)) return;
              let o = t.slice(0, a + 1);
              o.push(s), n(o), r(o.length - 1);
            },
            [a, l, t],
          ),
          c = s.useCallback(
            function () {
              let e =
                  arguments.length > 0 && void 0 !== arguments[0]
                    ? arguments[0]
                    : 1,
                n = Math.max(0, a - e);
              return r(n), t[n];
            },
            [a, t],
          );
        return {
          state: l,
          setState: o,
          goBack: c,
          goForward: s.useCallback(
            function () {
              let e =
                  arguments.length > 0 && void 0 !== arguments[0]
                    ? arguments[0]
                    : 1,
                n = Math.min(t.length - 1, a + e);
              return r(n), t[n];
            },
            [a, t],
          ),
        };
      }
      function c(e, t) {
        let { scrollerRef: n, mainInputRef: a, mainContainerRef: i } = t,
          {
            state: { value: o, tags: c, selections: d },
            setState: u,
            goBack: _,
            goForward: I,
          } = e;
        s.useLayoutEffect(() => {
          let e = (e) => (t) => {
              ("Meta" === t.key || "Control" === t.key) &&
                u((t) => ({ ...t, isSelecting: e }));
            },
            t = e(!0),
            n = e(!1);
          return (
            document.addEventListener("keydown", t),
            document.addEventListener("keyup", n),
            () => {
              document.removeEventListener("keydown", t),
                document.removeEventListener("keyup", n);
            }
          );
        }, [u]);
        let E = s.useCallback(
            (e) => {
              var t, s;
              let a = (
                null !== (s = e.clipboardData.getData("text")) && void 0 !== s
                  ? s
                  : ""
              )
                .split(l.uz)
                .map((e) => e.trim())
                .filter((e) => e.length > 0);
              if (!(a.length <= 1))
                (0, r.flushSync)(() => {
                  u((e) => {
                    let { tags: t, value: n } = e;
                    return {
                      value: n,
                      tags: [...t, ...a],
                      selections: [],
                      isSelecting: !1,
                    };
                  });
                }),
                  e.preventDefault(),
                  e.stopPropagation(),
                  null === (t = n.current) ||
                    void 0 === t ||
                    t.scrollToBottom();
            },
            [u, n],
          ),
          T = s.useCallback(
            (e) => {
              u((t) => {
                let { tags: n, value: s } = t;
                return {
                  value: s,
                  tags: [...n.filter((t, n) => n !== e)],
                  selections: [],
                  isSelecting: !1,
                };
              });
            },
            [u],
          ),
          m = s.useCallback(
            (e) => (t) => {
              u((n) => {
                let { tags: s, value: a } = n,
                  i = [...s];
                return (
                  (i[e] = t),
                  { value: a, tags: i, selections: [], isSelecting: !1 }
                );
              });
            },
            [u],
          ),
          N = s.useCallback(
            (e) => {
              u((t) => {
                let { tags: n, value: s, selections: a, isSelecting: i } = t;
                return {
                  value: s,
                  tags: n,
                  selections: [...a, n[e]],
                  isSelecting: i,
                };
              });
            },
            [u],
          ),
          S = s.useCallback(
            function (e) {
              let t =
                arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
              u((n) => {
                let { tags: s, value: a, selections: i, isSelecting: r } = n;
                return {
                  value: a,
                  tags: s,
                  selections: t ? [] : i.filter((t) => t !== s[e]),
                  isSelecting: r,
                };
              });
            },
            [u],
          ),
          g = s.useCallback(
            (e) => {
              var t;
              u((e) => {
                let { tags: t, value: n } = e;
                return { value: n, tags: t, selections: [], isSelecting: !1 };
              }),
                null != e && (e.preventDefault(), e.stopPropagation()),
                null === (t = a.current) || void 0 === t || t.focus();
            },
            [a, u],
          ),
          h = s.useCallback(
            (e) => {
              u((t) => {
                let { tags: n } = t;
                return {
                  value: e.target.value,
                  tags: n,
                  selections: [],
                  isSelecting: !1,
                };
              });
            },
            [u],
          ),
          C = s.useCallback(
            function (e) {
              let t =
                  !(arguments.length > 1) ||
                  void 0 === arguments[1] ||
                  arguments[1],
                s =
                  !(arguments.length > 2) ||
                  void 0 === arguments[2] ||
                  arguments[2];
              if (!(o.trim().length <= 0))
                (0, r.flushSync)(() => {
                  u((e) => {
                    let { tags: t } = e;
                    return {
                      value: "",
                      tags: [...t, o],
                      selections: [],
                      isSelecting: !1,
                    };
                  });
                }),
                  s && null != n.current && n.current.scrollToBottom(),
                  t && (e.preventDefault(), e.stopPropagation());
            },
            [n, u, o],
          ),
          x = s.useCallback(
            (e) => {
              let t = o.trim().length <= 0;
              if (d.length > 0) {
                var n;
                (0, r.flushSync)(() => {
                  u((e) => {
                    let { tags: t, value: n, selections: s } = e;
                    return {
                      value: n,
                      tags: t.filter((e) => !s.includes(e)),
                      selections: [],
                      isSelecting: !1,
                    };
                  });
                }),
                  null === (n = a.current) || void 0 === n || n.focus(),
                  e.preventDefault(),
                  e.stopPropagation();
              } else
                t &&
                  ((0, r.flushSync)(() => {
                    u((e) => {
                      let { tags: t } = e,
                        n = [...t],
                        s = n.pop();
                      return {
                        value: null != s ? s : "",
                        tags: [...n],
                        selections: [],
                        isSelecting: !1,
                      };
                    });
                  }),
                  e.preventDefault(),
                  e.stopPropagation());
            },
            [a, d.length, u, o],
          ),
          p = s.useCallback(
            (e) => {
              var t, n, s, i;
              let r = e.metaKey || e.ctrlKey;
              "z" === e.key && r
                ? (_().selections.length > 0
                    ? null === (t = a.current) || void 0 === t || t.blur()
                    : null === (n = a.current) || void 0 === n || n.focus(),
                  e.preventDefault(),
                  e.stopPropagation())
                : "y" === e.key &&
                  r &&
                  (I().selections.length > 0
                    ? null === (s = a.current) || void 0 === s || s.blur()
                    : null === (i = a.current) || void 0 === i || i.focus(),
                  e.preventDefault(),
                  e.stopPropagation());
            },
            [_, I, a],
          ),
          R = s.useCallback(
            (e) => {
              var t;
              let n = o.trim().length > 0,
                { selectionStart: s = 0, selectionEnd: l = 0 } =
                  null !== (t = a.current) && void 0 !== t ? t : {};
              if (0 !== c.length && (!n || !!(s !== l)))
                (0, r.flushSync)(() => {
                  u((e) => {
                    let { tags: t, value: n } = e;
                    return {
                      value: n,
                      tags: t,
                      selections: [...t],
                      isSelecting: !1,
                    };
                  });
                }),
                  setImmediate(() => {
                    var e;
                    null === (e = a.current) || void 0 === e || e.blur(),
                      setTimeout(() => {
                        var e;
                        null === (e = i.current) || void 0 === e || e.focus();
                      }, 16);
                  }),
                  e.preventDefault(),
                  e.stopPropagation();
            },
            [i, a, u, c.length, o],
          ),
          L = s.useCallback(
            (e) => {
              e.relatedTarget !== e.currentTarget && C(e, !1, !1);
            },
            [C],
          ),
          f = s.useCallback(
            (e) => {
              let t = e.metaKey || e.ctrlKey;
              if ("Meta" !== e.key)
                l.ye.has(e.key)
                  ? C(e)
                  : "Backspace" === e.key
                    ? x(e)
                    : "Escape" === e.key
                      ? g(e)
                      : "a" === e.key && t
                        ? R(e)
                        : l.Bd.has(e.key) && t && p(e);
            },
            [C, x, g, R, p],
          );
        return {
          handlePasteEvent: E,
          handleInputChange: h,
          handleKeyDown: f,
          handleContainerKeyUp: s.useCallback(
            (e) => {
              if (document.activeElement !== i.current) return;
              let t = e.metaKey || e.ctrlKey;
              "Backspace" === e.key
                ? x(e)
                : "a" === e.key && t
                  ? R(e)
                  : "Escape" === e.key
                    ? g(e)
                    : l.Bd.has(e.key) && t
                      ? p(e)
                      : "Meta" !== e.key && g(e);
            },
            [p, x, R, g, i],
          ),
          handleRemoveTag: T,
          handleTagChangeEvent: m,
          handleSelectTag: N,
          handleUnselectTag: S,
          handleResetTagSelections: g,
          handleInputBlurEvent: L,
        };
      }
    },
    730671: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return l;
        },
      }),
        n(47120);
      var s = n(470079),
        a = n(392711),
        i = n(236413),
        r = n(422303);
      function l(e) {
        let t =
            arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [],
          n = arguments.length > 2 ? arguments[2] : void 0,
          [l, o] = s.useState((0, r.se)(t)),
          { errorMessage: c, handleValidateKeywords: d } = (function (e) {
            let [t, n] = s.useState(null),
              r = s.useRef(null);
            return {
              errorMessage: t,
              handleValidateKeywords: s.useCallback(
                () =>
                  (0, a.debounce)(
                    (t) => {
                      clearTimeout(r.current),
                        (r.current = setTimeout(() => {
                          try {
                            (0, i.km)(t, e), n(null);
                          } catch (e) {
                            n(e.message);
                          }
                          clearTimeout(r.current);
                        }, 500));
                    },
                    300,
                    { leading: !0, trailing: !0 },
                  ),
                [e],
              ),
            };
          })(n),
          u = s.useCallback(
            (e) =>
              0 !== e.length && (0, r.kU)(e) ? (0, r.se)((0, r.Ac)(e)) : e,
            [],
          );
        return {
          value: l,
          errorMessage: c,
          onChange: s.useCallback(
            (t) => {
              let n = t.currentTarget.value;
              "insertFromPaste" === t.nativeEvent.inputType && (n = u(n));
              let s = (0, r.Ac)(n);
              o(n), e(s), d()(s);
            },
            [d, u, e],
          ),
        };
      }
    },
    858457: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return _;
        },
        r: function () {
          return o;
        },
      }),
        n(47120),
        n(653041);
      var s = n(470079),
        a = n(392711),
        i = n(881052),
        r = n(36459),
        l = n(689938);
      let o = "_errors",
        c = "GENERIC_REGEX_ERROR";
      async function d(e, t) {
        if (
          null == e.triggerMetadata.regexPatterns ||
          0 === e.triggerMetadata.regexPatterns.length
        ) {
          t([]);
          return;
        }
        try {
          await (0, r.qY)(e), t([]);
        } catch (r) {
          var n, s;
          let e = new i.Hx(r).errors;
          if (
            !(
              "object" == typeof (n = e) &&
              (null == n
                ? void 0
                : null === (s = n.trigger_metadata) || void 0 === s
                  ? void 0
                  : s.regex_patterns) != null
            )
          )
            return;
          let a = (function (e) {
            var t;
            let n =
              null == e
                ? void 0
                : null === (t = e.trigger_metadata) || void 0 === t
                  ? void 0
                  : t.regex_patterns;
            return null == n
              ? []
              : (function (e) {
                  let { [o]: t = [], ...n } = e,
                    s = Object.entries(n).map((e) => {
                      var t;
                      let [n, s] = e,
                        a = s[o],
                        { code: i, message: r } =
                          null !== (t = null == a ? void 0 : a[0]) &&
                          void 0 !== t
                            ? t
                            : {
                                code: c,
                                message:
                                  l.Z.Messages
                                    .GUILD_AUTOMOD_REGEX_GENERIC_SAVE_ERROR,
                              };
                      return {
                        pattern: n,
                        message: r,
                        code: i,
                        description: null == s ? void 0 : s.description,
                        erroringCharacterLength:
                          null == s ? void 0 : s.erroring_character_length,
                        erroringCharacterOffset:
                          null == s ? void 0 : s.erroring_character_offset,
                        regexErrorCode: null == s ? void 0 : s.regex_error_code,
                      };
                    });
                  if (t.length > 0) {
                    var a, i, r, d;
                    s.push({
                      pattern: o,
                      message:
                        null !==
                          (r =
                            null === (a = t[0]) || void 0 === a
                              ? void 0
                              : a.message) && void 0 !== r
                          ? r
                          : l.Z.Messages.GUILD_AUTOMOD_REGEX_GENERIC_SAVE_ERROR,
                      code:
                        null !==
                          (d =
                            null === (i = t[0]) || void 0 === i
                              ? void 0
                              : i.code) && void 0 !== d
                          ? d
                          : c,
                    });
                  }
                  return s;
                })(n);
          })(e);
          a.length > 0 && t(a);
        }
      }
      let u = (0, a.throttle)(d, 1e3, { leading: !1 });
      function _(e, t) {
        var n, i;
        let [r, l] = s.useState([]),
          [o, c] = s.useState(null),
          [_, I] = s.useState(
            null !==
              (i =
                null == e
                  ? void 0
                  : null === (n = e.triggerMetadata) || void 0 === n
                    ? void 0
                    : n.regexPatterns) && void 0 !== i
              ? i
              : [],
          ),
          E = s.useCallback(
            (t) => {
              if (!(t.length < 3))
                u(
                  {
                    ...e,
                    triggerMetadata: {
                      ...e.triggerMetadata,
                      regexPatterns: [t],
                    },
                  },
                  (e) => {
                    var t;
                    return c(null !== (t = e[0]) && void 0 !== t ? t : null);
                  },
                );
            },
            [e],
          );
        return {
          patterns: _,
          errors: r,
          valueError: o,
          validatePatternsChanged: s.useCallback(
            (n, s) => {
              if (!(0, a.isEqual)(n, s))
                u.cancel(),
                  d(
                    {
                      ...e,
                      triggerMetadata: {
                        ...e.triggerMetadata,
                        regexPatterns: n,
                      },
                    },
                    (e) => {
                      l(e), 0 === e.length && c(null);
                    },
                  ),
                  I(n),
                  null == t || t(n);
            },
            [e, t],
          ),
          validateEditingValueChanged: E,
        };
      }
    },
    457414: function (e, t, n) {
      "use strict";
      n.d(t, {
        S: function () {
          return c;
        },
        w: function () {
          return m;
        },
      });
      var s = n(481060),
        a = n(925221),
        i = n(236413),
        r = n(85960),
        l = n(273504),
        o = n(689938);
      let c = (e) => {
          switch (e) {
            case l.fX.KEYWORD:
            case l.fX.USER_PROFILE:
              return !0;
            default:
              return !1;
          }
        },
        d = (e) => {
          switch (e) {
            case l.fX.KEYWORD:
            case l.fX.ML_SPAM:
            case l.fX.DEFAULT_KEYWORD_LIST:
            case l.fX.MENTION_SPAM:
            case l.fX.SERVER_POLICY:
            case l.fX.USER_PROFILE:
              return !0;
            default:
              return !1;
          }
        },
        u = (e, t) => {
          var n;
          return null !== (n = null == t ? void 0 : t.name) && void 0 !== n
            ? n
            : r.I6[e].getDefaultRuleName();
        },
        _ = (e, t) => {
          if (!!(0, i.Vb)(t)) {
            if ((0, i.DO)(t))
              return t.triggerMetadata.regexPatterns.length > 0
                ? o.Z.Messages.GUILD_AUTOMOD_KEYWORD_FILTER_HEADER_WORD_AND_REGEX_COUNT.format(
                    {
                      keywordCount: t.triggerMetadata.keywordFilter.length,
                      regexPatternCount: t.triggerMetadata.regexPatterns.length,
                    },
                  )
                : o.Z.Messages.GUILD_AUTOMOD_KEYWORD_FILTER_HEADER_WORD_COUNT.format(
                    { keywordCount: t.triggerMetadata.keywordFilter.length },
                  );
          }
        },
        I = (e) => {
          switch (e) {
            case l.fX.KEYWORD:
              return o.Z.Messages.GUILD_AUTOMOD_KEYWORD_FILTER_DESCRIPTION;
            case l.fX.ML_SPAM:
              return o.Z.Messages.GUILD_AUTOMOD_ML_SPAM_FILTER_DESCRIPTION;
            case l.fX.DEFAULT_KEYWORD_LIST:
              return o.Z.Messages
                .GUILD_AUTOMOD_DEFAULT_KEYWORD_LIST_DESCRIPTION_TEXT;
            case l.fX.MENTION_SPAM:
              return o.Z.Messages.GUILD_AUTOMOD_MENTION_SPAM_FILTER_DESCRIPTION;
            case l.fX.USER_PROFILE:
              return o.Z.Messages.GUILD_AUTOMOD_USER_PROFILE_FILTER_DESCRIPTION;
            default:
              return null;
          }
        },
        E = (e) => {
          if (e === l.fX.KEYWORD)
            return o.Z.Messages.GUILD_AUTOMOD_LINK_FILTER_MATCHING_STRATEGY_DESCRIPTION.format();
        },
        T = (e) => {
          switch (e) {
            case l.fX.MENTION_SPAM:
              return s.AtIcon;
            case l.fX.KEYWORD:
              return s.ChannelListPlusIcon;
            case l.fX.ML_SPAM:
            case l.fX.USER_PROFILE:
              return (0, s.makeIconCompat)(a.Z);
            case l.fX.DEFAULT_KEYWORD_LIST:
              return s.MenuIcon;
          }
        };
      function m(e, t) {
        var n, a, i, r, l;
        return null != e && d(e)
          ? {
              headerText: null !== (n = u(e, t)) && void 0 !== n ? n : "",
              headerSubtext: null !== (a = _(e, t)) && void 0 !== a ? a : "",
              descriptionText: null !== (i = I(e)) && void 0 !== i ? i : "",
              descriptionSubtext: null !== (r = E(e)) && void 0 !== r ? r : "",
              icon: null !== (l = T(e)) && void 0 !== l ? l : s.LinkIcon,
            }
          : null;
      }
    },
    119331: function (e, t, n) {
      "use strict";
      n.d(t, {
        t: function () {
          return o;
        },
      }),
        n(411104);
      var s = n(120356),
        a = n.n(s),
        i = n(481060),
        r = n(267642),
        l = n(633969);
      function o(e, t) {
        if (t) return { icon: i.CheckmarkLargeIcon, className: l.unlocked };
        switch (e) {
          case r.Ro.EMOJI:
            return { icon: i.ReactionIcon, className: a()(l.icon, l.emoji) };
          case r.Ro.AUDIO:
            return { icon: i.HeadphonesIcon, className: a()(l.icon, l.audio) };
          case r.Ro.ANIMATED:
            return { icon: i.GifIcon, className: a()(l.icon, l.animated) };
          case r.Ro.CUSTOMIZATION:
            return {
              icon: i.ImagesIcon,
              className: a()(l.icon, l.customization),
            };
          case r.Ro.UPLOAD:
            return { icon: i.UploadIcon, className: a()(l.icon, l.upload) };
          case r.Ro.VANITY:
            return { icon: i.StarIcon, className: a()(l.icon, l.vanity) };
          case r.Ro.STREAM:
            return {
              icon: i.ScreenArrowIcon,
              className: a()(l.icon, l.stream),
            };
          case r.Ro.STICKER:
            return { icon: i.StickerIcon, className: a()(l.icon, l.sticker) };
          case r.Ro.CUSTOM_ROLE_ICON:
            return {
              icon: i.ShieldUserIcon,
              className: a()(l.icon, l.customRoleIcon),
            };
          case r.Ro.STAGE_VIDEO:
            return { icon: i.StageIcon, className: a()(l.icon, l.stage) };
          case r.Ro.SOUNDBOARD:
            return {
              icon: i.SoundboardIcon,
              className: a()(l.icon, l.soundboard),
            };
        }
        throw Error("Unexpected perk icon ".concat(e));
      }
    },
    372444: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return I;
        },
      });
      var s = n(735250);
      n(470079);
      var a = n(120356),
        i = n.n(a),
        r = n(481060),
        l = n(100527),
        o = n(906732),
        c = n(678558),
        d = n(689938),
        u = n(618043);
      let _ = (e) => {
        let {
            guild: t,
            analyticsLocation: n,
            className: a,
            buttonProps: i = {
              color: r.ButtonColors.BRAND_INVERTED,
              text: d.Z.Messages
                .PREMIUM_GUILD_SUBSCRIPTION_UPSELL_BANNER_BUTTON,
            },
          } = e,
          { color: l, text: o } = i,
          u = t.premiumTier + 1;
        return (0, s.jsx)(c.Z, {
          color: l,
          analyticsLocation: n,
          guild: t,
          buttonText: o,
          targetBoostedGuildTier: u,
          className: a,
        });
      };
      function I(e) {
        let {
            header: t,
            text: a,
            analyticsLocation: c,
            guild: d,
            className: I,
            textColor: E,
            headerColor: T,
            buttonProps: m,
          } = e,
          { analyticsLocations: N } = (0, o.ZP)(
            l.Z.GUILD_BOOSTING_UPSELL_BANNER,
          );
        return (0, s.jsx)(o.Gt, {
          value: N,
          children: (0, s.jsxs)("div", {
            className: i()(u.banner, I),
            children: [
              (0, s.jsx)("img", {
                className: u.__invalid_headerGraphic,
                alt: "",
                src: n(322393),
              }),
              (0, s.jsxs)("div", {
                className: u.content,
                children: [
                  (0, s.jsx)(r.Text, {
                    variant: "text-lg/semibold",
                    color: null != T ? T : "always-white",
                    className: u.header,
                    children: t,
                  }),
                  (0, s.jsx)(r.Text, {
                    variant: "text-sm/normal",
                    color: null != E ? E : "always-white",
                    children: a,
                  }),
                ],
              }),
              (0, s.jsx)("div", {
                className: u.ctaContainer,
                children: (0, s.jsx)(_, {
                  guild: d,
                  analyticsLocation: c,
                  className: u.button,
                  buttonProps: m,
                }),
              }),
            ],
          }),
        });
      }
    },
    774380: function (e, t, n) {
      "use strict";
      var s = n(735250);
      n(470079);
      var a = n(442837),
        i = n(481060),
        r = n(98278),
        l = n(823188),
        o = n(594174),
        c = n(74538),
        d = n(474936),
        u = n(689938),
        _ = n(35879);
      let I = (e) => {
        let { onOpenPremiumClick: t } = e,
          n = (0, s.jsx)(i.Button, {
            className: _.tier0Button,
            color: i.Button.Colors.BRAND_INVERTED,
            onClick: () => {
              (0, r.z)(), null != t && t();
            },
            children: u.Z.Messages.LEARN_MORE,
          });
        return (0, s.jsxs)("div", {
          className: _.tier0Container,
          children: [
            (0, s.jsx)(i.Heading, {
              className: _.tier0Heading,
              variant: "heading-xxl/extrabold",
              children:
                u.Z.Messages.GUILD_SETTINGS_PREMIUM_UPSELL_HEADING_SECONDARY,
            }),
            (0, s.jsx)(l.wp, {
              className: _.tier0Card,
              ctaButton: n,
              featureSet: l.uZ.BOOSTING,
              showWumpus: !0,
              showYearlyPrice: !0,
            }),
          ],
        });
      };
      t.Z = (e) => {
        let { onOpenPremiumClick: t } = e,
          n = (0, a.e7)([o.default], () => o.default.getCurrentUser());
        return c.ZP.isPremium(n, d.p9.TIER_2)
          ? null
          : (0, s.jsx)(I, { onOpenPremiumClick: t });
      };
    },
    404270: function (e, t, n) {
      "use strict";
      var s = n(735250);
      n(470079);
      var a = n(120356),
        i = n.n(a),
        r = n(442837),
        l = n(481060),
        o = n(706454),
        c = n(594174),
        d = n(509545),
        u = n(78839),
        _ = n(930153),
        I = n(74538),
        E = n(937615),
        T = n(474936),
        m = n(689938),
        N = n(907820);
      t.Z = (e) => {
        var t;
        let { className: n } = e,
          a = (0, r.e7)([c.default], () => c.default.getCurrentUser()),
          S = (0, r.e7)([o.default], () => o.default.locale),
          g = (0, r.e7)([u.ZP], () => u.ZP.getPremiumTypeSubscription()),
          h = (0, r.e7)([d.Z], () => (null != g ? d.Z.get(g.planId) : void 0)),
          C =
            null !==
              (t = (0, r.e7)([d.Z], () =>
                null != h
                  ? d.Z.getForSkuAndInterval(
                      (0, I.Wz)(T.Si.GUILD),
                      h.interval,
                      h.intervalCount,
                    )
                  : void 0,
              )) && void 0 !== t
              ? t
              : T.GP[T.Xh.PREMIUM_MONTH_GUILD];
        return (0, s.jsxs)("div", {
          className: i()(N.wrapper, n),
          children: [
            (0, s.jsx)(l.Heading, {
              className: N.heading,
              variant: "heading-xl/semibold",
              children:
                m.Z.Messages.GUILD_SETTINGS_PREMIUM_UPSELL_HEADING_PRIMARY,
            }),
            (0, s.jsx)(l.Text, {
              variant: "text-md/normal",
              children: (function (e) {
                let {
                    currentUser: t,
                    locale: n,
                    guildBoostingPlanId: a,
                    interval: i,
                    intervalCount: r,
                  } = e,
                  l = I.ZP.getDefaultPrice(a, I.ZP.isPremium(t)),
                  o = I.ZP.getDefaultPrice(a, !1),
                  c = (0, E.og)((0, E.T4)(l.amount, l.currency), i, r),
                  d = (0, E.og)((0, E.T4)(o.amount, o.currency), i, r);
                return I.ZP.isPremium(t, T.p9.TIER_2)
                  ? m.Z.Messages.GUILD_SETTINGS_PREMIUM_UPSELL_SUBHEADING_TIER_2.format(
                      {
                        price: c,
                        originalPrice: d,
                        originalPriceHook: (e, t) =>
                          (0, s.jsx)(
                            "span",
                            { className: N.originalPrice, children: e },
                            t,
                          ),
                        freeSubscriptionCount: T.cb,
                        discountPercent: (0, _.T3)(n, T.Rr / 100),
                      },
                    )
                  : I.ZP.isPremium(t, T.p9.TIER_1)
                    ? m.Z.Messages.GUILD_SETTINGS_PREMIUM_UPSELL_SUBHEADING_TIER_1.format(
                        {
                          price: c,
                          originalPrice: d,
                          originalPriceHook: (e, t) =>
                            (0, s.jsx)(
                              "span",
                              { className: N.originalPrice, children: e },
                              t,
                            ),
                          discountPercent: (0, _.T3)(n, T.Rr / 100),
                        },
                      )
                    : m.Z.Messages.GUILD_SETTINGS_PREMIUM_UPSELL_SUBHEADING.format(
                        { price: c },
                      );
              })({
                currentUser: a,
                locale: S,
                guildBoostingPlanId: C.id,
                interval: C.interval,
                intervalCount: C.intervalCount,
              }),
            }),
          ],
        });
      };
    },
    807582: function (e, t, n) {
      "use strict";
      var s = n(735250);
      n(470079);
      var a = n(120356),
        i = n.n(a),
        r = n(481060),
        l = n(709586),
        o = n(267642),
        c = n(689938),
        d = n(844396);
      t.Z = (e) => {
        let t,
          n,
          a,
          {
            guildFeature: u,
            guild: _,
            className: I,
            hideTooltip: E = !1,
            tooltipPosition: T = "left",
            onClick: m,
          } = e,
          N = _.hasFeature(u),
          S = (0, o._p)(u);
        return (N
          ? (null != S && (a = c.Z.Messages.PREMIUM_GUILD_INCLUDED),
            (t = (0, s.jsxs)(s.Fragment, {
              children: [
                (0, s.jsx)(l.Z, { className: d.unlockedIcon }),
                (0, s.jsx)(r.Heading, {
                  variant: "eyebrow",
                  className: d.description,
                  children: c.Z.Messages.PREMIUM_GUILD_TIER_UNLOCKED,
                }),
              ],
            })))
          : (null != S && (a = c.Z.Messages.CLICK_TO_LEARN_MORE),
            (t = (0, s.jsxs)(s.Fragment, {
              children: [
                (0, s.jsx)(l.Z, { className: d.icon }),
                (0, s.jsx)(r.Heading, {
                  variant: "eyebrow",
                  className: d.description,
                  children: null != S && (0, o.e9)(S),
                }),
              ],
            }))),
        (n =
          E || null == a
            ? (0, s.jsx)("div", {
                className: i()(d.availabilityIndicator, I),
                children: t,
              })
            : (0, s.jsx)(r.Tooltip, {
                position: T,
                text: a,
                children: (e) =>
                  (0, s.jsx)("div", {
                    ...e,
                    className: i()(d.availabilityIndicator, I),
                    children: t,
                  }),
              })),
        null == m || N)
          ? n
          : (0, s.jsx)(r.Clickable, {
              onClick: m,
              className: d.clickable,
              children: n,
            });
      };
    },
    48217: function (e, t, n) {
      "use strict";
      n.d(t, {
        c: function () {
          return E;
        },
      });
      var s = n(735250);
      n(470079);
      var a = n(481060),
        i = n(269128),
        r = n(358555),
        l = n(267642),
        o = n(26323),
        c = n(30513),
        d = n(981631),
        u = n(689938),
        _ = n(472997);
      function I(e) {
        let { guild: t, banner: n } = e;
        return (0, s.jsx)("div", {
          className: _.guildBanner,
          style: { backgroundImage: "url(".concat(n) },
          children: (0, s.jsxs)("div", {
            className: _.guildHeader,
            children: [
              (0, s.jsx)(r.Z, { guild: t, isBannerVisible: !0 }),
              (0, s.jsx)(a.Heading, {
                className: _.guildName,
                variant: "heading-md/semibold",
                children: t.toString(),
              }),
              (0, s.jsx)(i.Z, { className: _.dropdown, open: !1 }),
            ],
          }),
        });
      }
      function E(e) {
        let {
            analyticsLocations: t,
            analyticsLocation: n,
            guild: a,
            isGIF: i,
            banner: r,
          } = e,
          _ = i ? (0, l._p)(d.oNc.ANIMATED_BANNER) : (0, l._p)(d.oNc.BANNER);
        null != _ &&
          (0, o.Z)({
            analyticsLocations: t,
            analyticsSourceLocation: n,
            guild: a,
            headerProps: {
              title: u.Z.Messages.GUILD_BANNER_UPSELL_MODAL_TITLE,
              subtitle: (function (e, t) {
                let n = (0, l.nW)(e);
                return t
                  ? u.Z.Messages.GUILD_BANNER_UPSELL_MODAL_SUBTITLE_ANIMATED.format(
                      { targetLevelOrPlan: n },
                    )
                  : u.Z.Messages.GUILD_BANNER_UPSELL_MODAL_SUBTITLE_STATIC.format(
                      { targetLevelOrPlan: n },
                    );
              })(_, i),
              image: (0, s.jsx)(I, { guild: a, banner: r }),
            },
            perkIntro: u.Z.Messages.GUILD_BANNER_UPSELL_MODAL_PERK_INTRO,
            perks: i ? (0, c.zC)() : (0, c.XO)(),
          });
      }
    },
    313364: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return O;
        },
      });
      var s = n(735250),
        a = n(470079),
        i = n(120356),
        r = n.n(i),
        l = n(399606),
        o = n(481060),
        c = n(100527),
        d = n(906732),
        u = n(434404),
        _ = n(171368),
        I = n(430824),
        E = n(893966),
        T = n(527379),
        m = n(305473),
        N = n(113679),
        S = n(440857),
        g = n(472596),
        h = n(598948),
        C = n(428936),
        x = n(41586),
        p = n(918192),
        R = n(981631),
        L = n(689938),
        f = n(444383);
      function O(e) {
        let { guildId: t } = e,
          n = (0, l.e7)([I.Z], () => I.Z.getGuild(t)),
          { analyticsLocations: i } = (0, d.ZP)(
            c.Z.GUILD_SETTINGS_MEMBERS_PAGE,
          ),
          O =
            !1 ==
            !!(null == n
              ? void 0
              : n.hasFeature(
                  R.oNc.ENABLED_MODERATION_EXPERIENCE_FOR_NON_COMMUNITY,
                )),
          A = (0, l.e7)(
            [E.Z],
            () => E.Z.getEstimatedMemberSearchCountByGuildId(t),
            [t],
          ),
          M = a.useCallback(
            (e) => {
              if (null != e)
                (0, _.openUserProfileModal)({
                  userId: e.userId,
                  guildId: e.guildId,
                  sourceAnalyticsLocations: i,
                  analyticsLocation: { section: R.jXE.GUILD_SETTINGS_MEMBERS },
                });
            },
            [i],
          ),
          D = a.useRef(null),
          v = a.useCallback(() => {
            var e;
            null === (e = D.current) || void 0 === e || e.resetSearchText();
          }, []);
        if (null == n) return null;
        let j = (0, g.xb)(!1, !1, A);
        return (0, s.jsx)(d.Gt, {
          value: i,
          children: (0, s.jsx)("div", {
            className: f.settingsColumn,
            children: (0, s.jsx)("div", {
              className: f.settingsContainer,
              children: (0, s.jsx)(o.ScrollerAuto, {
                className: f.settingsScroller,
                orientation: "auto",
                children: (0, s.jsxs)("main", {
                  className: f.settingsContent,
                  children: [
                    (0, s.jsx)(
                      o.FormSection,
                      {
                        className: r()(f.header),
                        children: (0, s.jsx)(o.FormTitle, {
                          tag: o.FormTitleTags.H1,
                          children:
                            L.Z.Messages.GUILD_SETTINGS_MEMBERS_SERVER_MEMBERS,
                        }),
                      },
                      "header",
                    ),
                    (0, s.jsx)(
                      o.FormSection,
                      {
                        children: (0, s.jsxs)("div", {
                          className: r()(f.tableContainer),
                          children: [
                            (0, s.jsx)(N.Z, { guild: n }),
                            (0, s.jsx)(m.Z, { guild: n }),
                            O
                              ? (0, s.jsxs)("div", {
                                  className: r()(f.mainTableContainer),
                                  children: [
                                    (0, s.jsx)(x.Z, { guild: n, ref: D }),
                                    (0, s.jsx)(h.Z, {
                                      guild: n,
                                      searchState: j,
                                      compact: !0,
                                      onSelectRow: M,
                                      onResetForNewMembers: v,
                                    }),
                                    j !== g.po.SUCCESS_STILL_INDEXING &&
                                      (0, s.jsx)(C.Z, { guildId: n.id }),
                                  ],
                                })
                              : (0, s.jsx)("div", {
                                  className: r()(f.movedTable),
                                  children: (0, s.jsxs)("div", {
                                    className: r()(f.noResultsContainer),
                                    children: [
                                      (0, s.jsx)("div", {
                                        className: r()(
                                          f.__invalid_noResultsIconContainer,
                                        ),
                                        children: (0, s.jsx)(p.Z, {}),
                                      }),
                                      (0, s.jsx)(o.Text, {
                                        variant: "text-md/normal",
                                        color: "text-muted",
                                        children:
                                          L.Z.Messages.GUILD_SETTINGS_SAFETY_MODERATION_EXPERIENCE_ENABLED.format(
                                            {
                                              onClick: (e) => {
                                                if (null != n)
                                                  e.preventDefault(),
                                                    u.Z.close(),
                                                    (0, T._X)(n.id);
                                              },
                                            },
                                          ),
                                      }),
                                    ],
                                  }),
                                }),
                          ],
                        }),
                      },
                      "body",
                    ),
                    (0, s.jsx)(S.Z, { guildId: n.id }),
                  ],
                }),
              }),
            }),
          }),
        });
      }
    },
    113679: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return I;
        },
      }),
        n(47120);
      var s = n(735250),
        a = n(470079),
        i = n(399606),
        r = n(481060),
        l = n(279542),
        o = n(496675),
        c = n(140031),
        d = n(981631),
        u = n(689938),
        _ = n(837236);
      function I(e) {
        let { guild: t } = e,
          n = a.useId(),
          I = (0, i.e7)(
            [o.Z],
            () => null != t && o.Z.can(d.Plq.MANAGE_GUILD, t),
            [t],
          ),
          E = t.hasFeature(d.oNc.COMMUNITY),
          [T, m] = a.useState(
            t.hasFeature(d.oNc.ENABLED_MODERATION_EXPERIENCE_FOR_NON_COMMUNITY),
          ),
          N = a.useCallback(
            async (e) => {
              m(e), await (0, l.fp)(t, e);
            },
            [t],
          );
        return E
          ? null
          : (0, s.jsxs)("div", {
              className: _.bannerContainer,
              children: [
                (0, s.jsx)(c.Z, { width: 64, height: 64 }),
                (0, s.jsxs)("div", {
                  className: _.headingContainer,
                  children: [
                    (0, s.jsx)(r.Heading, {
                      variant: "heading-lg/semibold",
                      children:
                        u.Z.Messages
                          .GUILD_SETTINGS_SAFETY_ENABLE_MODERATION_EXPERIENCE,
                    }),
                    (0, s.jsx)(r.Text, {
                      variant: "text-sm/medium",
                      children:
                        u.Z.Messages
                          .GUILD_SETTINGS_SAFETY_ENABLE_MODERATION_EXPERIENCE_DESCRIPTION,
                    }),
                  ],
                }),
                (0, s.jsx)("div", {
                  className: _.buttonContainer,
                  children: (0, s.jsx)(r.Switch, {
                    id: n,
                    checked: T,
                    onChange: N,
                    disabled: !I,
                  }),
                }),
              ],
            });
      }
    },
    140031: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return a;
        },
      });
      var s = n(735250);
      function a(e) {
        let { width: t = 69, height: n = 62 } = e;
        return (0, s.jsxs)("svg", {
          width: t,
          height: n,
          xmlns: "http://www.w3.org/2000/svg",
          viewBox: "0 0 69 62",
          fill: "none",
          children: [
            (0, s.jsxs)("g", {
              "clip-path": "url(#clip0_2732_42516)",
              children: [
                (0, s.jsx)("path", {
                  d: "M64.8828 23.5441L26.6128 26.5941L26.1843 29.4645L26.1333 29.8034L24.178 42.9828L22.5661 53.5595C22.5202 53.8649 22.5439 54.1766 22.6356 54.4716C22.7273 54.7665 22.8846 55.0371 23.0957 55.2631C23.3068 55.4891 23.5663 55.6648 23.855 55.777C24.1436 55.8893 24.4539 55.9352 24.7629 55.9114L30.6493 55.4539C30.6493 55.4539 29.017 60.0425 28.7313 60.8185C28.7115 60.9106 28.7157 61.0061 28.7434 61.0961C28.771 61.1861 28.8213 61.2675 28.8895 61.3327C28.9576 61.3979 29.0413 61.4446 29.1327 61.4685C29.224 61.4924 29.32 61.4926 29.4114 61.4692C29.4523 61.4692 31.36 60.256 33.788 58.7208L34.8966 58.0193L35.0938 57.8939L34.9102 54.4644L55.7829 52.6343L56.2488 53.4375L59.7582 53.1359C60.6838 53.0634 61.5576 52.6806 62.2369 52.0497C62.9162 51.4189 63.361 50.5774 63.4988 49.6623L67.0694 25.8757C67.1157 25.5721 67.0923 25.262 67.0011 24.9687C66.9099 24.6753 66.7533 24.4064 66.5429 24.1821C66.3325 23.9577 66.0738 23.7838 65.7863 23.6733C65.4988 23.5628 65.1899 23.5186 64.8828 23.5441Z",
                  fill: "url(#paint0_linear_2732_42516)",
                }),
                (0, s.jsx)("path", {
                  d: "M60.2106 44.2164C59.6869 42.522 58.5103 41.8679 57.7656 40.8276C57.2827 39.6889 56.7454 37.9741 55.6708 35.8662C54.2188 33.0602 53.0864 30.6846 52.9504 30.3017C52.5899 29.1766 52.9674 26.3875 51.3793 24.9066C50.2265 23.8255 47.9957 23.551 46.6185 23.1172L46.0302 23.1884L45.8092 22.8156V22.7682C46.5981 20.5112 47.7543 17.8339 48.0706 14.5298C48.4684 10.3987 48.0706 6.05755 45.0951 3.80394C42.1196 1.55033 38.4911 0.14055 34.7879 0.584494C31.0847 1.02844 27.4563 2.74322 25.4431 5.79999C24.423 7.35888 23.345 12.6828 24.763 17.1324C26.2593 21.8769 28.0854 26.2011 28.0854 26.2011C28.0854 26.2011 22.6683 28.0413 21.3318 30.0373C19.7574 32.3892 19.3833 34.2158 18.795 35.1817C16.6969 38.6248 13.014 43.3794 13.014 43.3794L13.2861 58.7683C16.4078 59.1716 18.7984 56.3792 21.24 52.9157C21.9712 51.8787 22.8111 50.5909 23.6204 49.2998L23.685 49.1981C23.9197 48.8355 24.8276 45.7482 24.8276 45.7482L25.7356 31.0303L40.4669 29.3053L48.8357 49.9776L46.6117 54.0442C48.7983 55.9793 50.9236 57.0502 52.7872 56.6469C54.7935 56.2131 56.1027 54.2137 57.4119 51.6889C58.7212 49.1642 60.6697 45.7109 60.2106 44.2164Z",
                  fill: "#3343D8",
                }),
                (0, s.jsx)("path", {
                  d: "M53.5318 53.6822L40.1267 54.7226L34.9103 58.0267C34.4376 56.6441 33.6589 54.7327 33.6589 54.7327C28.6702 54.2956 26.7693 53.4992 25.3648 51.432C24.5487 50.2357 24.1134 47.1721 24.178 42.9902C24.178 42.3125 24.2019 41.5997 24.2495 40.8519C24.5147 35.5889 25.1404 29.8719 25.1404 29.8719L26.1334 29.8109H26.1844L49.5837 28.3672L53.5318 53.6822Z",
                  fill: "url(#paint1_linear_2732_42516)",
                }),
                (0, s.jsx)("path", {
                  d: "M40.1879 16.0889C39.535 13.6048 39.3888 11.3817 40.4498 9.11453C38.6373 8.67397 35.8556 7.89453 34.5974 5.16309C33.2711 7.24047 30.8975 8.42997 28.8572 8.93831C29.6427 10.6328 29.5577 13.0389 28.5511 15.1739C30.5915 15.8008 31.7001 17.2241 33.5806 18.966C35.3319 17.1055 37.6953 16.5667 40.1879 16.0889Z",
                  fill: "url(#paint2_linear_2732_42516)",
                }),
                (0, s.jsx)("path", {
                  d: "M55.9803 42.1834C55.9157 42.1854 55.8515 42.1727 55.7926 42.1462C55.7336 42.1198 55.6815 42.0804 55.6402 42.0309C53.8107 39.8484 51.0664 39.0215 48.1827 38.3031C48.1285 38.2895 48.0774 38.2654 48.0325 38.2322C47.9876 38.1989 47.9497 38.1572 47.921 38.1094C47.8922 38.0616 47.8732 38.0086 47.8651 37.9534C47.8569 37.8983 47.8597 37.842 47.8733 37.788C47.8869 37.7339 47.9111 37.683 47.9444 37.6383C47.9778 37.5935 48.0196 37.5557 48.0676 37.5271C48.1156 37.4984 48.1688 37.4795 48.2242 37.4714C48.2795 37.4632 48.3359 37.466 48.3902 37.4796C51.4167 38.2319 54.297 39.1062 56.2931 41.4886C56.3418 41.5512 56.3718 41.6262 56.3796 41.7051C56.3874 41.7839 56.3727 41.8633 56.3371 41.9342C56.3016 42.005 56.2467 42.0644 56.1787 42.1055C56.1108 42.1466 56.0325 42.1677 55.9531 42.1664L55.9803 42.1834Z",
                  fill: "black",
                }),
                (0, s.jsx)("path", {
                  d: "M32.3462 14.0553C32.8534 13.3913 33.5107 12.8561 34.2648 12.4934C35.0188 12.1306 35.8482 11.9505 36.6854 11.9677C36.8843 11.9681 37.083 11.9806 37.2805 12.005C37.2822 11.9836 37.2822 11.9621 37.2805 11.9406C37.2328 10.4055 35.9712 10.4258 34.4274 10.4258C32.8835 10.4258 31.5675 10.4055 31.5675 12.0355C31.5614 12.7621 31.8241 13.4655 32.3054 14.0112L32.3462 14.0553Z",
                  fill: "black",
                }),
                (0, s.jsx)("path", {
                  d: "M37.2805 12.0227C37.2941 12.7918 37.001 13.535 36.4655 14.089C35.93 14.643 35.1957 14.9627 34.424 14.9778C34.0219 14.9783 33.6244 14.8923 33.2588 14.7256C32.8931 14.5589 32.5679 14.3155 32.3054 14.012C32.7971 13.3394 33.4449 12.7954 34.1934 12.4266C34.9419 12.0577 35.7689 11.875 36.6037 11.8939C36.8311 11.8932 37.0582 11.9068 37.2839 11.9346C37.2842 11.964 37.2831 11.9934 37.2805 12.0227Z",
                  fill: "#D01582",
                }),
                (0, s.jsx)("path", {
                  d: "M18.6657 46.636C17.4279 40.4547 16.003 35.1477 14.3334 34.1344C12.9493 33.2973 10.4465 34.5004 6.78749 35.761C3.40051 36.9302 1.90086 37.2962 1.29556 39.8108C0.771871 41.9898 1.5642 43.9045 4.18265 46.7851C6.80109 49.6657 8.54898 52.0684 8.77682 52.9664C9.00466 53.8645 10.1745 58.3683 13.2928 58.775C15.2413 59.0258 16.9042 58.0328 18.4753 56.4028C19.4172 55.42 19.7505 52.0379 18.6657 46.636Z",
                  fill: "url(#paint3_linear_2732_42516)",
                }),
                (0, s.jsx)("path", {
                  d: "M2.76464 38.2352C2.25115 36.795 1.57444 34.1957 2.35997 33.0333C3.19991 31.8031 10.3411 30.0612 11.6163 31.183C12.6773 32.1183 12.9766 34.1313 13.048 35.3039C13.1364 36.5645 11.2389 37.6456 8.84486 38.32C6.86913 38.8859 3.25092 39.5976 2.76464 38.2352Z",
                  fill: "#8089FF",
                }),
                (0, s.jsx)("path", {
                  d: "M2.83957 32.6534C2.97559 33.4193 3.33605 34.0936 5.18936 33.7344C7.04268 33.3752 9.31086 32.7178 9.97737 32.04C10.5419 31.4401 11.375 30.3218 11.8511 29.7288C12.3272 29.1357 13.8914 24.1032 13.8914 24.1032L5.17236 18.376C5.17236 18.376 2.94498 22.2495 2.67294 25.3537C2.48362 27.7864 2.53944 30.2318 2.83957 32.6534Z",
                  fill: "#FFC518",
                }),
                (0, s.jsx)("path", {
                  d: "M8.43338 26.8522C8.36729 26.8527 8.30202 26.8376 8.24291 26.8082C8.1838 26.7787 8.13254 26.7358 8.09332 26.6827C8.02655 26.5926 7.99805 26.4798 8.01395 26.3689C8.02986 26.2579 8.0889 26.1576 8.17833 26.0897C10.1711 24.602 11.7999 23.7785 13.8029 23.2464C13.9092 23.2241 14.02 23.2432 14.1127 23.2997C14.2053 23.3563 14.2727 23.4461 14.3009 23.5506C14.3292 23.6551 14.3163 23.7665 14.2648 23.8618C14.2133 23.9571 14.1271 24.0292 14.0239 24.0631C12.1332 24.5681 10.5893 25.3509 8.68842 26.7742C8.614 26.8268 8.52458 26.8542 8.43338 26.8522Z",
                  fill: "#EC5F00",
                }),
                (0, s.jsx)("path", {
                  d: "M25.222 20.8031L21.801 14.5879L5.62109 20.4303C5.62109 20.4303 12.0822 24.7342 12.7997 25.1375C13.4963 25.578 14.2924 25.8378 15.1155 25.8932C15.7079 25.9118 16.2967 25.7954 16.8371 25.5529C17.3775 25.3103 17.8552 24.948 18.2338 24.4936C18.2501 24.4732 18.2707 24.4566 18.2943 24.4453C18.3178 24.4339 18.3437 24.428 18.3698 24.428C18.396 24.428 18.4219 24.4339 18.4454 24.4453C18.469 24.4566 18.4896 24.4732 18.5059 24.4936C18.8717 24.9327 19.3301 25.2861 19.8485 25.5286C20.3669 25.7711 20.9325 25.8967 21.5052 25.8966C22.4641 25.8966 25.5859 25.8119 25.5859 25.8119C25.5859 25.8119 25.4975 23.0432 25.4124 21.7452C25.39 21.4243 25.326 21.1076 25.222 20.8031Z",
                  fill: "#D01582",
                }),
                (0, s.jsx)("path", {
                  d: "M18.2305 12.1379C17.2141 12.0188 16.1868 12.2381 15.3084 12.7616C14.4301 13.285 13.7502 14.0833 13.3745 15.032C13.3522 15.0998 13.3089 15.1588 13.2509 15.2007C13.1929 15.2425 13.1231 15.2651 13.0515 15.2651C12.9798 15.2651 12.9101 15.2425 12.852 15.2007C12.794 15.1588 12.7508 15.0998 12.7284 15.032C12.3325 14.0296 11.5979 13.1964 10.6514 12.6761C9.70495 12.1557 8.60592 11.9809 7.54393 12.1817C6.48193 12.3825 5.52356 12.9464 4.83414 13.7761C4.14471 14.6057 3.76746 15.6492 3.76746 16.7264C3.76746 17.8037 4.14471 18.8471 4.83414 19.6768C5.52356 20.5065 6.48193 21.0704 7.54393 21.2712C8.60592 21.472 9.70495 21.2971 10.6514 20.7768C11.5979 20.2564 12.3325 19.4232 12.7284 18.4209C12.7499 18.3518 12.7931 18.2914 12.8515 18.2485C12.9099 18.2056 12.9806 18.1825 13.0532 18.1825C13.1257 18.1825 13.1964 18.2056 13.2548 18.2485C13.3133 18.2914 13.3564 18.3518 13.3779 18.4209C13.6777 19.1834 14.1753 19.853 14.8198 20.3611C15.4643 20.8693 16.2326 21.1978 17.0462 21.3131C17.8598 21.4284 18.6896 21.3264 19.4507 21.0175C20.2118 20.7086 20.8769 20.2038 21.3782 19.5548C21.8794 18.9058 22.1988 18.1358 22.3037 17.3236C22.4085 16.5113 22.2951 15.6858 21.975 14.9315C21.6549 14.1772 21.1395 13.5211 20.4817 13.0303C19.8238 12.5395 19.047 12.2315 18.2305 12.1379Z",
                  fill: "#FF78B8",
                }),
                (0, s.jsx)("path", {
                  d: "M6.37945 18.9592L10.6268 14.6824C10.3506 14.38 10.0156 14.1367 9.64209 13.9675C9.26858 13.7982 8.8644 13.7065 8.45419 13.6979C8.04397 13.6894 7.63629 13.7641 7.25599 13.9176C6.87568 14.0711 6.53071 14.3001 6.24209 14.5907C5.95346 14.8814 5.72722 15.2275 5.57715 15.6081C5.42707 15.9886 5.35631 16.3957 5.36916 16.8044C5.38201 17.213 5.47821 17.6149 5.6519 17.9853C5.82559 18.3558 6.07313 18.6871 6.37945 18.9592Z",
                  fill: "#423D80",
                }),
                (0, s.jsx)("path", {
                  d: "M10.5418 18.8648C11.1087 18.2992 11.4271 17.5326 11.4271 16.7332C11.4271 15.9338 11.1087 15.1671 10.5418 14.6016L6.27405 18.8648C6.84112 19.4266 7.60826 19.742 8.40791 19.742C9.20755 19.742 9.9747 19.4266 10.5418 18.8648Z",
                  fill: "black",
                }),
                (0, s.jsx)("path", {
                  d: "M15.7277 19.0232L19.9648 14.7532C19.6927 14.4372 19.3579 14.1808 18.9813 14.0002C18.6048 13.8196 18.1948 13.7188 17.7772 13.704C17.3597 13.6893 16.9435 13.761 16.5552 13.9146C16.1668 14.0682 15.8146 14.3004 15.5208 14.5965C15.2269 14.8926 14.9979 15.2462 14.8481 15.6349C14.6983 16.0236 14.631 16.4391 14.6505 16.8551C14.6699 17.271 14.7757 17.6784 14.9611 18.0516C15.1465 18.4248 15.4075 18.7556 15.7277 19.0232Z",
                  fill: "#423D80",
                }),
                (0, s.jsx)("path", {
                  d: "M19.8254 18.8648C20.1069 18.5852 20.3303 18.253 20.4827 17.8872C20.6351 17.5214 20.7136 17.1292 20.7136 16.7332C20.7136 16.3371 20.6351 15.9449 20.4827 15.5791C20.3303 15.2133 20.1069 14.8811 19.8254 14.6016L15.5475 18.8648C16.115 19.4297 16.8843 19.7471 17.6864 19.7471C18.4886 19.7471 19.2579 19.4297 19.8254 18.8648Z",
                  fill: "black",
                }),
                (0, s.jsx)("path", {
                  d: "M26.3783 24.4662C25.3618 24.1105 24.2961 23.9139 23.2192 23.8833C21.274 23.7952 20.1586 24.5137 19.9206 25.3236C19.7302 26.0014 20.0566 27.2146 22.1344 27.2587C24.2121 27.3027 27.3101 28.8311 27.8847 29.3259L26.3783 24.4662Z",
                  fill: "#FFC518",
                }),
                (0, s.jsx)("path", {
                  d: "M35.5871 29.0518L31.0235 34.3893C31.0235 34.3893 26.3307 30.1295 25.875 29.594C24.1373 27.5607 25.4466 22.596 25.0623 21.4912C24.7222 20.4745 23.243 17.3805 22.8281 16.6519L21.5155 14.1C21.5155 14.1 23.0526 13.5476 23.9571 14.1339C24.6372 14.5711 25.1099 14.8117 25.1099 14.8117L25.1643 14.7676L25.7356 14.6185L25.9362 14.2288C26.1506 14.1087 26.3791 14.0153 26.6164 13.9509C27.7964 13.6459 33.3087 15.6454 34.4037 17.394C35.1586 18.5734 33.0332 23.5449 32.4007 26.256L35.5871 29.0518Z",
                  fill: "#FFE65C",
                }),
                (0, s.jsx)("path", {
                  d: "M6.7467 29.2578C6.7467 29.2578 9.28693 25.2725 13.5002 24.31C15.3944 23.883 16.6322 24.1643 17.0538 24.8997C17.3939 25.5165 17.3939 26.767 15.3876 27.3194C13.9658 27.6973 12.7173 28.5503 11.851 29.7357L6.7467 29.2578Z",
                  fill: "#FFC518",
                }),
                (0, s.jsx)("path", {
                  d: "M30.2344 18.9221C30.1859 18.942 30.1339 18.9524 30.0814 18.9526C29.9959 18.9522 29.9126 18.9261 29.8422 18.8777C29.7718 18.8294 29.7177 18.761 29.6869 18.6815C29.0306 16.9871 26.9665 15.7637 25.1642 14.7673C25.3991 14.5578 25.6582 14.3769 25.9361 14.2285C27.7588 15.2452 29.7652 16.5397 30.4793 18.3765C30.4995 18.4283 30.5092 18.4836 30.5078 18.5392C30.5064 18.5948 30.4939 18.6495 30.4712 18.7003C30.4484 18.751 30.4158 18.7968 30.3751 18.8348C30.3345 18.8729 30.2867 18.9026 30.2344 18.9221Z",
                  fill: "#FF8B18",
                }),
                (0, s.jsx)("path", {
                  d: "M31.2205 36.7916C31.2205 36.7916 28.4661 34.4499 28.4661 32.7249C28.4661 31.2372 32.9718 26.8046 34.6551 27.0519C36.7771 27.3671 38.0557 29.4242 38.0557 29.4242L31.2205 36.7916Z",
                  fill: "#8089FF",
                }),
                (0, s.jsx)("path", {
                  d: "M30.1698 38.2355C30.7581 43.817 38.7392 46.1993 42.7519 50.2592C47.6759 55.2578 49.213 56.6981 52.1477 56.1559C54.6879 55.6882 56.6841 50.0017 55.3816 46.5857C54.1778 43.4306 51.1717 38.8658 48.7165 35.4735C46.9237 32.9963 44.6703 30.8852 42.0786 29.2549C40.1131 28.0518 37.1546 27.9265 33.7676 31.3458C30.5404 34.5958 29.9249 35.8124 30.1698 38.2355Z",
                  fill: "url(#paint4_linear_2732_42516)",
                }),
                (0, s.jsx)("path", {
                  d: "M24.4128 48.066C24.405 48.0825 24.3959 48.0984 24.3856 48.1134C24.1578 48.4727 23.9333 48.8353 23.7055 49.1979C23.1828 45.1485 23.1726 41.0498 23.6749 36.9979C23.6907 36.8864 23.7502 36.7858 23.8405 36.7181C23.8851 36.6846 23.936 36.6602 23.9902 36.6463C24.0443 36.6323 24.1007 36.6292 24.1561 36.637C24.2114 36.6448 24.2647 36.6633 24.3129 36.6917C24.3611 36.72 24.4032 36.7575 24.4368 36.802C24.4704 36.8465 24.4949 36.8972 24.5089 36.9512C24.5229 37.0051 24.526 37.0613 24.5182 37.1165C24.0779 40.7513 24.0425 44.4235 24.4128 48.066Z",
                  fill: "black",
                }),
                (0, s.jsx)("path", {
                  d: "M46.6389 23.1042C46.0098 24.1208 44.6461 25.6391 41.8781 26.0017H41.827C41.7143 26.0089 41.6033 25.9711 41.5185 25.8968C41.4337 25.8224 41.382 25.7175 41.3748 25.6052C41.3676 25.4928 41.4054 25.3822 41.48 25.2977C41.5547 25.2132 41.6599 25.1616 41.7726 25.1544C44.0884 24.8494 45.231 23.6871 45.8159 22.7822C46.0834 22.9061 46.3583 23.0136 46.6389 23.1042Z",
                  fill: "black",
                }),
                (0, s.jsx)("path", {
                  d: "M3.99563 5.96274C3.69447 5.77014 3.43799 5.51576 3.24331 5.21655C3.04862 4.91735 2.92021 4.58021 2.86664 4.22763L2.6796 2.99746C2.67652 2.96723 2.66192 2.93933 2.6388 2.91951C2.61963 2.89447 2.59171 2.87753 2.56058 2.87207C2.53052 2.8747 2.50201 2.88654 2.47897 2.90596C2.45787 2.92687 2.44465 2.9544 2.44156 2.9839L2.25113 4.22763C2.19948 4.5826 2.07191 4.92238 1.87707 5.22396C1.68033 5.52036 1.42309 5.77209 1.12214 5.96274L0.962313 6.0644C0.945336 6.07558 0.931334 6.0907 0.921506 6.10846C0.908 6.14569 0.908 6.18645 0.921506 6.22368C0.931334 6.24144 0.945336 6.25656 0.962313 6.26774L1.12214 6.3694C1.42449 6.56397 1.68183 6.82043 1.87707 7.12174C2.07191 7.42332 2.19948 7.7631 2.25113 8.11807L2.44156 9.33468C2.44547 9.3637 2.46 9.39026 2.48237 9.40924C2.50449 9.42705 2.53214 9.43664 2.56058 9.43635C2.58893 9.43611 2.61642 9.42658 2.6388 9.40924C2.66117 9.39026 2.6757 9.3637 2.6796 9.33468L2.86664 8.11807C2.91838 7.76309 3.04593 7.42329 3.2407 7.12163C3.43546 6.81997 3.69289 6.56345 3.99563 6.3694L4.15885 6.26774C4.17583 6.25656 4.18983 6.24144 4.19966 6.22368C4.21317 6.18645 4.21317 6.14569 4.19966 6.10846C4.18983 6.0907 4.17583 6.07558 4.15885 6.0644L3.99563 5.96274Z",
                  fill: "#66BBFF",
                }),
                (0, s.jsx)("path", {
                  d: "M55.5551 15.8179C55.2508 15.6264 54.9921 15.371 54.7971 15.0695C54.6021 14.7681 54.4755 14.4279 54.4261 14.0726L54.2357 12.856C54.2326 12.8265 54.2194 12.7989 54.1983 12.778C54.1752 12.7586 54.1467 12.7468 54.1166 12.7441C54.0876 12.7468 54.0602 12.7587 54.0384 12.778C54.0153 12.7978 54.0007 12.8257 53.9976 12.856L53.8106 14.0726C53.7575 14.4267 53.6294 14.7655 53.4347 15.0664C53.2401 15.3674 52.9833 15.6235 52.6816 15.8179L52.5184 15.9229C52.5009 15.9326 52.4876 15.9482 52.481 15.967C52.4759 15.9858 52.4759 16.0057 52.481 16.0246C52.4762 16.0435 52.4762 16.0633 52.481 16.0822C52.4885 16.1004 52.5016 16.1158 52.5184 16.1263L52.6816 16.2279C52.9837 16.4216 53.2401 16.6783 53.4331 16.9803C53.6284 17.2807 53.7571 17.6192 53.8106 17.9732L53.9976 19.1932C54.0029 19.2218 54.0172 19.2479 54.0384 19.2678C54.0608 19.2851 54.0883 19.2946 54.1166 19.2949C54.146 19.2946 54.1746 19.2851 54.1983 19.2678C54.2185 19.2476 54.2316 19.2214 54.2357 19.1932L54.4261 17.9732C54.4771 17.6186 54.6035 17.2789 54.7967 16.9769C54.9943 16.6772 55.2526 16.4221 55.5551 16.2279L55.7183 16.1263C55.7376 16.1173 55.755 16.1047 55.7693 16.089C55.7741 16.0701 55.7741 16.0503 55.7693 16.0314C55.7744 16.0125 55.7744 15.9926 55.7693 15.9738C55.7606 15.9563 55.7477 15.9412 55.7319 15.9297L55.5551 15.8179Z",
                  fill: "#59F186",
                }),
                (0, s.jsx)("path", {
                  d: "M63.5909 7.14595C63.1489 6.86363 62.7729 6.49 62.4883 6.05033C62.2038 5.61066 62.0173 5.11521 61.9416 4.59751L61.6695 2.81834C61.6631 2.77402 61.6415 2.7333 61.6083 2.70312C61.5932 2.68795 61.5751 2.67592 61.5553 2.66771C61.5355 2.6595 61.5142 2.65527 61.4927 2.65527C61.4712 2.65527 61.4499 2.6595 61.4301 2.66771C61.4103 2.67592 61.3922 2.68795 61.3771 2.70312C61.3449 2.73363 61.3245 2.77439 61.3193 2.81834L61.0438 4.59751C60.9653 5.11387 60.7788 5.60803 60.4963 6.04795C60.2124 6.48847 59.8366 6.86295 59.3945 7.14595L59.1565 7.29506C59.1322 7.31192 59.1133 7.33547 59.1021 7.36284C59.0882 7.38888 59.0811 7.41805 59.0817 7.44756C59.0816 7.47595 59.0886 7.50392 59.1021 7.5289C59.1133 7.55626 59.1322 7.57981 59.1565 7.59667L59.3945 7.74578C59.8359 8.02969 60.2114 8.40399 60.4963 8.84378C60.7788 9.28371 60.9653 9.77786 61.0438 10.2942L61.3193 12.0734C61.3252 12.1152 61.3456 12.1536 61.3771 12.1818C61.4095 12.2092 61.4503 12.2247 61.4927 12.2259C61.5354 12.2259 61.5765 12.2102 61.6083 12.1818C61.6421 12.155 61.664 12.1161 61.6695 12.0734L61.9416 10.2942C62.0173 9.77653 62.2038 9.28108 62.4883 8.84141C62.7729 8.40174 63.1489 8.0281 63.5909 7.74578L63.8289 7.59667C63.8534 7.57906 63.8732 7.55581 63.8867 7.5289C63.8935 7.5022 63.8935 7.47425 63.8867 7.44756C63.8938 7.41976 63.8938 7.39064 63.8867 7.36284C63.8732 7.33593 63.8534 7.31267 63.8289 7.29506L63.5909 7.14595Z",
                  fill: "#FFC518",
                }),
              ],
            }),
            (0, s.jsxs)("defs", {
              children: [
                (0, s.jsxs)("linearGradient", {
                  id: "paint0_linear_2732_42516",
                  x1: "44.816",
                  y1: "54.749",
                  x2: "44.816",
                  y2: "-25.4118",
                  gradientUnits: "userSpaceOnUse",
                  children: [
                    (0, s.jsx)("stop", { "stop-color": "#FF78B8" }),
                    (0, s.jsx)("stop", {
                      offset: "0.99",
                      "stop-color": "#EA459E",
                    }),
                  ],
                }),
                (0, s.jsxs)("linearGradient", {
                  id: "paint1_linear_2732_42516",
                  x1: "38.8447",
                  y1: "73.9003",
                  x2: "38.8447",
                  y2: "33.176",
                  gradientUnits: "userSpaceOnUse",
                  children: [
                    (0, s.jsx)("stop", {
                      offset: "0.01",
                      "stop-color": "#0A1BAC",
                    }),
                    (0, s.jsx)("stop", {
                      offset: "0.31",
                      "stop-color": "#1D2DC0",
                    }),
                    (0, s.jsx)("stop", {
                      offset: "0.68",
                      "stop-color": "#2D3DD2",
                    }),
                    (0, s.jsx)("stop", {
                      offset: "0.95",
                      "stop-color": "#3343D8",
                    }),
                  ],
                }),
                (0, s.jsxs)("linearGradient", {
                  id: "paint2_linear_2732_42516",
                  x1: "34.4545",
                  y1: "7.83692",
                  x2: "34.6977",
                  y2: "31.0068",
                  gradientUnits: "userSpaceOnUse",
                  children: [
                    (0, s.jsx)("stop", { "stop-color": "#FFC518" }),
                    (0, s.jsx)("stop", {
                      offset: "1",
                      "stop-color": "#FF8B18",
                    }),
                  ],
                }),
                (0, s.jsxs)("linearGradient", {
                  id: "paint3_linear_2732_42516",
                  x1: "7.54241",
                  y1: "37.3538",
                  x2: "18.2698",
                  y2: "58.8588",
                  gradientUnits: "userSpaceOnUse",
                  children: [
                    (0, s.jsx)("stop", {
                      offset: "0.05",
                      "stop-color": "#5765F1",
                    }),
                    (0, s.jsx)("stop", {
                      offset: "0.65",
                      "stop-color": "#3645DA",
                    }),
                    (0, s.jsx)("stop", {
                      offset: "0.69",
                      "stop-color": "#3343D8",
                    }),
                  ],
                }),
                (0, s.jsxs)("linearGradient", {
                  id: "paint4_linear_2732_42516",
                  x1: "33.0263",
                  y1: "32.5997",
                  x2: "54.2705",
                  y2: "49.568",
                  gradientUnits: "userSpaceOnUse",
                  children: [
                    (0, s.jsx)("stop", {
                      offset: "0.05",
                      "stop-color": "#5765F1",
                    }),
                    (0, s.jsx)("stop", {
                      offset: "0.47",
                      "stop-color": "#4857E7",
                    }),
                    (0, s.jsx)("stop", {
                      offset: "0.91",
                      "stop-color": "#3343D8",
                    }),
                  ],
                }),
                (0, s.jsx)("clipPath", {
                  id: "clip0_2732_42516",
                  children: (0, s.jsx)("rect", {
                    width: "68.0115",
                    height: "61",
                    fill: "white",
                    transform: "translate(0 0.5)",
                  }),
                }),
              ],
            }),
          ],
        });
      }
      n(470079);
    },
    203498: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return a;
        },
      });
      var s = n(2070);
      function a() {
        let { createGuildApplication: e, submitting: t, error: n } = (0, s.Z)();
        return {
          enableGuildMonetizationForTeam: (t, n, s) =>
            e(t, n, s, "guildcr".concat(t.id)),
          submitting: t,
          error: n,
        };
      }
    },
    312913: function (e, t, n) {
      "use strict";
      n.d(t, {
        UQ: function () {
          return a;
        },
      });
      let s = (0, n(818083).B)({
        kind: "guild",
        id: "2023-02_onboarding_advanced_mode",
        label: "Enables setting up onboarding with advanced mode",
        defaultConfig: { advancedModeAllowed: !1 },
        treatments: [
          { id: 1, label: "On", config: { advancedModeAllowed: !0 } },
        ],
      });
      function a(e) {
        return s.useExperiment(
          { guildId: e, location: "ed5d33_1" },
          { autoTrackExposure: !1 },
        );
      }
    },
    287576: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return c;
        },
      });
      var s = n(470079),
        a = n(725803),
        i = n(766434),
        r = n(310291),
        l = n(674563),
        o = n(198139);
      function c(e) {
        var t;
        let { application: n, loading: c } = (0, a.Z)(
            e,
            l.wW.GUILD_ROLE_SUBSCRIPTIONS,
          ),
          { payoutsByPeriod: d, loading: u } = (0, r.Z)(
            null == n ? void 0 : n.id,
            {
              groupType: o.uw.GUILD_PRODUCT,
              teamId:
                null == n
                  ? void 0
                  : null === (t = n.team) || void 0 === t
                    ? void 0
                    : t.id,
            },
          ),
          {
            currentPeriod: _,
            previousPeriods: I,
            metrics: E,
          } = s.useMemo(() => {
            let { currentPeriod: e, previousPeriods: t } = (0, i.Br)(d),
              n = (0, i.Uj)(e, t[0]);
            return { currentPeriod: e, previousPeriods: t, metrics: n };
          }, [d]);
        return {
          loading: c || u,
          payoutsByPeriod: d,
          currentPeriod: _,
          previousPeriods: I,
          metrics: E,
          application: n,
        };
      }
    },
    294294: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return I;
        },
      });
      var s = n(735250);
      n(470079);
      var a = n(512722),
        i = n.n(a),
        r = n(442837),
        l = n(481060),
        o = n(395586),
        c = n(825055),
        d = n(909656),
        u = n(430824),
        _ = n(689938);
      function I(e) {
        let { guildId: t } = e,
          n = (0, r.e7)([u.Z], () => u.Z.getGuild(t));
        return (
          i()(null != n, "Guild not found"),
          (0, s.jsxs)(o.AL, {
            guildId: t,
            children: [
              (0, s.jsx)(c.Z, {
                children:
                  _.Z.Messages.GUILD_PRODUCTS_BASIC_INFO_SYNC_DISCLAIMER,
              }),
              (0, s.jsx)(l.Spacer, { size: 32 }),
              (0, s.jsx)(d.Z, { guild: n, isGuildProducts: !0 }),
            ],
          })
        );
      }
    },
    310800: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return S;
        },
      });
      var s = n(735250);
      n(470079);
      var a = n(852229),
        i = n(481060),
        r = n(724598),
        l = n(674180),
        o = n(495437),
        c = n(267101),
        d = n(863663),
        u = n(676651),
        _ = n(613810),
        I = n(391181),
        E = n(689938),
        T = n(463446);
      let m = "guild-product-listings-header";
      function N(e) {
        let { guildId: t, handleCreateOrEditProduct: u } = e,
          N = (0, c.ue)(t, { publishedOnly: !1 }),
          { shouldRestrictUpdatingCreatorMonetizationSettings: S } = (0, l.gX)(
            t,
          ),
          g = (e) => {
            (0, o.Je)(t, e, { published: !1 });
          },
          h = (e, a) => {
            (0, i.openModalLazy)(async () => {
              let { default: i } = await n.e("95925").then(n.bind(n, 673078));
              return (n) =>
                (0, s.jsx)(i, {
                  guildId: t,
                  productId: e,
                  productName: a,
                  ...n,
                });
            });
          },
          C = (e, t) => {
            (0, a.J)((0, d.ar)(e, t));
          },
          x = N.length > 0;
        return (0, s.jsxs)(s.Fragment, {
          children: [
            (0, s.jsx)(i.FormTitle, {
              className: T.productListingsHeader,
              id: m,
              children: x
                ? E.Z.Messages.GUILD_PRODUCTS_YOUR_PRODUCTS_HEADER
                : E.Z.Messages.GUILD_PRODUCTS_NO_PRODUCTS_HEADER,
            }),
            x
              ? (0, s.jsx)("ul", {
                  className: T.productListings,
                  "aria-labelledby": m,
                  children: N.map((e) =>
                    (0, s.jsx)(
                      "li",
                      {
                        children: (0, s.jsx)(I.Z, {
                          guildId: t,
                          product: e,
                          onEditProduct: () => u(e.id),
                          onUnpublishProduct: () => g(e.id),
                          onDeleteProduct: () => h(e.id, e.name),
                          onCopyProductLink: () => C(t, e.id),
                          onTestDownload: () =>
                            _.Z.open({ guildId: t, productId: e.id }),
                          onReportProduct: () => {},
                          disabled: S,
                        }),
                      },
                      e.id,
                    ),
                  ),
                })
              : (0, s.jsx)(r.Z, { guildId: t, showCTA: !1, responsive: !1 }),
          ],
        });
      }
      function S(e) {
        let { guildId: t } = e,
          { shouldRestrictUpdatingCreatorMonetizationSettings: n } = (0, l.gX)(
            t,
          ),
          a = (e) => {
            u.h(t, e);
          };
        return (0, s.jsxs)(s.Fragment, {
          children: [
            (0, s.jsxs)(i.Button, {
              className: T.addButton,
              innerClassName: T.addButtonInner,
              onClick: () => a(null),
              disabled: n,
              children: [
                (0, s.jsx)(i.PlusSmallIcon, {
                  size: "custom",
                  color: "currentColor",
                  width: 20,
                  height: 20,
                  "aria-hidden": !0,
                }),
                (0, s.jsx)(i.Spacer, { size: 6, horizontal: !0 }),
                E.Z.Messages.GUILD_PRODUCTS_CREATE_PRODUCT_BUTTON,
              ],
            }),
            (0, s.jsx)(i.Spacer, { size: 24 }),
            (0, s.jsx)(N, { guildId: t, handleCreateOrEditProduct: a }),
          ],
        });
      }
    },
    833695: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return h;
        },
      });
      var s = n(735250);
      n(470079);
      var a = n(399606),
        i = n(481060),
        r = n(395586),
        l = n(755930),
        o = n(909667),
        c = n(968820),
        d = n(200472),
        u = n(489028),
        _ = n(277369),
        I = n(215124),
        E = n(999382),
        T = n(267101),
        m = n(287576),
        N = n(894610),
        S = n(689938);
      function g(e) {
        let { listingId: t } = e,
          n = (0, T.r)(t);
        return null == n ? null : (0, s.jsx)(l.bL, { children: n.name });
      }
      function h(e) {
        var t, n, l;
        let { guildId: T } = e,
          h = (0, m.Z)(T),
          C = (0, r.f3)(),
          x = (0, a.e7)([E.Z], () => E.Z.getGuild());
        return h.loading || null == x
          ? (0, s.jsx)(i.Spinner, {})
          : null == h.application
            ? (0, s.jsx)(u.Z, { guild: x })
            : (0, s.jsxs)(d.Z, {
                children: [
                  (0, s.jsx)(c.Z, {
                    revenue: h.metrics.revenue,
                    revenueTrend: h.metrics.revenuePctChange,
                    summaryMetricLabel:
                      S.Z.Messages.GUILD_PRODUCT_PURCHASES_TITLE,
                    summaryMetricValue:
                      null !== (n = h.metrics.paymentsCount) && void 0 !== n
                        ? n
                        : "-",
                    summaryMetricTrend:
                      null !== (l = h.metrics.paymentsCountChange) &&
                      void 0 !== l
                        ? l
                        : 0,
                    summaryMetricTrendIsPercent: !1,
                    children: (0, s.jsx)(N.Z, { guildId: T, earningsData: h }),
                  }),
                  (0, s.jsx)(i.FormSection, {
                    title:
                      S.Z.Messages
                        .GUILD_ROLE_SUBSCRIPTION_EARNINGS_EARNINGS_HISTORY_HEADER,
                    children: (0, s.jsx)(o.Z, {
                      ListingIdLabel: g,
                      payoutsByPeriod: h.payoutsByPeriod,
                      team:
                        null === (t = h.application) || void 0 === t
                          ? void 0
                          : t.team,
                    }),
                  }),
                  (0, s.jsx)(i.FormSection, {
                    title:
                      S.Z.Messages
                        .GUILD_ROLE_SUBSCRIPTION_SETTINGS_PAYMENT_TEAM_SECTION_TITLE,
                    disabled: C,
                    children: (0, s.jsx)(_.Z, {
                      guildId: T,
                      application: h.application,
                    }),
                  }),
                  (0, s.jsx)(i.FormSection, {
                    title:
                      S.Z.Messages
                        .CREATOR_MONETIZATION_SETTINGS_DISABLE_MONETIZATION_SECTION_TITLE,
                    children: (0, s.jsx)(I.Z, {
                      guildId: T,
                      allPeriods: h.payoutsByPeriod,
                    }),
                  }),
                ],
              });
      }
    },
    469351: function (e, t, n) {
      "use strict";
      n.d(t, {
        t: function () {
          return D;
        },
      }),
        n(47120),
        n(627341);
      var s,
        a,
        i = n(735250),
        r = n(470079),
        l = n(278074),
        o = n(399606),
        c = n(481060),
        d = n(76535),
        u = n(395586),
        _ = n(204875),
        I = n(715796),
        E = n(411667),
        T = n(434404),
        m = n(962086),
        N = n(225675),
        S = n(703656),
        g = n(430824),
        h = n(594174),
        C = n(63063),
        x = n(267101),
        p = n(294294),
        R = n(310800),
        L = n(833695),
        f = n(981631),
        O = n(176505),
        A = n(689938),
        M = n(85490);
      function D(e) {
        let { guildId: t, hasValidApplication: n } = e,
          { listingsLoaded: s } = (0, x.eD)(t),
          a = (0, o.e7)([g.Z], () => g.Z.getGuild(t)),
          D = (0, o.e7)([h.default], () => h.default.getCurrentUser()),
          v = (null == a ? void 0 : a.isOwner(D)) === !0,
          { loading: j } = (0, d.H)(t),
          [Z, b] = r.useState(n ? "manage_listings" : "payment");
        (0, I.P)(a);
        let U = r.useCallback(() => {
          if (null == a) return;
          let e = g.Z.getRole(a.id, a.getEveryoneRoleId());
          if (null == e) return;
          T.Z.close();
          let t = { [e.id]: e };
          (0, m.iD)(a.id, {
            type: N.z.SERVER_SHOP,
            roles: t,
            initialTab: "guild_products",
            returnToSection: f.pNK.GUILD_PRODUCTS,
          }),
            (0, S.uL)(f.Z5c.CHANNEL(a.id, O.oC.GUILD_SHOP));
        }, [a]);
        if (!s || j) return (0, i.jsx)(c.Spinner, {});
        if (null == a) return null;
        let G = (0, i.jsxs)(i.Fragment, {
            children: [
              (0, i.jsx)(c.FormTitle, {
                tag: c.FormTitleTags.H1,
                children: A.Z.Messages.GUILD_PRODUCTS_TITLE,
              }),
              (0, i.jsx)(c.FormText, {
                type: c.FormText.Types.DESCRIPTION,
                children:
                  A.Z.Messages.GUILD_PRODUCTS_SETTINGS_DESCRIPTION.format({
                    monetizationPolicyLink: C.Z.getArticleURL(
                      f.BhN.CREATOR_POLICY,
                    ),
                    serverProductsSupportLink: C.Z.getCreatorSupportArticleURL(
                      f.BhN.SERVER_PRODUCTS,
                    ),
                  }),
              }),
            ],
          }),
          P = (0, i.jsxs)(c.TabBar, {
            type: "top",
            look: "brand",
            className: M.tabBar,
            "aria-label": A.Z.Messages.GUILD_PRODUCTS_TITLE,
            selectedItem: Z,
            onItemSelect: b,
            children: [
              (0, i.jsx)(_.Z, {
                id: "basic_info",
                disabledTooltip:
                  A.Z.Messages
                    .GUILD_ROLE_SUBSCRIPTION_SETTINGS_SECTION_BASIC_INFO_NEEDS_APPLICATION,
                disabled: !n,
                children: A.Z.Messages.GUILD_PRODUCTS_BASIC_INFO_SECTION,
              }),
              (0, i.jsx)(_.Z, {
                id: "manage_listings",
                disabledTooltip:
                  A.Z.Messages
                    .GUILD_ROLE_SUBSCRIPTION_SETTINGS_SECTION_BASIC_INFO_NEEDS_APPLICATION,
                disabled: !n,
                children: A.Z.Messages.GUILD_PRODUCTS_LISTINGS_SECTION,
              }),
              v
                ? (0, i.jsx)(c.TabBar.Item, {
                    id: "payment",
                    className: M.tabBarItem,
                    children: A.Z.Messages.GUILD_PRODUCTS_PAYMENT_SECTION,
                  })
                : null,
              n
                ? (0, i.jsx)("div", {
                    className: M.previewButton,
                    children: (0, i.jsx)(c.Button, {
                      onClick: U,
                      color: c.Button.Colors.PRIMARY,
                      size: c.Button.Sizes.SMALL,
                      look: c.Button.Looks.OUTLINED,
                      children:
                        A.Z.Messages
                          .GUILD_ROLE_SUBSCRIPTION_SETTINGS_SECTION_PREVIEW,
                    }),
                  })
                : null,
            ],
          }),
          B = (0, l.EQ)(Z)
            .with("basic_info", () => (0, i.jsx)(p.Z, { guildId: t }))
            .with("manage_listings", () => (0, i.jsx)(R.Z, { guildId: t }))
            .with("payment", () => (0, i.jsx)(L.Z, { guildId: t }))
            .exhaustive(),
          y = s
            ? (0, i.jsx)(c.TabBar.Panel, { id: Z, children: B })
            : (0, i.jsx)(c.Spinner, {});
        return (0, i.jsxs)(u.AL, {
          guildId: t,
          children: [
            G,
            (0, i.jsx)(E.Z, { guild: a }),
            (0, i.jsx)("div", { className: M.tabBarContainer, children: P }),
            y,
          ],
        });
      }
      ((a = s || (s = {})).MANAGE_LISTINGS = "manage_listings"),
        (a.PAYMENT = "payment"),
        (a.BASIC_INFO = "basic_info");
    },
    610403: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return _;
        },
      });
      var s = n(735250);
      n(470079);
      var a = n(399606),
        i = n(481060),
        r = n(725803),
        l = n(999382),
        o = n(352981),
        c = n(469351),
        d = n(981631),
        u = n(674563);
      function _() {
        let e = (0, a.e7)([l.Z], () => l.Z.getGuild()),
          t = (0, o.y)(null == e ? void 0 : e.id, "guild_product_settings"),
          { application: n, loading: _ } = (0, r.Z)(
            null == e ? void 0 : e.id,
            u.wW.GUILD_ROLE_SUBSCRIPTIONS,
          ),
          I =
            null != n &&
            (null == e
              ? void 0
              : e.hasFeature(d.oNc.ROLE_SUBSCRIPTIONS_ENABLED)) === !0;
        return (0, s.jsx)("main", {
          children:
            null == e || !t || _
              ? (0, s.jsx)(i.Spinner, {})
              : (0, s.jsx)(c.t, { guildId: e.id, hasValidApplication: I }),
        });
      }
    },
    894610: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return _;
        },
      });
      var s,
        a,
        i = n(735250),
        r = n(470079),
        l = n(755930),
        o = n(267101),
        c = n(689938),
        d = n(350438);
      ((s = a || (a = {})).LISTING_NAME = "LISTING_NAME"),
        (s.PAYMENTS_COUNT = "PAYMENTS_COUNT"),
        (s.PRICE = "PRICE");
      let u = (0, l.Yn)([
        (0, l.nn)({
          key: "LISTING_NAME",
          cellClassName: d.listingNameColumn,
          renderHeader: () =>
            (0, i.jsx)(l.qN, {
              children:
                c.Z.Messages.GUILD_PRODUCT_EARNINGS_TABLE_LISTING_COLUMN_TITLE,
            }),
          sort: (0, l.Qg)((e) => e.listing.name.toLowerCase()),
        }),
        (0, l.GW)({
          key: "PAYMENTS_COUNT",
          cellClassName: d.paymentsCountColumn,
          renderHeader: () =>
            (0, i.jsx)(l.qN, {
              children:
                c.Z.Messages
                  .GUILD_PRODUCT_EARNINGS_TABLE_PURCHASES_COLUMN_TITLE,
            }),
          getCount: (e) => e.paymentsCount,
          sort: (0, l.Qg)((e) => {
            var t;
            return null !== (t = e.paymentsCount) && void 0 !== t ? t : 0;
          }),
        }),
        (0, l.i$)({
          key: "PRICE",
          cellClassName: d.priceColumn,
          renderHeader: () =>
            (0, i.jsx)(l.qN, {
              children:
                c.Z.Messages.GUILD_PRODUCT_EARNINGS_TABLE_PRICE_COLUMN_TITLE,
            }),
          getAmount(e) {
            let { listing: t } = e;
            return t.price_tier;
          },
          sort: (0, l.Qg)((e) => {
            var t;
            return null !== (t = e.listing.price_tier) && void 0 !== t ? t : 0;
          }),
        }),
      ]);
      function _(e) {
        let { earningsData: t, guildId: n } = e,
          s = (0, o.ue)(n, { publishedOnly: !1 }),
          a = t.currentPeriod,
          c = r.useMemo(
            () =>
              s
                .map((e) => {
                  var t;
                  let n = null == a ? void 0 : a.ppgs[e.id];
                  return {
                    ...(null != n ? n : {}),
                    key: e.id,
                    listing: e,
                    paymentsCount:
                      null !== (t = null == n ? void 0 : n.purchase_count) &&
                      void 0 !== t
                        ? t
                        : 0,
                  };
                })
                .filter((e) => e.listing.published || e.paymentsCount > 0),
            [s, null == a ? void 0 : a.ppgs],
          );
        return null == s || 0 === s.length
          ? null
          : (0, i.jsx)(l.ZP, {
              columns: u,
              data: c,
              initialSortKey: "LISTING_NAME",
            });
      }
    },
    264451: function (e, t, n) {
      "use strict";
      n.d(t, {
        Zo: function () {
          return r;
        },
        m5: function () {
          return i;
        },
      });
      var s = n(913527),
        a = n.n(s);
      function i(e, t) {
        let n = "",
          s = e >= 0;
        return (
          s && (n += "+"),
          t ? (n += "".concat(Math.floor(100 * e), "%")) : (n += e),
          { formattedValue: n, isPositive: s }
        );
      }
      function r(e, t) {
        return null != e ? a()(e).format(t) : "-";
      }
    },
    759178: function (e, t, n) {
      "use strict";
      var s = n(198139),
        a = n(689938);
      t.Z = {
        getStatusErrorText: function (e) {
          switch (e) {
            case s.jw.CANCELED:
            case s.jw.DEFERRED:
              return a.Z.Messages
                .GUILD_ROLE_SUBSCRIPTION_EARNINGS_TABLE_STATUS_CANCELLED;
            case s.jw.DEFERRED_INTERNAL:
              return a.Z.Messages
                .GUILD_ROLE_SUBSCRIPTION_EARNINGS_TABLE_STATUS_DEFERRED;
            case s.jw.ERROR:
              return a.Z.Messages
                .GUILD_ROLE_SUBSCRIPTION_EARNINGS_TABLE_STATUS_ERROR;
            case s.jw.REJECTED:
              return a.Z.Messages
                .GUILD_ROLE_SUBSCRIPTION_EARNINGS_TABLE_STATUS_REJECTED;
            case s.jw.RISK_REVIEW:
              return a.Z.Messages
                .GUILD_ROLE_SUBSCRIPTION_EARNINGS_TABLE_STATUS_RISK_REVIEW;
          }
        },
      };
    },
    723047: function (e, t, n) {
      "use strict";
      n.d(t, {
        in: function () {
          return s.AL;
        },
        mY: function () {
          return s.f3;
        },
      });
      var s = n(395586);
    },
    166803: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return r;
        },
      });
      var s = n(149765),
        a = n(700785),
        i = n(981631);
      function r(e, t) {
        let n = { [t.id]: t };
        return e.filter((e) => {
          let t = a.I0({ forceRoles: n, context: e }),
            r = i.Plq.VIEW_CHANNEL;
          return (
            e.isGuildVocal() && (r = s.IH(r, i.Plq.CONNECT)),
            s.e$(t, r) && !a.Uu(r, e)
          );
        });
      }
    },
    727843: function (e, t, n) {
      "use strict";
      n.d(t, {
        I: function () {
          return l;
        },
        N: function () {
          return r;
        },
      }),
        n(411104);
      var s = n(735250),
        a = n(470079);
      let i = a.createContext(void 0);
      function r() {
        let e = a.useContext(i);
        if (null == e)
          throw Error(
            "No edit state; are you missing an <EditStateContextProvider />?",
          );
        return e;
      }
      function l(e) {
        let { children: t, ...n } = e;
        return (0, s.jsx)(i.Provider, { value: n, children: t });
      }
    },
    614342: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return d;
        },
      });
      var s = n(512722),
        a = n.n(s),
        i = n(782568),
        r = n(434404),
        l = n(144507),
        o = n(981631),
        c = n(689938);
      function d(e) {
        let t = (0, l.MO)(e);
        switch (t) {
          case l.d5.NEEDS_COMMUNITY:
            return {
              visibility: t,
              noticeText:
                c.Z.Messages
                  .GUILD_ROLE_SUBSCRIPTION_COMMUNITY_REQUIREMENT_NOTICE,
              ctaLabel:
                c.Z.Messages
                  .GUILD_ROLE_SUBSCRIPTION_COMMUNITY_REQUIREMENT_CTA_LABEL,
              ctaClickable: null != e,
              onCtaClicked() {
                var t;
                a()(
                  null != e,
                  "Guild must be not null open COMMUNITY settings",
                ),
                  r.Z.open(
                    null !== (t = null == e ? void 0 : e.id) && void 0 !== t
                      ? t
                      : "",
                    o.pNK.COMMUNITY,
                  );
              },
            };
          case l.d5.WAITLIST_ONLY:
            return {
              visibility: t,
              noticeText: c.Z.Messages.GUILD_ROLE_SUBSCRIPTION_WAITLIST_NOTICE,
              ctaLabel: c.Z.Messages.GUILD_ROLE_SUBSCRIPTION_WAITLIST_CTA_LABEL,
              ctaClickable: !0,
              onCtaClicked() {
                (0, i.Z)("https://dis.gd/creators-waitlist");
              },
            };
          default:
            return;
        }
      }
    },
    635142: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return a;
        },
      });
      var s = n(689938);
      function a(e) {
        return e > 0 && e % 7 == 0
          ? s.Z.Messages.DURATION_WEEKS.format({ weeks: e / 7 })
          : s.Z.Messages.DURATION_DAYS.format({ days: e });
      }
    },
    568074: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return a;
        },
      }),
        n(47120),
        n(390547);
      var s = n(944537);
      function a(e) {
        let t = (0, s.n)((t) => t.editStateIdsForGroup[e]),
          n = (0, s.n)((e) => e.listings);
        if (null == t) return !1;
        let a = Object.keys(n),
          i = t.every((e) => a.includes(e)),
          r = Object.entries(n)
            .filter((e) => {
              let [n] = e;
              return null == t ? void 0 : t.includes(n);
            })
            .flatMap(
              (e) =>
                null == e[1] ||
                Object.values(e[1]).every((e) => null == e || "" === e),
            );
        return !i || r.includes(!0);
      }
    },
    997519: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return c;
        },
      });
      var s = n(470079),
        a = n(766434),
        i = n(310291),
        r = n(730647),
        l = n(495298),
        o = n(198139);
      function c(e, t) {
        let n = null == t ? void 0 : t.team,
          { payoutsByPeriod: c, loading: d } = (0, i.Z)(
            null == t ? void 0 : t.id,
            {
              groupType: o.uw.SERVER_ROLE_SUBSCRIPTION,
              teamId: null == n ? void 0 : n.id,
            },
          ),
          u = (0, r.f)("useEarningMetrics"),
          _ = (0, l.Z)(e),
          {
            currentPeriod: I,
            previousPeriods: E,
            metrics: T,
          } = s.useMemo(() => {
            let { currentPeriod: e, previousPeriods: t } = (0, a.Br)(c),
              n = (0, a.Uj)(e, t[0]);
            return {
              currentPeriod: e,
              previousPeriods: t,
              metrics: {
                ...n,
                subscribers: _,
                subscriberChange: n.paymentsCountChange,
              },
            };
          }, [c, _]);
        return {
          loading: d || !u,
          team: n,
          currentPeriod: I,
          previousPeriods: E,
          allPeriods: c,
          metrics: T,
        };
      }
    },
    776155: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return i;
        },
      }),
        n(47120);
      var s = n(470079),
        a = n(295141);
      function i(e) {
        let [t, n] = s.useState(!0),
          [i, r] = s.useState(),
          [l, o] = s.useState(),
          c = s.useCallback(async (e) => {
            n(!0), r(void 0);
            try {
              let t = await a.HT(e);
              o(t);
            } catch (e) {
              r(e);
            } finally {
              n(!1);
            }
          }, []);
        return (
          s.useEffect(() => {
            c(e);
          }, [e, c]),
          { isLoading: t, error: i, highlightedCreatorDetails: l }
        );
      }
    },
    796814: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return d;
        },
      });
      var s = n(470079),
        a = n(442837),
        i = n(80932),
        r = n(110924),
        l = n(471613),
        o = n(889564);
      let c = [];
      function d(e) {
        let { revision: t, emojis: n } = (0, a.cj)([l.Z], () => ({
            revision: l.Z.getEmojiRevision(e),
            emojis: l.Z.getEmojis(e),
          })),
          d = (0, r.Z)(t);
        return (
          s.useEffect(() => {
            (0, i.OQ)(e);
          }, [e]),
          s.useEffect(() => {
            null != d && d < t && (0, i.OQ)(e);
          }, [t, d, e]),
          s.useMemo(
            () => (null == n ? c : n.filter((t) => (0, o.Kt)(t, e))),
            [n, e],
          )
        );
      }
    },
    526717: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return l;
        },
      }),
        n(47120);
      var s = n(470079),
        a = n(768581),
        i = n(776155),
        r = n(981631);
      function l(e, t, n) {
        var l, o;
        let {
            isLoading: c,
            error: d,
            highlightedCreatorDetails: u,
          } = (0, i.Z)(e),
          _ = null == u ? void 0 : u.store_page,
          I = s.useMemo(() => {
            var e, t;
            let n = (function (e) {
                let t = new Set();
                return (
                  null == e ||
                    e.forEach((e) => {
                      var n;
                      null === (n = e.subscription_listings) ||
                        void 0 === n ||
                        n.forEach((e) => {
                          t.add(e.role_id);
                        });
                    }),
                  t
                );
              })(
                null == _
                  ? void 0
                  : null === (e = _.role_subscription) || void 0 === e
                    ? void 0
                    : e.group_listings,
              ),
              s =
                null == _
                  ? void 0
                  : null === (t = _.role_subscription) || void 0 === t
                    ? void 0
                    : t.benefit_emojis;
            return null == s
              ? void 0
              : s.filter((e) => e.roles.some((e) => n.has(e)));
          }, [null == _ ? void 0 : _.role_subscription]),
          E = null == _ ? void 0 : _.guild.icon_hash,
          T = a.ZP.getGuildIconURL({ id: e, icon: E, size: n }),
          m = s.useMemo(
            () => (null != I && I.length > t ? I.slice(0, t) : I),
            [I, t],
          ),
          N = null != I && I.length > t ? I.length - t : null,
          S = null == u ? void 0 : u.slug,
          g = null != S ? r.EYA.ROLE_SUBSCRIPTION_STORE_PAGE(S) : void 0,
          h =
            null == _
              ? void 0
              : null === (l = _.guild) || void 0 === l
                ? void 0
                : l.name,
          C =
            null == _
              ? void 0
              : null === (o = _.role_subscription) || void 0 === o
                ? void 0
                : o.subscriber_count,
          x = !c && null != h && null != E && null != T;
        return x
          ? {
              hasAllImperativeDetails: x,
              isLoading: c,
              details: {
                guildName: h,
                guildIcon: E,
                guildAvatarUrl: T,
                storePageUrl: g,
                subscriberCount: C,
                emojisToShow: m,
                notShownEmojiCount: N,
              },
            }
          : { hasAllImperativeDetails: x, isLoading: c, error: d };
      }
    },
    927954: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return i;
        },
      }),
        n(47120);
      var s = n(470079),
        a = n(689938);
      function i(e) {
        let [t, n] = s.useState(
            a.Z.Messages.GUILD_ROLE_SUBSCRIPTION_IMAGE_CTA_DEFAULT_FILENAME,
          ),
          i =
            null == e
              ? a.Z.Messages
                  .GUILD_ROLE_SUBSCRIPTION_SETUP_INFO_COVER_IMAGE_CTA_UPLOAD
              : a.Z.Messages
                  .GUILD_ROLE_SUBSCRIPTION_SETUP_INFO_COVER_IMAGE_CTA_EDIT;
        return {
          imageCTA: i,
          imageAriaLabel:
            null == e
              ? a.Z.Messages
                  .GUILD_ROLE_SUBSCRIPTION_SETUP_INFO_COVER_IMAGE_CTA_UPLOAD
              : a.Z.Messages.GUILD_ROLE_SUBSCRIPTION_SETUP_INFO_COVER_IMAGE_CTA_EDIT_A11Y.format(
                  { filename: t },
                ),
          setFilename: n,
        };
      }
    },
    169903: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return r;
        },
      });
      var s = n(470079),
        a = n(584825),
        i = n(14263);
      function r(e, t) {
        let n = (0, a.qi)(e),
          r = (0, i.Z)(e);
        return s.useMemo(
          () =>
            n.map((e) => {
              var n;
              let s = null == e ? void 0 : e.role_id;
              return {
                ...(null !== (n = null == t ? void 0 : t.ppgs[e.id]) &&
                void 0 !== n
                  ? n
                  : {}),
                key: e.id,
                subscriptionListing: e,
                roleMemberCount: null == s ? void 0 : null == r ? void 0 : r[s],
              };
            }),
          [n, null == t ? void 0 : t.ppgs, r],
        );
      }
    },
    164e3: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return c;
        },
      });
      var s = n(470079),
        a = n(149765),
        i = n(442837),
        r = n(430824),
        l = n(293810);
      let o = n(981631).Plq.VIEW_CHANNEL;
      function c(e) {
        let t = (0, i.e7)([r.Z], () => {
            let t = r.Z.getGuild(e);
            return null != t
              ? r.Z.getRole(t.id, t.getEveryoneRoleId())
              : void 0;
          }),
          n = s.useMemo(
            () =>
              null == t
                ? l.e3.SOME_CHANNELS
                : a.e$(t.permissions, o)
                  ? l.e3.SOME_CHANNELS
                  : l.e3.ALL_CHANNELS,
            [t],
          ),
          c = n === l.e3.ALL_CHANNELS;
        return { format: n, isFullServerGating: c };
      }
    },
    146710: function (e, t, n) {
      "use strict";
      n.d(t, {
        u: function () {
          return o;
        },
      });
      var s = n(149765),
        a = n(442837),
        i = n(430824),
        r = n(496675),
        l = n(981631);
      function o(e) {
        return (0, a.e7)([i.Z, r.Z], () => {
          let t = i.Z.getGuild(e);
          if (null == t) return !1;
          let n = r.Z.getGuildPermissions(t);
          return (
            null != n && s.e$(n, l.Plq.VIEW_CREATOR_MONETIZATION_ANALYTICS)
          );
        });
      }
    },
    495298: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return r;
        },
      }),
        n(47120);
      var s = n(470079),
        a = n(584825),
        i = n(14263);
      function r(e) {
        let t = (0, a.qi)(e),
          n = (0, i.Z)(e);
        return s.useMemo(() => {
          let e = 0;
          for (let s of t) {
            let t = null == s ? void 0 : s.role_id;
            if (null != t) {
              let s = null == n ? void 0 : n[t];
              null != s && (e += s);
            }
          }
          return e;
        }, [t, n]);
      }
    },
    518470: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return i;
        },
      });
      var s = n(470079),
        a = n(689938);
      function i() {
        return s.useMemo(
          () => [
            {
              value: null,
              label:
                a.Z.Messages
                  .GUILD_ROLE_SUBSCRIPTION_SETUP_TIER_ACTIVE_TRIAL_USER_LIMIT_NONE_OPTION,
            },
            { value: 10, label: "10" },
            { value: 25, label: "25" },
            { value: 50, label: "50" },
            { value: 100, label: "100" },
          ],
          [],
        );
      }
    },
    783454: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return I;
        },
      }),
        n(47120);
      var s = n(735250),
        a = n(470079),
        i = n(120356),
        r = n.n(i),
        l = n(481060),
        o = n(313201),
        c = n(259580),
        d = n(404203),
        u = n(689938),
        _ = n(777926);
      function I(e) {
        let {
            intiallyExpanded: t = !1,
            title: n,
            description: i,
            children: I,
          } = e,
          [E, T] = a.useState(t),
          m = () => T((e) => !e),
          N = (0, o.Dt)();
        return (0, s.jsxs)("div", {
          className: _.container,
          children: [
            (0, s.jsx)(d.Z, {
              className: r()(_.header, {
                [_.headerWithDescription]: E && null != i,
              }),
              onClick: m,
              children: (e) => {
                let { areaRef: t, handleStopPropagation: a } = e;
                return (0, s.jsxs)(s.Fragment, {
                  children: [
                    (0, s.jsx)(l.Heading, {
                      variant: "heading-md/semibold",
                      children: n,
                    }),
                    (0, s.jsx)(l.Clickable, {
                      onClick: a(m),
                      "aria-label":
                        u.Z.Messages
                          .GUILD_ROLE_SUBSCRIPTIONS_TOGGLE_SECTION_LABEL,
                      "aria-controls": N,
                      "aria-expanded": E,
                      focusProps: { ringTarget: t },
                      children: (0, s.jsx)(c.Z, {
                        className: _.caret,
                        direction: E ? c.Z.Directions.UP : c.Z.Directions.DOWN,
                      }),
                    }),
                  ],
                });
              },
            }),
            E &&
              (0, s.jsxs)("div", {
                id: N,
                children: [
                  null != i &&
                    (0, s.jsx)(l.FormText, {
                      type: l.FormText.Types.DESCRIPTION,
                      className: _.description,
                      children: i,
                    }),
                  (0, s.jsx)("div", { className: _.divider }),
                  (0, s.jsx)("div", { className: _.content, children: I }),
                ],
              }),
          ],
        });
      }
    },
    587431: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return r;
        },
      });
      var s = n(735250);
      n(470079);
      var a = n(481060),
        i = n(696936);
      function r(e) {
        return (0, s.jsx)(i.Z, { color: i.W.RED, icon: a.CircleXIcon, ...e });
      }
    },
    411667: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return d;
        },
      });
      var s = n(735250);
      n(470079);
      var a = n(346163),
        i = n(587431),
        r = n(539290),
        l = n(981631),
        o = n(689938),
        c = n(729761);
      function d(e) {
        let t,
          { guild: n } = e,
          {
            resubmittingEnableRequest: d,
            resubmissionError: u,
            createEnableRequest: _,
            resubmittedRequest: I,
            requestRejectedNoticeText: E,
            reapplyNoticeText: T,
          } = (0, a.Z)(n),
          m = n.hasFeature(l.oNc.CREATOR_MONETIZABLE_RESTRICTED),
          N = n.hasFeature(
            l.oNc.CREATOR_MONETIZABLE_PENDING_NEW_OWNER_ONBOARDING,
          );
        if (null != u)
          return (0, s.jsx)(i.Z, {
            className: c.noticeContainer,
            children: u.getAnyErrorMessage(),
          });
        let S = null;
        return (
          null != E
            ? (S = E)
            : I
              ? (S =
                  o.Z.Messages
                    .GUILD_ROLE_SUBSCRIPTION_SETTINGS_ENABLE_REQUEST_PENDING)
              : null != T
                ? ((S = T),
                  (t =
                    o.Z.Messages
                      .GUILD_ROLE_SUBSCRIPTION_SETTINGS_SUBMIT_APPEAL_CTA))
                : N
                  ? (S =
                      o.Z.Messages
                        .GUILD_ROLE_SUBSCRIPTION_SETTINGS_READ_ONLY_FOR_PENDING_NEW_OWNER_PENDING_NOTICE)
                  : m &&
                    (S =
                      o.Z.Messages
                        .CREATOR_MONETIZATION_SETTINGS_RESTRICTED_NOTICE),
          null != S
            ? (0, s.jsx)(r.Z, {
                className: c.noticeContainer,
                notice: S,
                ctaLabel: t,
                ctaLoading: d,
                onClick: _,
              })
            : null
        );
      }
    },
    594278: function (e, t, n) {
      "use strict";
      n(47120);
      var s = n(735250),
        a = n(470079),
        i = n(120356),
        r = n.n(i),
        l = n(846519),
        o = n(481060),
        c = n(259580),
        d = n(81543),
        u = n(689938),
        _ = n(560755);
      t.Z = function (e) {
        let {
            items: t,
            carouselClassName: n,
            paginationCaretClassName: i,
            intervalBetweenAutomaticItemRotations: I,
            renderItem: E,
          } = e,
          T = a.useMemo(() => new l.Xp(), []),
          [m, N] = a.useState(d.n.LEFT),
          [S, g] = a.useState(0),
          [h, C] = a.useState(!1),
          [x, p] = a.useState(!1),
          R = a.useCallback(
            (e, t) => {
              g((n) => {
                let s = n + t;
                return (
                  s < 0 ? (s = e.length - 1) : s > e.length - 1 && (s = 0), s
                );
              });
            },
            [g],
          ),
          L = a.useCallback(() => {
            if (!x) R(t, 1);
          }, [R, t, x]),
          f = a.useCallback(() => {
            if (!x) R(t, -1);
          }, [R, t, x]);
        return (
          a.useEffect(() => {
            null != I && (h ? h && T.stop() : T.start(I, L));
          }, [h, T, I, L]),
          (0, s.jsxs)("div", {
            className: _.root,
            onMouseEnter: () => C(!0),
            onMouseLeave: () => C(!1),
            children: [
              (0, s.jsx)(o.Clickable, {
                className: r()(_.carouselCaret, i),
                onClick: f,
                onMouseEnter: () => N(d.n.RIGHT),
                ignoreKeyPress: x,
                children: (0, s.jsx)(c.Z, {
                  direction: c.Z.Directions.LEFT,
                  height: 48,
                  width: 48,
                  "aria-label":
                    u.Z.Messages
                      .GUILD_ROLE_SUBSCRIPTION_OTHER_CREATOR_PREVIOUS_CARD_ARIA_LABEL,
                }),
              }),
              (0, s.jsx)(d.Z, {
                step: S,
                direction: m,
                onAnimationStart: () => p(!0),
                onAnimationEnd: () => p(!1),
                className: r()(_.carousel, n),
                children: E(t[S]),
              }),
              (0, s.jsx)(o.Clickable, {
                className: r()(_.carouselCaret, i),
                onClick: L,
                onMouseEnter: () => N(d.n.LEFT),
                ignoreKeyPress: x,
                children: (0, s.jsx)(c.Z, {
                  direction: c.Z.Directions.RIGHT,
                  height: 48,
                  width: 48,
                  "aria-label":
                    u.Z.Messages
                      .GUILD_ROLE_SUBSCRIPTION_OTHER_CREATOR_NEXT_CARD_ARIA_LABEL,
                }),
              }),
            ],
          })
        );
      };
    },
    81543: function (e, t, n) {
      "use strict";
      n.d(t, {
        n: function () {
          return a;
        },
      });
      var s,
        a,
        i = n(735250),
        r = n(470079),
        l = n(120356),
        o = n.n(l),
        c = n(748780),
        d = n(215569),
        u = n(976888);
      ((s = a || (a = {}))[(s.RIGHT = -1)] = "RIGHT"),
        (s[(s.LEFT = 1)] = "LEFT");
      let _ = { friction: 10, tension: 40, overshootClamping: !0 };
      class I extends r.PureComponent {
        componentWillEnter(e) {
          var t, n;
          null === (t = (n = this.props).onAnimationStart) ||
            void 0 === t ||
            t.call(n),
            this._animated.setValue(-this.props.direction),
            c.Z.spring(this._animated, { toValue: 0, ..._ }).start(() => {
              var t, n;
              e(),
                null === (t = (n = this.props).onAnimationEnd) ||
                  void 0 === t ||
                  t.call(n);
            });
        }
        componentDidAppear() {
          this._animated.setValue(0);
        }
        componentWillLeave(e) {
          c.Z.spring(this._animated, {
            toValue: this.props.direction,
            ..._,
          }).start(e);
        }
        getStyle() {
          return c.Z.accelerate({
            transform: [
              {
                translateX: this._animated.interpolate({
                  inputRange: [0, 1],
                  outputRange: ["0%", "-100%"],
                }),
              },
            ],
          });
        }
        render() {
          return (0, i.jsx)(c.Z.div, {
            style: this.getStyle(),
            className: u.item,
            children: this.props.children,
          });
        }
        constructor(e) {
          var t, n, s;
          super(e),
            (t = this),
            (s = void 0),
            (n = "_animated") in t
              ? Object.defineProperty(t, n, {
                  value: s,
                  enumerable: !0,
                  configurable: !0,
                  writable: !0,
                })
              : (t[n] = s),
            (this._animated = new c.Z.Value(-1 * e.direction));
        }
      }
      t.Z = (e) => {
        let {
          children: t,
          step: n,
          direction: s,
          className: a,
          onAnimationStart: r,
          onAnimationEnd: l,
        } = e;
        return (0, i.jsx)(d.W, {
          component: "div",
          className: o()(u.animator, a),
          children: (0, i.jsx)(
            I,
            {
              direction: s,
              onAnimationStart: r,
              onAnimationEnd: l,
              children: t,
            },
            n,
          ),
        });
      };
    },
    157018: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return u;
        },
      });
      var s = n(201895),
        a = n(933557),
        i = n(592125),
        r = n(699516),
        l = n(594174),
        o = n(293810),
        c = n(981631),
        d = n(689938);
      function u(e) {
        switch (e.ref_type) {
          case o.Qs.CHANNEL: {
            let t = i.Z.getChannel(e.ref_id);
            return null != t
              ? (function (e) {
                  let t = (0, a.F6)(e, l.default, r.Z);
                  switch (e.type) {
                    case c.d4z.GUILD_VOICE:
                      return d.Z.Messages.GUILD_SIDEBAR_VOICE_CHANNEL_A11Y_LABEL.format(
                        { channelName: t },
                      );
                    case c.d4z.GUILD_STAGE_VOICE:
                      return d.Z.Messages.GUILD_SIDEBAR_STAGE_CHANNEL_A11Y_LABEL.format(
                        { channelName: t },
                      );
                    default:
                      return (0, s.ZP)({ channel: e });
                  }
                })(t)
              : "";
          }
          case o.Qs.INTANGIBLE:
            var t;
            return null !== (t = e.name) && void 0 !== t ? t : "";
        }
      }
    },
    691886: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return R;
        },
      }),
        n(653041),
        n(47120);
      var s = n(735250),
        a = n(470079),
        i = n(120356),
        r = n.n(i),
        l = n(442837),
        o = n(481060),
        c = n(933557),
        d = n(471445),
        u = n(131704),
        _ = n(324067),
        I = n(699516),
        E = n(594174),
        T = n(303737),
        m = n(981631),
        N = n(689938),
        S = n(80204);
      function g(e) {
        return String(e);
      }
      function h(e) {
        let { icon: t, title: n, subtitle: a, className: i } = e;
        return (0, s.jsxs)("div", {
          className: r()(S.label, i),
          children: [
            t,
            (0, s.jsxs)("div", {
              className: S.labelText,
              children: [
                (0, s.jsx)(o.Text, {
                  variant: "text-md/normal",
                  color: "none",
                  className: S.labelTitle,
                  children: n,
                }),
                null != a && "" !== a
                  ? (0, s.jsx)(o.Text, {
                      variant: "text-xs/semibold",
                      color: "text-muted",
                      className: S.labelSubtitle,
                      children: a,
                    })
                  : null,
              ],
            }),
          ],
        });
      }
      function C() {
        return (0, s.jsx)(h, {
          icon: (0, s.jsx)(o.PlusSmallIcon, {
            size: "md",
            color: "currentColor",
            className: S.labelIcon,
          }),
          title:
            N.Z.Messages
              .GUILD_ROLE_SUBSCRIPTION_BENEFIT_CHANNEL_SELECT_CREATE_LABEL,
          className: S.createLabel,
        });
      }
      function x(e) {
        var t;
        let { channelId: n } = e,
          a = (0, T.m7)(n),
          i = (0, T.m7)(
            null !== (t = null == a ? void 0 : a.parent_id) && void 0 !== t
              ? t
              : m.lds,
          );
        if (null == a) return null;
        let r = (0, d.KS)(a),
          l = (0, c.F6)(a, E.default, I.Z),
          o = null != i ? (0, c.F6)(i, E.default, I.Z) : void 0;
        return (0, s.jsx)(h, {
          icon: null != r && (0, s.jsx)(r, { className: S.labelIcon }),
          title: l,
          subtitle: o,
        });
      }
      function p(e) {
        let { value: t } = e;
        return null != t ? (0, s.jsx)(x, { channelId: t }) : (0, s.jsx)(C, {});
      }
      function R(e) {
        let {
            guildId: t,
            value: i,
            initialChannelId: r,
            omitChannelIds: d,
            "aria-labelledby": S,
            onChange: h,
          } = e,
          C =
            N.Z.Messages
              .GUILD_ROLE_SUBSCRIPTION_BENEFIT_CHANNEL_SELECT_CREATE_LABEL,
          x = (0, l.e7)([_.Z], () => _.Z.getCategories(t), [t]),
          R = (0, T.m7)(null != i ? i : m.lds),
          L = a.useMemo(() => {
            let e = [{ value: null, label: C }],
              t = !1;
            for (let n of x._categories)
              for (let { channel: s } of x[n.channel.id]) {
                if (!!(0, u.r8)(s.type) || !!(0, u.bw)(s.type))
                  (!(s.id !== i && (null == d ? void 0 : d.has(s.id))) ||
                    (s.id === r && i !== r)) &&
                    (i === s.id && (t = !0),
                    e.push({
                      value: s.id,
                      label: (0, c.F6)(s, E.default, I.Z),
                    }));
              }
            return (
              null != i &&
                !t &&
                null != R &&
                e.push({ value: i, label: R.name }),
              e
            );
          }, [C, i, R, x, d, r]);
        return (0, s.jsx)(o.Select, {
          placeholder: N.Z.Messages.CHANNEL_SELECT,
          options: L,
          select: function (e) {
            null == e
              ? (0, o.openModalLazy)(async () => {
                  let { default: e } = await Promise.all([
                    n.e("7590"),
                    n.e("45094"),
                    n.e("2460"),
                  ]).then(n.bind(n, 797671));
                  return (n) =>
                    (0, s.jsx)(e, { ...n, guildId: t, onSubmit: h });
                })
              : h(e);
          },
          isSelected: (e) => null != i && g(e) === g(i),
          serialize: g,
          renderOptionLabel: p,
          renderOptionValue: (e) => {
            let [t] = e;
            return p(t);
          },
          "aria-labelledby": S,
        });
      }
    },
    764163: function (e, t, n) {
      "use strict";
      n.d(t, {
        DI: function () {
          return R;
        },
        x3: function () {
          return p;
        },
      }),
        n(47120);
      var s = n(735250),
        a = n(470079),
        i = n(512722),
        r = n.n(i),
        l = n(442837),
        o = n(481060),
        c = n(596454),
        d = n(600164),
        u = n(313201),
        _ = n(318766),
        I = n(907040),
        E = n(339085),
        T = n(633302),
        m = n(984933),
        N = n(691886),
        S = n(185923),
        g = n(689938),
        h = n(626064);
      function C(e) {
        let {
            guildId: t,
            emojiData: n,
            "aria-labelledby": i,
            onSelectEmoji: r,
          } = e,
          d = (0, l.e7)([E.ZP], () =>
            null != n.id ? E.ZP.getCustomEmojiById(n.id) : void 0,
          ),
          u = (0, l.e7)([m.ZP], () => m.ZP.getDefaultChannel(t)),
          N = a.useCallback(
            (e) => {
              let { closePopout: t } = e;
              return (0, s.jsx)(I.Z, {
                pickerIntention: S.Hz.GUILD_ROLE_BENEFIT_EMOJI,
                channel: u,
                closePopout: t,
                onNavigateAway: t,
                onSelectEmoji: (e, n) => {
                  null != e &&
                    r(
                      null != e.id
                        ? { id: e.id, name: void 0 }
                        : { id: void 0, name: e.optionallyDiverseSequence },
                    ),
                    n && t();
                },
              });
            },
            [r, u],
          ),
          C = a.useMemo(
            () =>
              null == d && null == n.name
                ? null
                : function () {
                    return (0, s.jsx)(c.Z, {
                      className: h.emoji,
                      emojiId: n.id,
                      emojiName: n.name,
                      animated: null == d ? void 0 : d.animated,
                    });
                  },
            [n, d],
          ),
          x = "";
        return (
          null != d
            ? (x = ":".concat(d.name, ":"))
            : null != n.name && (x = T.ZP.convertSurrogateToName(n.name)),
          (0, s.jsx)(o.Popout, {
            animation: o.Popout.Animation.NONE,
            position: "top",
            renderPopout: N,
            children: (e, t) => {
              let { isShown: n } = t;
              return (0, s.jsxs)("div", {
                className: h.emojiInputContainer,
                ...e,
                children: [
                  (0, s.jsx)(_.Z, {
                    className: h.emojiButton,
                    active: n,
                    tabIndex: 0,
                    renderButtonContents: C,
                  }),
                  (0, s.jsx)(o.TextInput, {
                    inputClassName: h.emojiText,
                    placeholder:
                      g.Z.Messages
                        .GUILD_ROLE_SUBSCRIPTION_BENEFIT_EMOJI_PLACEHOLDER,
                    value: x,
                    "aria-labelledby": i,
                    readOnly: !0,
                  }),
                ],
              });
            },
          })
        );
      }
      function x(e) {
        var t;
        let {
            guildId: n,
            initialData: i,
            benefitTypeInput: r,
            descriptionPlaceholder: l,
            canSubmit: c,
            onSave: _,
            onDelete: I,
            transitionState: E,
            onClose: T,
          } = e,
          m = (0, u.Dt)(),
          N = (0, u.Dt)(),
          S = (0, u.Dt)(),
          [x, p] = a.useState(
            null !== (t = null == i ? void 0 : i.description) && void 0 !== t
              ? t
              : "",
          ),
          [R, L] = a.useState(() => ({
            id: null == i ? void 0 : i.emoji_id,
            name: null == i ? void 0 : i.emoji_name,
          })),
          f = c && "" !== x && (null != R.id || null != R.name);
        return (0, s.jsx)("form", {
          onSubmit: function (e) {
            e.preventDefault(),
              f &&
                (_({ description: x, emojiId: R.id, emojiName: R.name }), T());
          },
          children: (0, s.jsxs)(o.ModalRoot, {
            transitionState: E,
            "aria-labelledby": m,
            children: [
              (0, s.jsxs)(o.ModalHeader, {
                children: [
                  (0, s.jsx)(o.Heading, {
                    id: m,
                    variant: "heading-md/semibold",
                    children:
                      g.Z.Messages
                        .GUILD_ROLE_SUBSCRIPTION_BENEFIT_INTANGIBLE_MODAL_TITLE,
                  }),
                  (0, s.jsx)(o.ModalCloseButton, {
                    className: h.closeButton,
                    onClick: T,
                  }),
                ],
              }),
              (0, s.jsxs)(o.ModalContent, {
                className: h.modalContent,
                children: [
                  r,
                  (0, s.jsx)(o.Spacer, { size: 24 }),
                  (0, s.jsx)(o.FormSection, {
                    title: g.Z.Messages.DESCRIPTION,
                    titleId: N,
                    children: (0, s.jsx)(o.TextArea, {
                      placeholder: l,
                      value: x,
                      rows: 1,
                      autosize: !0,
                      onChange: p,
                      "aria-labelledby": N,
                    }),
                  }),
                  (0, s.jsx)(o.Spacer, { size: 24 }),
                  (0, s.jsx)(o.FormSection, {
                    title: g.Z.Messages.EMOJI,
                    titleId: S,
                    children: (0, s.jsx)(C, {
                      guildId: n,
                      emojiData: R,
                      onSelectEmoji: L,
                      "aria-labelledby": S,
                    }),
                  }),
                ],
              }),
              (0, s.jsxs)(o.ModalFooter, {
                justify: d.Z.Justify.BETWEEN,
                children: [
                  (0, s.jsxs)("div", {
                    className: h.primaryButtons,
                    children: [
                      (0, s.jsx)(o.Button, {
                        type: "submit",
                        disabled: !f,
                        children:
                          null == i ? g.Z.Messages.ADD : g.Z.Messages.SAVE,
                      }),
                      null != I &&
                        (0, s.jsx)(o.Button, {
                          look: o.Button.Looks.BLANK,
                          size: o.Button.Sizes.ICON,
                          className: h.deleteButton,
                          onClick: () => {
                            I(), T();
                          },
                          children: (0, s.jsx)(o.TrashIcon, {
                            size: "md",
                            color: "currentColor",
                            "aria-label": g.Z.Messages.DELETE,
                          }),
                        }),
                    ],
                  }),
                  (0, s.jsx)(o.Button, {
                    look: o.Button.Looks.LINK,
                    color: o.Button.Colors.PRIMARY,
                    className: h.cancelButton,
                    onClick: T,
                    children: g.Z.Messages.CANCEL,
                  }),
                ],
              }),
            ],
          }),
        });
      }
      function p(e) {
        let {
            guildId: t,
            omitChannelIds: n,
            initialData: i,
            onSave: l,
            onDelete: c,
            transitionState: d,
            onClose: _,
          } = e,
          [I, E] = a.useState(null == i ? void 0 : i.ref_id),
          T = (0, u.Dt)(),
          m = (0, s.jsxs)(s.Fragment, {
            children: [
              (0, s.jsx)(o.HelpMessage, {
                messageType: o.HelpMessageTypes.WARNING,
                children:
                  g.Z.Messages
                    .GUILD_ROLE_SUBSCRIPTION_BENEFIT_CHANNEL_MODAL_WARNING,
              }),
              (0, s.jsx)(o.Spacer, { size: 24 }),
              (0, s.jsx)(o.FormSection, {
                title: g.Z.Messages.CHANNEL,
                titleId: T,
                children: (0, s.jsx)(N.Z, {
                  guildId: t,
                  value: I,
                  initialChannelId: null == i ? void 0 : i.ref_id,
                  omitChannelIds: n,
                  onChange: function (e) {
                    E(e);
                  },
                  "aria-labelledby": T,
                }),
              }),
            ],
          });
        return (0, s.jsx)(x, {
          guildId: t,
          initialData: i,
          benefitTypeInput: m,
          descriptionPlaceholder:
            g.Z.Messages
              .GUILD_ROLE_SUBSCRIPTION_BENEFIT_CHANNEL_DESCRIPTION_PLACEHOLDER,
          canSubmit: null != I,
          onSave: function (e) {
            r()(null != I, "Cannot submit null channel"),
              l({ ...e, channelId: I });
          },
          transitionState: d,
          onClose: _,
          onDelete: c,
        });
      }
      function R(e) {
        var t;
        let {
            initialData: n,
            onSave: i,
            transitionState: l,
            onClose: c,
            onDelete: d,
            guildId: _,
          } = e,
          [I, E] = a.useState(
            null !== (t = null == n ? void 0 : n.name) && void 0 !== t ? t : "",
          ),
          T = (0, u.Dt)(),
          m = (0, s.jsx)(o.FormSection, {
            title:
              g.Z.Messages
                .GUILD_ROLE_SUBSCRIPTION_BENEFIT_INTANGIBLE_NAME_TITLE,
            titleId: T,
            children: (0, s.jsx)(o.TextArea, {
              placeholder:
                g.Z.Messages
                  .GUILD_ROLE_SUBSCRIPTION_BENEFIT_INTANGIBLE_NAME_TITLE,
              value: I,
              rows: 1,
              onChange: function (e) {
                E(e);
              },
              "aria-labelledby": T,
            }),
          });
        return (0, s.jsx)(x, {
          guildId: _,
          initialData: n,
          benefitTypeInput: m,
          descriptionPlaceholder:
            g.Z.Messages
              .GUILD_ROLE_SUBSCRIPTION_BENEFIT_INTANGIBLE_DESCRIPTION_PLACEHOLDER,
          canSubmit: "" !== I,
          onSave: function (e) {
            r()("" !== I, "Cannot submit empty name"), i({ ...e, name: I });
          },
          transitionState: l,
          onClose: c,
          onDelete: d,
        });
      }
    },
    155758: function (e, t, n) {
      "use strict";
      n.d(t, {
        p: function () {
          return g;
        },
        s: function () {
          return h;
        },
      });
      var s = n(735250),
        a = n(470079),
        i = n(120356),
        r = n.n(i),
        l = n(294796),
        o = n(481060),
        c = n(313201),
        d = n(817460),
        u = n(723047),
        _ = n(528027),
        I = n(686807),
        E = n(157018),
        T = n(828656),
        m = n(689938),
        N = n(178959);
      function S(e) {
        let {
            guildId: t,
            emojiId: n,
            emojiName: i,
            title: l,
            description: c,
            targetType: d,
            index: u,
            dndName: I,
            onEdit: E,
            onMove: S,
            disabled: g = !1,
          } = e,
          h = a.useRef(null),
          C = a.useRef(null),
          {
            drag: x,
            dragPreview: p,
            drop: R,
            isDragging: L,
          } = (0, T.Z)(h, d, u, S);
        return (
          x(C),
          p(R(h)),
          (0, s.jsxs)("div", {
            ref: h,
            className: r()(N.card, { [N.cardDragging]: L, [N.disabled]: g }),
            children: [
              (0, s.jsxs)("div", {
                className: N.emojiWrapper,
                children: [
                  (0, s.jsx)(_.Z, {
                    guildId: t,
                    emojiId: n,
                    emojiName: i,
                    className: N.emoji,
                  }),
                  !g &&
                    (0, s.jsx)("div", {
                      ref: C,
                      className: N.dragIconWrapper,
                      "data-dnd-name": I,
                      children: (0, s.jsx)(o.DragIcon, {
                        size: "xs",
                        color: "currentColor",
                        className: N.dragIcon,
                      }),
                    }),
                ],
              }),
              (0, s.jsxs)("div", {
                className: N.cardText,
                children: [
                  (0, s.jsx)(o.Text, {
                    color: "header-primary",
                    variant: "text-md/semibold",
                    children: l,
                  }),
                  (0, s.jsx)(o.Text, {
                    color: "interactive-normal",
                    variant: "text-sm/normal",
                    children: c,
                  }),
                ],
              }),
              (0, s.jsx)("div", {
                className: N.cardActions,
                children:
                  !g &&
                  (0, s.jsx)(o.Clickable, {
                    className: N.cardActionButton,
                    onClick: g ? void 0 : E,
                    "aria-label":
                      m.Z.Messages
                        .GUILD_ROLE_SUBSCRIPTION_BENEFIT_EDIT_ARIA_LABEL,
                    "aria-disabled": g,
                    children: (0, s.jsx)(o.PencilIcon, {
                      size: "xs",
                      color: "currentColor",
                      className: N.cardActionButtonIcon,
                    }),
                  }),
              }),
            ],
          })
        );
      }
      function g(e) {
        let { benefits: t, onEdit: n, onMove: i, guildId: o } = e,
          _ = (0, c.Dt)(),
          { isDragging: T } = (0, l.f)((e) => ({
            isDragging: e.getItemType() === _,
          })),
          m = (0, u.mY)();
        return 0 === t.length
          ? null
          : (0, s.jsx)("div", {
              className: r()(N.container, { [N.isDragging]: T }),
              children: t.map((e, t) =>
                (0, s.jsxs)(
                  a.Fragment,
                  {
                    children: [
                      t > 0
                        ? (0, s.jsx)("div", { className: N.divider })
                        : null,
                      (0, s.jsx)(S, {
                        guildId: o,
                        emojiId: e.emoji_id,
                        emojiName: e.emoji_name,
                        title: (0, I.Z)(e),
                        description: e.description,
                        targetType: _,
                        index: t,
                        dndName: (0, E.Z)(e),
                        onEdit: () => n(t),
                        onMove: i,
                        disabled: m,
                      }),
                    ],
                  },
                  (0, d.ab)(e),
                ),
              ),
            });
      }
      function h(e) {
        let { onClick: t, children: n, disabled: a = !1 } = e;
        return (0, s.jsx)(o.Clickable, {
          className: N.container,
          onClick: a ? void 0 : t,
          "aria-disabled": a,
          children: (0, s.jsxs)("div", {
            className: r()(N.card, N.addBenefit, { [N.disabled]: a }),
            children: [
              (0, s.jsx)("div", {
                className: N.emojiWrapper,
                children: (0, s.jsx)(o.CirclePlusIcon, {
                  size: "xs",
                  color: "currentColor",
                  className: N.addBenefitIcon,
                }),
              }),
              (0, s.jsx)("div", {
                className: N.cardText,
                children: (0, s.jsx)(o.Text, {
                  color: "header-primary",
                  variant: "text-md/normal",
                  children: n,
                }),
              }),
            ],
          }),
        });
      }
    },
    331146: function (e, t, n) {
      "use strict";
      n.d(t, {
        E: function () {
          return I;
        },
      });
      var s = n(735250);
      n(470079);
      var a = n(120356),
        i = n.n(a),
        r = n(481060),
        l = n(768581),
        o = n(723047),
        c = n(570533),
        d = n(689938),
        u = n(246435);
      function _(e) {
        let { emoji: t, onRemoveEmoji: n, disabled: a = !1 } = e,
          o = l.ZP.getEmojiURL({ id: t.id, animated: t.animated, size: 32 });
        return (0, s.jsxs)("div", {
          className: i()(u.emojiRow, { [u.disabled]: a }),
          children: [
            (0, s.jsx)("img", { className: u.emojiImage, src: o, alt: t.name }),
            (0, s.jsx)(r.Text, {
              color: "header-primary",
              variant: "text-md/medium",
              className: u.emojiAlias,
              children: t.name,
            }),
            (0, s.jsx)(r.Button, {
              look: r.Button.Looks.BLANK,
              size: r.Button.Sizes.ICON,
              className: u.deleteButton,
              onClick: () => n(t),
              "aria-label":
                d.Z.Messages
                  .GUILD_ROLE_SUBSCRIPTION_SETUP_EMOJI_REMOVE_BUTTON_ARIA_LABEL,
              disabled: a,
              children: (0, s.jsx)(r.TrashIcon, {
                size: "md",
                color: "currentColor",
                className: u.trashIcon,
              }),
            }),
          ],
        });
      }
      function I(e) {
        let { tierEmojiIds: t, guildId: n, onRemoveEmoji: a } = e,
          i = (0, c.Z)(n),
          r = null != t ? i.filter((e) => t.has(e.id)) : [],
          l = (0, o.mY)();
        return (0, s.jsx)("div", {
          className: u.container,
          children: r.map((e) =>
            (0, s.jsx)(
              _,
              { emoji: e, onRemoveEmoji: () => a(e), disabled: l },
              e.id,
            ),
          ),
        });
      }
    },
    15030: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return g;
        },
      });
      var s = n(735250),
        a = n(470079),
        i = n(442837),
        r = n(704215),
        l = n(481060),
        o = n(725803),
        c = n(605236),
        d = n(999382),
        u = n(614342),
        _ = n(303737),
        I = n(618748),
        E = n(500395),
        T = n(975464),
        m = n(981631),
        N = n(674563),
        S = n(15594);
      function g() {
        let e;
        let t = (0, i.e7)([d.Z], () => d.Z.getGuild()),
          { application: n, loading: g } = (0, o.Z)(
            null == t ? void 0 : t.id,
            N.wW.GUILD_ROLE_SUBSCRIPTIONS,
          ),
          h = a.useRef(null),
          C = (0, u.Z)(null != t ? t : void 0);
        a.useEffect(() => {
          null != t &&
            (0, _.sO)(t) &&
            (0, c.EW)(r.z.SERVER_SUBSCRIPTION_SETTINGS_NEW_BADGE_TIER_TEMPLATE);
        }, [t]);
        let x =
          (null == t ? void 0 : t.hasFeature(m.oNc.CREATOR_MONETIZABLE)) ===
            !1 &&
          (null == t
            ? void 0
            : t.hasFeature(m.oNc.CREATOR_MONETIZABLE_PROVISIONAL)) === !1;
        return (
          (e =
            null == t || g
              ? (0, s.jsx)(l.Spinner, {})
              : null != C
                ? (0, s.jsx)(E.Z, { guild: t, config: C })
                : x
                  ? (0, s.jsx)(T.Z, { guild: t })
                  : (0, s.jsx)(I.Z, { guild: t, application: n })),
          (0, s.jsx)("div", {
            className: S.settingsColumn,
            children: (0, s.jsx)("div", {
              className: S.settingsContainer,
              children: (0, s.jsx)(l.ScrollerAuto, {
                className: S.settingsScroller,
                children: (0, s.jsx)("main", {
                  ref: h,
                  className: S.settingsContent,
                  children: (0, s.jsx)(l.FocusRingScope, {
                    containerRef: h,
                    children: e,
                  }),
                }),
              }),
            }),
          })
        );
      }
    },
    909656: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return b;
        },
      }),
        n(47120);
      var s = n(735250),
        a = n(470079),
        i = n(120356),
        r = n.n(i),
        l = n(512722),
        o = n.n(l),
        c = n(392711),
        d = n.n(c),
        u = n(77866),
        _ = n(215569),
        I = n(477690),
        E = n(481060),
        T = n(852860),
        m = n(393238),
        N = n(313201),
        S = n(345861),
        g = n(208567),
        h = n(73346),
        C = n(624138),
        x = n(584825),
        p = n(723047),
        R = n(927954),
        L = n(164e3),
        f = n(587431),
        O = n(293810),
        A = n(333866),
        M = n(689938),
        D = n(155161);
      let v = (0, C.Mg)(
        I.Z.GUILD_SETTINGS_ROLE_SUBSCRIPTIONS_OVERVIEW_SETTINGS_MAX_WIDTH,
      );
      function j() {
        return [
          {
            name: M.Z.Messages
              .GUILD_ROLE_SUBSCRIPTION_FORMAT_SOME_CHANNELS_NAME,
            desc: M.Z.Messages
              .GUILD_ROLE_SUBSCRIPTION_FORMAT_SOME_CHANNELS_DESCRIPTION,
            value: O.e3.SOME_CHANNELS,
            icon: E.TextIcon,
          },
          {
            name: M.Z.Messages.GUILD_ROLE_SUBSCRIPTION_FORMAT_ALL_CHANNELS_NAME,
            desc: M.Z.Messages
              .GUILD_ROLE_SUBSCRIPTION_FORMAT_ALL_CHANNELS_DESCRIPTION,
            value: O.e3.ALL_CHANNELS,
            icon: E.KeyIcon,
          },
        ];
      }
      function Z(e) {
        let {
            value: t,
            "aria-labelledby": n,
            onChange: i,
            disabled: l = !1,
          } = e,
          { ref: o, width: c } = (0, m.Z)(),
          d = (0, u.Z)(j),
          _ = a.useMemo(
            () =>
              d.map((e) => ({
                ...e,
                icon: function () {
                  let { icon: t } = e;
                  return (0, s.jsx)("div", {
                    className: D.formatRadioIconWrapper,
                    children: (0, s.jsx)(t, { className: D.formatRadioIcon }),
                  });
                },
                radioBarClassName: D.formatOptionRadioBar,
                radioItemIconClassName: D.formatOptionRadioItemIcon,
              })),
            [d],
          ),
          I = null != c && c >= 400;
        return (0, s.jsx)("div", {
          ref: o,
          children: (0, s.jsx)(E.RadioGroup, {
            options: _,
            value: t,
            orientation: I ? "horizontal" : "vertical",
            size: E.RadioGroup.Sizes.NONE,
            className: r()({ [D.radioGroupHorizontal]: I }),
            radioItemClassName: D.formatOptionRadioItem,
            onChange: (e) => {
              let { value: t } = e;
              return i(t);
            },
            "aria-labelledby": n,
            disabled: l,
          }),
        });
      }
      function b(e) {
        var t;
        let { guild: n, isGuildProducts: i = !1 } = e,
          { format: r } = (0, L.Z)(n.id),
          l = (0, x.YB)(n.id),
          c = a.useCallback(() => {
            var e;
            return (null == l
              ? void 0
              : null === (e = l.cover_image_asset) || void 0 === e
                ? void 0
                : e.application_id) == null
              ? null
              : (0, h._W)(
                  l.cover_image_asset.application_id,
                  l.cover_image_asset,
                  v,
                );
          }, [l]),
          [u, I] = a.useState(r),
          [m, C] = a.useState(
            null !== (t = null == l ? void 0 : l.description) && void 0 !== t
              ? t
              : "",
          ),
          [j, b] = a.useState(c),
          [U, G] = a.useState(
            null == l ? void 0 : l.store_page_guild_products_default_sort,
          ),
          [P, B] = a.useState(null == l ? void 0 : l.server_shop_tab_order),
          {
            loading: y,
            error: F,
            updateSubscriptionsSettings: k,
          } = (0, x.QV)(),
          {
            imageCTA: w,
            imageAriaLabel: H,
            setFilename: V,
          } = (0, R.Z)(null == l ? void 0 : l.cover_image_asset),
          Y = (0, N.Dt)(),
          W = (0, N.Dt)(),
          z = (0, N.Dt)();
        function K(e, t) {
          o()(null != e, "Null value not allowed"),
            null != t && V(t.name),
            b(e);
        }
        let q = a.useMemo(() => {
            var e;
            return (
              (null != m &&
                m !==
                  (null !== (e = null == l ? void 0 : l.description) &&
                  void 0 !== e
                    ? e
                    : "")) ||
              (null == j ? void 0 : j.startsWith("data:")) === !0 ||
              u !== r ||
              (null == l
                ? void 0
                : l.store_page_guild_products_default_sort) !== U ||
              (null == l ? void 0 : l.server_shop_tab_order) !== P
            );
          }, [j, r, m, l, u, U, P]),
          X = null != m && "" !== m && null != j;
        a.useEffect(() => {
          var e;
          (null == l
            ? void 0
            : null === (e = l.cover_image_asset) || void 0 === e
              ? void 0
              : e.application_id) != null &&
            b(
              (0, h._W)(
                l.cover_image_asset.application_id,
                l.cover_image_asset,
                v,
              ),
            );
        }, [null == l ? void 0 : l.cover_image_asset]);
        let Q = (0, p.mY)(),
          J = a.useMemo(
            () => A.kL.map((e) => ({ label: (0, A.eJ)(e), value: e })),
            [],
          ),
          $ = a.useMemo(
            () => [
              {
                label: M.Z.Messages.GUILD_PRODUCTS_TITLE,
                value: A.a3.PRODUCTS_FIRST,
              },
              {
                label: M.Z.Messages.GUILD_ROLE_SUBSCRIPTIONS_TITLE,
                value: A.a3.SUBS_FIRST,
              },
            ],
            [],
          );
        return (0, s.jsxs)("div", {
          className: D.container,
          children: [
            null != F &&
              (0, s.jsxs)(s.Fragment, {
                children: [
                  (0, s.jsx)(f.Z, { children: F.getAnyErrorMessage() }),
                  (0, s.jsx)(E.Spacer, { size: 16 }),
                ],
              }),
            i
              ? null
              : (0, s.jsxs)(s.Fragment, {
                  children: [
                    (0, s.jsxs)(E.FormSection, {
                      title: M.Z.Messages.GUILD_ROLE_SUBSCRIPTION_FORMAT_TITLE,
                      titleId: Y,
                      disabled: Q,
                      children: [
                        (0, s.jsx)(E.FormText, {
                          type: E.FormText.Types.DESCRIPTION,
                          className: D.formDescription,
                          disabled: Q,
                          children:
                            M.Z.Messages
                              .GUILD_ROLE_SUBSCRIPTION_FORMAT_DESCRIPTION,
                        }),
                        (0, s.jsx)(Z, {
                          value: u,
                          onChange: (e) => {
                            r !== e &&
                              e === O.e3.ALL_CHANNELS &&
                              (0, E.openModal)((e) =>
                                (0, s.jsx)(E.ConfirmModal, {
                                  ...e,
                                  header:
                                    M.Z.Messages
                                      .GUILD_ROLE_SUBSCRIPTION_FORMAT_ALL_CHANNELS_DIALOG_TITLE,
                                  confirmText: M.Z.Messages.GOT_IT,
                                  confirmButtonColor: E.Button.Colors.BRAND,
                                  children: (0, s.jsx)(E.Text, {
                                    variant: "text-md/normal",
                                    children:
                                      M.Z.Messages
                                        .GUILD_ROLE_SUBSCRIPTION_FORMAT_ALL_CHANNELS_DIALOG_TEXT,
                                  }),
                                }),
                              ),
                              I(e);
                          },
                          "aria-labelledby": Y,
                          disabled: Q,
                        }),
                      ],
                    }),
                    (0, s.jsx)(E.FormDivider, { className: D.divider }),
                  ],
                }),
            (0, s.jsx)(E.FormSection, {
              title:
                M.Z.Messages
                  .GUILD_ROLE_SUBSCRIPTION_SETUP_INFO_DESCRIPTION_TITLE,
              titleId: W,
              disabled: Q,
              children: (0, s.jsx)(E.TextArea, {
                placeholder: i
                  ? M.Z.Messages
                      .GUILD_PRODUCT_SETUP_INFO_DESCRIPTION_PLACEHOLDER
                  : M.Z.Messages
                      .GUILD_ROLE_SUBSCRIPTION_SETUP_INFO_DESCRIPTION_PLACEHOLDER,
                maxLength: 1500,
                value: m,
                rows: 2,
                autosize: !0,
                onChange: C,
                "aria-labelledby": W,
                disabled: Q,
              }),
            }),
            (0, s.jsx)(E.FormDivider, { className: D.divider }),
            (0, s.jsxs)(E.FormSection, {
              title:
                M.Z.Messages
                  .GUILD_ROLE_SUBSCRIPTION_SETUP_INFO_COVER_IMAGE_TITLE,
              disabled: Q,
              children: [
                (0, s.jsx)(E.FormText, {
                  type: E.FormText.Types.DESCRIPTION,
                  className: D.formDescription,
                  disabled: Q,
                  children:
                    M.Z.Messages
                      .GUILD_ROLE_SUBSCRIPTION_SETUP_INFO_COVER_IMAGE_DESCRIPTION,
                }),
                (0, s.jsx)(g.Z, {
                  image: j,
                  hint: w,
                  showIcon: !0,
                  showRemoveButton: !1,
                  hideSize: !0,
                  className: D.coverImageUploader,
                  iconWrapperClassName: D.coverImageUploaderIconWrapper,
                  imageClassName: D.coverImageUploaderInner,
                  iconClassName: D.coverImageUploaderIcon,
                  onChange: K,
                  "aria-label": H,
                  disabled: Q,
                }),
                (0, s.jsx)(E.Spacer, { size: 16 }),
                (0, s.jsx)(S.Z, {
                  onChange: K,
                  buttonCTA: w,
                  "aria-label": H,
                  disabled: Q,
                  look: E.Button.Looks.OUTLINED,
                  color: E.Button.Colors.PRIMARY,
                }),
              ],
            }),
            i
              ? (0, s.jsxs)(s.Fragment, {
                  children: [
                    (0, s.jsx)(E.FormDivider, { className: D.divider }),
                    (0, s.jsxs)(E.FormSection, {
                      title:
                        M.Z.Messages
                          .CREATOR_MONETIZATION_SETTINGS_GUILD_PRODUCT_SORT_OPTION_TITLE,
                      titleId: z,
                      disabled: Q,
                      children: [
                        (0, s.jsx)(E.FormText, {
                          type: E.FormText.Types.DESCRIPTION,
                          className: D.formDescription,
                          disabled: Q,
                          children:
                            M.Z.Messages
                              .CREATOR_MONETIZATION_SETTINGS_GUILD_PRODUCT_SORT_OPTION_DESCRIPTION,
                        }),
                        (0, s.jsx)(E.SingleSelect, {
                          value: U,
                          placeholder: M.Z.Messages.SELECT,
                          options: J,
                          onChange: (e) => G(e),
                        }),
                      ],
                    }),
                  ],
                })
              : null,
            $.length > 0 &&
              (0, s.jsxs)(s.Fragment, {
                children: [
                  (0, s.jsx)(E.FormDivider, { className: D.divider }),
                  (0, s.jsxs)(E.FormSection, {
                    title:
                      M.Z.Messages
                        .CREATOR_MONETIZATION_SETTINGS_SERVER_SHOP_DEFAULT_TAB_OPTION_TITLE,
                    titleId: z,
                    disabled: Q,
                    children: [
                      (0, s.jsx)(E.FormText, {
                        type: E.FormText.Types.DESCRIPTION,
                        className: D.formDescription,
                        disabled: Q,
                        children:
                          M.Z.Messages
                            .CREATOR_MONETIZATION_SETTINGS_SERVER_SHOP_DEFAULT_TAB_OPTION_DESCRIPTION,
                      }),
                      (0, s.jsx)(E.SingleSelect, {
                        value: P,
                        placeholder: M.Z.Messages.SELECT,
                        options: $,
                        onChange: (e) => B(e),
                      }),
                    ],
                  }),
                ],
              }),
            (0, s.jsx)(_.W, {
              component: "div",
              className: D.contentRegion,
              children:
                q &&
                (0, s.jsx)(E.SlideIn, {
                  children: (0, s.jsx)(T.Z, {
                    submitting: y,
                    disabled: !X,
                    onReset: () => {
                      var e;
                      I(r),
                        C(
                          null !== (e = null == l ? void 0 : l.description) &&
                            void 0 !== e
                            ? e
                            : "",
                        ),
                        b(c),
                        G(
                          null == l
                            ? void 0
                            : l.store_page_guild_products_default_sort,
                        ),
                        B(null == l ? void 0 : l.server_shop_tab_order);
                    },
                    onSave: () => {
                      o()(null != l, "Settings must be defined");
                      let e = {};
                      m !== l.description && (e.description = m),
                        null != j &&
                          j.startsWith("data:") &&
                          (e.cover_image = j),
                        u !== r &&
                          (e.full_server_gate = u === O.e3.ALL_CHANNELS),
                        U !== l.store_page_guild_products_default_sort &&
                          (e.store_page_guild_products_default_sort = U),
                        P !== l.server_shop_tab_order &&
                          (e.server_shop_tab_order = P),
                        !d().isEmpty(e) && k(n.id, e);
                    },
                    saveButtonTooltip: X
                      ? void 0
                      : M.Z.Messages
                          .GUILD_ROLE_SUBSCRIPTION_SETUP_INFO_FULL_OUT_ALL_INFO,
                  }),
                }),
            }),
          ],
        });
      }
    },
    210591: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return T;
        },
      }),
        n(47120),
        n(390547);
      var s = n(735250),
        a = n(470079),
        i = n(120356),
        r = n.n(i),
        l = n(526629),
        o = n(692547),
        c = n(481060),
        d = n(259580),
        u = n(293810),
        _ = n(689938),
        I = n(143390);
      function E(e) {
        let { checked: t, children: n } = e;
        return (0, s.jsxs)("div", {
          className: I.row,
          children: [
            (0, s.jsx)(c.Text, {
              variant: "text-md/normal",
              color: "interactive-active",
              className: I.rowText,
              children: n,
            }),
            t
              ? (0, s.jsx)(c.CircleCheckIcon, {
                  size: "md",
                  color: "currentColor",
                  secondaryColor: o.Z.unsafe_rawColors.WHITE_500.css,
                  className: r()(I.rowIcon, I.rowIconChecked),
                })
              : (0, s.jsx)("div", {
                  className: r()(I.rowIcon, I.rowIconEmpty),
                }),
          ],
        });
      }
      function T(e) {
        let { children: t } = e,
          [n, i] = a.useState(!1),
          r = t.flatMap((e) => e.items.map((e) => e.completed)),
          o = r.filter((e) => e).length / r.length,
          T = 1 === o,
          m = (0, c.useSpring)({ width: "".concat(100 * o, "%") }),
          N = [
            _.Z.Messages.GUILD_ROLE_SUBSCRIPTION_CHECKLIST_LINK_PROMO_PAGE.format(
              { promoPageGuideUrl: u.iv.PROMO_PAGE_GUIDE },
            ),
            _.Z.Messages.GUILD_ROLE_SUBSCRIPTION_CHECKLIST_LINK_CASE_STUDIES.format(
              { caseStudiesUrl: u.iv.CASE_STUDIES },
            ),
            _.Z.Messages.GUILD_ROLE_SUBSCRIPTION_CHECKLIST_LINK_SUBSCRIPTION_OFFERING.format(
              {
                subscriptionOfferingGuideUrl: u.iv.SUBSCRIPTION_OFFERING_GUIDE,
              },
            ),
            _.Z.Messages.GUILD_ROLE_SUBSCRIPTION_CHECKLIST_LINK_TIER_STRUCTURE.format(
              { tierStructureGuideUrl: u.iv.TIER_STRUCTURE_GUIDE },
            ),
          ],
          S = n
            ? null
            : (0, s.jsxs)(s.Fragment, {
                children: [
                  !T &&
                    t.map((e, t) => {
                      let { title: n, items: i } = e;
                      return (0, s.jsxs)(
                        a.Fragment,
                        {
                          children: [
                            t > 0 &&
                              (0, s.jsx)(c.FormDivider, {
                                className: I.divider,
                              }),
                            (0, s.jsx)(c.FormTitle, {
                              className: I.categoryTitle,
                              children: n,
                            }),
                            i.map((e, t) =>
                              (0, s.jsx)(
                                E,
                                {
                                  children: e.description,
                                  checked: e.completed,
                                },
                                t,
                              ),
                            ),
                          ],
                        },
                        t,
                      );
                    }),
                  (0, s.jsx)(c.FormDivider, { className: I.divider }),
                  (0, s.jsx)(c.FormTitle, {
                    className: I.categoryTitle,
                    children:
                      _.Z.Messages
                        .GUILD_ROLE_SUBSCRIPTION_CHECKLIST_LEARN_MORE_SECTION_TITLE,
                  }),
                  N.map((e, t) =>
                    (0, s.jsx)(
                      "div",
                      {
                        className: I.row,
                        children: (0, s.jsx)(c.Text, {
                          variant: "text-md/normal",
                          children: e,
                        }),
                      },
                      t,
                    ),
                  ),
                ],
              });
        return (0, s.jsx)("div", {
          className: I.checklist,
          children: (0, s.jsxs)("div", {
            className: I.container,
            children: [
              (0, s.jsxs)(c.Clickable, {
                className: I.headerBar,
                onClick: () => i((e) => !e),
                children: [
                  (0, s.jsx)(c.Heading, {
                    variant: "heading-md/semibold",
                    className: I.headerText,
                    children:
                      _.Z.Messages.GUILD_ROLE_SUBSCRIPTION_CHECKLIST_HEADER,
                  }),
                  (0, s.jsx)(d.Z, {
                    direction: n ? d.Z.Directions.DOWN : d.Z.Directions.UP,
                    className: I.headerCaret,
                  }),
                ],
              }),
              !T &&
                (0, s.jsx)("div", {
                  className: I.progressBarOuter,
                  children: (0, s.jsx)(l.animated.div, {
                    className: I.progressBarInner,
                    style: m,
                  }),
                }),
              S,
            ],
          }),
        });
      }
    },
    618748: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return P;
        },
      });
      var s = n(735250);
      n(470079);
      var a = n(442837),
        i = n(481060),
        r = n(204875),
        l = n(715796),
        o = n(434404),
        c = n(999382),
        d = n(962086),
        u = n(225675),
        _ = n(703656),
        I = n(577275),
        E = n(430824),
        T = n(594174),
        m = n(823379),
        N = n(730647),
        S = n(584825),
        g = n(723047),
        h = n(303737),
        C = n(568074),
        x = n(411667),
        p = n(903773),
        R = n(822531),
        L = n(909656),
        f = n(210591),
        O = n(927731),
        A = n(798680),
        M = n(509026),
        D = n(981631),
        v = n(176505),
        j = n(829857),
        Z = n(689938),
        b = n(811843);
      function U(e) {
        let { application: t, guild: n } = e,
          i = (0, S.YB)(n.id),
          r = (0, S.qi)(n.id),
          l = r.some(
            (e) =>
              null != e.name &&
              null != e.subscription_plans[0] &&
              null != e.description &&
              null != e.image_asset,
          ),
          o = (0, a.e7)([E.Z], () => E.Z.getRoles(n.id)),
          c = r
            .map((e) => o[e.role_id])
            .some((e) => null != e && 0 !== e.color),
          d = r.some((e) => e.role_benefits.benefits.length > 0),
          u = null != t && n.hasFeature(D.oNc.ROLE_SUBSCRIPTIONS_ENABLED),
          _ = [
            {
              title:
                Z.Z.Messages.GUILD_ROLE_SUBSCRIPTION_SETTINGS_SECTION_PAYMENT,
              items: [
                {
                  description:
                    Z.Z.Messages
                      .GUILD_ROLE_SUBSCRIPTION_CHECKLIST_PAYMENT_ENABLE,
                  completed: u,
                },
              ],
            },
            {
              title:
                Z.Z.Messages
                  .GUILD_ROLE_SUBSCRIPTION_SETTINGS_SECTION_BASIC_INFO,
              items: [
                {
                  description:
                    Z.Z.Messages.GUILD_ROLE_SUBSCRIPTION_CHECKLIST_INFO_FORMAT,
                  completed: !0,
                },
                {
                  description:
                    Z.Z.Messages
                      .GUILD_ROLE_SUBSCRIPTION_CHECKLIST_INFO_DESCRIPTION,
                  completed:
                    (null == i ? void 0 : i.description) != null &&
                    "" !== i.description,
                },
                {
                  description:
                    Z.Z.Messages
                      .GUILD_ROLE_SUBSCRIPTION_CHECKLIST_INFO_COVER_IMAGE,
                  completed: (null == i ? void 0 : i.cover_image_asset) != null,
                },
              ],
            },
            {
              title:
                Z.Z.Messages.GUILD_ROLE_SUBSCRIPTION_SETTINGS_SECTION_TIERS,
              items: [
                {
                  description:
                    Z.Z.Messages.GUILD_ROLE_SUBSCRIPTION_CHECKLIST_TIER_BASICS,
                  completed: l,
                },
                {
                  description:
                    Z.Z.Messages.GUILD_ROLE_SUBSCRIPTION_CHECKLIST_TIER_FLAIR,
                  completed: c,
                },
                {
                  description:
                    Z.Z.Messages.GUILD_ROLE_SUBSCRIPTION_CHECKLIST_TIER_PERKS,
                  completed: d,
                },
              ],
            },
          ];
        return (0, s.jsx)(f.Z, { children: _ });
      }
      function G(e) {
        let { application: t } = e,
          { teams: n } = (0, I.Z)({ refreshOnDepChange: !1 }),
          a = n.find((e) => {
            var n;
            return (
              e.id ===
              (null == t
                ? void 0
                : null === (n = t.team) || void 0 === n
                  ? void 0
                  : n.id)
            );
          }),
          r = [j.C.ACTION_REQUIRED, j.C.BLOCKED, j.C.SUSPENDED];
        return (null == a ? void 0 : a.payout_account_status) != null &&
          r.includes(null == a ? void 0 : a.payout_account_status)
          ? (0, s.jsxs)(s.Fragment, {
              children: [
                (0, s.jsx)(i.Spacer, { size: 16 }),
                (0, s.jsx)(p.Z, {
                  children:
                    Z.Z.Messages.GUILD_ROLE_SUBSCRIPTION_SETTINGS_PAYOUTS_PROBLEM_WARNING.format(
                      { url: D.EYA.DEVELOPER_PORTAL_PAYOUT_SETTINGS(a.id) },
                    ),
                }),
                (0, s.jsx)(i.Spacer, { size: 16 }),
              ],
            })
          : null;
      }
      function P(e) {
        let t,
          { guild: n, application: i } = e,
          r = (0, a.e7)([c.Z], () => c.Z.getProps().subsection),
          o = null != i && n.hasFeature(D.oNc.ROLE_SUBSCRIPTIONS_ENABLED);
        return (
          (0, l.P)(n),
          (t = o
            ? (function (e) {
                if (e === D.KsC.ROLE_SUBSCRIPTION_EMOJI) return A.ue.EMOJIS;
                return A.ue.TIERS;
              })(r)
            : A.ue.PAYMENT),
          (0, s.jsx)(N.l, {
            guildId: n.id,
            refetchOnMount: !0,
            children: (0, s.jsx)(g.in, {
              guildId: n.id,
              children: (0, s.jsx)(A.M7, {
                initialTab: t,
                children: (0, s.jsx)(B, { guild: n, application: i }),
              }),
            }),
          })
        );
      }
      function B(e) {
        let t,
          { guild: n, application: l } = e,
          c = null != l && n.hasFeature(D.oNc.ROLE_SUBSCRIPTIONS_ENABLED),
          { currentTab: I, setCurrentTab: S } = (0, A.dw)(),
          g = (0, N.f)(),
          p = (0, a.e7)([T.default], () => T.default.getCurrentUser()),
          f = (0, C.Z)(n.id),
          j = n.isOwner(p),
          P = () => {
            let e = E.Z.getRole(n.id, n.getEveryoneRoleId());
            if (null == e) return;
            o.Z.close();
            let t = { [e.id]: e };
            (0, d.iD)(n.id, {
              type: u.z.SERVER_SHOP,
              roles: t,
              initialTab: "role_subscriptions",
              returnToSection: D.pNK.ROLE_SUBSCRIPTIONS,
            }),
              (0, h.be)(n.id),
              (0, _.uL)(D.Z5c.CHANNEL(n.id, v.oC.ROLE_SUBSCRIPTIONS));
          };
        if (!g) return (0, s.jsx)(i.Spinner, {});
        switch (I) {
          case A.ue.BASIC_INFO:
            t = (0, s.jsx)(L.Z, { guild: n });
            break;
          case A.ue.TIERS:
            t = (0, s.jsx)(O.Z, { guildId: n.id });
            break;
          case A.ue.PAYMENT:
            t = (0, s.jsx)(R.Z, { guild: n });
            break;
          case A.ue.EMOJIS:
            t = (0, s.jsx)(M.Z, { guild: n });
            break;
          default:
            (0, m.vE)(I);
        }
        return (0, s.jsxs)("div", {
          className: b.container,
          children: [
            (0, s.jsxs)("div", {
              className: b.mainContent,
              children: [
                (0, s.jsx)(i.FormTitle, {
                  tag: "h1",
                  children: Z.Z.Messages.GUILD_ROLE_SUBSCRIPTIONS_TITLE,
                }),
                (0, s.jsx)(i.FormText, {
                  type: i.FormText.Types.DESCRIPTION,
                  children:
                    Z.Z.Messages.GUILD_ROLE_SUBSCRIPTION_SETTINGS_DESCRIPTION,
                }),
                (0, s.jsx)(x.Z, { guild: n }),
                c && (0, s.jsx)(G, { application: l }),
                (0, s.jsxs)("div", {
                  className: b.tabBarContainer,
                  children: [
                    (0, s.jsxs)(i.TabBar, {
                      className: b.tabBar,
                      "aria-label": Z.Z.Messages.OPTIONS,
                      selectedItem: I,
                      type: "top",
                      look: "brand",
                      onItemSelect: S,
                      children: [
                        (0, s.jsx)(r.Z, {
                          id: A.ue.BASIC_INFO,
                          disabledTooltip:
                            Z.Z.Messages
                              .GUILD_ROLE_SUBSCRIPTION_SETTINGS_SECTION_BASIC_INFO_NEEDS_APPLICATION,
                          disabled: !c,
                          children:
                            Z.Z.Messages
                              .GUILD_ROLE_SUBSCRIPTION_SETTINGS_SECTION_BASIC_INFO,
                        }),
                        (0, s.jsx)(r.Z, {
                          id: A.ue.TIERS,
                          disabledTooltip:
                            Z.Z.Messages
                              .GUILD_ROLE_SUBSCRIPTION_SETTINGS_SECTION_BASIC_INFO_NEEDS_APPLICATION,
                          disabled: !c,
                          children:
                            Z.Z.Messages
                              .GUILD_ROLE_SUBSCRIPTION_SETTINGS_SECTION_TIERS,
                        }),
                        (0, s.jsx)(r.Z, {
                          id: A.ue.EMOJIS,
                          disabledTooltip:
                            Z.Z.Messages
                              .GUILD_ROLE_SUBSCRIPTION_SETTINGS_SECTION_BASIC_INFO_NEEDS_APPLICATION,
                          disabled: !c,
                          children:
                            Z.Z.Messages
                              .GUILD_ROLE_SUBSCRIPTION_SETTINGS_SECTION_EMOJI,
                        }),
                        j
                          ? (0, s.jsx)(i.TabBar.Item, {
                              className: b.__invalid_tabBarItem,
                              id: A.ue.PAYMENT,
                              children:
                                Z.Z.Messages
                                  .GUILD_ROLE_SUBSCRIPTION_SETTINGS_SECTION_PAYMENT,
                            })
                          : null,
                      ],
                    }),
                    c &&
                      (0, s.jsx)("div", {
                        className: b.previewButton,
                        children: (0, s.jsx)(i.Tooltip, {
                          text: Z.Z.Messages
                            .GUILD_ROLE_SUBSCRIPTION_SETTINGS_SECTION_PREVIEW_DISABLED,
                          children: (e) => {
                            let { onMouseEnter: t, onMouseLeave: n } = e;
                            return (0, s.jsx)(i.Button, {
                              disabled: f,
                              onMouseEnter: f ? t : void 0,
                              onMouseLeave: f ? n : void 0,
                              onClick: P,
                              color: i.Button.Colors.PRIMARY,
                              size: i.Button.Sizes.SMALL,
                              grow: !f,
                              look: i.Button.Looks.OUTLINED,
                              className: b.previewButton,
                              children:
                                Z.Z.Messages
                                  .GUILD_ROLE_SUBSCRIPTION_SETTINGS_SECTION_PREVIEW,
                            });
                          },
                        }),
                      }),
                  ],
                }),
                t,
              ],
            }),
            (0, s.jsx)(U, { application: l, guild: n }),
          ],
        });
      }
    },
    927731: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return f;
        },
      }),
        n(47120);
      var s = n(735250),
        a = n(470079),
        i = n(120356),
        r = n.n(i),
        l = n(392711),
        o = n(399606),
        c = n(215569),
        d = n(481060),
        u = n(852860),
        _ = n(999382),
        I = n(644542),
        E = n(923726),
        T = n(584825),
        m = n(295141),
        N = n(723047),
        S = n(290348),
        g = n(450215),
        h = n(981631),
        C = n(689938),
        x = n(443305);
      let p = "guild-role-subscription-tier-template-selector",
        R = (e) => {
          let [t, n] = a.useState(!0),
            [s, i] = a.useState();
          return (
            a.useEffect(() => {
              n(!0),
                (0, m.X)(e).then((e) => {
                  i(e), n(!1);
                });
            }, [e]),
            { loading: t, priceTiers: s }
          );
        };
      function L(e) {
        let { guildId: t, priceTiers: i, groupListingId: m } = e,
          R = (0, T._k)(m),
          {
            editStateIds: L,
            addNewEditStateId: f,
            addNewEditStateFromTemplate: O,
            removeEditStateId: A,
          } = S.B7(m, t, { includeSoftDeleted: !0 }),
          [M, D] = a.useState({}),
          v = a.useMemo(() => {
            let e = L.map((e) => {
              var t;
              return null !== (t = M[e]) && void 0 !== t ? t : e;
            });
            return (0, l.uniq)(e);
          }, [L, M]),
          j = (e, t) => {
            D((n) => ({ ...n, [e]: t }));
          },
          Z = (0, E.ss)(t),
          b = (0, E.Gp)(),
          U = a.useCallback(() => {
            b && I.jJ.trackExposure({ guildId: t, location: "b2d9de_1" }),
              b && Z
                ? (0, d.openModalLazy)(
                    async () => {
                      let { default: e } = await n
                        .e("9558")
                        .then(n.bind(n, 34460));
                      return (n) =>
                        (0, s.jsx)(e, {
                          ...n,
                          guildId: t,
                          addNewEditStateFromTemplate: O,
                          addNewEditStateFromScratch: f,
                          priceTiers: i,
                        });
                    },
                    { modalKey: p },
                  )
                : f();
          }, [t, O, f, i, b, Z]),
          G = S.Lo(v),
          P = a.useCallback(() => v.forEach(S.GM), [v]),
          B = (0, N.mY)(),
          y = (0, o.e7)([_.Z], () => _.Z.getProps().subsection);
        return (
          a.useEffect(
            () => (
              y === h.KsC.ROLE_SUBSCRIPTION_TIER_TEMPLATE && U(),
              () => {
                (0, d.closeModal)(p);
              }
            ),
            [y, U],
          ),
          (0, s.jsxs)(s.Fragment, {
            children: [
              (0, s.jsxs)("div", {
                className: x.groupListings,
                children: [
                  v.map((e) =>
                    (0, s.jsx)(
                      g.Z,
                      {
                        guildId: t,
                        initialEditStateId: e,
                        allSubscriptionListings: R,
                        priceTiers: i,
                        groupListingId: m,
                        onDeleteEditState: () => A(e),
                        onBeforeDispatchNewListing: (t) => j(t.id, e),
                        onAfterDispatchNewListing: () => A(e),
                      },
                      e,
                    ),
                  ),
                  (0, s.jsxs)(d.Clickable, {
                    onClick: B ? void 0 : U,
                    className: r()(x.createTierButton, { [x.disabled]: B }),
                    "aria-disabled": B,
                    children: [
                      (0, s.jsx)(d.CirclePlusIcon, {
                        size: "xs",
                        color: "currentColor",
                        className: x.createTierIcon,
                      }),
                      (0, s.jsx)(d.Text, {
                        variant: "text-md/normal",
                        color: "interactive-active",
                        children:
                          C.Z.Messages
                            .GUILD_SETTINGS_ROLE_SUBSCRIPTION_TIER_CARD_CREATE,
                      }),
                    ],
                  }),
                ],
              }),
              (0, s.jsx)(c.W, {
                component: "div",
                className: x.contentRegion,
                children:
                  G &&
                  (0, s.jsx)(d.SlideIn, {
                    children: (0, s.jsx)(u.Z, { onReset: P }),
                  }),
              }),
            ],
          })
        );
      }
      function f(e) {
        let { guildId: t } = e,
          { priceTiers: n } = R(t),
          a = (0, T.GG)(t),
          { maxTiers: i } = (0, E.s1)(t),
          r = a.map((e) => e.id);
        return (0, s.jsxs)(d.FormSection, {
          title: C.Z.Messages.GUILD_SETTINGS_ROLE_SUBSCRIPTION_TIERS_TAB_TITLE,
          className: x.container,
          children: [
            (0, s.jsx)(d.FormText, {
              type: d.FormText.Types.DESCRIPTION,
              children:
                C.Z.Messages.GUILD_SETTINGS_ROLE_SUBSCRIPTION_TIERS_TAB_DESCRIPTION.format(
                  { maxTiers: i },
                ),
            }),
            (0, s.jsx)(d.Spacer, { size: 16 }),
            (0, s.jsx)(L, { priceTiers: n, guildId: t, groupListingId: r[0] }),
          ],
        });
      }
    },
    220685: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return j;
        },
      }),
        n(47120);
      var s = n(735250),
        a = n(470079),
        i = n(120356),
        r = n.n(i),
        l = n(512722),
        o = n.n(l),
        c = n(392711),
        d = n.n(c),
        u = n(442837),
        _ = n(692547),
        I = n(215569),
        E = n(481060),
        T = n(484614),
        m = n(852860),
        N = n(782568),
        S = n(367907),
        g = n(674180),
        h = n(999382),
        C = n(626135),
        x = n(730647),
        p = n(584825),
        R = n(981631),
        L = n(689938),
        f = n(842976);
      let O = [
          14361481, 12200937, 8804082, 6576370, 5335282, 2652110, 2128781,
          2196594, 4752414, 13064760, 13058360, 12401e3, 12933021, 5659039,
          4092591, 5868359, 6586142, 8876063, 8484432, 9979976, 5269106,
          3421236,
        ],
        A =
          /^(https?:\/\/)?(?:m\.|www\.)?(youtu\.be|youtube\.com)\/(embed\/|v\/|watch\?v=|watch\?.+&v=)?((\w|-){11})(?:\S+)?$/,
        M = O[4],
        D = (e) => {
          var t, n;
          let { guild: i, canEnable: l } = e,
            c = (0, p.YB)(i.id),
            { loading: u, updateSubscriptionsSettings: h } = (0, p.QV)(),
            [x, D] = a.useState(i.hasFeature(R.oNc.CREATOR_STORE_PAGE)),
            [v, j] = a.useState(
              null !== (t = null == c ? void 0 : c.store_page_primary_color) &&
                void 0 !== t
                ? t
                : M,
            ),
            [Z, b] = a.useState(null == c ? void 0 : c.store_page_trailer_url),
            U = null == Z || null != Z.match(A),
            [G, P] = a.useState(
              null !==
                (n = null == c ? void 0 : c.store_page_show_subscriber_count) &&
                void 0 !== n &&
                n,
            ),
            B = a.useRef(null == c ? void 0 : c.store_page_slug).current,
            y =
              x !== i.hasFeature(R.oNc.CREATOR_STORE_PAGE) ||
              ((null == c ? void 0 : c.store_page_primary_color) == null &&
                v !== M) ||
              ((null == c ? void 0 : c.store_page_primary_color) != null &&
                v !== (null == c ? void 0 : c.store_page_primary_color)) ||
              Z !== (null == c ? void 0 : c.store_page_trailer_url) ||
              (null != G &&
                G !==
                  (null == c ? void 0 : c.store_page_show_subscriber_count)),
            F = async () => {
              o()(null != c, "Settings must be defined");
              let e = {};
              x !== i.hasFeature(R.oNc.CREATOR_STORE_PAGE) &&
                (e.store_page_enabled = x),
                (((null == c ? void 0 : c.store_page_primary_color) == null &&
                  v !== M) ||
                  ((null == c ? void 0 : c.store_page_primary_color) != null &&
                    v !== (null == c ? void 0 : c.store_page_primary_color))) &&
                  (e.store_page_primary_color = v),
                Z !== (null == c ? void 0 : c.store_page_trailer_url) &&
                  (e.store_page_trailer_url = Z),
                G !==
                  (null == c ? void 0 : c.store_page_show_subscriber_count) &&
                  (e.store_page_show_subscriber_count = G),
                !d().isEmpty(e) &&
                  (await h(i.id, e),
                  "store_page_enabled" in e &&
                    C.default.track(
                      R.rMx.GUILD_ROLE_SUBSCRIPTION_STORE_PAGE_TOGGLED,
                      { enabled: x, ...(0, S.hH)(i.id) },
                    ));
            },
            k = R.EYA.ROLE_SUBSCRIPTION_STORE_PAGE(B),
            w =
              null != Z &&
              Z === (null == c ? void 0 : c.store_page_trailer_url),
            { shouldRestrictUpdatingCreatorMonetizationSettings: H } = (0,
            g.gX)(i.id),
            V = H || !U;
          return (0, s.jsxs)("div", {
            children: [
              (0, s.jsx)(E.FormTitle, {
                tag: "h1",
                children:
                  L.Z.Messages
                    .GUILD_ROLE_SUBSCRIPTION_STORE_PAGE_SETTINGS_TITLE,
              }),
              (0, s.jsx)(E.FormText, {
                type: E.FormText.Types.DESCRIPTION,
                children:
                  L.Z.Messages
                    .GUILD_ROLE_SUBSCRIPTION_STORE_PAGE_SETTINGS_DESCRIPTION,
              }),
              (0, s.jsx)(E.FormSwitch, {
                className: f.enableSwitch,
                value: x,
                disabled: H || (!x && !l),
                tooltipNote:
                  x || l
                    ? void 0
                    : L.Z.Messages
                        .GUILD_ROLE_SUBSCRIPTION_STORE_PAGE_SETTINGS_PRIMARY_TOGGLE_DISABLED_TOOLTIP,
                hideBorder: !0,
                onChange: (e) => D(e),
                children: (0, s.jsx)(E.Text, {
                  variant: "text-md/semibold",
                  color: "header-primary",
                  children:
                    L.Z.Messages
                      .GUILD_ROLE_SUBSCRIPTION_STORE_PAGE_SETTINGS_ENABLE,
                }),
              }),
              (0, s.jsxs)(E.FormItem, {
                title:
                  L.Z.Messages
                    .GUILD_ROLE_SUBSCRIPTION_STORE_PAGE_SETTINGS_PROMO_URL,
                disabled: H,
                children: [
                  (0, s.jsx)(T.Z, {
                    value: k,
                    className: r()({ [f.disabled]: H }),
                  }),
                  (0, s.jsx)(E.Button, {
                    onClick: () => (0, N.Z)(k),
                    className: f.openPageButton,
                    disabled: H,
                    children:
                      L.Z.Messages
                        .GUILD_ROLE_SUBSCRIPTION_STORE_PAGE_SETTINGS_GO_TO_PAGE,
                  }),
                ],
              }),
              (0, s.jsx)(E.FormDivider, { className: f.divider }),
              (0, s.jsxs)(E.FormItem, {
                title:
                  L.Z.Messages
                    .GUILD_ROLE_SUBSCRIPTION_STORE_PAGE_SETTINGS_ACCENT_COLOR_TITLE,
                disabled: H,
                children: [
                  (0, s.jsx)(E.FormText, {
                    disabled: H,
                    children:
                      L.Z.Messages
                        .GUILD_ROLE_SUBSCRIPTION_STORE_PAGE_SETTINGS_ACCENT_COLOR_DESCRIPTION,
                  }),
                  (0, s.jsxs)("div", {
                    className: f.accentColorContainer,
                    children: [
                      (0, s.jsx)(E.Button, {
                        onClick: () => null,
                        color: E.Button.Colors.CUSTOM,
                        style: {
                          backgroundColor: "#".concat(
                            v.toString(16).padStart(6, "0"),
                          ),
                        },
                        className: f.buttonPreview,
                        disabled: H,
                        children:
                          L.Z.Messages
                            .GUILD_ROLE_SUBSCRIPTION_STORE_PAGE_SETTINGS_ACCENT_COLOR_BUTTON_PREVIEW,
                      }),
                      (0, s.jsx)(E.ColorPicker, {
                        colors: O,
                        customColor: null,
                        defaultColor: M,
                        value: v,
                        onChange: (e) => j(e),
                        renderDefaultButton: () => null,
                        renderCustomButton: () => null,
                        colorContainerClassName: f.hideColorButtons,
                        disabled: H,
                      }),
                    ],
                  }),
                ],
              }),
              (0, s.jsx)(E.FormDivider, { className: f.divider }),
              (0, s.jsxs)(E.FormItem, {
                title:
                  L.Z.Messages
                    .GUILD_ROLE_SUBSCRIPTION_STORE_PAGE_SETTINGS_TRAILER_TITLE,
                disabled: H,
                children: [
                  (0, s.jsx)(E.FormText, {
                    disabled: H,
                    children:
                      L.Z.Messages
                        .GUILD_ROLE_SUBSCRIPTION_STORE_PAGE_SETTINGS_TRAILER_DESCRIPTION,
                  }),
                  (0, s.jsx)(E.TextInput, {
                    value: null != Z ? Z : void 0,
                    onChange: (e) => b("" === e ? null : e),
                    error: U
                      ? null
                      : L.Z.Messages
                          .GUILD_ROLE_SUBSCRIPTION_STORE_PAGE_SETTINGS_TRAILER_BAD_LINK,
                    placeholder:
                      L.Z.Messages
                        .GUILD_ROLE_SUBSCRIPTION_STORE_PAGE_SETTINGS_TRAILER_PLACEHOLDER,
                    className: f.trailerInputWrapper,
                    inputClassName: r()(f.trailerInput, {
                      [f.error]: !U,
                      [f.trailerInputWithCheckmark]: w || !U,
                    }),
                    prefixElement:
                      U &&
                      w &&
                      (0, s.jsx)(E.CircleCheckIcon, {
                        size: "md",
                        color: _.Z.unsafe_rawColors.BRAND_500.css,
                        secondaryColor: _.Z.unsafe_rawColors.WHITE_500.css,
                        className: f.inputCheckmark,
                      }),
                    disabled: H,
                  }),
                ],
              }),
              (0, s.jsx)(E.FormDivider, { className: f.divider }),
              (0, s.jsxs)(E.FormItem, {
                title:
                  L.Z.Messages
                    .GUILD_ROLE_SUBSCRIPTION_STORE_PAGE_SETTINGS_DISPLAY_OPTIONS_TITLE,
                disabled: H,
                children: [
                  (0, s.jsx)(E.FormText, {
                    disabled: H,
                    children:
                      L.Z.Messages
                        .GUILD_ROLE_SUBSCRIPTION_STORE_PAGE_SETTINGS_DISPLAY_OPTIONS_DESCRIPTION,
                  }),
                  (0, s.jsx)(E.FormSwitch, {
                    className: f.premiumMemberCountSwitchContainer,
                    value: G,
                    hideBorder: !0,
                    onChange: (e) => P(e),
                    disabled: H,
                    children: (0, s.jsxs)("div", {
                      className: f.iconSwitchLabel,
                      children: [
                        (0, s.jsx)("div", {
                          className: f.iconContainer,
                          children: (0, s.jsx)(E.UserIcon, {
                            size: "custom",
                            color: "currentColor",
                            width: 28,
                            height: 28,
                            className: f.premiumMemberCountIcon,
                          }),
                        }),
                        (0, s.jsxs)("div", {
                          children: [
                            (0, s.jsx)(E.Text, {
                              variant: "text-md/medium",
                              color: "header-primary",
                              children:
                                L.Z.Messages
                                  .GUILD_ROLE_SUBSCRIPTION_STORE_PAGE_SETTINGS_DISPLAY_OPTIONS_PREMIUM_MEMBER_COUNT,
                            }),
                            (0, s.jsx)(E.Text, {
                              variant: "text-sm/normal",
                              color: "header-secondary",
                              children:
                                L.Z.Messages
                                  .GUILD_ROLE_SUBSCRIPTION_STORE_PAGE_SETTINGS_DISPLAY_OPTIONS_PREMIUM_MEMBER_COUNT_DESCRIPTION,
                            }),
                          ],
                        }),
                      ],
                    }),
                  }),
                ],
              }),
              (0, s.jsx)(I.W, {
                component: "div",
                className: f.contentRegion,
                children:
                  y &&
                  (0, s.jsx)(E.SlideIn, {
                    children: (0, s.jsx)(m.Z, {
                      submitting: u,
                      onReset: () => {
                        var e, t;
                        D(i.hasFeature(R.oNc.CREATOR_STORE_PAGE)),
                          j(
                            null !==
                              (e =
                                null == c
                                  ? void 0
                                  : c.store_page_primary_color) && void 0 !== e
                              ? e
                              : M,
                          ),
                          b(null == c ? void 0 : c.store_page_trailer_url),
                          P(
                            null !==
                              (t =
                                null == c
                                  ? void 0
                                  : c.store_page_show_subscriber_count) &&
                              void 0 !== t &&
                              t,
                          );
                      },
                      onSave: F,
                      disabled: V,
                    }),
                  }),
              }),
            ],
          });
        };
      function v() {
        let e = (0, u.e7)([h.Z], () => h.Z.getGuild()),
          t = (0, x.f)(),
          n = (0, p.qi)(null == e ? void 0 : e.id).some((e) => e.published);
        return null != e && t
          ? (0, s.jsx)(D, { guild: e, canEnable: n })
          : (0, s.jsx)(E.Spinner, {});
      }
      function j() {
        let e = (0, u.e7)([h.Z], () => h.Z.getGuild());
        return (0, s.jsx)(x.l, {
          guildId: null == e ? void 0 : e.id,
          refetchOnMount: !0,
          children: (0, s.jsx)(v, {}),
        });
      }
    },
    880229: function (e, t, n) {
      "use strict";
      n.d(t, {
        C: function () {
          return W;
        },
        K: function () {
          return k;
        },
      }),
        n(47120),
        n(390547);
      var s,
        a,
        i = n(735250),
        r = n(470079),
        l = n(120356),
        o = n.n(l),
        c = n(77866),
        d = n(149765),
        u = n(866442),
        _ = n(442837),
        I = n(902704),
        E = n(477690),
        T = n(481060),
        m = n(596454),
        N = n(471445),
        S = n(605436),
        g = n(91218),
        h = n(313201),
        C = n(339085),
        x = n(518738),
        p = n(131704),
        R = n(324067),
        L = n(430824),
        f = n(259580),
        O = n(624138),
        A = n(817460),
        M = n(166803),
        D = n(629262),
        v = n(686807),
        j = n(981631),
        Z = n(689938),
        b = n(954477);
      let U = (0, h.hQ)(),
        G = (0, h.hQ)(),
        P = (0, O.Mg)(E.Z.IMPORT_BENEFITS_MODAL_ROLE_ICON_SIZE);
      function B(e) {
        var t;
        let { emojiId: n, emojiName: s, className: a } = e,
          r = (0, _.e7)([C.ZP], () =>
            null != n ? C.ZP.getCustomEmojiById(n) : void 0,
          );
        return (0, i.jsx)(m.Z, {
          emojiId: n,
          emojiName: s,
          animated:
            null !== (t = null == r ? void 0 : r.animated) && void 0 !== t && t,
          className: a,
        });
      }
      function y(e) {
        let {
            icon: t,
            children: n,
            checked: s,
            disabled: a = !1,
            onChange: r,
          } = e,
          l = s || a;
        return (0, i.jsxs)("label", {
          className: o()(b.row, { [b.checked]: l, [b.disabled]: a }),
          children: [
            (0, i.jsx)("div", { className: b.rowIconWrapper, children: t }),
            (0, i.jsx)("div", { className: b.rowText, children: n }),
            (0, i.jsxs)("div", {
              className: b.rowCheckbox,
              children: [
                (0, i.jsx)(T.FocusRing, {
                  children: (0, i.jsx)("input", {
                    type: "checkbox",
                    checked: l,
                    disabled: a,
                    className: b.checkboxInput,
                    onChange: function (e) {
                      r(e.target.checked);
                    },
                  }),
                }),
                (0, i.jsx)("div", {
                  className: b.checkboxDisplay,
                  children: (0, i.jsx)(T.CheckmarkLargeIcon, {
                    size: "md",
                    color: "currentColor",
                    className: b.checkboxIcon,
                    "aria-hidden": !0,
                  }),
                }),
              ],
            }),
          ],
        });
      }
      function F(e) {
        let {
            title: t,
            selectAllText: n,
            benefits: s,
            dupeBenefits: a,
            selectedBenefits: r,
            onToggleBenefit: l,
          } = e,
          o = s.every((e) => r.has(e));
        return s.length > 0
          ? (0, i.jsxs)(T.FormSection, {
              title: t,
              className: b.section,
              children: [
                s.length - a.size > 1 &&
                  (0, i.jsx)("div", {
                    className: b.list,
                    children: (0, i.jsx)(y, {
                      icon: (0, i.jsx)(T.ChannelListPlusIcon, {
                        size: "md",
                        color: "currentColor",
                        className: b.rowIcon,
                      }),
                      checked: o,
                      onChange: function (e) {
                        for (let t of s) !a.has(t) && l(t, e);
                      },
                      children: (0, i.jsx)(T.Text, {
                        color: "header-primary",
                        variant: "text-md/normal",
                        children: n,
                      }),
                    }),
                  }),
                (0, i.jsx)("div", {
                  className: b.list,
                  children: s.map((e) =>
                    (0, i.jsxs)(
                      y,
                      {
                        icon: (0, i.jsx)(B, {
                          emojiId: e.emoji_id,
                          emojiName: e.emoji_name,
                          className: b.rowIcon,
                        }),
                        checked: r.has(e),
                        disabled: a.has(e),
                        onChange: (t) => l(e, t),
                        children: [
                          (0, i.jsx)(T.Text, {
                            color: "header-primary",
                            variant: "text-md/semibold",
                            children: (0, v.Z)(e),
                          }),
                          (0, i.jsx)(T.Text, {
                            color: "interactive-normal",
                            variant: "text-sm/normal",
                            children: e.description,
                          }),
                        ],
                      },
                      (0, A.ab)(e),
                    ),
                  ),
                }),
              ],
            })
          : null;
      }
      function k(e) {
        let {
            transitionState: t,
            fromSubscriptionListing: n,
            existingChannelBenefits: s,
            existingIntangibleBenefits: a,
            onSubmit: l,
            onClose: o,
          } = e,
          c = n.role_benefits.benefits,
          [d, u] = r.useState(() => new Set(c)),
          _ = r.useMemo(() => c.filter(A.rC), [c]),
          E = (0, D.Z)(_),
          m = r.useMemo(() => c.filter(A.lL), [c]),
          N = r.useMemo(
            () =>
              new Set(E.filter((e) => s.some((t) => t.ref_id === e.ref_id))),
            [E, s],
          ),
          S = r.useMemo(
            () => new Set(m.filter((e) => a.some((t) => (0, I.Z)(e, t)))),
            [a, m],
          ),
          g = (0, h.Dt)();
        function C(e, t) {
          u((n) => {
            let s = new Set(n);
            return t ? s.add(e) : s.delete(e), s;
          });
        }
        return (0, i.jsx)("form", {
          onSubmit: function (e) {
            e.preventDefault();
            let t = c.filter((e) => d.has(e)),
              n = t.filter(A.rC).filter((e) => !N.has(e));
            l(
              n,
              t.filter(A.lL).filter((e) => !S.has(e)),
            ),
              o();
          },
          children: (0, i.jsxs)(T.ModalRoot, {
            transitionState: t,
            "aria-labelledby": g,
            children: [
              (0, i.jsxs)(T.ModalHeader, {
                children: [
                  (0, i.jsx)(T.Heading, {
                    id: g,
                    variant: "heading-md/semibold",
                    children:
                      Z.Z.Messages.GUILD_ROLE_SUBSCRIPTION_IMPORT_BENEFITS_MODAL_HEADER.format(
                        { tierName: n.name },
                      ),
                  }),
                  (0, i.jsx)(T.ModalCloseButton, {
                    className: b.modalCloseButton,
                    onClick: o,
                  }),
                ],
              }),
              (0, i.jsxs)(T.ModalContent, {
                className: b.modalContent,
                children: [
                  (0, i.jsx)(F, {
                    title:
                      Z.Z.Messages
                        .GUILD_ROLE_SUBSCRIPTION_SETUP_CHANNEL_BENEFITS_CHANNELS_TITLE,
                    selectAllText:
                      Z.Z.Messages
                        .GUILD_ROLE_SUBSCRIPTION_IMPORT_BENEFITS_SELECT_ALL_CHANNEL_BENEFITS,
                    benefits: E,
                    dupeBenefits: N,
                    selectedBenefits: d,
                    onToggleBenefit: C,
                  }),
                  (0, i.jsx)(F, {
                    title:
                      Z.Z.Messages
                        .GUILD_ROLE_SUBSCRIPTION_SETUP_INTANGIBLE_BENEFITS_TITLE,
                    selectAllText:
                      Z.Z.Messages
                        .GUILD_ROLE_SUBSCRIPTION_IMPORT_BENEFITS_SELECT_ALL_INTANGIBLE_BENEFITS,
                    benefits: m,
                    dupeBenefits: S,
                    selectedBenefits: d,
                    onToggleBenefit: C,
                  }),
                ],
              }),
              (0, i.jsxs)(T.ModalFooter, {
                children: [
                  (0, i.jsx)(T.Button, {
                    type: "submit",
                    children:
                      Z.Z.Messages
                        .GUILD_ROLE_SUBSCRIPTION_IMPORT_BENEFITS_CONFIRM_BUTTON,
                  }),
                  (0, i.jsx)(T.Button, {
                    look: T.Button.Looks.LINK,
                    color: T.Button.Colors.PRIMARY,
                    onClick: o,
                    children: Z.Z.Messages.CANCEL,
                  }),
                ],
              }),
            ],
          }),
        });
      }
      function w(e) {
        var t;
        let { guildId: n, role: s, channelCount: a, onSelect: r } = e,
          l = (0, x.p9)({ guildId: n, roleId: s.id, size: P });
        return (0, i.jsxs)(T.Clickable, {
          className: b.roleRow,
          onClick: r,
          children: [
            (0, i.jsx)("div", {
              className: b.rowIconWrapper,
              children:
                null != l
                  ? (0, i.jsx)(g.Z, { ...l })
                  : (0, i.jsx)(T.ShieldUserIcon, {
                      size: "custom",
                      width: 23,
                      height: 23,
                      color:
                        null !== (t = s.colorString) && void 0 !== t
                          ? t
                          : (0, u.Rf)(j.p6O),
                      className: b.roleRowIconDefault,
                    }),
            }),
            (0, i.jsxs)("div", {
              className: b.rowText,
              children: [
                (0, i.jsx)(T.Text, {
                  color: "header-primary",
                  variant: "text-md/normal",
                  className: b.__invalid_benefitTitle,
                  children: s.name,
                }),
                (0, i.jsx)(T.Text, {
                  color: "header-secondary",
                  variant: "text-sm/normal",
                  children: Z.Z.Messages.NUM_CHANNELS.format({ num: a }),
                }),
              ],
            }),
            (0, i.jsx)("div", {
              className: b.rowCheckbox,
              children: (0, i.jsx)(f.Z, { direction: f.Z.Directions.RIGHT }),
            }),
          ],
        });
      }
      function H(e) {
        let { guild: t, onSelect: n } = e,
          s = (0, _.e7)([L.Z], () => L.Z.getRoles(t.id)),
          a = (0, _.e7)([R.Z], () => R.Z.getCategories(t.id)),
          l = r.useMemo(
            () =>
              a._categories.flatMap((e) =>
                a[e.channel.id]
                  .filter((e) => {
                    let { channel: t } = e;
                    return p.zS.has(t.type);
                  })
                  .map((e) => {
                    let { channel: t } = e;
                    return t;
                  }),
              ),
            [a],
          ),
          o = r.useMemo(
            () =>
              Object.values(s).flatMap((e) => {
                var n;
                if (
                  (0, S.pM)(t.id, e.id) ||
                  (null === (n = e.tags) || void 0 === n
                    ? void 0
                    : n.subscription_listing_id) != null ||
                  d.Db(e.permissions, j.TC2)
                )
                  return [];
                let s = (0, M.Z)(l, e).length;
                return s > 0 ? { role: e, channelCount: s } : [];
              }),
            [t, s, l],
          );
        return o.length > 0
          ? (0, i.jsx)("div", {
              className: b.list,
              children: o.map((e) =>
                (0, i.jsx)(
                  w,
                  {
                    guildId: t.id,
                    role: e.role,
                    channelCount: e.channelCount,
                    onSelect: () => n(e.role),
                  },
                  e.role.id,
                ),
              ),
            })
          : (0, i.jsx)(T.Text, {
              variant: "text-md/normal",
              children:
                Z.Z.Messages
                  .GUILD_ROLE_SUBSCRIPTION_BENEFIT_IMPORT_SELECT_ROLE_EMPTY,
            });
      }
      function V(e) {
        let { onClose: t, guildId: n, onSelect: s } = e,
          a = (0, _.e7)([L.Z], () => L.Z.getGuild(n));
        return null == a
          ? null
          : (0, i.jsxs)(i.Fragment, {
              children: [
                (0, i.jsxs)(T.ModalHeader, {
                  children: [
                    (0, i.jsx)(T.Heading, {
                      id: U,
                      variant: "heading-md/semibold",
                      children:
                        Z.Z.Messages
                          .GUILD_ROLE_SUBSCRIPTION_IMPORT_BENEFITS_FROM_ROLE_MODAL_HEADER_1,
                    }),
                    (0, i.jsx)(T.ModalCloseButton, {
                      className: b.modalCloseButton,
                      onClick: t,
                    }),
                  ],
                }),
                (0, i.jsx)(T.ModalContent, {
                  className: b.modalContent,
                  children: (0, i.jsx)(H, { guild: a, onSelect: s }),
                }),
              ],
            });
      }
      function Y(e) {
        let { onClose: t, guildId: n, role: s, onCancel: a, onImport: l } = e,
          o = r.useRef(s);
        null != s && (o.current = s);
        let d = null != s ? s : o.current,
          u = (0, c.Z)(() => {
            let e = R.Z.getCategories(n);
            return e._categories.flatMap((t) =>
              e[t.channel.id]
                .filter((e) => {
                  let { channel: t } = e;
                  return p.zS.has(t.type);
                })
                .map((e) => {
                  let { channel: t } = e;
                  return t;
                }),
            );
          }),
          _ = r.useMemo(() => (0, M.Z)(u, d), [u, d]),
          [I, E] = r.useState(() => new Set(_.map((e) => e.id)));
        function m(e, t) {
          E((n) => {
            let s = new Set(n);
            return t ? s.add(e) : s.delete(e), s;
          });
        }
        return (0, i.jsxs)("form", {
          onSubmit: function (e) {
            e.preventDefault(),
              l(_.map((e) => e.id).filter((e) => I.has(e))),
              t();
          },
          className: b.slideForm,
          children: [
            (0, i.jsxs)(T.ModalHeader, {
              children: [
                (0, i.jsx)(T.Heading, {
                  id: G,
                  variant: "heading-md/semibold",
                  children:
                    Z.Z.Messages.GUILD_ROLE_SUBSCRIPTION_IMPORT_BENEFITS_FROM_ROLE_MODAL_HEADER_2.format(
                      { roleName: d.name },
                    ),
                }),
                (0, i.jsx)(T.ModalCloseButton, {
                  className: b.modalCloseButton,
                  onClick: t,
                }),
              ],
            }),
            (0, i.jsxs)(T.ModalContent, {
              className: b.modalContent,
              children: [
                _.length > 1 &&
                  (0, i.jsx)("div", {
                    className: b.list,
                    children: (0, i.jsx)(y, {
                      icon: (0, i.jsx)(T.ChannelListPlusIcon, {
                        size: "md",
                        color: "currentColor",
                      }),
                      checked: I.size === _.length,
                      onChange: function (e) {
                        for (let t of _) m(t.id, e);
                      },
                      children: (0, i.jsx)(T.Text, {
                        color: "header-primary",
                        variant: "text-md/normal",
                        children:
                          Z.Z.Messages
                            .GUILD_ROLE_SUBSCRIPTION_IMPORT_BENEFITS_SELECT_ALL_CHANNEL_BENEFITS,
                      }),
                    }),
                  }),
                (0, i.jsx)("div", {
                  className: b.list,
                  children: _.map((e) => {
                    var t;
                    let n =
                      null !== (t = (0, N.Th)(e.type)) && void 0 !== t
                        ? t
                        : T.TextIcon;
                    return (0, i.jsx)(
                      y,
                      {
                        icon: (0, i.jsx)("div", {
                          className: b.rowIcon,
                          children: (0, i.jsx)(n, {
                            size: "custom",
                            color: "currentColor",
                            width: "100%",
                            height: "100%",
                          }),
                        }),
                        checked: I.has(e.id),
                        onChange: (t) => m(e.id, t),
                        children: (0, i.jsx)(T.Text, {
                          color: "header-primary",
                          variant: "text-md/normal",
                          className: b.__invalid_benefitTitle,
                          children: e.name,
                        }),
                      },
                      e.id,
                    );
                  }),
                }),
              ],
            }),
            (0, i.jsxs)(T.ModalFooter, {
              children: [
                (0, i.jsx)(T.Button, {
                  type: "submit",
                  children:
                    Z.Z.Messages
                      .GUILD_ROLE_SUBSCRIPTION_IMPORT_BENEFITS_FROM_ROLE_CONFIRM_BUTTON,
                }),
                (0, i.jsx)(T.Button, {
                  look: T.Button.Looks.LINK,
                  color: T.Button.Colors.PRIMARY,
                  onClick: a,
                  children: Z.Z.Messages.CANCEL,
                }),
              ],
            }),
          ],
        });
      }
      function W(e) {
        let { transitionState: t, guildId: n, onClose: s, onImport: a } = e,
          [l, o] = r.useState();
        return (0, i.jsx)(T.ModalRoot, {
          transitionState: t,
          "aria-labelledby": null == l ? U : G,
          children: (0, i.jsxs)(T.Slides, {
            contentDisplay: "flex",
            activeSlide: null == l ? 0 : 1,
            width: 440,
            children: [
              (0, i.jsx)(T.Slide, {
                id: 0,
                children: (0, i.jsx)(V, {
                  onClose: s,
                  guildId: n,
                  onSelect: o,
                }),
              }),
              (0, i.jsx)(T.Slide, {
                id: 1,
                children: (0, i.jsx)(Y, {
                  onClose: s,
                  guildId: n,
                  role: l,
                  onCancel: () => o(void 0),
                  onImport: a,
                }),
              }),
            ],
          }),
        });
      }
      ((a = s || (s = {}))[(a.SELECT_ROLE = 0)] = "SELECT_ROLE"),
        (a[(a.SELECT_CHANNELS = 1)] = "SELECT_CHANNELS");
    },
    862319: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return E;
        },
        w: function () {
          return T;
        },
      });
      var s = n(735250);
      n(470079);
      var a = n(120356),
        i = n.n(a),
        r = n(481060),
        l = n(259580),
        o = n(73346),
        c = n(817460),
        d = n(723047),
        u = n(880229),
        _ = n(689938),
        I = n(804258);
      function E(e) {
        let {
            channelBenefits: t,
            intangibleBenefits: n,
            subscriptionListings: a,
            onImport: l,
          } = e,
          E = (0, d.mY)();
        return (0, s.jsx)("div", {
          className: I.container,
          children: a.map((e) =>
            (0, s.jsxs)(
              "div",
              {
                className: I.row,
                children: [
                  (0, s.jsx)("img", {
                    alt: "",
                    src:
                      null == e.image_asset
                        ? void 0
                        : (0, o._W)(e.application_id, e.image_asset, 512),
                    className: i()(I.rowIcon, I.listingImage),
                  }),
                  (0, s.jsxs)("div", {
                    className: I.rowBody,
                    children: [
                      (0, s.jsx)(r.Text, {
                        variant: "text-md/normal",
                        color: "header-primary",
                        className: i()(I.rowText, I.listingName),
                        children: e.name,
                      }),
                      (0, s.jsx)(r.Text, {
                        color: "header-secondary",
                        variant: "text-sm/normal",
                        children:
                          _.Z.Messages.GUILD_ROLE_SUBSCRIPTION_BENEFIT_IMPORT_NUM_BENEFITS.format(
                            {
                              channels: e.role_benefits.benefits.filter(c.rC)
                                .length,
                              benefits: e.role_benefits.benefits.filter(c.lL)
                                .length,
                            },
                          ),
                      }),
                    ],
                  }),
                  (0, s.jsx)(r.Button, {
                    look: r.Button.Looks.OUTLINED,
                    color: r.Button.Colors.PRIMARY,
                    onClick: () => {
                      var a;
                      return (
                        (a = e),
                        void (0, r.openModal)((e) =>
                          (0, s.jsx)(u.K, {
                            ...e,
                            fromSubscriptionListing: a,
                            existingChannelBenefits: t,
                            existingIntangibleBenefits: n,
                            onSubmit: l,
                          }),
                        )
                      );
                    },
                    disabled: E,
                    children:
                      _.Z.Messages
                        .GUILD_ROLE_SUBSCRIPTION_BENEFIT_IMPORT_BUTTON,
                  }),
                ],
              },
              e.id,
            ),
          ),
        });
      }
      function T(e) {
        let { guildId: t, onImport: n, disabled: a = !1 } = e;
        return (0, s.jsxs)(r.Clickable, {
          className: i()(I.importRoleCard, { [I.disabled]: a }),
          onClick: a
            ? void 0
            : function () {
                (0, r.openModal)((e) =>
                  (0, s.jsx)(u.C, { ...e, guildId: t, onImport: n }),
                );
              },
          "aria-disabled": a,
          children: [
            (0, s.jsx)(r.ShieldUserIcon, {
              size: "custom",
              width: 23,
              height: 23,
              color: "currentColor",
              className: I.rowIcon,
            }),
            (0, s.jsx)(r.Text, {
              variant: "text-md/normal",
              color: "header-primary",
              className: I.rowText,
              children:
                _.Z.Messages.GUILD_ROLE_SUBSCRIPTION_BENEFIT_IMPORT_SELECT_ROLE,
            }),
            (0, s.jsx)(l.Z, {
              direction: l.Z.Directions.RIGHT,
              className: I.caret,
            }),
          ],
        });
      }
    },
    619326: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return S;
        },
      }),
        n(47120);
      var s = n(735250),
        a = n(470079),
        i = n(120356),
        r = n.n(i),
        l = n(866442),
        o = n(481060),
        c = n(393238),
        d = n(44315),
        u = n(663993),
        _ = n(981631),
        I = n(689938),
        E = n(51436);
      let T = (0, u.Un)({
        createPromise: () => n.e("5609").then(n.bind(n, 336231)),
        webpackId: 336231,
      });
      function m(e) {
        let t = (0, l.Bd)(e) > 0.25;
        return (0, d.Lq)(t ? _.Ilk.WHITE_500 : _.Ilk.PRIMARY_530);
      }
      function N(e) {
        let { value: t, onChange: n, disabled: i = !1 } = e,
          [c, d] = a.useState(t);
        function u() {
          n(c);
        }
        function T(e) {
          n(e), d(e);
        }
        let N = t === _.p6O,
          S = N ? c : t,
          g = (0, s.jsx)(o.CheckmarkLargeIcon, {
            size: "custom",
            width: 32,
            height: 24,
            color: m(t),
          }),
          h = (0, o.useRadioGroup)({
            orientation: "horizontal",
            isDisabled: i,
          }),
          C = (0, o.useRadioItem)({
            isSelected: N,
            label:
              I.Z.Messages.USER_SETTINGS_PROFILE_COLOR_DEFAULT_BUTTON.format({
                colorHex: (0, l.Rf)(_.p6O),
              }),
          }),
          x = (0, o.useRadioItem)({
            isSelected: !N,
            label:
              I.Z.Messages.USER_SETTINGS_PROFILE_COLOR_CUSTOM_BUTTON.format({
                colorHex: (0, l.Rf)(t),
              }),
          });
        return (0, s.jsxs)("div", {
          className: E.buttonsContainer,
          "aria-label": I.Z.Messages.USER_SETTINGS_PROFILE_COLOR,
          ...h,
          children: [
            (0, s.jsx)("div", {
              className: r()(E.colorSwatch, { [E.disabled]: i }),
              children: (0, s.jsxs)(o.Clickable, {
                onClick: i
                  ? void 0
                  : function () {
                      n(_.p6O);
                    },
                "aria-disabled": i,
                ...C,
                children: [
                  (0, s.jsx)("div", {
                    className: E.swatch,
                    style: { backgroundColor: (0, l.Rf)(_.p6O) },
                    children: N ? g : null,
                  }),
                  (0, s.jsx)(o.Text, {
                    className: E.swatchDescription,
                    color: "header-secondary",
                    variant: "text-xs/normal",
                    "aria-hidden": !0,
                    children: I.Z.Messages.USER_SETTINGS_PROFILE_COLOR_DEFAULT,
                  }),
                ],
              }),
            }),
            (0, s.jsxs)("div", {
              className: r()(E.colorSwatch, { [E.disabled]: i }),
              children: [
                (0, s.jsxs)(o.Clickable, {
                  onClick: i ? void 0 : u,
                  "aria-disabled": i,
                  ...x,
                  children: [
                    (0, s.jsx)("div", {
                      className: r()(E.customSwatch, {
                        [E.defaultSwatch]: S === _.p6O,
                      }),
                      style: { "--custom-color": (0, l.Rf)(S) },
                      children: N ? null : g,
                    }),
                    (0, s.jsx)(o.Text, {
                      className: E.swatchDescription,
                      color: "header-secondary",
                      variant: "text-xs/normal",
                      "aria-hidden": !0,
                      children: I.Z.Messages.USER_SETTINGS_PROFILE_COLOR_CUSTOM,
                    }),
                  ],
                }),
                !i &&
                  (0, s.jsx)(o.Popout, {
                    onRequestOpen: u,
                    renderPopout: (e) =>
                      (0, s.jsx)(o.CustomColorPicker, {
                        ...e,
                        value: t,
                        onChange: T,
                      }),
                    children: (e) =>
                      (0, s.jsx)(o.Clickable, {
                        ...e,
                        className: E.dropperIconButton,
                        "aria-label":
                          I.Z.Messages.USER_SETTINGS_PROFILE_COLOR_SELECT_COLOR,
                        children: (0, s.jsx)(o.EyeDropperIcon, {
                          size: "custom",
                          className: E.dropperIcon,
                          width: 14,
                          height: 14,
                          color: m(S),
                        }),
                      }),
                  }),
              ],
            }),
          ],
        });
      }
      function S(e) {
        let t,
          { value: n, onChange: a, disabled: i = !1 } = e,
          { ref: r, width: l } = (0, c.Z)();
        return (
          (t =
            null == l || l < 440
              ? (0, s.jsx)(N, { value: n, onChange: a, disabled: i })
              : (0, s.jsx)(T, {
                  defaultColor: _.p6O,
                  colors: _.pmI,
                  value: n,
                  onChange: a,
                  disabled: i,
                })),
          (0, s.jsx)("div", { ref: r, children: t })
        );
      }
    },
    553204: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return m;
        },
      });
      var s = n(735250),
        a = n(470079),
        i = n(120356),
        r = n.n(i),
        l = n(477690),
        o = n(481060),
        c = n(91218),
        d = n(518738),
        u = n(208567),
        _ = n(624138),
        I = n(689938),
        E = n(819793);
      let T = (0, _.Mg)(l.Z.ROLE_ICON_UPLOADER_ICON_SIZE);
      function m(e) {
        let {
            role: t,
            "aria-label": n = I.Z.Messages.UPLOAD_IMAGE,
            className: i,
            onClick: l,
            disabled: _ = !1,
          } = e,
          m = a.useRef(null),
          N = a.useMemo(() => (null != t ? (0, d.Kz)(t, T) : null), [t]),
          S =
            null != N
              ? (0, s.jsx)(c.Z, { enableTooltip: !1, className: E.icon, ...N })
              : (0, s.jsx)(o.ImagePlusIcon, {
                  size: "md",
                  color: "currentColor",
                  className: E.icon,
                });
        return (0, s.jsx)(o.FocusRing, {
          ringTarget: m,
          children: (0, s.jsxs)(o.Clickable, {
            "aria-label": n,
            className: r()(E.container, i, { [E.disabled]: _ }),
            onClick: _ ? void 0 : l,
            "aria-disabled": _,
            children: [
              (0, s.jsx)("div", { ref: m, className: E.preview, children: S }),
              null != N ? (0, s.jsx)(u.S, { className: E.uploaderIcon }) : null,
            ],
          }),
        });
      }
    },
    798680: function (e, t, n) {
      "use strict";
      n.d(t, {
        M7: function () {
          return c;
        },
        dw: function () {
          return o;
        },
        ue: function () {
          return s;
        },
      }),
        n(411104),
        n(47120);
      var s,
        a,
        i = n(735250),
        r = n(470079);
      ((a = s || (s = {}))[(a.BASIC_INFO = 0)] = "BASIC_INFO"),
        (a[(a.TIERS = 1)] = "TIERS"),
        (a[(a.PAYMENT = 2)] = "PAYMENT"),
        (a[(a.EMOJIS = 3)] = "EMOJIS");
      let l = r.createContext({
        currentTab: 0,
        setCurrentTab: () => {
          throw Error(
            "useTabBarState must be used within TabBarContextProvider",
          );
        },
      });
      function o() {
        return r.useContext(l);
      }
      function c(e) {
        let { initialTab: t, children: n } = e,
          [s, a] = r.useState(t);
        return (0, i.jsx)(l.Provider, {
          value: { currentTab: s, setCurrentTab: a },
          children: n,
        });
      }
    },
    450215: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return R;
        },
      }),
        n(47120);
      var s = n(735250),
        a = n(470079),
        i = n(120356),
        r = n.n(i),
        l = n(512722),
        o = n.n(l),
        c = n(442837),
        d = n(481060),
        u = n(44315),
        _ = n(937615),
        I = n(817460),
        E = n(584825),
        T = n(289393),
        m = n(723047),
        N = n(727843),
        S = n(290348),
        g = n(857081),
        h = n(869269),
        C = n(981631),
        x = n(689938),
        p = n(517194);
      function R(e) {
        var t, n;
        let {
            guildId: i,
            initialEditStateId: l,
            allSubscriptionListings: R,
            priceTiers: L,
            onDeleteEditState: f,
            groupListingId: O,
            onBeforeDispatchNewListing: A,
            onAfterDispatchNewListing: M,
          } = e,
          [D, v] = a.useState(l),
          j = (0, c.e7)([T.Z], () => T.Z.getSubscriptionListing(D)),
          Z = null == j,
          [b, U] = a.useState(Z),
          G = null == j ? void 0 : j.subscription_plans[0],
          P =
            null !== (t = null == j ? void 0 : j.published) &&
            void 0 !== t &&
            t,
          B =
            null !== (n = null == j ? void 0 : j.archived) && void 0 !== n && n,
          y = !B && !P && void 0 !== j,
          F = void 0 === j,
          k = (0, m.mY)(),
          [w] = S._T(D),
          [H] = S.mR(D),
          [V] = S.PK(D),
          [Y] = S.d9(D, 1024),
          W =
            "" !== w
              ? w
              : x.Z.Messages.GUILD_ROLE_SUBSCRIPTION_SETUP_INITIAL_TIER_NAME,
          z = "" !== w && null != Y && "" !== V && null != H && !k,
          K = S.rU(D),
          {
            loading: q,
            error: X,
            handleCreateOrUpdateFromEditState: Q,
          } = S.Xo(),
          {
            submitting: J,
            error: $,
            publishSubscriptionListing: ee,
          } = (0, E.HQ)(),
          et = q || J;
        return (0, s.jsxs)("div", {
          className: p.container,
          children: [
            (0, s.jsxs)("div", {
              className: r()(p.header, { [p.headerExpanded]: b }),
              children: [
                (0, s.jsx)("div", {
                  className: p.headerImageContainer,
                  children:
                    null == Y
                      ? (0, s.jsx)(g.Z, {
                          className: p.starIcon,
                          "aria-hidden": !0,
                        })
                      : (0, s.jsx)("img", {
                          className: p.headerImage,
                          src: Y,
                          alt: W,
                        }),
                }),
                (0, s.jsxs)("div", {
                  className: p.headerListingInfo,
                  children: [
                    (0, s.jsx)(d.Text, {
                      variant: "text-md/medium",
                      color: "interactive-active",
                      children: W,
                    }),
                    (0, s.jsx)(d.Spacer, { size: 2 }),
                    (0, s.jsxs)("div", {
                      className: p.headerDescriptionContainer,
                      children: [
                        y &&
                          (0, s.jsx)(d.TextBadge, {
                            color: (0, u.Lq)(C.Ilk.YELLOW_300),
                            text: x.Z.Messages
                              .GUILD_ROLE_SUBSCRIPTION_TIER_MANAGEMENT_DRAFT_LABEL,
                            className: p.draftBadge,
                          }),
                        B &&
                          (0, s.jsx)(d.TextBadge, {
                            color: (0, u.Lq)(C.Ilk.PRIMARY_500),
                            text: x.Z.Messages
                              .GUILD_ROLE_SUBSCRIPTION_TIER_MANAGEMENT_ARCHIVED_LABEL,
                            className: p.archivedBadge,
                          }),
                        F &&
                          (0, s.jsx)(d.TextBadge, {
                            color: (0, u.Lq)(C.Ilk.PRIMARY_500),
                            text: x.Z.Messages
                              .GUILD_ROLE_SUBSCRIPTION_TIER_MANAGEMENT_UNSAVED_LABEL,
                            className: p.unsavedBadge,
                          }),
                        null != G &&
                          (0, s.jsxs)(d.Text, {
                            color: "interactive-normal",
                            variant: "text-sm/normal",
                            children: [
                              (0, _.T4)(G.price, G.currency),
                              "/",
                              (0, I.JE)(G),
                            ],
                          }),
                      ],
                    }),
                  ],
                }),
                b
                  ? (0, s.jsxs)(s.Fragment, {
                      children: [
                        (0, s.jsx)(d.Button, {
                          look: d.Button.Looks.BLANK,
                          className: p.cancel,
                          onClick: () => {
                            S.GM(D), Z ? null == f || f() : U(!1);
                          },
                          children: x.Z.Messages.CANCEL,
                        }),
                        (0, s.jsx)(d.Button, {
                          onClick: () =>
                            Q({
                              guildId: i,
                              editStateId: D,
                              groupListingId: O,
                              onBeforeDispatchNewListing: A,
                              onAfterDispatchNewListing: (e) => {
                                v(e.id), null == M || M(e);
                              },
                            }),
                          disabled: !z || !K,
                          className: p.autoWidth,
                          submitting: et,
                          children: x.Z.Messages.SAVE,
                        }),
                      ],
                    })
                  : (0, s.jsx)(d.Clickable, {
                      onClick: () => U(!0),
                      "aria-label":
                        x.Z.Messages
                          .GUILD_ROLE_SUBSCRIPTION_SETUP_TIER_EDIT_LABEL,
                      children: (0, s.jsx)(d.PencilIcon, {
                        size: "xs",
                        color: "currentColor",
                        className: p.pencilIcon,
                      }),
                    }),
              ],
            }),
            b &&
              (0, s.jsx)(N.I, {
                editStateId: D,
                guildId: i,
                groupListingId: O,
                children: (0, s.jsx)(h.Z, {
                  allSubscriptionListings: R,
                  priceTiers: L,
                  loading: et,
                  error: null != X ? X : $,
                  handlePublishTier: () => {
                    o()(null != O, "group listing doesnt exist"),
                      o()(null != j, "subscription listing doesnt exist"),
                      ee({ guildId: i, groupListingId: O, listingId: j.id });
                  },
                  onDeleteEditState: f,
                }),
              }),
          ],
        });
      }
    },
    869269: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return C;
        },
      });
      var s = n(735250),
        a = n(470079),
        i = n(120356),
        r = n.n(i),
        l = n(442837),
        o = n(481060),
        c = n(289393),
        d = n(723047),
        u = n(727843),
        _ = n(587431),
        I = n(86126),
        E = n(880193),
        T = n(516448),
        m = n(975331),
        N = n(231610),
        S = n(689938),
        g = n(517194),
        h = n(303536);
      function C(e) {
        var t, n;
        let {
            allSubscriptionListings: i,
            priceTiers: C,
            loading: x,
            error: p,
            handlePublishTier: R,
            onDeleteEditState: L,
          } = e,
          { editStateId: f } = (0, u.N)(),
          O = (0, l.e7)([c.Z], () => c.Z.getSubscriptionListing(f)),
          A = (0, d.mY)(),
          M = a.useMemo(() => {
            let e = i
              .filter((e) => e.id !== f)
              .map((e) => {
                var t;
                return null === (t = e.subscription_plans[0]) || void 0 === t
                  ? void 0
                  : t.price;
              });
            return null == C ? void 0 : C.filter((t) => !e.includes(t));
          }, [i, f, C]),
          D = null == O,
          v =
            null !== (t = null == O ? void 0 : O.published) &&
            void 0 !== t &&
            t,
          j =
            null !== (n = null == O ? void 0 : O.archived) && void 0 !== n && n;
        return (0, s.jsxs)("div", {
          className: h.body,
          children: [
            null != p && (0, s.jsx)(_.Z, { children: p.getAnyErrorMessage() }),
            !v &&
              !A &&
              !j &&
              (0, s.jsxs)("div", {
                className: h.publishListing,
                children: [
                  (0, s.jsxs)("div", {
                    children: [
                      (0, s.jsx)(o.Heading, {
                        variant: "heading-md/semibold",
                        className: h.publishListingInfoHeader,
                        children:
                          S.Z.Messages
                            .GUILD_ROLE_SUBSCRIPTION_SETUP_TIER_DRAFT_BANNER_TITLE,
                      }),
                      (0, s.jsx)(o.FormText, {
                        type: o.FormText.Types.DESCRIPTION,
                        children:
                          S.Z.Messages
                            .GUILD_ROLE_SUBSCRIPTION_SETUP_TIER_DRAFT_BANNER_DESCRIPTION,
                      }),
                    ],
                  }),
                  (0, s.jsx)(o.Tooltip, {
                    shouldShow: D,
                    tooltipClassName: g.autoWidth,
                    text: S.Z.Messages
                      .GUILD_ROLE_SUBSCRIPTION_SETUP_TIER_SAVE_BEFORE_PUBLISH_TOOLTIP,
                    children: (e) =>
                      (0, s.jsx)(o.Button, {
                        ...e,
                        disabled: D,
                        color: o.Button.Colors.CUSTOM,
                        wrapperClassName: g.autoWidth,
                        className: r()(h.publishButton, g.autoWidth),
                        onClick: R,
                        submitting: x,
                        children:
                          S.Z.Messages
                            .GUILD_SETTINGS_ROLE_SUBSCRIPTION_TIER_EDIT_PUBLISH_DRAFT_CTA,
                      }),
                  }),
                ],
              }),
            (0, s.jsx)(E.Z, { priceTiers: M }),
            (0, s.jsx)(T.Z, { allSubscriptionListings: i }),
            (0, s.jsx)(m.Z, {}),
            (0, s.jsx)(N.Z, {}),
            (0, s.jsx)(I.Z, { onDeleteEditState: L }),
          ],
        });
      }
    },
    86126: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return S;
        },
      });
      var s = n(735250),
        a = n(470079),
        i = n(512722),
        r = n.n(i),
        l = n(442837),
        o = n(481060),
        c = n(674180),
        d = n(584825),
        u = n(289393),
        _ = n(727843),
        I = n(14263),
        E = n(783454),
        T = n(689938),
        m = n(517194),
        N = n(79489);
      function S(e) {
        var t;
        let { onDeleteEditState: i } = e,
          { editStateId: S, guildId: g, groupListingId: h } = (0, _.N)(),
          C = (0, l.e7)([u.Z], () => u.Z.getSubscriptionListing(S)),
          x = null == C ? void 0 : C.id,
          p = (0, I.Z)(g),
          R = a.useMemo(() => {
            var e;
            return (
              null != p &&
              null != C &&
              (null !== (e = p[C.role_id]) && void 0 !== e ? e : 0)
            );
          }, [p, C]),
          L = 0 === R,
          f = null == x,
          O =
            null !== (t = null == C ? void 0 : C.archived) && void 0 !== t && t,
          { deleteSubscriptionListing: A, submitting: M } = (0, d.r4)(),
          { archiveSubscriptionListing: D, submitting: v } = (0, d._1)(),
          j = () => {
            let e = async () => {
              if (
                !!f ||
                (r()(null != h, "group listing doesnt exist"),
                r()(null != x, "subscription listing doesnt exist"),
                !!(await A(g, h, x)))
              )
                null == i || i();
            };
            (0, o.openModalLazy)(async () => {
              let { ConfirmModal: t } = await Promise.resolve().then(
                n.bind(n, 481060),
              );
              return (n) =>
                (0, s.jsx)(t, {
                  header: T.Z.Messages.DEFAULT_CONFIRMATION_MODAL_HEADER,
                  confirmText:
                    T.Z.Messages
                      .GUILD_ROLE_SUBSCRIPTION_SETUP_TIER_DELETE_BUTTON,
                  cancelText: T.Z.Messages.CANCEL,
                  onConfirm: () => {
                    e();
                  },
                  confirmButtonColor: o.Button.Colors.RED,
                  ...n,
                  children: (0, s.jsx)(o.Text, {
                    variant: "text-md/normal",
                    children:
                      T.Z.Messages
                        .GUILD_ROLE_SUBSCRIPTION_SETUP_TIER_DELETE_DESCRIPTION,
                  }),
                });
            });
          },
          { allowSelfRemoveMonetization: Z } = (0, c.gX)(g);
        return null == C
          ? null
          : (0, s.jsx)(E.Z, {
              title:
                T.Z.Messages
                  .GUILD_ROLE_SUBSCRIPTION_SETUP_TIER_ADVANCE_SECTION_TITLE,
              children: O
                ? (0, s.jsxs)(o.FormSection, {
                    title:
                      T.Z.Messages
                        .GUILD_ROLE_SUBSCRIPTION_SETUP_TIER_DELETE_LABEL,
                    disabled: !Z,
                    children: [
                      (0, s.jsx)(o.FormText, {
                        type: o.FormText.Types.DESCRIPTION,
                        className: m.formDescription,
                        disabled: !Z,
                        children:
                          T.Z.Messages
                            .GUILD_ROLE_SUBSCRIPTION_SETUP_TIER_DELETE_DESCRIPTION,
                      }),
                      (0, s.jsx)(o.Tooltip, {
                        shouldShow: !L,
                        text: T.Z.Messages.GUILD_ROLE_SUBSCRIPTION_SETUP_TIER_DELETE_TOOLTIP.format(
                          { listingMemberCount: R },
                        ),
                        children: (e) =>
                          (0, s.jsx)(o.Button, {
                            ...e,
                            wrapperClassName: N.deleteListingButton,
                            color: o.Button.Colors.RED,
                            onClick: j,
                            submitting: M,
                            disabled: !Z || !L,
                            children:
                              T.Z.Messages
                                .GUILD_ROLE_SUBSCRIPTION_SETUP_TIER_DELETE_BUTTON,
                          }),
                      }),
                    ],
                  })
                : (0, s.jsxs)(o.FormSection, {
                    title:
                      T.Z.Messages
                        .GUILD_ROLE_SUBSCRIPTION_SETUP_TIER_ARCHIVE_LABEL,
                    disabled: !Z,
                    children: [
                      (0, s.jsx)(o.FormText, {
                        type: o.FormText.Types.DESCRIPTION,
                        className: m.formDescription,
                        disabled: !Z,
                        children:
                          T.Z.Messages
                            .GUILD_ROLE_SUBSCRIPTION_SETUP_TIER_ARCHIVE_DESCRIPTION,
                      }),
                      (0, s.jsx)(o.Button, {
                        wrapperClassName: N.deleteListingButton,
                        color: o.Button.Colors.RED,
                        onClick: () => {
                          r()(null != h, "group listing doesnt exist"),
                            r()(null != x, "subscription listing doesnt exist"),
                            (0, o.openModalLazy)(async () => {
                              let { ConfirmModal: e } =
                                await Promise.resolve().then(n.bind(n, 481060));
                              return (t) =>
                                (0, s.jsx)(e, {
                                  header:
                                    T.Z.Messages
                                      .DEFAULT_CONFIRMATION_MODAL_HEADER,
                                  confirmText:
                                    T.Z.Messages
                                      .GUILD_ROLE_SUBSCRIPTION_SETUP_TIER_ARCHIVE_BUTTON,
                                  cancelText: T.Z.Messages.CANCEL,
                                  onConfirm: () => {
                                    D(g, h, x);
                                  },
                                  confirmButtonColor: o.Button.Colors.RED,
                                  ...t,
                                  children: (0, s.jsx)(o.Text, {
                                    variant: "text-md/normal",
                                    children:
                                      T.Z.Messages
                                        .GUILD_ROLE_SUBSCRIPTION_SETUP_TIER_ARCHIVE_DESCRIPTION,
                                  }),
                                });
                            });
                        },
                        submitting: v,
                        disabled: !Z,
                        children:
                          T.Z.Messages
                            .GUILD_ROLE_SUBSCRIPTION_SETUP_TIER_ARCHIVE_BUTTON,
                      }),
                    ],
                  }),
            });
      }
    },
    880193: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return C;
        },
      }),
        n(47120);
      var s = n(735250),
        a = n(470079),
        i = n(442837),
        r = n(481060),
        l = n(313201),
        o = n(345861),
        c = n(208567),
        d = n(937615),
        u = n(289393),
        _ = n(723047),
        I = n(727843),
        E = n(290348),
        T = n(927954),
        m = n(783454),
        N = n(981631),
        S = n(689938),
        g = n(517194),
        h = n(489982);
      function C(e) {
        let { priceTiers: t } = e,
          { editStateId: n } = (0, I.N)(),
          C = (0, i.e7)([u.Z], () => {
            var e;
            return null === (e = u.Z.getSubscriptionListing(n)) || void 0 === e
              ? void 0
              : e.image_asset;
          }),
          [x, p] = E._T(n),
          [R, L] = E.mR(n),
          [f, O] = E.PK(n),
          [A, M] = E.d9(n, 1024),
          { imageCTA: D, imageAriaLabel: v, setFilename: j } = (0, T.Z)(C),
          Z = a.useMemo(() => {
            var e;
            return null !==
              (e =
                null == t
                  ? void 0
                  : t.map((e) => ({
                      value: e,
                      label: (0, d.T4)(e, N.pKx.USD),
                    }))) && void 0 !== e
              ? e
              : [];
          }, [t]);
        function b(e, t) {
          null != t && j(t.name), M(e);
        }
        let U = (0, _.mY)(),
          G = (0, l.Dt)(),
          P = (0, l.Dt)(),
          B = (0, l.Dt)();
        return (0, s.jsxs)(m.Z, {
          title:
            S.Z.Messages
              .GUILD_ROLE_SUBSCRIPTION_SETUP_TIER_BASIC_INFO_SECTION_TITLE,
          intiallyExpanded: !0,
          children: [
            (0, s.jsxs)("div", {
              className: h.formSplit,
              children: [
                (0, s.jsx)("div", {
                  className: h.formSplitHalf,
                  children: (0, s.jsx)(r.FormSection, {
                    title:
                      S.Z.Messages
                        .GUILD_ROLE_SUBSCRIPTION_SETUP_TIER_NAME_TITLE,
                    titleId: G,
                    disabled: U,
                    children: (0, s.jsx)(r.TextInput, {
                      placeholder:
                        S.Z.Messages
                          .GUILD_ROLE_SUBSCRIPTION_SETUP_TIER_NAME_PLACEHOLDER,
                      value: x,
                      inputClassName: g.formInput,
                      onChange: p,
                      "aria-labelledby": G,
                      disabled: U,
                    }),
                  }),
                }),
                (0, s.jsx)("div", {
                  className: h.formSplitHalf,
                  children: (0, s.jsx)(r.FormSection, {
                    title:
                      S.Z.Messages
                        .GUILD_ROLE_SUBSCRIPTION_SETUP_TIER_PRICE_TITLE,
                    titleId: P,
                    disabled: U,
                    children: (0, s.jsx)(r.SingleSelect, {
                      options: Z,
                      className: g.formInput,
                      isDisabled: U || null == t,
                      placeholder:
                        S.Z.Messages
                          .GUILD_ROLE_SUBSCRIPTION_SETUP_TIER_PRICE_PLACEHOLDER,
                      value: R,
                      onChange: L,
                      maxVisibleItems: 5,
                      look: r.SelectLooks.CUSTOM,
                      "aria-labelledby": P,
                    }),
                  }),
                }),
              ],
            }),
            (0, s.jsx)(r.Spacer, { size: 24 }),
            (0, s.jsx)(r.FormSection, {
              title:
                S.Z.Messages
                  .GUILD_ROLE_SUBSCRIPTION_SETUP_TIER_DESCRIPTION_TITLE,
              titleId: B,
              disabled: U,
              children: (0, s.jsx)(r.TextArea, {
                placeholder:
                  S.Z.Messages
                    .GUILD_ROLE_SUBSCRIPTION_SETUP_TIER_DESCRIPTION_PLACEHOLDER,
                value: f,
                rows: 2,
                autosize: !0,
                className: g.formInput,
                onChange: O,
                "aria-labelledby": B,
                disabled: U,
              }),
            }),
            (0, s.jsx)(r.Spacer, { size: 24 }),
            (0, s.jsxs)("div", {
              className: h.iconSection,
              children: [
                (0, s.jsxs)(r.FormSection, {
                  title:
                    S.Z.Messages
                      .GUILD_ROLE_SUBSCRIPTION_SETUP_TIER_SYMBOL_TITLE,
                  className: h.iconSectionDescription,
                  disabled: U,
                  children: [
                    (0, s.jsx)(r.FormText, {
                      type: r.FormText.Types.DESCRIPTION,
                      className: g.formDescription,
                      disabled: U,
                      children:
                        S.Z.Messages
                          .GUILD_ROLE_SUBSCRIPTION_SETUP_TIER_SYMBOL_DESCRIPTION,
                    }),
                    (0, s.jsx)(o.Z, {
                      onChange: b,
                      buttonCTA: D,
                      "aria-label": v,
                      disabled: U,
                      look: r.Button.Looks.OUTLINED,
                      color: r.Button.Colors.PRIMARY,
                    }),
                  ],
                }),
                (0, s.jsx)(c.Z, {
                  image: A,
                  hint: D,
                  showIcon: !0,
                  showRemoveButton: !1,
                  hideSize: !0,
                  className: h.iconUploader,
                  imageClassName: h.tierSymbolUploaderInner,
                  onChange: b,
                  "aria-label": v,
                  disabled: U,
                }),
              ],
            }),
          ],
        });
      }
    },
    140285: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return _;
        },
      }),
        n(47120);
      var s = n(735250);
      n(470079);
      var a = n(481060),
        i = n(727843),
        r = n(944537),
        l = n(290348),
        o = n(91354),
        c = n(662961),
        d = n(689938),
        u = n(517194);
      function _(e) {
        let { "aria-labelledby": t, disabled: n = !1 } = e,
          { editStateId: _, guildId: I } = (0, i.N)(),
          [E, T] = l.GP(_, I);
        return (0, s.jsx)(a.RadioGroup, {
          className: u.__invalid_channelAccessSelect,
          radioItemClassName: u.__invalid_channelAccessSelectRadioButton,
          withTransparentBackground: !0,
          size: a.RadioGroup.Sizes.NOT_SET,
          onChange: (e) => {
            let { value: t } = e;
            return T(t);
          },
          options: [
            {
              name: d.Z.Messages
                .GUILD_ROLE_SUBSCRIPTION_TIER_BENEFITS_SELECT_CHANNELS_MANUALLY_LABEL,
              value: r.I.SOME_CHANNELS_ACCESS,
              icon: (0, a.makeIconCompat)(c.Z),
              radioBarClassName: u.__invalid_channelAccessSelectRadioBar,
            },
            {
              name: d.Z.Messages
                .GUILD_ROLE_SUBSCRIPTION_TIER_BENEFITS_INCLUDE_ALL_CHANNELS_LABEL,
              value: r.I.ALL_CHANNELS_ACCESS,
              icon: (0, a.makeIconCompat)(o.Z),
              radioBarClassName: u.__invalid_channelAccessSelectRadioBar,
            },
          ],
          value: E,
          "aria-labelledby": t,
          disabled: n,
        });
      }
    },
    390583: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return I;
        },
      }),
        n(47120),
        n(653041);
      var s = n(735250),
        a = n(470079),
        i = n(481060);
      n(674180);
      var r = n(723047),
        l = n(727843),
        o = n(290348),
        c = n(764163),
        d = n(155758),
        u = n(293810),
        _ = n(689938);
      function I() {
        let { editStateId: e, guildId: t } = (0, l.N)(),
          [n, I] = o.UE(e),
          E = a.useMemo(() => new Set(n.map((e) => e.ref_id)), [n]);
        function T(e, t) {
          let { channelId: s, description: a, emojiId: i, emojiName: r } = e,
            l = [...n],
            o = {
              name: "",
              description: a,
              emoji_id: i,
              emoji_name: r,
              ref_type: u.Qs.CHANNEL,
              ref_id: s,
            };
          null != t ? (l[t] = o) : l.push(o), I(l);
        }
        let m = (0, r.mY)();
        return (0, s.jsxs)(s.Fragment, {
          children: [
            (0, s.jsx)(d.p, {
              benefits: n,
              onEdit: function (e) {
                (0, i.openModal)((a) =>
                  (0, s.jsx)(c.x3, {
                    ...a,
                    guildId: t,
                    omitChannelIds: E,
                    initialData: n[e],
                    onSave: (t) => T(t, e),
                    onDelete: () =>
                      (function (e) {
                        let t = [...n];
                        t.splice(e, 1), I(t);
                      })(e),
                  }),
                );
              },
              onMove: function (e, t) {
                let s = [...n],
                  [a] = s.splice(e, 1);
                s.splice(t, 0, a), I(s);
              },
              guildId: t,
            }),
            n.length > 0 && (0, s.jsx)(i.Spacer, { size: 8 }),
            (0, s.jsx)(d.s, {
              onClick: function () {
                (0, i.openModal)((e) =>
                  (0, s.jsx)(c.x3, {
                    ...e,
                    guildId: t,
                    omitChannelIds: E,
                    onSave: (e) => T(e),
                  }),
                );
              },
              disabled: m,
              children:
                _.Z.Messages
                  .GUILD_ROLE_SUBSCRIPTION_SETUP_CHANNEL_BENEFITS_ADD_BUTTON_TEXT,
            }),
          ],
        });
      }
    },
    516448: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return h;
        },
      }),
        n(47120);
      var s = n(735250),
        a = n(470079),
        i = n(481060),
        r = n(313201),
        l = n(723047),
        o = n(727843),
        c = n(290348),
        d = n(164e3),
        u = n(783454),
        _ = n(862319),
        I = n(140285),
        E = n(390583),
        T = n(641249),
        m = n(574085),
        N = n(293810),
        S = n(689938),
        g = n(517194);
      function h(e) {
        let { allSubscriptionListings: t } = e,
          { editStateId: n, guildId: h } = (0, o.N)(),
          [C, x] = c.UE(n),
          [p, R] = c.R7(n),
          L = a.useMemo(() => t.filter((e) => e.id !== n), [t, n]),
          { isFullServerGating: f } = (0, d.Z)(h),
          O = (0, r.Dt)(),
          A = (0, l.mY)();
        return (0, s.jsxs)(u.Z, {
          title:
            S.Z.Messages
              .GUILD_ROLE_SUBSCRIPTION_SETUP_TIER_BENEFITS_HEADER_TITLE,
          description:
            S.Z.Messages
              .GUILD_ROLE_SUBSCRIPTION_SETUP_TIER_BENEFITS_HEADER_SUBTITLE,
          children: [
            (0, s.jsxs)(i.FormSection, {
              title:
                S.Z.Messages
                  .GUILD_ROLE_SUBSCRIPTION_BENEFIT_IMPORT_HEADER_TITLE,
              disabled: A,
              children: [
                (0, s.jsx)(i.FormText, {
                  type: i.FormText.Types.DESCRIPTION,
                  className: g.formDescription,
                  disabled: A,
                  children:
                    S.Z.Messages
                      .GUILD_ROLE_SUBSCRIPTION_BENEFIT_IMPORT_HEADER_SUBTITLE,
                }),
                (0, s.jsx)(_.Z, {
                  channelBenefits: C,
                  intangibleBenefits: p,
                  subscriptionListings: L,
                  onImport: function (e, t) {
                    x((t) => t.concat(e)), R((e) => e.concat(t));
                  },
                }),
                (0, s.jsx)(i.Spacer, { size: 8 }),
                (0, s.jsx)(_.w, {
                  guildId: h,
                  onImport: function (e) {
                    x((t) => {
                      let n = new Set(
                        t.map((e) => {
                          let { ref_id: t } = e;
                          return t;
                        }),
                      );
                      return [
                        ...t,
                        ...e
                          .filter((e) => !n.has(e))
                          .map((e) => ({ ref_id: e, ref_type: N.Qs.CHANNEL })),
                      ];
                    });
                  },
                  disabled: A,
                }),
              ],
            }),
            (0, s.jsx)(i.Spacer, { size: 24 }),
            (0, s.jsxs)(i.FormSection, {
              title:
                S.Z.Messages
                  .GUILD_ROLE_SUBSCRIPTION_SETUP_CHANNEL_BENEFITS_CHANNELS_TITLE,
              titleId: O,
              disabled: A,
              children: [
                (0, s.jsx)(i.FormText, {
                  type: i.FormText.Types.DESCRIPTION,
                  className: g.formDescription,
                  disabled: A,
                  children:
                    S.Z.Messages
                      .GUILD_ROLE_SUBSCRIPTION_SETUP_CHANNEL_BENEFITS_CHANNELS_DESCRIPTION,
                }),
                f &&
                  (0, s.jsxs)(s.Fragment, {
                    children: [
                      (0, s.jsx)(I.Z, { "aria-labelledby": O, disabled: A }),
                      (0, s.jsx)(i.Spacer, { size: 8 }),
                    ],
                  }),
                (0, s.jsx)(E.Z, {}),
              ],
            }),
            (0, s.jsx)(i.Spacer, { size: 24 }),
            (0, s.jsxs)(i.FormSection, {
              title:
                S.Z.Messages
                  .GUILD_ROLE_SUBSCRIPTION_SETUP_INTANGIBLE_BENEFITS_TITLE,
              disabled: A,
              children: [
                (0, s.jsx)(i.FormText, {
                  type: i.FormText.Types.DESCRIPTION,
                  className: g.formDescription,
                  disabled: A,
                  children:
                    S.Z.Messages
                      .GUILD_ROLE_SUBSCRIPTION_SETUP_INTANGIBLE_BENEFITS_DESCRIPTION,
                }),
                (0, s.jsx)(m.Z, {}),
              ],
            }),
            (0, s.jsx)(i.Spacer, { size: 24 }),
            (0, s.jsx)(T.Z, {}),
          ],
        });
      }
    },
    641249: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return m;
        },
      }),
        n(47120);
      var s = n(735250);
      n(470079);
      var a = n(442837),
        i = n(481060),
        r = n(430824),
        l = n(723047),
        o = n(727843),
        c = n(290348),
        d = n(971792),
        u = n(155758),
        _ = n(331146),
        I = n(798680),
        E = n(689938),
        T = n(517194);
      function m() {
        let { editStateId: e, guildId: t } = (0, o.N)(),
          [m, N] = c.XZ(e, t),
          S = (0, d.Z)(t, e),
          { setCurrentTab: g } = (0, I.dw)(),
          h = () => g(I.ue.EMOJIS),
          C = (0, a.e7)([r.Z], () => r.Z.getGuild(t)),
          x = null == C ? void 0 : C.getMaxRoleSubscriptionEmojiSlots();
        function p(e) {
          null == m ? N(new Set(e)) : N(new Set([...m, ...e]));
        }
        function R(e) {
          let t = new Set(m);
          t.delete(e), N(t);
        }
        let L = (0, l.mY)();
        return (0, s.jsxs)(i.FormSection, {
          title: E.Z.Messages.GUILD_ROLE_SUBSCRIPTION_SETUP_EMOJI_TITLE,
          disabled: L,
          children: [
            (0, s.jsxs)(i.FormText, {
              type: i.FormText.Types.DESCRIPTION,
              className: T.formDescription,
              disabled: L,
              children: [
                E.Z.Messages.GUILD_ROLE_SUBSCRIPTION_SETUP_EMOJI_DESCRIPTION.format(
                  { premiumEmojiMaximum: x },
                ),
                (0, s.jsx)("br", {}),
                E.Z.Messages.GUILD_ROLE_SUBSCRIPTION_SETUP_EMOJI_MANAGE_LINK.format(
                  { handleTransitionToManageEmoji: h },
                ),
              ],
            }),
            (0, s.jsx)(_.E, {
              tierEmojiIds: m,
              guildId: t,
              onRemoveEmoji: function (e) {
                e.roles.filter((e) => e !== (null == S ? void 0 : S.id))
                  .length > 0
                  ? R(e.id)
                  : (0, i.openModalLazy)(async () => {
                      let { default: t } = await n
                        .e("59128")
                        .then(n.bind(n, 28564));
                      return (n) =>
                        (0, s.jsx)(t, {
                          ...n,
                          onConfirmDelete: () => {
                            R(e.id), n.onClose();
                          },
                        });
                    });
              },
            }),
            null != m && m.size > 0 ? (0, s.jsx)(i.Spacer, { size: 8 }) : null,
            (0, s.jsx)(u.s, {
              onClick: function () {
                (0, i.openModalLazy)(async () => {
                  let { EmojiAddModal: e } = await n
                    .e("21112")
                    .then(n.bind(n, 301160));
                  return (n) =>
                    (0, s.jsx)(e, {
                      ...n,
                      guildId: t,
                      initialTierEmojiIds: m,
                      onSubmit: p,
                      transitionToManageEmoji: () => {
                        h(), n.onClose();
                      },
                    });
                });
              },
              disabled: L,
              children:
                E.Z.Messages
                  .GUILD_ROLE_SUBSCRIPTION_SETUP_EMOJI_ADD_BUTTON_TEXT,
            }),
          ],
        });
      }
    },
    574085: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return _;
        },
      }),
        n(47120),
        n(653041);
      var s = n(735250);
      n(470079);
      var a = n(481060),
        i = n(723047),
        r = n(727843),
        l = n(290348),
        o = n(764163),
        c = n(155758),
        d = n(293810),
        u = n(689938);
      function _() {
        let { editStateId: e, guildId: t } = (0, r.N)(),
          [n, _] = l.R7(e);
        function I(e, t) {
          let { name: s, description: a, emojiId: i, emojiName: r } = e,
            l = [...n],
            o = {
              name: s,
              description: a,
              emoji_id: i,
              emoji_name: r,
              ref_type: d.Qs.INTANGIBLE,
              ref_id: void 0,
            };
          null != t ? (l[t] = o) : l.push(o), _(l);
        }
        let E = (0, i.mY)();
        return (0, s.jsxs)(s.Fragment, {
          children: [
            (0, s.jsx)(c.p, {
              benefits: n,
              onEdit: function (e) {
                (0, a.openModal)((a) =>
                  (0, s.jsx)(o.DI, {
                    ...a,
                    guildId: t,
                    initialData: n[e],
                    onSave: (t) => I(t, e),
                    onDelete: () =>
                      (function (e) {
                        let t = [...n];
                        t.splice(e, 1), _(t);
                      })(e),
                  }),
                );
              },
              onMove: function (e, t) {
                let s = [...n],
                  [a] = s.splice(e, 1);
                s.splice(t, 0, a), _(s);
              },
              guildId: t,
            }),
            n.length > 0 ? (0, s.jsx)(a.Spacer, { size: 8 }) : null,
            (0, s.jsx)(c.s, {
              onClick: function () {
                (0, a.openModal)((e) =>
                  (0, s.jsx)(o.DI, { ...e, guildId: t, onSave: (e) => I(e) }),
                );
              },
              disabled: E,
              children:
                u.Z.Messages
                  .GUILD_ROLE_SUBSCRIPTION_SETUP_INTANGIBLE_BENEFITS_ADD_BUTTON_TEXT,
            }),
          ],
        });
      }
    },
    975331: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return S;
        },
      }),
        n(47120);
      var s = n(735250),
        a = n(470079),
        i = n(512722),
        r = n.n(i),
        l = n(481060),
        o = n(313201),
        c = n(584825),
        d = n(723047),
        u = n(727843),
        _ = n(290348),
        I = n(518470),
        E = n(22902),
        T = n(783454),
        m = n(689938),
        N = n(517194);
      function S() {
        var e;
        let { editStateId: t } = (0, u.N)(),
          [n, i] = _.TT(t),
          [S, g] = _.F2(t),
          h = (0, c.oC)(t),
          { options: C } = (0, E.Z)(
            null !== (e = null == h ? void 0 : h.active_trial) && void 0 !== e
              ? e
              : null,
          ),
          x = (0, I.Z)(),
          p = null != n,
          R = a.useCallback(
            (e) => {
              let t = C.find((e) => e.isDefault);
              r()(null != t, "Missing default trial duartion option"),
                i(e ? t.value : null);
            },
            [i, C],
          ),
          L = (0, d.mY)(),
          f = (0, o.Dt)(),
          O = (0, o.Dt)();
        return (0, s.jsxs)(T.Z, {
          title: m.Z.Messages.GUILD_ROLE_SUBSCRIPTION_SETUP_FREE_TRIAL_TITLE,
          description:
            m.Z.Messages.GUILD_ROLE_SUBSCRIPTION_SETUP_FREE_TRIAL_DESCRIPTION,
          children: [
            (0, s.jsx)(l.FormSwitch, {
              onChange: (e, t) => R(e),
              value: p,
              disabled: L,
              hideBorder: !0,
              children:
                m.Z.Messages
                  .GUILD_ROLE_SUBSCRIPTION_SETUP_ENABLE_FREE_TRIAL_CTA,
            }),
            (0, s.jsxs)(l.FormSection, {
              title:
                m.Z.Messages
                  .GUILD_ROLE_SUBSCRIPTION_SETUP_FREE_TRIAL_TIME_LIMIT_TITLE,
              titleId: f,
              disabled: !p || L,
              children: [
                (0, s.jsx)(l.FormText, {
                  type: l.FormText.Types.DESCRIPTION,
                  className: N.formDescription,
                  disabled: !p || L,
                  children:
                    m.Z.Messages
                      .GUILD_ROLE_SUBSCRIPTION_SETUP_FREE_TRIAL_TIME_LIMIT_DESCRIPTION,
                }),
                (0, s.jsx)(l.Spacer, { size: 8 }),
                (0, s.jsx)(l.SingleSelect, {
                  "aria-labelledby": f,
                  options: C,
                  className: N.formInput,
                  placeholder:
                    m.Z.Messages
                      .GUILD_ROLE_SUBSCRIPTION_SETUP_FREE_TRIAL_DISABLED,
                  value: n,
                  onChange: i,
                  maxVisibleItems: 5,
                  isDisabled: !p || L,
                  look: l.SelectLooks.CUSTOM,
                }),
              ],
            }),
            (0, s.jsx)(l.Spacer, { size: 24 }),
            (0, s.jsxs)(l.FormSection, {
              title:
                m.Z.Messages
                  .GUILD_ROLE_SUBSCRIPTION_SETUP_TIER_ACTIVE_TRIAL_USER_LIMIT_TITLE,
              titleId: O,
              disabled: !p || L,
              children: [
                (0, s.jsx)(l.FormText, {
                  type: l.FormText.Types.DESCRIPTION,
                  className: N.formDescription,
                  disabled: !p || L,
                  children:
                    m.Z.Messages
                      .GUILD_ROLE_SUBSCRIPTION_SETUP_TIER_ACTIVE_TRIAL_USER_LIMIT_DESCRIPTION,
                }),
                (0, s.jsx)(l.SingleSelect, {
                  "aria-labelledby": O,
                  options: x,
                  className: N.formInput,
                  value: S,
                  onChange: g,
                  maxVisibleItems: 5,
                  isDisabled: !p || L,
                  look: l.SelectLooks.CUSTOM,
                }),
              ],
            }),
          ],
        });
      }
    },
    231610: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return T;
        },
      }),
        n(47120);
      var s = n(735250);
      n(470079);
      var a = n(481060),
        i = n(723047),
        r = n(727843),
        l = n(290348),
        o = n(783454),
        c = n(893729),
        d = n(619326),
        u = n(553204),
        _ = n(689938),
        I = n(517194),
        E = n(252218);
      function T() {
        let { editStateId: e, guildId: t } = (0, r.N)(),
          [, T] = l.p9(e, t),
          [m, N] = l.Ek(e, t),
          S = l.qs(e, t);
        function g() {
          (0, a.openModalLazy)(async () => {
            let { default: e } = await n.e("22942").then(n.bind(n, 660727));
            return (n) =>
              (0, s.jsx)(e, {
                ...n,
                guildId: t,
                onUploadIcon: (e) => T({ icon: e, unicodeEmoji: null }),
                onSelectUnicodeEmoji: (e) => T({ icon: null, unicodeEmoji: e }),
              });
          });
        }
        let h = (0, i.mY)();
        return (0, s.jsxs)(o.Z, {
          title:
            _.Z.Messages.GUILD_ROLE_SUBSCRIPTION_SETUP_TIER_FLAIR_HEADER_TITLE,
          description:
            _.Z.Messages
              .GUILD_ROLE_SUBSCRIPTION_SETUP_TIER_FLAIR_HEADER_SUBTITLE,
          children: [
            (0, s.jsx)(a.FormSection, {
              title:
                _.Z.Messages.GUILD_ROLE_SUBSCRIPTION_SETUP_FLAIR_COLOR_TITLE,
              disabled: h,
              children: (0, s.jsx)(d.Z, { value: m, onChange: N, disabled: h }),
            }),
            (0, s.jsx)(a.Spacer, { size: 24 }),
            (0, s.jsx)("div", {
              className: I.__invalid_iconSection,
              children: (0, s.jsxs)(a.FormSection, {
                title:
                  _.Z.Messages.GUILD_ROLE_SUBSCRIPTION_SETUP_FLAIR_BADGE_TITLE,
                disabled: h,
                children: [
                  (0, s.jsx)(a.FormText, {
                    type: a.FormText.Types.DESCRIPTION,
                    className: I.formDescription,
                    disabled: h,
                    children:
                      _.Z.Messages
                        .GUILD_ROLE_SUBSCRIPTION_SETUP_FLAIR_BADGE_DESCRIPTION,
                  }),
                  (0, s.jsxs)("div", {
                    className: E.iconUploaderContainer,
                    children: [
                      (0, s.jsx)(u.Z, {
                        role: S,
                        "aria-label": _.Z.Messages.ROLE_ICON_CHOOSE_IMAGE,
                        onClick: g,
                        disabled: h,
                      }),
                      (0, s.jsx)(a.Button, {
                        look: a.Button.Looks.OUTLINED,
                        color: a.Button.Colors.PRIMARY,
                        className: I.__invalid_imageUploadButtonCTA,
                        onClick: g,
                        disabled: h,
                        children: _.Z.Messages.ROLE_ICON_CHOOSE_IMAGE,
                      }),
                    ],
                  }),
                ],
              }),
            }),
            (0, s.jsx)(a.Spacer, { size: 24 }),
            (0, s.jsx)(a.FocusBlock, {
              children: (0, s.jsxs)("div", {
                className: E.previewContainer,
                "aria-hidden": !0,
                children: [
                  (0, s.jsx)(c.Z, {
                    guildId: t,
                    role: S,
                    className: E.messageContainer,
                    theme: "light",
                  }),
                  (0, s.jsx)(c.Z, {
                    guildId: t,
                    role: S,
                    className: E.messageContainer,
                    theme: "dark",
                  }),
                ],
              }),
            }),
          ],
        });
      }
    },
    509026: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return _;
        },
      });
      var s = n(735250);
      n(470079);
      var a = n(442837),
        i = n(481060),
        r = n(471613),
        l = n(29605),
        o = n(345861),
        c = n(723047),
        d = n(796814),
        u = n(689938);
      function _(e) {
        let { guild: t } = e,
          _ = (0, a.e7)([r.Z], () => r.Z.isUploadingEmoji()),
          I = (0, d.Z)(t.id),
          E = t.getMaxRoleSubscriptionEmojiSlots() - I.length,
          T = (0, c.mY)();
        return (0, s.jsx)(s.Fragment, {
          children: (0, s.jsxs)(i.FormSection, {
            title:
              u.Z.Messages.GUILD_ROLE_SUBSCRIPTIONS_MANAGE_EMOJI_UPLOAD_TITLE,
            disabled: T,
            children: [
              (0, s.jsx)(i.FormText, {
                type: i.FormText.Types.DESCRIPTION,
                disabled: T,
                children:
                  u.Z.Messages.GUILD_ROLE_SUBSCRIPTIONS_MANAGE_EMOJI_UPLOAD_DESCRIPTION.format(
                    { maxSlots: t.getMaxRoleSubscriptionEmojiSlots() },
                  ),
              }),
              (0, s.jsx)(i.Spacer, { size: 16 }),
              (0, s.jsx)(o.Z, {
                onChange: (e, a) => {
                  null != e &&
                    null != a &&
                    (0, i.openModalLazy)(async () => {
                      let { CreateEmojiWithRolesModal: i } = await n
                        .e("9007")
                        .then(n.bind(n, 604623));
                      return (n) =>
                        (0, s.jsx)(i, {
                          ...n,
                          data: e,
                          file: a,
                          guildId: t.id,
                        });
                    });
                },
                buttonCTA:
                  u.Z.Messages.GUILD_ROLE_SUBSCRIPTIONS_MANAGE_EMOJI_UPLOAD_CTA,
                submitting: _,
                disabled: T || _ || 0 === E,
              }),
              (0, s.jsx)(i.Spacer, { size: 24 }),
              (0, s.jsx)(l.L3, {
                title:
                  u.Z.Messages
                    .GUILD_ROLE_SUBSCRIPTIONS_MANAGE_EMOJI_EMOJI_SECTION_TITLE,
                maxSlots: t.getMaxRoleSubscriptionEmojiSlots(),
                emojiCount: I.length,
              }),
              (0, s.jsx)(l.FT, {
                guild: t,
                emojis: I,
                onEdit: (e, t) => {
                  (0, i.openModalLazy)(async () => {
                    let { UpdateEmojiRolesModal: a } = await n
                      .e("9007")
                      .then(n.bind(n, 604623));
                    return (n) => (0, s.jsx)(a, { ...n, emoji: e, guildId: t });
                  });
                },
                editingDisabled: T,
              }),
            ],
          }),
        });
      }
    },
    828656: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return i;
        },
      }),
        n(47120);
      var s = n(225857),
        a = n(290843);
      function i(e, t, n, i) {
        let [{ isDragging: r }, l, o] = (0, s.c)({
            type: t,
            item: () => ({ index: n }),
            collect: (e) => ({ isDragging: e.isDragging() }),
          }),
          [, c] = (0, a.L)({
            accept: t,
            hover(t, s) {
              if (null == e.current) return;
              let a = t.index;
              if (a === n) return;
              let r = e.current.getBoundingClientRect(),
                l = (r.bottom - r.top) / 2,
                o = s.getClientOffset().y - r.top;
              if ((!(a < n) || !(o < l)) && (!(a > n) || !(o > l)))
                i(a, n), (t.index = n);
            },
          });
        return { drag: l, dragPreview: o, drop: c, isDragging: r };
      }
    },
    500395: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return T;
        },
      });
      var s = n(735250);
      n(470079);
      var a = n(990547),
        i = n(481060),
        r = n(213609),
        l = n(787051),
        o = n(696936),
        c = n(539290),
        d = n(975464),
        u = n(689938),
        _ = n(702792),
        I = n(270395);
      function E(e) {
        let { config: t } = e,
          { noticeText: n, ctaLabel: a, ctaClickable: r, onCtaClicked: l } = t;
        return (0, s.jsxs)("div", {
          className: _.__invalid_ctaContainer,
          children: [
            (0, s.jsx)("img", {
              className: _.__invalid_heroBanner,
              src: I,
              alt: u.Z.Messages.GUILD_ROLE_SUBSCRIPTION_WELCOME_HERO_BANNER_ALT,
            }),
            (0, s.jsxs)("div", {
              className: _.__invalid_ctaContent,
              children: [
                (0, s.jsx)(i.Heading, {
                  variant: "heading-xl/semibold",
                  color: "header-primary",
                  children:
                    u.Z.Messages
                      .GUILD_ROLE_SUBSCRIPTION_WELCOME_DESKTOP_V2_TITLE,
                }),
                (0, s.jsx)(i.Spacer, { size: 12 }),
                (0, s.jsx)(i.Text, {
                  variant: "text-md/normal",
                  color: "header-secondary",
                  children:
                    u.Z.Messages.GUILD_ROLE_SUBSCRIPTION_WELCOME_V2_SUBTITLE,
                }),
                (0, s.jsx)(i.Spacer, { size: 24 }),
                (0, s.jsx)(c.Z, {
                  className: _.waitlist,
                  color: o.W.BROWN,
                  buttonPosition: c.E.RIGHT,
                  notice: n,
                  ctaLabel: a,
                  ctaDisabled: !r,
                  ctaClassName: _.waitlistCtaButton,
                  onClick: l,
                }),
              ],
            }),
          ],
        });
      }
      function T(e) {
        let { guild: t, config: n } = e,
          {
            isLoading: o,
            error: c,
            creatorMonetizationOnboardingMarketing: u,
          } = (0, l.Z)(t.id);
        return ((0, r.Z)({
          type: a.ImpressionTypes.PANE,
          name: a.ImpressionNames.ENABLE_CREATOR_MONETIZATION_WAITLIST_LANDING,
          properties: { guild_id: t.id },
        }),
        o)
          ? (0, s.jsx)(i.Spinner, {})
          : (0, s.jsxs)("div", {
              className: _.__invalid_container,
              children: [
                (0, s.jsx)(E, { config: n }),
                (0, s.jsx)(d.C, {
                  onboardingMarketing: u,
                  onboardingMarketingError: c,
                }),
              ],
            });
      }
    },
    756066: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return l;
        },
      });
      var s = n(735250);
      n(470079);
      var a = n(587431),
        i = n(539290),
        r = n(689938);
      function l(e) {
        let t,
          {
            resubmittingEnableRequest: n,
            resubmissionError: l,
            createEnableRequest: o,
            requestRejectedNoticeText: c,
            reapplyNoticeText: d,
            isApplicationPending: u,
          } = e;
        if (null != l)
          return (0, s.jsx)(a.Z, { children: l.getAnyErrorMessage() });
        let _ = null;
        return (
          u
            ? (_ =
                r.Z.Messages
                  .GUILD_ROLE_SUBSCRIPTION_SETTINGS_ENABLE_REQUEST_RECEIVED_AND_PENDING)
            : null != c
              ? (_ = c)
              : null != d &&
                ((_ = d),
                (t =
                  r.Z.Messages
                    .GUILD_ROLE_SUBSCRIPTION_SETTINGS_SUBMIT_APPEAL_CTA)),
          null != _
            ? (0, s.jsx)(i.Z, {
                notice: _,
                ctaLabel: t,
                ctaLoading: n,
                onClick: o,
              })
            : null
        );
      }
    },
    271267: function (e, t, n) {
      "use strict";
      n.d(t, {
        Q: function () {
          return _;
        },
        Z: function () {
          return m;
        },
      }),
        n(47120);
      var s = n(735250),
        a = n(470079),
        i = n(481060),
        r = n(957011),
        l = n(587431),
        o = n(756066),
        c = n(689938),
        d = n(585394),
        u = n(270395);
      let _ = "role_subscriptions_eligibility_modal";
      function I(e) {
        let {
          guild: t,
          eligibility: a,
          eligibilityLoading: r,
          eligibilityError: l,
          refreshEligibility: o,
        } = e;
        return (0, s.jsxs)(i.Button, {
          color: i.ButtonColors.CUSTOM,
          className: d.ineligibleButton,
          innerClassName: d.ineligibleButtonContent,
          grow: !0,
          onClick: function () {
            (0, i.openModalLazy)(
              async () => {
                let { default: e } = await n.e("21863").then(n.bind(n, 466501));
                return (n) =>
                  (0, s.jsx)(e, {
                    ...n,
                    eligibility: a,
                    eligibilityLoading: r,
                    eligibilityError: l,
                    refreshEligibility: o,
                    guildId: t.id,
                  });
              },
              { modalKey: _ },
            );
          },
          size: i.Button.Sizes.LARGE,
          children: [
            (0, s.jsx)(i.CircleWarningIcon, {
              size: "xs",
              color: "currentColor",
            }),
            c.Z.Messages.GUILD_ROLE_SUBSCRIPTION_START_EARNING_CTA,
          ],
        });
      }
      function E(e) {
        let { guild: t, checkboxText: n } = e,
          {
            canSubmitAcceptance: o,
            error: u,
            loading: _,
            submitAcceptTermsRequest: I,
          } = (0, r.Z)(t.id),
          [E, T] = a.useState(!1);
        return (0, s.jsxs)(s.Fragment, {
          children: [
            (0, s.jsx)(i.Checkbox, {
              onChange: function () {
                T((e) => !e);
              },
              size: 20,
              type: i.Checkbox.Types.INVERTED,
              value: E,
              children: (0, s.jsx)(i.Text, {
                variant: "text-sm/normal",
                color: "header-secondary",
                children: n,
              }),
            }),
            (0, s.jsx)(i.Spacer, { size: 24 }),
            (0, s.jsx)(i.Button, {
              className: d.ctaButton,
              disabled: !E || !o,
              grow: !0,
              onClick: I,
              size: i.Button.Sizes.LARGE,
              submitting: _,
              children: c.Z.Messages.GUILD_ROLE_SUBSCRIPTION_START_EARNING_CTA,
            }),
            null != u &&
              (0, s.jsxs)(s.Fragment, {
                children: [
                  (0, s.jsx)(i.Spacer, { size: 24 }),
                  (0, s.jsx)(l.Z, { children: u.getAnyErrorMessage() }),
                ],
              }),
          ],
        });
      }
      function T(e) {
        let { guild: t, monetizationEligibility: n } = e,
          {
            eligibilityLoading: a,
            eligibilityError: i,
            refreshEligibility: r,
            eligibility: l,
            eligibleForMonetization: c,
            acceptTermsCheckboxText: d,
            wasRejectedInV1: u,
          } = n;
        return c
          ? u
            ? (0, s.jsx)(o.Z, { ...n })
            : (0, s.jsx)(E, { guild: t, checkboxText: d })
          : (0, s.jsx)(I, {
              guild: t,
              eligibility: l,
              eligibilityLoading: a,
              eligibilityError: i,
              refreshEligibility: r,
            });
      }
      function m(e) {
        let { guild: t, monetizationEligibility: n } = e;
        return (0, s.jsxs)("div", {
          className: d.ctaContainer,
          children: [
            (0, s.jsx)("img", {
              className: d.heroBanner,
              src: u,
              alt: c.Z.Messages.GUILD_ROLE_SUBSCRIPTION_WELCOME_HERO_BANNER_ALT,
            }),
            (0, s.jsxs)("div", {
              className: d.ctaContent,
              children: [
                (0, s.jsx)(i.Heading, {
                  variant: "heading-xl/semibold",
                  color: "header-primary",
                  children:
                    c.Z.Messages
                      .GUILD_ROLE_SUBSCRIPTION_WELCOME_DESKTOP_V2_TITLE,
                }),
                (0, s.jsx)(i.Spacer, { size: 12 }),
                (0, s.jsx)(i.Text, {
                  variant: "text-md/normal",
                  color: "header-secondary",
                  children:
                    c.Z.Messages.GUILD_ROLE_SUBSCRIPTION_WELCOME_V2_SUBTITLE,
                }),
                (0, s.jsx)(i.Spacer, { size: 24 }),
                (0, s.jsx)(T, { guild: t, monetizationEligibility: n }),
              ],
            }),
          ],
        });
      }
    },
    320893: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return L;
        },
      });
      var s = n(735250);
      n(470079);
      var a = n(780384),
        i = n(481060),
        r = n(410030),
        l = n(293810),
        o = n(689938),
        c = n(401257),
        d = n(934961),
        u = n(568294),
        _ = n(867861),
        I = n(860790),
        E = n(268953),
        T = n(487703),
        m = n(458050),
        N = n(334364),
        S = n(431712);
      function g(e) {
        return (0, a.wj)(e)
          ? c.revenueSharePercentageDark
          : c.revenueSharePercentageLight;
      }
      function h() {
        let e = (0, r.ZP)(),
          t = {
            backgroundColor: (0, a.wj)(e)
              ? "#2e3638"
              : "var(--background-primary)",
          };
        return (0, s.jsxs)("div", {
          className: c.earningsPreviewContainer,
          style: t,
          children: [
            (0, s.jsxs)("div", {
              children: [
                (0, s.jsx)(i.Text, {
                  variant: "text-sm/normal",
                  color: "header-secondary",
                  children:
                    o.Z.Messages
                      .GUILD_ROLE_SUBSCRIPTION_CREATOR_BENEFIT_NEW_SUBS,
                }),
                (0, s.jsx)(i.Spacer, { size: 8 }),
                (0, s.jsx)(i.Heading, {
                  variant: "heading-md/bold",
                  className: g(e),
                  children:
                    o.Z.Messages
                      .GUILD_ROLE_SUBSCRIPTION_CREATOR_BENEFIT_REVENUE_INCREASE,
                }),
              ],
            }),
            (0, s.jsx)("img", {
              className: c.roundAvatar,
              src: T,
              alt: o.Z.Messages
                .GUILD_ROLE_SUBSCRIPTION_CREATOR_BENEFIT_1_PREVIEW_IMG_ALT,
            }),
          ],
        });
      }
      function C() {
        let e = (0, r.ZP)();
        function t(e) {
          let { length: t, horizontal: n } = e;
          return (0, s.jsx)("div", {
            className: n ? c.horizontalConnector : c.verticalConnector,
            style: {
              ...(n ? { width: t } : { height: t }),
              border: "1px solid #49494933",
            },
          });
        }
        return (0, s.jsxs)("div", {
          className: c.avatarGridContainer,
          "aria-label":
            o.Z.Messages
              .GUILD_ROLE_SUBSCRIPTION_CREATOR_BENEFIT_1_GRID_ARIA_LABEL,
          children: [
            (0, s.jsxs)("div", {
              className: c.avatarCard,
              children: [
                (0, s.jsx)(t, { length: 24 }),
                (0, s.jsx)("img", {
                  className: c.roundAvatar,
                  src: (0, a.wj)(e) ? d : u,
                  alt: "",
                }),
                (0, s.jsx)(t, { horizontal: !0, length: 12 }),
              ],
            }),
            (0, s.jsxs)("div", {
              className: c.avatarCard,
              children: [
                (0, s.jsx)(t, { length: 24 }),
                (0, s.jsx)("img", {
                  className: c.roundAvatar,
                  src: _,
                  alt: "",
                }),
              ],
            }),
            (0, s.jsxs)("div", {
              className: c.avatarCard,
              children: [
                (0, s.jsx)(t, { length: 12 }),
                (0, s.jsx)("img", {
                  className: c.roundAvatar,
                  src: I,
                  alt: "",
                }),
                (0, s.jsx)(t, { horizontal: !0, length: 12 }),
              ],
            }),
            (0, s.jsxs)("div", {
              className: c.avatarCard,
              children: [
                (0, s.jsx)(t, { length: 12 }),
                (0, s.jsx)("img", {
                  className: c.roundAvatar,
                  src: E,
                  alt: "",
                }),
              ],
            }),
          ],
        });
      }
      function x() {
        return (0, s.jsxs)("div", {
          className: c.earningBenefitCard,
          children: [
            (0, s.jsx)(i.Text, {
              variant: "text-md/normal",
              color: "header-secondary",
              children: o.Z.Messages.GUILD_ROLE_SUBSCRIPTION_CREATOR_BENEFIT_1,
            }),
            (0, s.jsx)(i.Spacer, { size: 32 }),
            (0, s.jsx)(h, {}),
            (0, s.jsx)(i.Spacer, { size: 24 }),
            (0, s.jsx)(C, {}),
          ],
        });
      }
      function p() {
        return (0, s.jsxs)("div", {
          className: c.followerBenefitCard,
          children: [
            (0, s.jsx)(i.Text, {
              className: c.followerBenefitText,
              variant: "text-md/normal",
              color: "header-secondary",
              children: o.Z.Messages.GUILD_ROLE_SUBSCRIPTION_CREATOR_BENEFIT_2,
            }),
            (0, s.jsx)("img", {
              className: c.roleSubscriptionSocial,
              src: S,
              alt: o.Z.Messages
                .GUILD_ROLE_SUBSCRIPTION_CREATOR_BENEFIT_2_IMG_1_ALT,
            }),
            (0, s.jsx)("img", {
              className: c.roleSubscriptionLanyardIllo,
              src: N,
              alt: o.Z.Messages
                .GUILD_ROLE_SUBSCRIPTION_CREATOR_BENEFIT_2_IMG_2_ALT,
            }),
          ],
        });
      }
      function R() {
        let e = (0, r.ZP)();
        return (0, s.jsxs)("div", {
          className: c.revenueShareBenefitCard,
          children: [
            (0, s.jsxs)("div", {
              children: [
                (0, s.jsxs)(i.Heading, {
                  className: g(e),
                  style: { fontSize: "50px", lineHeight: "52px" },
                  variant: "heading-xxl/extrabold",
                  children: [l.NT, "%"],
                }),
                (0, s.jsx)(i.Text, {
                  variant: "text-md/normal",
                  color: "header-secondary",
                  children:
                    o.Z.Messages.GUILD_ROLE_SUBSCRIPTION_CREATOR_BENEFIT_3,
                }),
              ],
            }),
            (0, s.jsx)("img", {
              className: c.roleSubscriptionEarningIllo,
              src: m,
              alt: o.Z.Messages
                .GUILD_ROLE_SUBSCRIPTION_CREATOR_BENEFIT_3_IMG_ALT,
            }),
          ],
        });
      }
      function L() {
        return (0, s.jsxs)("div", {
          children: [
            (0, s.jsx)(i.Heading, {
              variant: "heading-lg/semibold",
              color: "header-primary",
              children:
                o.Z.Messages
                  .GUILD_ROLE_SUBSCRIPTION_BENEFITS_FOR_CREATORS_TITLE,
            }),
            (0, s.jsx)(i.Spacer, { size: 24 }),
            (0, s.jsxs)("div", {
              className: c.creatorBenefitsContainer,
              children: [
                (0, s.jsx)(x, {}),
                (0, s.jsx)(p, {}),
                (0, s.jsx)(R, {}),
              ],
            }),
          ],
        });
      }
    },
    81509: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return x;
        },
      });
      var s = n(735250);
      n(470079);
      var a = n(120356),
        i = n.n(a),
        r = n(481060),
        l = n(596454),
        o = n(782568),
        c = n(377171),
        d = n(565138),
        u = n(601964),
        _ = n(526717),
        I = n(594278),
        E = n(549631),
        T = n(689938),
        m = n(674132);
      function N(e) {
        let { subscribers: t } = e;
        return (0, s.jsxs)("div", {
          className: m.guildSubscriberCount,
          children: [
            (0, s.jsx)("div", {
              className: m.subscriberCountValue,
              children: (0, s.jsx)(r.Text, {
                variant: "text-md/normal",
                color: "always-white",
                children: t,
              }),
            }),
            (0, s.jsxs)("div", {
              className: m.subscriberCountText,
              children: [
                (0, s.jsx)(E.Z, { color: c.Z.WHITE }),
                (0, s.jsx)(r.Text, {
                  variant: "text-md/normal",
                  color: "always-white",
                  children:
                    T.Z.Messages
                      .GUILD_ROLE_SUBSCRIPTION_SETTINGS_SUBSCRIBERS_LABEL,
                }),
              ],
            }),
          ],
        });
      }
      function S(e) {
        let {
            guildName: t,
            guildIcon: n,
            guildAvatarUrl: a,
            subscriberCount: i,
          } = e,
          l = new u.ZP({ name: t, icon: n });
        return (0, s.jsxs)("div", {
          className: m.guildCardHeader,
          children: [
            (0, s.jsx)(d.Z, {
              className: m.guildCardHeaderAvatar,
              iconSrc: a,
              guild: l,
              size: d.Z.Sizes.LARGE,
            }),
            (0, s.jsxs)("div", {
              className: m.guildCardHeaderTitle,
              children: [
                (0, s.jsx)(r.Heading, {
                  variant: "heading-lg/semibold",
                  color: "header-primary",
                  children: t,
                }),
                null != i && (0, s.jsx)(N, { subscribers: i }),
              ],
            }),
          ],
        });
      }
      function g(e) {
        let { quote: t, quoteAttribution: n, quoteAttributionTitle: a } = e;
        return (0, s.jsxs)("div", {
          className: m.guildCardQuote,
          children: [
            (0, s.jsx)(r.Text, {
              variant: "text-lg/normal",
              color: "interactive-active",
              children: t,
            }),
            (0, s.jsx)(r.Text, {
              variant: "text-md/normal",
              color: "interactive-active",
              children:
                T.Z.Messages.GUILD_ROLE_SUBSCRIPTION_OTHER_CREATOR_QUOTE_ATTRIBUTION.format(
                  {
                    attributionName: n,
                    attributionTitle: null != a ? a : T.Z.Messages.GUILD_OWNER,
                  },
                ),
            }),
          ],
        });
      }
      function h(e) {
        let { emojisToShow: t, notShownEmojiCount: n, storePageUrl: a } = e,
          c = null != t && t.length > 0,
          d = () => {
            null != a && (0, o.Z)(a);
          };
        return (0, s.jsx)("div", {
          className: m.guildPremiumEmojis,
          children: c
            ? (0, s.jsxs)(s.Fragment, {
                children: [
                  (0, s.jsx)(r.Text, {
                    variant: "text-xs/semibold",
                    color: "header-primary",
                    className: m.premiumEmojisTitle,
                    children:
                      T.Z.Messages
                        .GUILD_ROLE_SUBSCRIPTION_OTHER_CREATOR_CARD_PREMIUM_EMOJI_TITLE,
                  }),
                  (0, s.jsxs)("div", {
                    className: m.premiumEmojisRow,
                    children: [
                      (0, s.jsxs)("div", {
                        className: i()(
                          m.emojisContainer,
                          null != n && m.fullEmojisContainer,
                        ),
                        children: [
                          t.map((e) =>
                            (0, s.jsx)(
                              l.Z,
                              {
                                className: m.emoji,
                                emojiId: e.id,
                                emojiName: e.name,
                                animated: e.animated,
                              },
                              e.id,
                            ),
                          ),
                          null != n &&
                            (0, s.jsx)("div", {
                              className: m.extraEmojiCount,
                              children: (0, s.jsxs)(r.Text, {
                                variant: "text-md/semibold",
                                color: "text-normal",
                                children: ["+", n],
                              }),
                            }),
                        ],
                      }),
                      (0, s.jsx)("div", {
                        children: (0, s.jsx)(r.Button, {
                          className: m.viewServerButton,
                          innerClassName: m.viewServerButtonText,
                          color: r.Button.Colors.CUSTOM,
                          disabled: null == a,
                          onClick: d,
                          children:
                            T.Z.Messages
                              .GUILD_ROLE_SUBSCRIPTION_OTHER_CREATOR_VIEW_SERVER_CTA,
                        }),
                      }),
                    ],
                  }),
                ],
              })
            : (0, s.jsx)(r.Button, {
                className: i()(m.viewServerButton, m.roundedEdges),
                innerClassName: m.viewServerButtonText,
                color: r.Button.Colors.CUSTOM,
                disabled: null == a,
                onClick: d,
                children:
                  T.Z.Messages
                    .GUILD_ROLE_SUBSCRIPTION_OTHER_CREATOR_VIEW_SERVER_CTA,
              }),
        });
      }
      function C(e) {
        let { highlightedCreatorGuild: t } = e,
          {
            guild_id: n,
            quote: a,
            quote_attribution: i,
            quote_attribution_title: l,
          } = t,
          o = (0, _.Z)(n, 4, 60),
          { isLoading: c, hasAllImperativeDetails: d } = o;
        if (c)
          return (0, s.jsx)("div", {
            className: m.guildCard,
            children: (0, s.jsx)(r.Spinner, {}),
          });
        if (!d) return null;
        let {
          guildIcon: u,
          guildName: I,
          guildAvatarUrl: E,
          subscriberCount: T,
          emojisToShow: N,
          notShownEmojiCount: C,
          storePageUrl: x,
        } = o.details;
        return (0, s.jsxs)("div", {
          className: m.guildCard,
          children: [
            (0, s.jsx)(S, {
              guildIcon: u,
              guildName: I,
              guildAvatarUrl: E,
              subscriberCount: T,
            }),
            (0, s.jsx)(g, {
              quote: a,
              quoteAttribution: i,
              quoteAttributionTitle: l,
            }),
            (0, s.jsx)(h, {
              emojisToShow: N,
              notShownEmojiCount: C,
              storePageUrl: x,
            }),
          ],
        });
      }
      function x(e) {
        let { highlightedCreators: t } = e;
        return (0, s.jsxs)("div", {
          children: [
            (0, s.jsx)(r.Heading, {
              variant: "heading-lg/semibold",
              color: "header-primary",
              children:
                T.Z.Messages
                  .GUILD_ROLE_SUBSCRIPTION_OTHER_CREATOR_GUILD_SECTION_TITLE,
            }),
            (0, s.jsx)(r.Spacer, { size: 24 }),
            (0, s.jsx)(I.Z, {
              carouselClassName: m.creatorGuildCarousel,
              items: t,
              renderItem: (e) => (0, s.jsx)(C, { highlightedCreatorGuild: e }),
              intervalBetweenAutomaticItemRotations: 7e3,
            }),
          ],
        });
      }
    },
    975464: function (e, t, n) {
      "use strict";
      n.d(t, {
        C: function () {
          return S;
        },
        Z: function () {
          return g;
        },
      });
      var s = n(735250);
      n(470079);
      var a = n(990547),
        i = n(481060),
        r = n(213609),
        l = n(605288),
        o = n(787051),
        c = n(346163),
        d = n(587431),
        u = n(271267),
        _ = n(320893),
        I = n(81509),
        E = n(662379),
        T = n(60533),
        m = n(581050),
        N = n(162979);
      function S(e) {
        let { onboardingMarketing: t, onboardingMarketingError: n } = e,
          a = (e) => {
            let { children: t } = e;
            return (0, s.jsxs)(s.Fragment, {
              children: [
                (0, s.jsx)(i.FormDivider, { className: N.sectionDivider }),
                t,
              ],
            });
          },
          r = (0, s.jsx)(
            a,
            { children: (0, s.jsx)(E.Z, {}) },
            m.q.HOW_IT_WORKS,
          ),
          l = (0, s.jsx)(a, { children: (0, s.jsx)(_.Z, {}) }, m.q.BENEFITS);
        return null != n || (null == t ? void 0 : t.sections) == null
          ? (0, s.jsxs)(s.Fragment, { children: [r, l] })
          : (0, s.jsx)(s.Fragment, {
              children: t.sections.map((e) => {
                switch (e.type) {
                  case m.q.HOW_IT_WORKS:
                    return r;
                  case m.q.BENEFITS:
                    return l;
                  case m.q.OTHER_CREATORS:
                    return (0, s.jsx)(
                      a,
                      {
                        children: (0, s.jsx)(I.Z, {
                          highlightedCreators: e.creators,
                        }),
                      },
                      m.q.OTHER_CREATORS,
                    );
                }
              }),
            });
      }
      function g(e) {
        let { guild: t } = e,
          n = (0, c.Z)(t),
          { eligibilityLoading: _, eligibilityError: I, eligibility: E } = n,
          m = (0, l.j)(E),
          {
            isLoading: g,
            error: h,
            creatorMonetizationOnboardingMarketing: C,
          } = (0, o.Z)(t.id);
        return ((0, r.Z)(
          {
            type: a.ImpressionTypes.PANE,
            name: a.ImpressionNames
              .ENABLE_CREATOR_MONETIZATION_ACCEPT_TERMS_LANDING,
            properties: {
              guild_id: t.id,
              is_owner: n.isGuildOwner,
              is_eligible: n.eligibleForMonetization,
              ineligible_reasons: m,
            },
          },
          { disableTrack: null == t.id || null == E },
        ),
        _ || null == E || g)
          ? (0, s.jsx)(i.Spinner, {})
          : E.actionRequired
            ? (0, s.jsx)(T.Z, { guild: t })
            : null != I
              ? (0, s.jsx)(d.Z, { children: I.message })
              : (0, s.jsxs)("div", {
                  className: N.container,
                  children: [
                    (0, s.jsx)(u.Z, { guild: t, monetizationEligibility: n }),
                    (0, s.jsx)(S, {
                      onboardingMarketing: C,
                      onboardingMarketingError: h,
                    }),
                  ],
                });
      }
    },
    662379: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return _;
        },
      });
      var s = n(735250);
      n(470079);
      var a = n(481060),
        i = n(293810),
        r = n(689938),
        l = n(740402),
        o = n(961618),
        c = n(217684),
        d = n(174618);
      function u(e) {
        let { imageSrc: t, description: n } = e;
        return (0, s.jsxs)("div", {
          className: l.howItWorksCard,
          children: [
            (0, s.jsx)("div", {
              className: l.howItWorksImageContainer,
              children: (0, s.jsx)("img", {
                className: l.howItWorksImage,
                src: t,
                alt: "",
              }),
            }),
            (0, s.jsx)("div", {
              className: l.howItWorksDescription,
              children: (0, s.jsx)(a.Text, {
                variant: "text-sm/normal",
                color: "header-primary",
                children: n,
              }),
            }),
          ],
        });
      }
      function _() {
        let e = [
          {
            imageSrc: d,
            description:
              r.Z.Messages.GUILD_ROLE_SUBSCRIPTION_HOW_IT_WORKS_STEP_1,
          },
          {
            imageSrc: o,
            description:
              r.Z.Messages.GUILD_ROLE_SUBSCRIPTION_HOW_IT_WORKS_STEP_2,
          },
          {
            imageSrc: c,
            description:
              r.Z.Messages.GUILD_ROLE_SUBSCRIPTION_HOW_IT_WORKS_STEP_3,
          },
        ];
        return (0, s.jsxs)("div", {
          children: [
            (0, s.jsx)(a.Heading, {
              variant: "heading-lg/semibold",
              color: "header-primary",
              children: r.Z.Messages.GUILD_ROLE_SUBSCRIPTION_HOW_IT_WORKS_TITLE,
            }),
            (0, s.jsx)(a.Spacer, { size: 24 }),
            (0, s.jsx)("div", {
              className: l.howItWorksContainer,
              children: e.map((e) =>
                (0, s.jsx)(
                  u,
                  { imageSrc: e.imageSrc, description: e.description },
                  e.imageSrc,
                ),
              ),
            }),
            (0, s.jsx)(a.Spacer, { size: 24 }),
            (0, s.jsx)(a.Text, {
              variant: "text-sm/normal",
              color: "header-secondary",
              children:
                r.Z.Messages.GUILD_ROLE_SUBSCRIPTION_HOW_IT_WORKS_FOOTER.format(
                  { creatorPortalUrl: i.C5 },
                ),
            }),
          ],
        });
      }
    },
    60533: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return c;
        },
      });
      var s = n(735250);
      n(470079);
      var a = n(442837),
        i = n(481060),
        r = n(90815),
        l = n(594174),
        o = n(430994);
      function c(e) {
        let { guild: t } = e,
          n = (0, a.e7)([l.default], () => {
            let e = l.default.getCurrentUser();
            return null != e && (null == t ? void 0 : t.isOwner(e)) === !0;
          }),
          c = () => {
            (0, r.q)(t.id, { demonetized: !0 });
          };
        return (0, s.jsxs)("div", {
          className: o.container,
          children: [
            (0, s.jsx)(i.Heading, {
              variant: "heading-lg/semibold",
              color: "header-primary",
              children: "Monetization Temporarily Disabled",
            }),
            (0, s.jsx)(i.Spacer, { size: 24 }),
            (0, s.jsx)(i.Text, {
              variant: "text-md/normal",
              color: "header-secondary",
              children:
                "This server is overdue for accepting our new terms of service so we've had to temporarily suspend monetization. Don't worry, existing subscribers can still access their benefits and renew their subscription. However, new subscriptions cannot be made until the owner accepts our new terms of service.",
            }),
            (0, s.jsx)(i.Spacer, { size: 24 }),
            (0, s.jsx)(i.Tooltip, {
              text: "Only the server owner can accept new terms",
              shouldShow: !n,
              children: (e) =>
                (0, s.jsx)(i.Button, {
                  disabled: !n,
                  ...e,
                  onClick: c,
                  children: "Accept New Terms",
                }),
            }),
          ],
        });
      }
    },
    91354: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return i;
        },
      });
      var s = n(735250);
      n(470079);
      var a = n(325767);
      function i(e) {
        let {
          width: t = 24,
          height: n = 24,
          color: i = "currentColor",
          ...r
        } = e;
        return (0, s.jsx)("svg", {
          ...(0, a.Z)(r),
          width: t,
          height: n,
          viewBox: "0 0 24 24",
          children: (0, s.jsx)("path", {
            d: "M22 9H10V7H22V9ZM22 12H2V14H22V12ZM22 17H2V19H22V17ZM9 5.41L7.59 4L4 7.59L2.41 6L1 7.41L4 10.41L9 5.41Z",
            fill: i,
          }),
        });
      }
    },
    857081: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return i;
        },
      });
      var s = n(735250);
      n(470079);
      var a = n(325767);
      function i(e) {
        let {
          width: t = 24,
          height: n = 24,
          color: i = "currentColor",
          ...r
        } = e;
        return (0, s.jsx)("svg", {
          ...(0, a.Z)(r),
          width: t,
          height: n,
          viewBox: "0 0 18 18",
          children: (0, s.jsx)("path", {
            d: "M7.33366 17.3333C6.95866 17.3333 6.62533 17.0833 6.53366 16.7166L5.78366 13.975C5.55033 13.125 4.88366 12.45 4.02533 12.225L1.28366 11.475C0.916992 11.375 0.666992 11.0416 0.666992 10.6666C0.666992 10.2916 0.916992 9.95829 1.28366 9.86663L4.02533 9.11663C4.87533 8.88329 5.55033 8.21663 5.77533 7.35829L6.52533 4.61663C6.62533 4.24996 6.95866 3.99996 7.33366 3.99996C7.70866 3.99996 8.04199 4.24996 8.13366 4.61663L8.88366 7.35829C9.11699 8.20829 9.78366 8.88329 10.642 9.10829L13.3837 9.85829C13.7503 9.95829 14.0003 10.2916 14.0003 10.6666C14.0003 11.0416 13.7503 11.375 13.3837 11.4666L10.642 12.2166C9.79199 12.45 9.11699 13.1166 8.89199 13.975L8.14199 16.7166C8.04199 17.0833 7.70866 17.3333 7.33366 17.3333ZM14.0003 7.33329C13.8087 7.33329 13.6503 7.20829 13.6003 7.02496L13.2253 5.64996C13.1087 5.22496 12.7753 4.89163 12.3503 4.77496L10.9753 4.39996C10.792 4.34996 10.667 4.19163 10.667 3.99996C10.667 3.80829 10.792 3.64996 10.9753 3.59996L12.3503 3.22496C12.7753 3.10829 13.1087 2.77496 13.2253 2.34996L13.6003 0.974959C13.6503 0.791626 13.8087 0.666626 14.0003 0.666626C14.192 0.666626 14.3503 0.791626 14.4003 0.974959L14.7753 2.34996C14.892 2.77496 15.2253 3.10829 15.6503 3.22496L17.0253 3.59996C17.2087 3.64996 17.3337 3.80829 17.3337 3.99996C17.3337 4.19163 17.2087 4.34996 17.0253 4.39996L15.6503 4.77496C15.2253 4.89163 14.892 5.22496 14.7753 5.64996L14.4003 7.02496C14.3503 7.20829 14.192 7.33329 14.0003 7.33329Z",
            fill: i,
          }),
        });
      }
    },
    662961: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return i;
        },
      });
      var s = n(735250);
      n(470079);
      var a = n(325767);
      function i(e) {
        let {
          width: t = 24,
          height: n = 24,
          color: i = "currentColor",
          ...r
        } = e;
        return (0, s.jsx)("svg", {
          ...(0, a.Z)(r),
          width: t,
          height: n,
          viewBox: "0 0 24 24",
          children: (0, s.jsx)("path", {
            d: "M12 4.5C12 3.67 11.33 3 10.5 3C9.67 3 9 3.67 9 4.5V11V14L5.4 11.3C5.15 11.11 4.84 11 4.5 11C3.67 11 3 11.67 3 12.5C3 12.88 3.14 13.23 3.37 13.49L8.8 19.64C9.57 20.51 10.66 21 11.8 21H15.5C18.54 21 21 18.54 21 15.5C21 12.84 19.11 10.62 16.61 10.11L12 9V4.5Z",
            fill: i,
          }),
        });
      }
    },
    146610: function (e, t, n) {
      "use strict";
      var s,
        a,
        i = n(735250);
      n(470079);
      var r = n(120356),
        l = n.n(r),
        o = n(167533),
        c = n(73346),
        d = n(169903),
        u = n(67152),
        _ = n(689938),
        I = n(468059),
        E = n(539918);
      ((s = a || (a = {})).TIER_NAME = "tier_name"),
        (s.SUBSCRIBERS = "subscribers"),
        (s.AMOUNT = "amount"),
        (s.PRICE = "price");
      let T = [
        {
          key: "tier_name",
          cellClassName: I.tierNameColumn,
          renderHeader: () =>
            _.Z.Messages.GUILD_ROLE_SUBSCRIPTION_EARNINGS_TABLE_TIERS,
          render(e) {
            let t,
              { subscriptionListing: n } = e;
            if (null != n) {
              let e =
                (null == n ? void 0 : n.image_asset) == null
                  ? void 0
                  : (0, c._W)(n.application_id, n.image_asset, 128);
              t = (0, i.jsxs)(i.Fragment, {
                children: [
                  (0, i.jsx)("img", {
                    src: e,
                    alt: "",
                    className: I.tierImage,
                  }),
                  n.name,
                ],
              });
            }
            return (0, i.jsx)(u.bL, { className: I.tierNameCell, children: t });
          },
        },
        {
          key: "subscribers",
          cellClassName: l()(I.subscribersColumn, E.cellAlignRight),
          renderHeader: () =>
            _.Z.Messages.GUILD_ROLE_SUBSCRIPTION_EARNINGS_TABLE_MEMBERS,
          render: (e) => (0, i.jsx)(u.av, { children: e.roleMemberCount }),
        },
        {
          key: "price",
          cellClassName: l()(I.priceColumn, E.cellAlignRight),
          renderHeader: () =>
            _.Z.Messages.GUILD_ROLE_SUBSCRIPTION_EARNINGS_TABLE_PRICE,
          render(e) {
            let { subscriptionListing: t } = e,
              n = null == t ? void 0 : t.subscription_plans[0],
              s = null == n ? void 0 : n.price;
            return (0, i.jsx)(u.kA, { children: s });
          },
        },
      ];
      t.Z = (e) => {
        let { totalPayoutsForPeriod: t, guildId: n, className: s } = e,
          a = (0, d.Z)(n, t);
        return (0, i.jsx)("div", {
          className: l()(E.tableContainer, s),
          children: (0, i.jsx)(o.Z, {
            columns: T,
            data: a,
            className: l()(E.table, I.table),
            rowClassName: I.row,
            headerClassName: l()(E.header, I.header),
          }),
        });
      };
    },
    546221: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return p;
        },
      });
      var s = n(735250);
      n(470079);
      var a = n(481060),
        i = n(825055),
        r = n(937615),
        l = n(730647),
        o = n(584825),
        c = n(723047),
        d = n(997519),
        u = n(146710),
        _ = n(146610),
        I = n(67152),
        E = n(791382),
        T = n(277369),
        m = n(215124),
        N = n(981631),
        S = n(689938),
        g = n(772236);
      function h(e) {
        let { payoutsByPeriod: t, team: n } = e,
          i = (0, c.mY)()
            ? null
            : S.Z.Messages.GUILD_ROLE_SUBSCRIPTION_EARNINGS_EDIT_PAYMENT_METHOD_LINK.format(
                {
                  url:
                    null != n
                      ? N.EYA.DEVELOPER_PORTAL_PAYOUT_SETTINGS(n.id)
                      : null,
                },
              );
        return 0 === t.length
          ? (0, s.jsxs)(a.FormText, {
              type: a.FormText.Types.DESCRIPTION,
              children: [
                S.Z.Messages
                  .GUILD_ROLE_SUBSCRIPTION_EARNINGS_EARNINGS_HISTORY_EMPTY,
                " ",
                i,
              ],
            })
          : (0, s.jsxs)(s.Fragment, {
              children: [
                (0, s.jsxs)(a.FormText, {
                  type: a.FormText.Types.DESCRIPTION,
                  children: [
                    S.Z.Messages
                      .GUILD_ROLE_SUBSCRIPTION_EARNINGS_EARNINGS_HISTORY_DESCRIPTION,
                    " ",
                    i,
                  ],
                }),
                (0, s.jsx)(a.Spacer, { size: 16 }),
                (0, s.jsx)(I.ZP, { payoutsByPeriod: t }),
              ],
            });
      }
      function C(e) {
        let { guildId: t, totalPayoutsForPeriod: n } = e,
          a = (0, o.qi)(t, { includeSoftDeleted: !0 });
        return null == n && 0 === a.length
          ? null
          : (0, s.jsx)(_.Z, {
              totalPayoutsForPeriod: n,
              guildId: t,
              className: g.currentMonthEarningsTable,
            });
      }
      let x = (e) => {
        var t, n;
        let { guildId: l, application: o } = e,
          {
            loading: _,
            team: I,
            currentPeriod: x,
            allPeriods: p,
            metrics: R,
          } = (0, d.Z)(l, o),
          L = (0, u.u)(l),
          f = (0, c.mY)();
        return _
          ? (0, s.jsx)(a.Spinner, {})
          : (0, s.jsxs)(s.Fragment, {
              children: [
                L &&
                  (0, s.jsxs)(s.Fragment, {
                    children: [
                      (0, s.jsx)(i.Z, {
                        children:
                          S.Z.Messages.GUILD_ROLE_SUBSCRIPTION_EARNINGS_INSIGHTS_NOTICE_TEXT.format(
                            {
                              insightsURL:
                                N.EYA.DEVELOPER_PORTAL_GUILD_ANALYTICS_ROLE_SUBSCRIPTION(
                                  l,
                                ),
                            },
                          ),
                      }),
                      (0, s.jsx)(a.Spacer, { size: 32 }),
                    ],
                  }),
                (0, s.jsxs)(a.FormSection, {
                  title: S.Z.Messages.GUILD_ROLE_SUBSCRIPTION_EARNINGS_HEADER,
                  className: g.formSection,
                  children: [
                    (0, s.jsx)(a.Spacer, { size: 8 }),
                    (0, s.jsxs)("div", {
                      className: g.metricsContainer,
                      children: [
                        (0, s.jsx)(E.Z, {
                          label:
                            S.Z.Messages
                              .GUILD_ROLE_SUBSCRIPTION_EARNINGS_METRIC_REVENUE,
                          value: (0, r.T4)(
                            null !== (t = R.revenue) && void 0 !== t ? t : 0,
                            N.pKx.USD,
                          ),
                          additionalContent: (0, s.jsx)(E.H, {
                            value: R.revenuePctChange,
                            isPercent: !0,
                          }),
                        }),
                        (0, s.jsx)(E.Z, {
                          label:
                            S.Z.Messages
                              .GUILD_ROLE_SUBSCRIPTION_EARNINGS_METRIC_SUBSCRIBERS,
                          value: (0, s.jsxs)(s.Fragment, {
                            children: [
                              null !== (n = R.subscribers) && void 0 !== n
                                ? n
                                : "-",
                              " ",
                              (0, s.jsx)(a.UserIcon, {
                                size: "md",
                                color: "currentColor",
                                className: g.totalMembersIcon,
                                "aria-hidden": !0,
                              }),
                            ],
                          }),
                          additionalContent: (0, s.jsx)(E.H, {
                            value: R.subscriberChange,
                          }),
                        }),
                      ],
                    }),
                    (0, s.jsx)(C, { guildId: l, totalPayoutsForPeriod: x }),
                  ],
                }),
                (0, s.jsx)(a.FormSection, {
                  title:
                    S.Z.Messages
                      .GUILD_ROLE_SUBSCRIPTION_EARNINGS_EARNINGS_HISTORY_HEADER,
                  className: g.formSection,
                  children: (0, s.jsx)(h, { payoutsByPeriod: p, team: I }),
                }),
                (0, s.jsx)(a.FormSection, {
                  title:
                    S.Z.Messages
                      .GUILD_ROLE_SUBSCRIPTION_SETTINGS_PAYMENT_TEAM_SECTION_TITLE,
                  disabled: f,
                  className: g.formSection,
                  children: (0, s.jsx)(T.Z, { guildId: l, application: o }),
                }),
                (0, s.jsx)(a.FormSection, {
                  title:
                    S.Z.Messages
                      .CREATOR_MONETIZATION_SETTINGS_DISABLE_MONETIZATION_SECTION_TITLE,
                  className: g.formSection,
                  children: (0, s.jsx)(m.Z, { guildId: l, allPeriods: p }),
                }),
              ],
            });
      };
      function p(e) {
        return (0, s.jsx)(l.l, {
          guildId: e.guildId,
          children: (0, s.jsx)(x, { ...e }),
        });
      }
    },
    489028: function (e, t, n) {
      "use strict";
      n(47120);
      var s = n(735250),
        a = n(470079),
        i = n(442837),
        r = n(481060),
        l = n(782568),
        o = n(223892),
        c = n(203498),
        d = n(641806),
        u = n(690221),
        _ = n(30624),
        I = n(577275),
        E = n(594174),
        T = n(451478),
        m = n(626135),
        N = n(584825),
        S = n(723047),
        g = n(416867),
        h = n(903773),
        C = n(215124),
        x = n(326578),
        p = n(981631),
        R = n(674563),
        L = n(829857),
        f = n(689938),
        O = n(383470);
      function A(e) {
        let { onCreateTeamClick: t, isGuildOwner: n } = e;
        return (0, s.jsx)("div", {
          className: O.selectTeamContainer,
          children: (0, s.jsx)(r.Button, {
            disabled: !n,
            onClick: t,
            className: O.enableTicketingButton,
            fullWidth: !0,
            children: f.Z.Messages.GUILD_MONETIZATION_ENABLE_CREATE_TEAM,
          }),
        });
      }
      function M(e) {
        let { guild: t, eligibleTeams: n, isGuildOwner: i } = e,
          [l, o] = a.useState(),
          {
            enableGuildMonetizationForTeam: d,
            submitting: u,
            error: _,
          } = (0, c.Z)(),
          { fetchSubscriptionsSettings: I } = (0, N.JH)(),
          E = (0, S.mY)(),
          T = a.useMemo(
            () => n.map((e) => ({ label: e.name, value: e.id })),
            [n],
          ),
          m = async () => {
            (await d(t, l, R.wW.GUILD_ROLE_SUBSCRIPTIONS)) &&
              (I(t.id),
              (0, g.B)({
                Icon: x.Z,
                title:
                  f.Z.Messages.GUILD_MONETIZATION_ENABLE_CONFIRMATION_TITLE,
                body: f.Z.Messages
                  .GUILD_MONETIZATION_ENABLE_CONFIRMATION_SUBTITLE,
              }));
          };
        return (0, s.jsxs)(s.Fragment, {
          children: [
            (0, s.jsxs)("div", {
              className: O.selectTeamContainer,
              children: [
                (0, s.jsx)(r.SingleSelect, {
                  className: O.teamSelect,
                  options: T,
                  placeholder:
                    f.Z.Messages.GUILD_MONETIZATION_ENABLE_SELECT_PLACEHOLDER,
                  value: l,
                  isDisabled: 0 === T.length || E || !i,
                  onChange: (e) => o(e),
                  "aria-label":
                    f.Z.Messages.GUILD_MONETIZATION_ENABLE_SELECT_PLACEHOLDER,
                }),
                (0, s.jsx)(r.Button, {
                  onClick: m,
                  className: O.enableTicketingButton,
                  submitting: u,
                  disabled: null == l || E || !i,
                  children: f.Z.Messages.GUILD_MONETIZATION_ENABLE_CTA,
                }),
              ],
            }),
            null != _ &&
              (0, s.jsx)(r.Text, {
                className: O.error,
                variant: "text-sm/normal",
                children: _.getAnyErrorMessage(),
              }),
          ],
        });
      }
      t.Z = (e) => {
        let { guild: t } = e,
          n = (0, i.e7)([E.default], () => E.default.getCurrentUser()),
          c = t.isOwner(n),
          N = (0, o.Ob)(t),
          S = (0, i.e7)([T.Z], () => T.Z.isFocused()),
          { teams: g, loading: x } = (0, I.Z)({ refreshOnDepChange: S }),
          R = a.useMemo(
            () =>
              g.filter((e) => {
                var t;
                return (
                  e.payout_account_status !== L.C.BLOCKED &&
                  (0, _.Z)(
                    null !== (t = null == n ? void 0 : n.id) && void 0 !== t
                      ? t
                      : p.lds,
                    e,
                  )
                );
              }),
            [g, n],
          ),
          D = R.length > 0,
          v = a.useCallback(async () => {
            m.default.track(p.rMx.GUILD_ROLE_SUBSCRIPTION_TEAM_SETUP_CLICKED, {
              is_onboarding_v2: N,
              has_eligible_team: D,
              guild_id: t.id,
              is_owner: c,
            });
            let e = await (0, d.$)(p.E07.DEVELOPER_PORTAL_TEAMS);
            (0, l.Z)(e);
          }, [t, c, N, D]),
          j = a.useCallback(
            (e) => (c ? (0, s.jsx)(u.Z, { onClick: v, children: e }) : e),
            [v, c],
          );
        return x
          ? (0, s.jsx)(r.Spinner, {})
          : (0, s.jsxs)(s.Fragment, {
              children: [
                !c &&
                  (0, s.jsx)(h.Z, {
                    className: O.nonOwnerNotice,
                    children:
                      f.Z.Messages.GUILD_MONETIZATION_ENABLE_NON_OWNER_WARNING,
                  }),
                (0, s.jsxs)(r.FormSection, {
                  title: f.Z.Messages.GUILD_MONETIZATION_ENABLE_HEADER,
                  disabled: !c,
                  children: [
                    (0, s.jsx)(r.FormText, {
                      type: r.FormText.Types.DESCRIPTION,
                      className: O.description,
                      disabled: !c,
                      children:
                        f.Z.Messages.GUILD_MONETIZATION_ENABLE_DESCRIPTION.format(
                          { onCreateTeamHook: j },
                        ),
                    }),
                    D
                      ? (0, s.jsx)(M, {
                          guild: t,
                          eligibleTeams: R,
                          isGuildOwner: c,
                        })
                      : (0, s.jsx)(A, {
                          onCreateTeamClick: v,
                          isGuildOwner: c,
                        }),
                  ],
                }),
                (0, s.jsx)(r.FormSection, {
                  title:
                    f.Z.Messages
                      .CREATOR_MONETIZATION_SETTINGS_DISABLE_MONETIZATION_SECTION_TITLE,
                  className: O.selfDemonetization,
                  children: (0, s.jsx)(C.Z, { guildId: t.id, allPeriods: [] }),
                }),
              ],
            });
      };
    },
    822531: function (e, t, n) {
      "use strict";
      var s = n(735250);
      n(470079);
      var a = n(481060),
        i = n(725803),
        r = n(546221),
        l = n(489028),
        o = n(674563);
      t.Z = (e) => {
        let { guild: t } = e,
          { application: n, loading: c } = (0, i.Z)(
            t.id,
            o.wW.GUILD_ROLE_SUBSCRIPTIONS,
          );
        return c
          ? (0, s.jsx)(a.Spinner, {})
          : null != n
            ? (0, s.jsx)(r.Z, { guildId: t.id, application: n })
            : (0, s.jsx)(l.Z, { guild: t });
      };
    },
    67152: function (e, t, n) {
      "use strict";
      n.d(t, {
        av: function () {
          return v;
        },
        bL: function () {
          return f;
        },
        kA: function () {
          return O;
        },
      }),
        n(653041),
        n(47120);
      var s,
        a,
        i = n(735250),
        r = n(470079),
        l = n(120356),
        o = n.n(l),
        c = n(913527),
        d = n.n(c),
        u = n(442837),
        _ = n(481060),
        I = n(167533),
        E = n(766434),
        T = n(937615),
        m = n(289393),
        N = n(264451),
        S = n(759178),
        g = n(462087),
        h = n(685201),
        C = n(981631),
        x = n(198139),
        p = n(689938),
        R = n(539918);
      ((a = s || (s = {})).DROPDOWN = "dropdown"),
        (a.PERIOD = "period"),
        (a.SUBSCRIBERS = "subscribers"),
        (a.AMOUNT = "amount"),
        (a.STATUS = "status");
      let L = (e, t, n, s) => {
          let a = null != s ? d()(s).add(15, "days").toISOString() : void 0,
            r = (0, N.Zo)(a, "MMM D");
          switch (e) {
            case x.x_.OPEN:
              return (0, i.jsxs)(i.Fragment, {
                children: [
                  null != r
                    ? p.Z.Messages.GUILD_ROLE_SUBSCRIPTION_EARNINGS_TABLE_STATUS_PENDING_OR_SCHEDULED_WITH_DATE.format(
                        { payoutDate: r },
                      )
                    : p.Z.Messages
                        .GUILD_ROLE_SUBSCRIPTION_EARNINGS_TABLE_STATUS_PENDING,
                  (0, i.jsx)(g.Z, { className: R.statusScheduledIcon }),
                ],
              });
            case x.x_.CANCELED:
              return (0, i.jsxs)(i.Fragment, {
                children: [
                  p.Z.Messages
                    .GUILD_ROLE_SUBSCRIPTION_EARNINGS_TABLE_STATUS_CANCELLED,
                  (0, i.jsx)(_.CircleXIcon, {
                    size: "md",
                    color: "currentColor",
                    className: R.statusErrorIcon,
                  }),
                ],
              });
            case x.x_.PAYOUT_DEFERRED:
              if ((null == n ? void 0 : n.includes(x.XL.PAYOUT_SEIZED)) === !0)
                return (0, i.jsxs)(i.Fragment, {
                  children: [
                    p.Z.Messages
                      .GUILD_ROLE_SUBSCRIPTION_EARNINGS_TABLE_STATUS_CANCELLED,
                    (0, i.jsx)(_.CircleXIcon, {
                      size: "md",
                      color: "currentColor",
                      className: R.statusErrorIcon,
                    }),
                  ],
                });
              return (0, i.jsxs)(i.Fragment, {
                children: [
                  p.Z.Messages
                    .GUILD_ROLE_SUBSCRIPTION_EARNINGS_TABLE_STATUS_DEFERRED,
                  (0, i.jsx)(h.Z, { className: R.statusDeferredIcon }),
                ],
              });
          }
          switch (t) {
            case x.jw.MANUAL:
            case x.jw.OPEN:
            case x.jw.PENDING:
            case x.jw.PROCESSING:
            case x.jw.SUBMITTED:
            case x.jw.PENDING_FUNDS:
            case x.jw.CANCELED:
            case x.jw.ERROR:
              return (0, i.jsxs)(i.Fragment, {
                children: [
                  null != r
                    ? p.Z.Messages.GUILD_ROLE_SUBSCRIPTION_EARNINGS_TABLE_STATUS_PENDING_OR_SCHEDULED_WITH_DATE.format(
                        { payoutDate: r },
                      )
                    : p.Z.Messages
                        .GUILD_ROLE_SUBSCRIPTION_EARNINGS_TABLE_STATUS_SCHEDULED,
                  (0, i.jsx)(g.Z, { className: R.statusScheduledIcon }),
                ],
              });
            case x.jw.PAID:
              return (0, i.jsxs)(i.Fragment, {
                children: [
                  p.Z.Messages
                    .GUILD_ROLE_SUBSCRIPTION_EARNINGS_TABLE_STATUS_PAID,
                  (0, i.jsx)(_.CircleCheckIcon, {
                    size: "md",
                    color: "currentColor",
                    className: R.statusPaidIcon,
                  }),
                ],
              });
            case x.jw.DEFERRED:
            case x.jw.DEFERRED_INTERNAL:
            case x.jw.REJECTED:
            case x.jw.RISK_REVIEW:
              return (0, i.jsxs)(i.Fragment, {
                children: [
                  S.Z.getStatusErrorText(t),
                  (0, i.jsx)(_.CircleXIcon, {
                    size: "md",
                    color: "currentColor",
                    className: R.statusErrorIcon,
                  }),
                ],
              });
          }
          return null;
        },
        f = (e) => {
          let { children: t, className: n } = e;
          return (0, i.jsx)("div", { className: o()(R.cell, n), children: t });
        },
        O = (e) => {
          let { children: t } = e;
          return (0, i.jsx)("div", {
            className: R.cell,
            children: (0, T.T4)(null != t ? t : 0, C.pKx.USD),
          });
        },
        A = (e) => {
          let { children: t } = e;
          return (0, i.jsx)(f, {
            className: R.statusCell,
            children: null != t ? t : "-",
          });
        },
        M = (e) => {
          let { children: t } = e;
          return (0, i.jsx)(f, {
            className: R.periodCell,
            children: d()(t).utc().format("MMMM YYYY"),
          });
        },
        D = (e) => {
          var t;
          let { listingId: n } = e,
            s = (0, u.e7)([m.Z], () => m.Z.getSubscriptionListing(n)),
            a =
              null !== (t = null == s ? void 0 : s.name) && void 0 !== t
                ? t
                : "[".concat(
                    p.Z.Messages
                      .GUILD_ROLE_SUBSCRIPTION_EARNINGS_TABLE_TIER_DELETED,
                    "]",
                  );
          return (0, i.jsx)(f, { children: a });
        },
        v = (e) => {
          let { children: t } = e;
          return (0, i.jsxs)(f, {
            className: R.subscribersCell,
            children: [
              null != t ? t : "-",
              " ",
              (0, i.jsx)(_.UserIcon, {
                size: "md",
                color: "currentColor",
                className: R.subscribersIcon,
                "aria-hidden": !0,
              }),
            ],
          });
        },
        j = () => {
          let e = (0, i.jsx)(_.Tooltip, {
            text: p.Z.Messages
              .GUILD_ROLE_SUBSCRIPTION_EARNINGS_TABLE_AMOUNT_DISCLAIMER,
            children: (e) =>
              (0, i.jsx)(_.CircleInformationIcon, {
                size: "xs",
                color: "currentColor",
                className: R.amountDisclaimer,
                ...e,
              }),
          });
          return (0, i.jsxs)(i.Fragment, {
            children: [
              p.Z.Messages.GUILD_ROLE_SUBSCRIPTION_EARNINGS_TABLE_AMOUNT,
              " ",
              e,
            ],
          });
        },
        Z = () => {
          let e = (0, i.jsx)(_.Tooltip, {
            text: p.Z.Messages
              .GUILD_ROLE_SUBSCRIPTION_EARNINGS_METRIC_NEXT_PAYMENT_DISCLAIMER,
            children: (e) =>
              (0, i.jsx)(_.CircleInformationIcon, {
                size: "xs",
                color: "currentColor",
                className: R.statusDisclaimer,
                ...e,
              }),
          });
          return (0, i.jsxs)(i.Fragment, {
            children: [
              p.Z.Messages.GUILD_ROLE_SUBSCRIPTION_EARNINGS_TABLE_STATUS,
              " ",
              e,
            ],
          });
        },
        b = [
          {
            key: "dropdown",
            cellClassName: R.toggleExpandColumn,
            renderHeader: () => null,
            render(e, t) {
              let { expandedRows: n, onToggleExpandRow: s } = t,
                a = n.has(e.key);
              return (0, i.jsx)(_.Clickable, {
                className: o()(R.cell, R.toggleExpandCell),
                onClick: () => s(e.key),
                children: (0, i.jsx)(_.ChevronSmallRightIcon, {
                  size: "md",
                  color: "currentColor",
                  className: o()(R.caretIcon, { [R.caretDownIcon]: a }),
                }),
              });
            },
          },
          {
            key: "period",
            cellClassName: R.periodColumn,
            renderHeader: () =>
              p.Z.Messages.GUILD_ROLE_SUBSCRIPTION_EARNINGS_TABLE_PERIOD,
            render(e, t) {
              let { expandedRows: n } = t,
                s = [(0, i.jsx)(M, { children: e.periodStartingAt }, e.key)];
              if (n.has(e.key))
                for (let t in e.ppgs)
                  s.push((0, i.jsx)(D, { listingId: t }, t));
              return s;
            },
          },
          {
            key: "amount",
            cellClassName: o()(R.amountColumn, R.cellAlignRight),
            renderHeader: () => (0, i.jsx)(j, {}),
            render(e, t) {
              let { expandedRows: n } = t,
                s = [(0, i.jsx)(O, { children: e.amount }, e.key)];
              if (n.has(e.key))
                for (let t in e.ppgs) {
                  let n = e.ppgs[t];
                  s.push(
                    (0, i.jsx)(
                      O,
                      { children: null == n ? void 0 : n.amount },
                      t,
                    ),
                  );
                }
              return s;
            },
          },
          {
            key: "status",
            cellClassName: o()(R.statusColumn, R.cellAlignRight),
            renderHeader: () => (0, i.jsx)(Z, {}),
            render(e) {
              let {
                ppgStatus: t,
                payoutStatus: n,
                ppgDeferralReasons: s,
                periodEndDate: a,
              } = (0, E.j0)(e);
              return (0, i.jsx)(A, { children: L(t, n, s, a) });
            },
          },
        ];
      t.ZP = (e) => {
        let { payoutsByPeriod: t } = e,
          [n, s] = r.useState(new Set());
        return (0, i.jsx)("div", {
          className: R.tableContainer,
          children: (0, i.jsx)(I.Z, {
            columns: b,
            data: t,
            className: R.table,
            rowClassName: R.row,
            headerClassName: R.header,
            cellProps: {
              onToggleExpandRow: (e) => {
                s((t) => {
                  let n = new Set(t);
                  return n.has(e) ? n.delete(e) : n.add(e), n;
                });
              },
              expandedRows: n,
            },
          }),
        });
      };
    },
    791382: function (e, t, n) {
      "use strict";
      n.d(t, {
        H: function () {
          return u;
        },
      });
      var s = n(735250);
      n(470079);
      var a = n(120356),
        i = n.n(a),
        r = n(481060),
        l = n(264451),
        o = n(75775),
        c = n(689938),
        d = n(117584);
      let u = (e) => {
        let { value: t, isPercent: n } = e;
        if (null == t) return null;
        let { formattedValue: a, isPositive: u } = (0, l.m5)(t, n);
        return (0, s.jsxs)("div", {
          className: d.trendContainer,
          children: [
            (0, s.jsx)(o.Z, {
              className: i()(d.chartLineIcon, {
                [d.chartLineIconNegative]: !u,
              }),
            }),
            (0, s.jsx)(r.Text, {
              variant: "text-md/normal",
              className: d.trendDescription,
              children:
                c.Z.Messages.GUILD_ROLE_SUBSCRIPTION_EARNINGS_METRIC_TREND_DESCRIPTION.format(
                  { value: a },
                ),
            }),
          ],
        });
      };
      t.Z = (e) => {
        let {
          label: t,
          sublabel: n,
          value: a,
          additionalContent: i,
          tooltip: l,
        } = e;
        return (0, s.jsxs)("div", {
          className: d.container,
          children: [
            (0, s.jsxs)("div", {
              children: [
                (0, s.jsxs)("div", {
                  className: d.labelContainer,
                  children: [
                    (0, s.jsx)(r.Text, {
                      variant: "text-xs/medium",
                      className: d.label,
                      children: t,
                    }),
                    null != l &&
                      (0, s.jsx)(r.Tooltip, {
                        text: l,
                        children: (e) =>
                          (0, s.jsx)(r.CircleInformationIcon, {
                            size: "xs",
                            color: "currentColor",
                            className: d.labelTooltipIcon,
                            ...e,
                          }),
                      }),
                    null != n
                      ? (0, s.jsx)(r.Text, {
                          variant: "text-xs/normal",
                          className: d.sublabel,
                          children: n,
                        })
                      : null,
                  ],
                }),
                (0, s.jsx)(r.Text, {
                  className: d.value,
                  variant: "text-sm/normal",
                  children: a,
                }),
              ],
            }),
            i,
          ],
        });
      };
    },
    277369: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return d;
        },
      });
      var s = n(735250);
      n(470079);
      var a = n(399606),
        i = n(481060),
        r = n(430824),
        l = n(594174),
        o = n(723047),
        c = n(689938);
      function d(e) {
        let { guildId: t, application: d } = e,
          u = (0, a.e7)([r.Z], () => r.Z.getGuild(t)),
          _ = (0, a.e7)([l.default], () => l.default.getCurrentUser()),
          I = (0, o.mY)();
        if (null == u || !u.isOwner(_)) return null;
        let E = d.team;
        return (0, s.jsxs)("div", {
          children: [
            (0, s.jsx)(i.FormText, {
              type: i.FormText.Types.DESCRIPTION,
              disabled: I,
              children:
                null != E
                  ? c.Z.Messages.GUILD_ROLE_SUBSCRIPTION_SETTINGS_PAYMENT_TEAM_SECTION_DESCRIPTION.format(
                      { teamName: E.name },
                    )
                  : c.Z.Messages
                      .GUILD_ROLE_SUBSCRIPTION_SETTINGS_PAYMENT_TEAM_SECTION_NO_TEAM_DESCRIPTION,
            }),
            (0, s.jsx)(i.Spacer, { size: 16 }),
            (0, s.jsx)(i.Button, {
              look: i.Button.Looks.FILLED,
              color:
                null != E ? i.Button.Colors.PRIMARY : i.Button.Colors.BRAND,
              onClick: () => {
                var e;
                return (
                  (e = d),
                  void (0, i.openModalLazy)(async () => {
                    let { default: t } = await n
                      .e("83942")
                      .then(n.bind(n, 743582));
                    return (n) => (0, s.jsx)(t, { ...n, application: e });
                  })
                );
              },
              disabled: I,
              children:
                null != E
                  ? c.Z.Messages
                      .GUILD_ROLE_SUBSCRIPTION_SETTINGS_PAYMENT_TEAM_SECTION_CHANGE_TEAM_CTA
                  : c.Z.Messages
                      .GUILD_ROLE_SUBSCRIPTION_SETTINGS_PAYMENT_TEAM_SECTION_SELECT_TEAM_CTA,
            }),
          ],
        });
      }
    },
    215124: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return _;
        },
      });
      var s = n(735250);
      n(470079);
      var a = n(399606),
        i = n(481060),
        r = n(674180),
        l = n(267101),
        o = n(430824),
        c = n(584825),
        d = n(198139),
        u = n(689938);
      function _(e) {
        let { guildId: t, allPeriods: _ } = e,
          I = (0, a.e7)([o.Z], () => o.Z.getGuild(t)),
          E = (0, c.qi)(t, { includeSoftDeleted: !0 }),
          T = (0, l.ue)(t, { publishedOnly: !1 }),
          { allowSelfRemoveMonetization: m } = (0, r.gX)(t),
          N = _.filter((e) => {
            var t;
            let n = Object.values(
              null !== (t = e.ppgs) && void 0 !== t ? t : {},
            )[0];
            return (
              (null == n ? void 0 : n.status) === d.x_.OPEN ||
              (null == n ? void 0 : n.status) === d.x_.PAYOUT_DEFERRED
            );
          }),
          S = E.length > 0,
          g = T.length > 0,
          h = N.length > 0;
        return null == I
          ? null
          : (0, s.jsxs)("div", {
              children: [
                (0, s.jsx)(i.FormText, {
                  type: i.FormText.Types.DESCRIPTION,
                  children:
                    u.Z.Messages.CREATOR_MONETIZATION_SETTINGS_DISABLE_MONETIZATION_SECTION_DESCRIPTION.format(
                      { guildName: I.toString() },
                    ),
                }),
                (0, s.jsx)(i.Spacer, { size: 16 }),
                (0, s.jsx)(i.Button, {
                  disabled: !m || S || g || h,
                  look: i.Button.Looks.FILLED,
                  color: i.Button.Colors.RED,
                  onClick: () => {
                    var e;
                    return (
                      (e = I),
                      void (0, i.openModalLazy)(async () => {
                        let { default: t } = await n
                          .e("35282")
                          .then(n.bind(n, 157429));
                        return (n) => (0, s.jsx)(t, { ...n, guild: e });
                      })
                    );
                  },
                  children:
                    u.Z.Messages
                      .CREATOR_MONETIZATION_SETTINGS_DISABLE_MONETIZATION_CTA,
                }),
              ],
            });
      }
    },
    75775: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return i;
        },
      });
      var s = n(735250);
      n(470079);
      var a = n(325767);
      function i(e) {
        let {
          width: t = 24,
          height: n = 24,
          color: i = "currentColor",
          ...r
        } = e;
        return (0, s.jsx)("svg", {
          ...(0, a.Z)(r),
          width: t,
          height: n,
          viewBox: "0 0 20 20",
          children: (0, s.jsx)("path", {
            d: "M12.5 3.33334V5H17.1583L11.6667 10.4917L8.33333 7.15834L0 15.4917L1.175 16.6667L8.33333 9.50834L11.6667 12.8417L18.3333 6.175V10.8333H20V3.33334H12.5Z",
            fill: i,
          }),
        });
      }
    },
    462087: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return i;
        },
      });
      var s = n(735250);
      n(470079);
      var a = n(325767);
      function i(e) {
        let {
          width: t = 24,
          height: n = 24,
          color: i = "currentColor",
          ...r
        } = e;
        return (0, s.jsx)("svg", {
          ...(0, a.Z)(r),
          width: t,
          height: n,
          viewBox: "0 0 20 20",
          children: (0, s.jsx)("path", {
            fillRule: "evenodd",
            clipRule: "evenodd",
            fill: i,
            d: "M10 20C15.5228 20 20 15.5228 20 10C20 4.47715 15.5228 0 10 0C4.47715 0 0 4.47715 0 10C0 15.5228 4.47715 20 10 20ZM7.5 5.5V6.17157C7.5 6.30418 7.55268 6.43136 7.64645 6.52513L10 8.87868L12.3536 6.52513C12.4473 6.43136 12.5 6.30418 12.5 6.17157V5.5H7.5ZM6.58579 7.58579L9 10L6.58579 12.4142C6.21071 12.7893 6 13.298 6 13.8284V15C6 15.5523 6.44772 16 7 16L13 16C13.5523 16 14 15.5523 14 15V13.8284C14 13.298 13.7893 12.7893 13.4142 12.4142L11 10L13.4142 7.58579C13.7893 7.21071 14 6.70201 14 6.17157V5C14 4.44772 13.5523 4 13 4H7C6.44772 4 6 4.44772 6 5V6.17157C6 6.70201 6.21071 7.21071 6.58579 7.58579Z",
          }),
        });
      }
    },
    685201: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return i;
        },
      });
      var s = n(735250);
      n(470079);
      var a = n(325767);
      function i(e) {
        let {
          width: t = 24,
          height: n = 24,
          color: i = "currentColor",
          foreground: r,
          ...l
        } = e;
        return (0, s.jsx)("svg", {
          ...(0, a.Z)(l),
          width: t,
          height: n,
          viewBox: "0 0 24 24",
          children: (0, s.jsx)("path", {
            className: r,
            fill: i,
            d: "M13.5605 11L11.2646 8.706L12.6842 7.294L17.4023 12.009L12.6822 16.708L11.2656 15.292L13.5685 13H2C2.50429 18.045 6.7842 22 11.9744 22C17.5025 22 22 17.513 22 12C22 6.487 17.5025 2 11.9744 2C6.7842 2 2.50429 5.954 2 11H13.5605Z",
          }),
        });
      }
    },
    326578: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return i;
        },
      });
      var s = n(735250);
      n(470079);
      var a = n(325767);
      function i(e) {
        let {
          width: t = 24,
          height: n = 24,
          color: i = "currentColor",
          ...r
        } = e;
        return (0, s.jsx)("svg", {
          ...(0, a.Z)(r),
          width: t,
          height: n,
          viewBox: "0 0 24 24",
          children: (0, s.jsx)("path", {
            d: "M23 9V19C23 20.1 22.1 21 21 21H3C1.9 21 1 20.1 1 19V6C1 4.34 2.34 3 4 3H19C20.1 3 21 3.9 21 5H4C3.45 5 3 5.45 3 6C3 6.55 3.45 7 4 7H21C22.1 7 23 7.9 23 9ZM21 12H17C15.9 12 15 12.9 15 14C15 15.1 15.9 16 17 16H21V12Z",
            fill: i,
          }),
        });
      }
    },
    641806: function (e, t, n) {
      "use strict";
      n.d(t, {
        $: function () {
          return i;
        },
      });
      var s = n(970648),
        a = n(981631);
      async function i(e) {
        let t = s.Z.generateNonce();
        try {
          let n = await s.Z.createHandoffToken(t);
          return a.EYA.DEVELOPER_PORTAL_LOGIN_HANDOFF(t, n, e);
        } catch {
          return "//"
            .concat(window.GLOBAL_ENV.DEVELOPERS_ENDPOINT, "/")
            .concat(e);
        }
      }
    },
    771212: function (e, t, n) {
      "use strict";
      n.d(t, {
        Fv: function () {
          return o;
        },
        eA: function () {
          return c;
        },
      });
      var s = n(470079),
        a = n(818083),
        i = n(594174),
        r = n(981631);
      let l = (0, a.B)({
        kind: "guild",
        id: "2022-03_guild_access_rate_insight_experiment",
        label: "Guild Access Rate Insight Experiment",
        defaultConfig: { showAccessRate: !1 },
        treatments: [
          {
            id: 1,
            label: "Show guild access rate in insights",
            config: { showAccessRate: !0 },
          },
        ],
      });
      function o(e) {
        var t;
        return (
          (null === (t = i.default.getCurrentUser()) || void 0 === t
            ? void 0
            : t.isStaff()) &&
          l.getCurrentConfig({ guildId: e, location: "77b4b2_1" })
            .showAccessRate
        );
      }
      function c(e) {
        let t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
        return (
          s.useEffect(() => {
            !t &&
              null != e &&
              l.trackExposure({ guildId: e, location: "77b4b2_2" });
          }, [e, t]),
          l.useExperiment(
            { guildId: null != e ? e : r.lds, location: "77b4b2_3" },
            { autoTrackExposure: !1, disable: t || null == e },
          )
        );
      }
    },
    85001: function (e, t, n) {
      "use strict";
      let s = (0, n(818083).B)({
        kind: "user",
        id: "2020-12_guild_delete_feedback",
        label: "Guild Delete Feedback experiment",
        defaultConfig: { showFeedback: !1 },
        treatments: [
          {
            id: 1,
            label: "Show guild delete feedback",
            config: { showFeedback: !0 },
          },
        ],
      });
      t.Z = s;
    },
    146596: function (e, t, n) {
      "use strict";
      n.d(t, {
        SR: function () {
          return c;
        },
        Vk: function () {
          return o;
        },
        r2: function () {
          return u;
        },
        xl: function () {
          return d;
        },
      });
      var s = n(544891),
        a = n(570140),
        i = n(981631);
      let r = 36288e5;
      function l(e, t) {
        let n = new Date(),
          a = new Date(n.getTime() - (n.getDay() + 1) * 864e5 - r);
        return s.tn.get({
          url: t(e),
          query: { start: a.toISOString(), end: n.toISOString(), interval: 2 },
          oldFormErrors: !0,
        });
      }
      function o(e) {
        return l(e, i.ANM.GUILD_ANALYTICS_ENGAGEMENT_OVERVIEW).then(
          (t) => {
            let { body: n } = t;
            a.Z.dispatch({
              type: "GUILD_ANALYTICS_ENGAGEMENT_OVERVIEW_FETCH_SUCCESS",
              guildId: e,
              stats: n.slice(0, 2),
            });
          },
          (e) => {
            a.Z.dispatch({
              type: "GUILD_ANALYTICS_ENGAGEMENT_OVERVIEW_FETCH_FAILURE",
              error: e.body,
            });
          },
        );
      }
      function c(e) {
        return l(e, i.ANM.GUILD_ANALYTICS_GROWTH_ACTIVATION_OVERVIEW).then(
          (t) => {
            let { body: n } = t;
            a.Z.dispatch({
              type: "GUILD_ANALYTICS_GROWTH_ACTIVATION_OVERVIEW_FETCH_SUCCESS",
              guildId: e,
              stats: n.slice(0, 2),
            });
          },
          (e) => {
            a.Z.dispatch({
              type: "GUILD_ANALYTICS_GROWTH_ACTIVATION_OVERVIEW_FETCH_FAILURE",
              error: e.body,
            });
          },
        );
      }
      function d(e) {
        return l(e, i.ANM.GUILD_ANALYTICS_GROWTH_ACTIVATION_RETENTION).then(
          (t) => {
            let { body: n } = t,
              s = n
                .filter((e) => e.hasOwnProperty("pct_retained"))
                .map((e) => {
                  let {
                    interval_start_timestamp: t,
                    pct_retained: n,
                    ...s
                  } = e;
                  return { interval_start_timestamp: t, pct_retained: n };
                });
            a.Z.dispatch({
              type: "GUILD_ANALYTICS_GROWTH_ACTIVATION_RETENTION_FETCH_SUCCESS",
              guildId: e,
              stats: s.slice(0, 2),
            });
          },
          (e) => {
            a.Z.dispatch({
              type: "GUILD_ANALYTICS_GROWTH_ACTIVATION_RETENTION_FETCH_FAILURE",
              error: e.body,
            });
          },
        );
      }
      function u(e) {
        return s.tn.get({ url: i.ANM.GUILD_ANALYTICS_MEMBER_INSIGHTS(e) }).then(
          (t) => {
            a.Z.dispatch({
              type: "GUILD_ANALYTICS_MEMBER_INSIGHTS_FETCH_SUCCESS",
              guildId: e,
              hasAccessRate: t.body.has_access_rate,
              accessRate: t.body.access_rate,
            });
          },
          () => {},
        );
      }
    },
    559368: function (e, t, n) {
      "use strict";
      var s,
        a,
        i,
        r,
        l = n(877921),
        o = n.n(l),
        c = n(442837),
        d = n(570140);
      let u = ["pct_retained", "new_members", "visitors", "communicators"],
        _ = {},
        I = {},
        E = null;
      function T(e) {
        let { guildId: t, stats: n } = e;
        E = null;
        let s = {},
          a = {},
          i = n[0],
          r = n[1];
        null != i &&
          u.forEach((e) => {
            if (null != i[e]) {
              let t = o()(e);
              null != r &&
                0 !== r[e] &&
                (s["".concat(t, "Change")] = ((i[e] - r[e]) * 100) / r[e]),
                (a[t] = i[e]);
            }
          }),
          (_[t] = { ...a, ...s, ..._[t] });
      }
      function m(e) {
        let { error: t } = e;
        E = t.code;
      }
      class N extends (r = c.ZP.Store) {
        getOverviewAnalytics(e) {
          return _[e];
        }
        getMemberInsights(e) {
          var t;
          return null !== (t = I[e]) && void 0 !== t ? t : {};
        }
        shouldFetchMemberInsights(e) {
          var t;
          let n = null === (t = I[e]) || void 0 === t ? void 0 : t.fetchedAt;
          return null == n || Date.now() - n > 432e5;
        }
        getError() {
          return E;
        }
      }
      (i = "GuildSettingsAnalyticsStore"),
        (a = "displayName") in (s = N)
          ? Object.defineProperty(s, a, {
              value: i,
              enumerable: !0,
              configurable: !0,
              writable: !0,
            })
          : (s[a] = i),
        (t.Z = new N(d.Z, {
          GUILD_ANALYTICS_ENGAGEMENT_OVERVIEW_FETCH_SUCCESS: T,
          GUILD_ANALYTICS_GROWTH_ACTIVATION_OVERVIEW_FETCH_SUCCESS: T,
          GUILD_ANALYTICS_GROWTH_ACTIVATION_RETENTION_FETCH_SUCCESS: T,
          GUILD_ANALYTICS_ENGAGEMENT_OVERVIEW_FETCH_FAILURE: m,
          GUILD_ANALYTICS_GROWTH_ACTIVATION_OVERVIEW_FETCH_FAILURE: m,
          GUILD_ANALYTICS_GROWTH_ACTIVATION_RETENTION_FETCH_FAILURE: m,
          GUILD_ANALYTICS_MEMBER_INSIGHTS_FETCH_SUCCESS: function (e) {
            let { guildId: t, ...n } = e;
            I[t] = { ...n, fetchedAt: Date.now() };
          },
        }));
    },
    203377: function (e, t, n) {
      "use strict";
      n.d(t, {
        G7: function () {
          return l;
        },
        LG: function () {
          return d;
        },
        Pg: function () {
          return r;
        },
        ZI: function () {
          return a;
        },
        _0: function () {
          return o;
        },
      });
      var s,
        a,
        i = n(689938);
      let r = 5,
        l = 10,
        o = 30;
      ((s = a || (a = {}))[(s.DISPLAY = 0)] = "DISPLAY"),
        (s[(s.PERMISSIONS = 1)] = "PERMISSIONS"),
        (s[(s.MEMBERS = 2)] = "MEMBERS"),
        (s[(s.VERIFICATIONS = 3)] = "VERIFICATIONS");
      let c = {
        afk_channel_id: () => i.Z.Messages.FORM_LABEL_AFK_CHANNEL,
        public_updates_channel_id: () =>
          i.Z.Messages.GUILD_SETTINGS_COMMUNITY_MOD_CHANNEL_TITLE,
        safety_alerts_channel_id: () =>
          i.Z.Messages.GUILD_ANTIRAID_SAFETY_CHANNEL_TITLE,
        system_channel_id: () => i.Z.Messages.FORM_LABEL_SYSTEM_CHANNEL,
      };
      function d(e) {
        var t;
        if (0 === Object.keys(e).length) return null;
        let n = Object.keys(e)[0],
          s = null === (t = c[n]) || void 0 === t ? void 0 : t.call(c);
        return null != s ? "(".concat(s, ") ").concat(e[n]) : e[n];
      }
    },
    471613: function (e, t, n) {
      "use strict";
      var s,
        a,
        i,
        r,
        l = n(442837),
        o = n(570140),
        c = n(40572),
        d = n(914010);
      let u = {},
        _ = {},
        I = 0;
      class E extends (r = l.ZP.Store) {
        initialize() {
          this.waitFor(d.Z);
        }
        isUploadingEmoji() {
          return I > 0;
        }
        getEmojiRevision(e) {
          var t;
          return null !== (t = u[e]) && void 0 !== t ? t : 0;
        }
        getEmojis(e) {
          return _[e];
        }
      }
      (i = "GuildSettingsEmojiStore"),
        (a = "displayName") in (s = E)
          ? Object.defineProperty(s, a, {
              value: i,
              enumerable: !0,
              configurable: !0,
              writable: !0,
            })
          : (s[a] = i),
        (t.Z = new E(o.Z, {
          EMOJI_DELETE: function (e) {
            let { guildId: t, emojiId: n } = e;
            _[t] = _[t].filter((e) => e.id !== n);
          },
          EMOJI_FETCH_SUCCESS: function (e) {
            let { guildId: t, emojis: n } = e;
            _[t] = n.map((e) => new c.Z(e));
          },
          EMOJI_FETCH_FAILURE: function (e) {
            let { guildId: t } = e;
            _[t] = [];
          },
          EMOJI_UPLOAD_START: function () {
            I++;
          },
          EMOJI_UPLOAD_STOP: function () {
            I--;
          },
          GUILD_EMOJIS_UPDATE: function (e) {
            var t;
            let { guildId: n } = e;
            u[n] = (null !== (t = u[n]) && void 0 !== t ? t : 0) + 1;
          },
        }));
    },
    600553: function (e, t, n) {
      "use strict";
      n.d(t, {
        $: function () {
          return s;
        },
      });
      let s = (0, n(987170).Z)({
        kind: "guild",
        id: "2024-07_guild_settings_foundation",
        label: "Guild Settings Foundation Revamp",
        defaultConfig: { enabled: !1 },
        treatments: [
          {
            id: 1,
            label: "Guild Settings Foundation Revamp",
            config: { enabled: !0 },
          },
        ],
      });
    },
    764260: function (e, t, n) {
      "use strict";
      n.d(t, {
        Gf: function () {
          return T;
        },
        OW: function () {
          return u;
        },
        S1: function () {
          return l;
        },
        TY: function () {
          return c;
        },
        Uv: function () {
          return d;
        },
        _l: function () {
          return I;
        },
        d_: function () {
          return E;
        },
        lO: function () {
          return o;
        },
        sI: function () {
          return r;
        },
        we: function () {
          return _;
        },
      }),
        n(47120);
      var s = n(570140),
        a = n(749210),
        i = n(228643);
      function r(e) {
        s.Z.dispatch({ type: "GUILD_SETTINGS_ROLES_SORT_UPDATE", roles: e });
      }
      function l() {
        s.Z.dispatch({ type: "GUILD_SETTINGS_ROLES_INIT" });
      }
      function o(e, t, n) {
        s.Z.dispatch({
          type: "GUILD_SETTINGS_ROLES_UPDATE_PERMISSIONS",
          id: e,
          flag: t,
          allow: n,
        });
      }
      function c(e) {
        s.Z.dispatch({ type: "GUILD_SETTINGS_ROLES_CLEAR_PERMISSIONS", id: e });
      }
      function d(e, t) {
        s.Z.dispatch({
          type: "GUILD_SETTINGS_ROLES_UPDATE_NAME",
          id: e,
          name: t,
        });
      }
      function u(e, t) {
        s.Z.dispatch({
          type: "GUILD_SETTINGS_ROLES_UPDATE_COLOR",
          id: e,
          color: t,
        });
      }
      function _(e, t, n) {
        s.Z.dispatch({
          type: "GUILD_SETTINGS_ROLES_UPDATE_SETTINGS",
          id: e,
          hoist: t,
          mentionable: n,
        });
      }
      function I(e, t, n) {
        s.Z.dispatch({
          type: "GUILD_SETTINGS_ROLES_UPDATE_ROLE_ICON",
          id: e,
          icon: t,
          unicodeEmoji: n,
        });
      }
      function E(e, t) {
        s.Z.dispatch({
          type: "GUILD_SETTINGS_ROLES_UPDATE_ROLE_CONNECTION_CONFIGURATIONS",
          roleId: e,
          roleConnectionConfigurations: t,
        });
      }
      async function T(e, t, n, r, l) {
        s.Z.dispatch({ type: "GUILD_SETTINGS_ROLES_SUBMITTING" });
        try {
          let s = async () => {
            if (null == t || 0 === t.length) return;
            let n = t.pop();
            if (null == n || "" === n.name) return s();
            await a.Z.updateRole(e, n.id, {
              name: n.name,
              description: n.description,
              permissions: n.permissions,
              color: n.color,
              hoist: n.hoist,
              mentionable: n.mentionable,
              icon: n.icon,
              unicodeEmoji: n.unicodeEmoji,
            }).then(s, s);
          };
          if (
            (null != n && n.length > 0
              ? await a.Z.batchRoleUpdate(e, n).then(s, s)
              : await s(),
            null != l && null != r)
          )
            for await (let t of r) {
              let n = l.get(t);
              await (0, i.L_)(e, t, null != n ? n : []);
            }
        } catch (e) {
          var o, c;
          s.Z.dispatch({
            type: "GUILD_SETTINGS_ROLES_SAVE_FAIL",
            message:
              null !==
                (c =
                  null === (o = e.body) || void 0 === o ? void 0 : o.message) &&
              void 0 !== c
                ? c
                : Object.values(e.body)[0],
          });
          return;
        }
        s.Z.dispatch({ type: "GUILD_SETTINGS_ROLES_SAVE_SUCCESS" });
      }
    },
    946724: function (e, t, n) {
      "use strict";
      let s, a, i;
      n(47120);
      var r,
        l,
        o,
        c,
        d = n(392711),
        u = n.n(d),
        _ = n(149765),
        I = n(866442),
        E = n(442837),
        T = n(570140),
        m = n(561654),
        N = n(430824),
        S = n(990492),
        g = n(823379),
        h = n(700785),
        C = n(999382),
        x = n(981631);
      let p = new Set(),
        R = x.QZA.CLOSED,
        L = !1,
        f = !1,
        O = [],
        A = [],
        M = !1,
        D = new Set(),
        v = new Map(),
        j = new Map();
      function Z() {
        if (null == s || null == O) return [];
        let e = u()(N.Z.getRoles(s.id))
          .values()
          .sortBy((e) => {
            let { position: t } = e;
            return t;
          })
          .reverse()
          .value();
        return S.ZP.calculatePositionDeltas({
          oldOrdering: e,
          newOrdering: O,
          idGetter: (e) => {
            let { id: t } = e;
            return t;
          },
          existingPositionGetter: (e) => {
            let { originalPosition: t } = e;
            return null != t ? t : 1 / 0;
          },
          ascending: !1,
        });
      }
      function b(e) {
        let { section: t } = e;
        if (null != s || t !== x.pNK.ROLES) return !1;
        U();
      }
      function U() {
        let e =
          !(arguments.length > 0) || void 0 === arguments[0] || arguments[0];
        (s = C.Z.getProps().guild),
          (L = !1),
          (f = !1),
          (i = void 0),
          p.clear(),
          (R = x.QZA.OPEN),
          (A = [
            ...(O =
              null != s
                ? u()(N.Z.getRoles(s.id))
                    .values()
                    .sortBy((e) => {
                      let { position: t } = e;
                      return t;
                    })
                    .reverse()
                    .value()
                : []),
          ]),
          (M = !1),
          e &&
            (j.clear(),
            v.forEach((e, t) => {
              j.set(t, [...e]);
            }));
      }
      let G = u().debounce(() => {
        let e = !1;
        f && !(f = Z().length > 0) && (e = !0),
          [...p].forEach((t) => {
            u().isEqual(
              B(t),
              (function (e) {
                return A.find((t) => {
                  let { id: n } = t;
                  return n === e;
                });
              })(t),
            ) && (p.delete(t), (e = !0));
          }),
          0 === p.size && (L = !1),
          M && u().isEqual(v, j) && ((e = !0), (M = !1)),
          e && k.emitChange();
      }, 500);
      function P(e, t) {
        let n = O.indexOf(e);
        if (n < 0) return !1;
        let s = { ...e, ...t };
        (O[n] = s), (O = [...O]), (L = !0), p.add(s.id), G();
      }
      function B(e) {
        return O.find((t) => {
          let { id: n } = t;
          return n === e;
        });
      }
      function y(e) {
        let { guildId: t } = e;
        if (null == s || t !== s.id || R === x.QZA.SUBMITTING) return !1;
        s = C.Z.getProps().guild;
        let n = [];
        null != s &&
          (n = u()(N.Z.getRoles(s.id))
            .values()
            .sortBy((e) => {
              let { position: t } = e;
              return t;
            })
            .reverse()
            .value()),
          p.forEach((e) => {
            let t = B(e),
              s = -1;
            null ==
              n.find((t, n) => {
                let { id: a } = t;
                if (a === e) return (s = n), !0;
              }) || null == t
              ? p.delete(e)
              : (n[s] = t);
          }),
          0 === p.size && (L = !1),
          (f = !1),
          (O = [...n]);
      }
      class F extends (r = E.ZP.Store) {
        initialize() {
          this.waitFor(C.Z, m.Z, N.Z);
        }
        hasChanges() {
          return L || f || M;
        }
        get errorMessage() {
          return i;
        }
        get hasSortChanges() {
          return f;
        }
        get hasRoleConfigurationChanges() {
          return M;
        }
        get guild() {
          return s;
        }
        get editedRoleIds() {
          return Array.from(p);
        }
        get editedRoleIdsForConfigurations() {
          return D;
        }
        get roles() {
          return O;
        }
        get formState() {
          return R;
        }
        getSortDeltas() {
          return Z();
        }
        showNotice() {
          return this.hasChanges();
        }
        getRole(e) {
          return B(e);
        }
        getPermissionSearchQuery() {
          return a;
        }
        getEditedRoleConnectionConfigurationsMap() {
          return j;
        }
      }
      (c = "GuildSettingsRolesStore"),
        (o = "displayName") in (l = F)
          ? Object.defineProperty(l, o, {
              value: c,
              enumerable: !0,
              configurable: !0,
              writable: !0,
            })
          : (l[o] = c);
      let k = new F(
        T.Z,
        __OVERLAY__
          ? {}
          : {
              GUILD_SETTINGS_ROLES_INIT: () => U(),
              GUILD_SETTINGS_INIT: b,
              GUILD_SETTINGS_SET_SECTION: b,
              GUILD_SETTINGS_ROLES_SORT_UPDATE: function (e) {
                let { roles: t } = e;
                if (null != O && t.length !== O.length) return !1;
                (O = t.map((e) => B(e)).filter(g.lm)), (f = !0), G();
              },
              GUILD_SETTINGS_ROLES_UPDATE_PERMISSIONS: function (e) {
                let { id: t, flag: n, allow: s } = e,
                  a = B(t);
                if (null == a) return !1;
                let { permissions: i } = a;
                return P(a, { permissions: (i = s ? _.IH(i, n) : _.Od(i, n)) });
              },
              GUILD_SETTINGS_ROLES_UPDATE_PERMISSION_SET: function (e) {
                let { id: t, permissions: n } = e,
                  s = B(t);
                return null != s && P(s, { permissions: n });
              },
              GUILD_SETTINGS_ROLES_CLEAR_PERMISSIONS: function (e) {
                let { id: t } = e,
                  n = B(t);
                return null != n && P(n, { permissions: h.Hn });
              },
              GUILD_SETTINGS_ROLES_UPDATE_NAME: function (e) {
                let { id: t, name: n } = e,
                  s = B(t);
                return null != s && P(s, { name: n });
              },
              GUILD_SETTINGS_ROLES_UPDATE_DESCRIPTION: function (e) {
                let { id: t, description: n } = e,
                  s = B(t);
                return null != s && P(s, { description: n });
              },
              GUILD_SETTINGS_ROLES_UPDATE_COLOR: function (e) {
                let { id: t, color: n } = e,
                  s = 0 === n ? null : (0, I.Rf)(n),
                  a = B(t);
                return null != a && P(a, { color: n, colorString: s });
              },
              GUILD_SETTINGS_ROLES_UPDATE_SETTINGS: function (e) {
                let { id: t, hoist: n, mentionable: s } = e,
                  a = B(t);
                return null != a && P(a, { hoist: n, mentionable: s });
              },
              GUILD_SETTINGS_ROLES_UPDATE_ROLE_ICON: function (e) {
                let { id: t, icon: n, unicodeEmoji: s } = e,
                  a = B(t);
                return null != a && P(a, { icon: n, unicodeEmoji: s });
              },
              GUILD_SETTINGS_ROLE_SELECT: function (e) {
                let { role: t, searchQuery: n } = e;
                if (((a = n), null != t)) {
                  if (null != B(t.id)) {
                    P(t, t);
                    return;
                  }
                  (O = [...O, t]), G();
                }
              },
              GUILD_ROLE_CONNECTIONS_CONFIGURATIONS_FETCH_SUCCESS: function (
                e,
              ) {
                let { roleId: t, roleConnectionConfigurations: n } = e,
                  s = B(t);
                if (null == s) return !1;
                let a = v.get(s.id);
                if (u().isEqual(a, n)) return !1;
                j.set(s.id, n), v.set(s.id, n), G();
              },
              GUILD_SETTINGS_ROLES_UPDATE_ROLE_CONNECTION_CONFIGURATIONS:
                function (e) {
                  let { roleId: t, roleConnectionConfigurations: n } = e,
                    s = B(t);
                  if (null == s) return !1;
                  (M = !0), D.add(s.id), j.set(s.id, n), G();
                },
              GUILD_SETTINGS_CLOSE: function () {
                (s = null),
                  (A = O = []),
                  v.clear(),
                  p.clear(),
                  j.clear(),
                  (D = new Set()),
                  (L = !1),
                  (f = !1),
                  (M = !1),
                  (R = x.QZA.CLOSED);
              },
              GUILD_ROLE_CREATE: y,
              GUILD_ROLE_UPDATE: y,
              GUILD_ROLE_DELETE: function (e) {
                return (
                  D.has(e.roleId) &&
                    (D.delete(e.roleId),
                    v.delete(e.roleId),
                    j.delete(e.roleId),
                    (M = !1)),
                  y(e)
                );
              },
              GUILD_SETTINGS_ROLES_SUBMITTING: function () {
                R = x.QZA.SUBMITTING;
              },
              GUILD_SETTINGS_ROLES_SAVE_FAIL: function (e) {
                let { message: t } = e;
                (R = x.QZA.OPEN), (i = t);
              },
              GUILD_SETTINGS_ROLES_SAVE_SUCCESS: function () {
                U(!1);
              },
            },
      );
      t.Z = k;
    },
    402148: function (e, t, n) {
      "use strict";
      n.d(t, {
        F: function () {
          return r;
        },
        i: function () {
          return l;
        },
      }),
        n(653041),
        n(47120);
      var s = n(149765),
        a = n(233608),
        i = n(981631);
      function r(e) {
        return s.Db(e.permissions, i.TC2);
      }
      function l(e, t) {
        let n = [],
          r = a.Z.getGuildPermissionSpecMap(e);
        for (let e of i.yYS)
          s.e$(t.permissions, e) && n.push(r[e.toString()].title);
        return n;
      }
    },
    621319: function (e, t, n) {
      "use strict";
      n.d(t, {
        Gy: function () {
          return o;
        },
        H7: function () {
          return l;
        },
        en: function () {
          return c;
        },
        xv: function () {
          return r;
        },
      });
      var s = n(544891),
        a = n(570140),
        i = n(981631);
      function r() {
        a.Z.dispatch({ type: "GUILD_SETTINGS_VANITY_URL_CLOSE" });
      }
      function l() {
        a.Z.dispatch({ type: "GUILD_SETTINGS_VANITY_URL_RESET" });
      }
      function o(e) {
        a.Z.dispatch({ type: "GUILD_SETTINGS_VANITY_URL_SET", code: e });
      }
      function c(e, t) {
        return s.tn
          .patch({
            url: i.ANM.GUILD_VANITY_URL(e),
            body: { code: t },
            oldFormErrors: !0,
          })
          .then(
            (e) => {
              let {
                body: { code: t, uses: n },
              } = e;
              a.Z.dispatch({
                type: "GUILD_SETTINGS_SET_VANITY_URL",
                code: t,
                uses: n,
              });
            },
            (e) => (
              a.Z.dispatch({
                type: "GUILD_SETTINGS_VANITY_URL_ERROR",
                error: e.body,
              }),
              e
            ),
          );
      }
    },
    44550: function (e, t, n) {
      "use strict";
      var s,
        a,
        i,
        r,
        l = n(442837),
        o = n(570140);
      let c = null,
        d = 0,
        u = null,
        _ = null;
      class I extends (r = l.ZP.Store) {
        showNotice() {
          return c !== u;
        }
        get vanityURLCode() {
          return c;
        }
        get originalVanityURLCode() {
          return u;
        }
        get vanityURLUses() {
          return d;
        }
        hasError() {
          return null != _;
        }
        get errorDetails() {
          return _;
        }
      }
      (i = "GuildSettingsVanityURLStore"),
        (a = "displayName") in (s = I)
          ? Object.defineProperty(s, a, {
              value: i,
              enumerable: !0,
              configurable: !0,
              writable: !0,
            })
          : (s[a] = i),
        (t.Z = new I(o.Z, {
          GUILD_SETTINGS_SET_VANITY_URL: function (e) {
            var t, n;
            (u = c = null !== (t = e.code) && void 0 !== t ? t : ""),
              (d = e.uses),
              (_ = null !== (n = e.error) && void 0 !== n ? n : null);
          },
          GUILD_SETTINGS_VANITY_URL_CLOSE: function () {
            (u = c = null), (d = 0), (_ = null);
          },
          GUILD_SETTINGS_VANITY_URL_RESET: function () {
            (c = u), (d = 0);
          },
          GUILD_SETTINGS_VANITY_URL_SET: function (e) {
            (c = e.code), (d = 0);
          },
          GUILD_SETTINGS_VANITY_URL_ERROR: function (e) {
            _ = e.error;
          },
        }));
    },
    770270: function (e, t, n) {
      "use strict";
      n.d(t, {
        i: function () {
          return i;
        },
        p: function () {
          return r;
        },
      });
      var s = n(981631),
        a = n(689938);
      function i(e) {
        switch (e) {
          case s.evJ.UNKNOWN_CHANNEL:
            return a.Z.Messages.SET_VANITY_URL_ERROR_MESSAGE_UNKNOWN_CHANNEL;
          case s.evJ.INVALID_PERMISSIONS:
            return a.Z.Messages
              .SET_VANITY_URL_ERROR_MESSAGE_INVALID_PERMISSIONS;
          case s.evJ.INVALID_ACCESS:
            return a.Z.Messages.SET_VANITY_URL_ERROR_MESSAGE_INVALID_ACCESS;
          case s.evJ.VANITY_URL_REQUIRED_FOR_PUBLISHED_GUILDS:
            return a.Z.Messages
              .SET_VANITY_URL_ERROR_MESSAGE_REQUIRED_FOR_PUBLISHED_GUILDS;
          case s.evJ.VANITY_URL_EMPLOYEE_ONLY_GUILD_DISABLED:
            return a.Z.Messages.VANITY_URL_EMPLOYEE_ONLY_GUILD_DISABLED;
          case s.evJ.VANITY_URL_REQUIREMENTS_NOT_MET:
            return a.Z.Messages
              .SET_VANITY_URL_ERROR_MESSAGE_REQUIREMENTS_NOT_MET;
          default:
            return a.Z.Messages.CHANGE_VANITY_URL_ERROR;
        }
      }
      function r(e) {
        return (
          e.hasFeature(s.oNc.VANITY_URL) ||
          (e.hasFeature(s.oNc.GUILD_WEB_PAGE_VANITY_URL) &&
            null != e.vanityURLCode)
        );
      }
    },
    853714: function (e, t, n) {
      "use strict";
      n(47120);
      var s = n(735250),
        a = n(470079),
        i = n(120356),
        r = n.n(i),
        l = n(699581),
        o = n(91192),
        c = n(374470),
        d = n(442837),
        u = n(481060),
        _ = n(480137),
        I = n(239091),
        E = n(497321),
        T = n(724757),
        m = n(210887),
        N = n(387667),
        S = n(598077),
        g = n(592125),
        h = n(430824),
        C = n(246946),
        x = n(594174),
        p = n(823379),
        R = n(51144),
        L = n(987707),
        f = n(999382),
        O = n(909746),
        A = n(501801),
        M = n(603784),
        D = n(981631),
        v = n(689938),
        j = n(315185),
        Z = n(156725),
        b = n(852401);
      function U(e, t, n) {
        return (
          t in e
            ? Object.defineProperty(e, t, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0,
              })
            : (e[t] = n),
          e
        );
      }
      class G extends a.PureComponent {
        render() {
          let { onHeaderClick: e, guildId: t, guild: n, ...a } = this.props;
          return null == t
            ? null
            : (0, s.jsx)(M.Z, {
                ...a,
                guildId: t,
                guild: n,
                onHeaderClick: this.handleHeaderClick,
                onUserContextMenu: this.handleUserContextMenu,
                onChannelContextMenu: this.handleChannelContextMenu,
                onTargetContextMenu: this.handleTargetContextMenu,
              });
        }
        constructor(...e) {
          super(...e),
            U(this, "handleHeaderClick", () => {
              let { onHeaderClick: e, log: t } = this.props;
              null == e || e(t);
            }),
            U(this, "handleUserContextMenu", (e) => {
              let { log: t, guildId: a } = this.props,
                { user: i } = t;
              null != i &&
                null != a &&
                (0, I.jW)(e, async () => {
                  let { default: e } = await n
                    .e("50929")
                    .then(n.bind(n, 595011));
                  return (t) => (0, s.jsx)(e, { ...t, guildId: a, user: i });
                });
            }),
            U(this, "handleChannelContextMenu", (e) => {
              let { log: t, guildId: a } = this.props,
                i = h.Z.getGuild(a);
              null != t.options.channel &&
                "string" != typeof t.options.channel &&
                null != i &&
                (0, I.jW)(e, async () => {
                  let { default: e } = await n
                    .e("51529")
                    .then(n.bind(n, 228620));
                  return (n) =>
                    null != t.options.channel
                      ? (0, s.jsx)(e, { ...n, channel: t.options.channel })
                      : null;
                });
            }),
            U(this, "handleTargetContextMenu", (e) => {
              let { log: t, guildId: a } = this.props;
              switch (t.targetType) {
                case D.KFR.CHANNEL:
                case D.KFR.CHANNEL_OVERWRITE:
                  let i = g.Z.getChannel(t.targetId),
                    r = h.Z.getGuild(a);
                  if (null != i && null != r)
                    return (0, I.jW)(e, async () => {
                      let { default: e } = await n
                        .e("51529")
                        .then(n.bind(n, 228620));
                      return (t) => (0, s.jsx)(e, { ...t, channel: i });
                    });
                  return (0, I.jW)(e, async () => {
                    let { default: e } = await n
                      .e("5396")
                      .then(n.bind(n, 731646));
                    return (n) =>
                      (0, s.jsx)(e, {
                        ...n,
                        id: t.targetId,
                        label: v.Z.Messages.COPY_ID_UNKNOWN,
                      });
                  });
                case D.KFR.USER:
                  let l = x.default.getUser(t.targetId);
                  if (null != l && null != a)
                    return (0, I.jW)(e, async () => {
                      let { default: e } = await n
                        .e("50929")
                        .then(n.bind(n, 595011));
                      return (t) =>
                        (0, s.jsx)(e, { ...t, guildId: a, user: l });
                    });
              }
              return null;
            });
        }
      }
      function P(e) {
        let {
            logs: t,
            guildId: n,
            guild: i,
            expandedId: r,
            lastExpandedId: l,
            scroller: c,
            setExpandedRef: d,
            setLastExpandedRef: u,
            onHeaderClick: _,
            onContentClick: I,
          } = e,
          E = a.useRef(c);
        a.useEffect(() => {
          E.current = c;
        }, [c]);
        let m = (0, T.Z)("audit-log", E);
        return (0, s.jsx)(o.bG, {
          navigator: m,
          children: (0, s.jsx)(o.SJ, {
            children: (e) => {
              let { ref: a, ...o } = e;
              return (0, s.jsx)("div", {
                ref: a,
                ...o,
                children: t.map((e) => {
                  let t = r === e.id,
                    a = l === e.id;
                  return (0, s.jsx)(
                    G,
                    {
                      guildId: n,
                      guild: i,
                      ref: t ? d : a ? u : null,
                      className: j.row,
                      onHeaderClick: _,
                      onContentClick: I,
                      log: e,
                      expanded: t,
                    },
                    e.id,
                  );
                }),
              });
            },
          }),
        });
      }
      class B extends a.PureComponent {
        componentDidMount() {
          (0, _.bY)(this.props.guildId),
            document.addEventListener("click", this.handleOutsideClick);
        }
        componentWillUnmount() {
          document.removeEventListener("click", this.handleOutsideClick);
        }
        componentDidUpdate(e, t) {
          this.state.expandedId !== t.expandedId && this.fixScroll(),
            !this.props.showLoadMore &&
              this.props.logs.length !== e.logs.length &&
              null != this._scrollerRef &&
              this.isScrollerAtBottom() &&
              (0, _.OY)(this.props.guildId, !0);
        }
        isScrollerAtBottom() {
          var e;
          return (
            (null === (e = this._scrollerRef) || void 0 === e
              ? void 0
              : e.isScrolledToBottom()) || !1
          );
        }
        fixScroll() {
          let e = this._scrollerRef;
          if (null == e) return;
          let t = this.getRects(),
            n = this._prevRects;
          if (
            null == t.expanded ||
            null == t.lastExpanded ||
            null == n.expanded ||
            t.expanded.top < t.lastExpanded.top
          )
            return;
          let s = n.expanded.height - t.lastExpanded.height,
            a = e.getScrollerState().scrollTop - s;
          e.scrollTo({ to: a });
        }
        getRects() {
          let e = { lastExpanded: null, expanded: null };
          if (null != this._lastExpandedRef) {
            let t = l.findDOMNode(this._lastExpandedRef);
            (0, c.k)(t) && (e.lastExpanded = t.getBoundingClientRect());
          }
          if (null != this._expandedRef) {
            let t = l.findDOMNode(this._expandedRef);
            (0, c.k)(t) && (e.expanded = t.getBoundingClientRect());
          }
          return e;
        }
        renderUserQuickSelectValue(e) {
          var t;
          return null !== (t = e.valueLabel) && void 0 !== t ? t : e.label;
        }
        renderActionQuickSelectValue(e) {
          var t;
          return null !== (t = e.valueLabel) && void 0 !== t ? t : e.label;
        }
        renderHeader() {
          return (0, s.jsxs)(s.Fragment, {
            children: [
              (0, s.jsxs)("div", {
                className: j.customHeader,
                children: [
                  (0, s.jsx)(u.FormTitle, {
                    tag: u.FormTitleTags.H1,
                    className: j.formTitle,
                    children: v.Z.Messages.GUILD_SETTINGS_LABEL_AUDIT_LOG,
                  }),
                  this.renderHeaderDropdowns(),
                ],
              }),
              (0, s.jsx)(u.FormDivider, { className: j.divider }),
            ],
          });
        }
        renderSpinner() {
          return (0, s.jsx)(u.Spinner, {
            type: u.Spinner.Type.SPINNING_CIRCLE,
          });
        }
        renderContent() {
          let { expandedId: e, lastExpandedId: t } = this.state,
            {
              logs: a,
              theme: i,
              hide: r,
              isInitialLoading: l,
              isLoading: o,
              hasError: c,
              guildId: d,
              guild: _,
            } = this.props;
          if (r) return (0, s.jsx)(E.Z, {});
          if (o || l) return this.renderSpinner();
          if (0 === a.length) {
            let e = c
                ? v.Z.Messages.GUILD_SETTINGS_LABEL_AUDIT_LOG_ERROR_BODY
                : v.Z.Messages.GUILD_SETTINGS_LABEL_AUDIT_LOG_EMPTY_BODY,
              t = c
                ? v.Z.Messages.GUILD_SETTINGS_LABEL_AUDIT_LOG_ERROR_TITLE
                : v.Z.Messages.GUILD_SETTINGS_LABEL_AUDIT_LOG_EMPTY_TITLE;
            return (0, s.jsxs)(u.EmptyState, {
              theme: i,
              className: j.empty,
              children: [
                (0, s.jsx)(u.EmptyStateImage, {
                  darkSrc: n(28269),
                  lightSrc: n(357115),
                  width: 272,
                  height: 130,
                }),
                (0, s.jsx)(u.EmptyStateText, {
                  note: e,
                  style: { maxWidth: 300 },
                  children: t,
                }),
              ],
            });
          }
          return (0, s.jsx)(P, {
            logs: a,
            guildId: d,
            guild: _,
            expandedId: e,
            lastExpandedId: t,
            setExpandedRef: this.handleSetExpandedRef,
            setLastExpandedRef: this.handleSetLastExpandedRef,
            onHeaderClick: this.handleHeaderClick,
            onContentClick: this.handleContentClick,
            scroller: this._scrollerRef,
          });
        }
        render() {
          let { isLoadingNextPage: e, hide: t, isLoading: n } = this.props;
          return (0, s.jsx)("div", {
            className: Z.customColumn,
            children: (0, s.jsx)("div", {
              className: Z.customContainer,
              children: (0, s.jsx)(u.AdvancedScrollerAuto, {
                className: r()(Z.customScroller, j.scroller),
                onScroll: this.handleOnScroll,
                ref: this.handleSetScrollerRef,
                children: (0, s.jsx)("div", {
                  className: j.content,
                  ref: this._contentRef,
                  children: (0, s.jsxs)(u.FocusRingScope, {
                    containerRef: this._contentRef,
                    children: [
                      this.renderHeader(),
                      this.renderContent(),
                      this.renderLoadMore(),
                      !e || t || n ? null : this.renderSpinner(),
                    ],
                  }),
                }),
              }),
            }),
          });
        }
        constructor(...e) {
          super(...e),
            U(this, "_clickedInside", !1),
            U(this, "_scrollerRef", null),
            U(this, "_expandedRef", void 0),
            U(this, "_lastExpandedRef", void 0),
            U(this, "_prevRects", this.getRects()),
            U(this, "_contentRef", a.createRef()),
            U(this, "state", {
              expandedId: null,
              lastExpandedId: null,
              actionFilterQuery: "",
            }),
            U(this, "renderActionQuickSelectItem", (e, t) => {
              var n;
              let { actionFilter: a } = this.props,
                i = (0, N.Pw)(e.value),
                r = (0, N.p5)(e.value),
                l = e.value === a;
              return (0, s.jsxs)(
                u.ComboboxItem,
                {
                  value: e.value,
                  selectedColor: u.ComboboxItem.Colors.BRAND,
                  children: [
                    (0, s.jsx)(u.ComboboxItem.Icon, {
                      children: (0, s.jsx)(A.mp, {
                        themeOverride: l ? D.BRd.DARK : null,
                        actionType: i,
                        targetType: r,
                        action: e.value,
                      }),
                    }),
                    (0, s.jsx)(u.ComboboxItem.Label, { children: e.label }),
                    (0, s.jsx)(u.ComboboxItem.Checkmark, {}),
                  ],
                },
                null !== (n = e.key) && void 0 !== n ? n : t,
              );
            }),
            U(this, "renderUserQuickSelectItem", (e, t) => {
              var n;
              if (e.user instanceof S.Z) {
                let t = e.user;
                return (0, s.jsxs)(
                  u.ComboboxItem,
                  {
                    value: t.id,
                    selectedColor: u.ComboboxItem.Colors.BRAND,
                    children: [
                      (0, s.jsx)(u.ComboboxItem.Icon, {
                        children: (0, s.jsx)(u.Avatar, {
                          size: u.AvatarSizes.SIZE_32,
                          src: t.getAvatarURL(this.props.guildId, 32),
                          "aria-label": t.username,
                          className: j.avatar,
                        }),
                      }),
                      (0, s.jsxs)(u.ComboboxItem.Label, {
                        children: [
                          (0, s.jsx)(u.Text, {
                            variant: "text-sm/normal",
                            children: R.ZP.getUserTag(t, { mode: "username" }),
                          }),
                          !t.isPomelo() &&
                            (0, s.jsxs)(u.Text, {
                              variant: "text-xs/normal",
                              className: j.discriminator,
                              children: ["#", t.discriminator],
                            }),
                        ],
                      }),
                      (0, s.jsx)(u.ComboboxItem.Checkmark, {}),
                    ],
                  },
                  t.id,
                );
              }
              return (0, s.jsxs)(
                u.ComboboxItem,
                {
                  value: e.value,
                  selectedColor: u.ComboboxItem.Colors.BRAND,
                  children: [
                    (0, s.jsx)(u.ComboboxItem.Icon, {
                      children: (0, s.jsx)(u.GroupIcon, {
                        size: "custom",
                        color: "currentColor",
                        width: 30,
                        height: 30,
                      }),
                    }),
                    (0, s.jsx)(u.ComboboxItem.Label, { children: e.label }),
                    (0, s.jsx)(u.ComboboxItem.Checkmark, {}),
                  ],
                },
                null !== (n = e.key) && void 0 !== n ? n : t,
              );
            }),
            U(this, "renderHeaderDropdowns", () => {
              var e, t;
              let {
                actionFilter: n,
                hide: a,
                userIdFilter: i,
                moderators: l,
              } = this.props;
              if (a) return null;
              let o = O.Iv(),
                c =
                  null !==
                    (e = o.find((e) => {
                      let { value: t } = e;
                      return n === t;
                    })) && void 0 !== e
                    ? e
                    : o[0],
                d = {
                  label: v.Z.Messages.GUILD_SETTINGS_FILTER_ALL_USERS,
                  valueLabel: v.Z.Messages.GUILD_SETTINGS_FILTER_ALL,
                  value: null,
                },
                _ = [d, ...l].map((e) => {
                  var t;
                  if (!(e instanceof S.Z)) return e;
                  return { label: (t = e).username, value: t.id, user: t };
                }),
                I =
                  null !==
                    (t = _.find((e) => {
                      let { value: t } = e;
                      return t === i;
                    })) && void 0 !== t
                    ? t
                    : d;
              return (0, s.jsxs)("div", {
                className: j.quickSelect,
                children: [
                  (0, s.jsx)(u.SearchableQuickSelect, {
                    popoutClassName: r()(
                      j.selectFilterPopout,
                      b.elevationBorderHigh,
                    ),
                    items: _,
                    renderItem: this.renderUserQuickSelectItem,
                    renderValue: this.renderUserQuickSelectValue,
                    value: I,
                    onChange: this.handleFilterUserChange,
                    label: v.Z.Messages.GUILD_SETTINGS_FILTER_USER,
                    placeholder: v.Z.Messages.SEARCH_MEMBERS,
                    popoutProps: { autoInvert: !1, position: "bottom" },
                  }),
                  (0, s.jsx)(u.SearchableQuickSelect, {
                    placeholder: v.Z.Messages.SEARCH_ACTIONS,
                    label: v.Z.Messages.GUILD_SETTINGS_FILTER_ACTION,
                    popoutClassName: r()(
                      j.selectFilterPopout,
                      b.elevationBorderLow,
                    ),
                    items: o,
                    renderItem: this.renderActionQuickSelectItem,
                    renderValue: this.renderActionQuickSelectValue,
                    value: c,
                    onChange: this.handleFilterActionChange,
                    popoutProps: { autoInvert: !1, position: "bottom" },
                  }),
                ],
              });
            }),
            U(this, "renderLoadMore", () => {
              let { showLoadMore: e, hasOlderLogs: t, hide: n } = this.props;
              if (e && t && !n)
                return (0, s.jsx)(u.Button, {
                  color: u.Button.Colors.PRIMARY,
                  className: j.loadMore,
                  onClick: this.handleFetchNextPage,
                  children: v.Z.Messages.GUILD_SETTINGS_AUDIT_LOG_LOAD_MORE,
                });
            }),
            U(this, "handleFilterActionChange", (e) => {
              (0, _.ZX)(e, this.props.guildId);
            }),
            U(this, "handleFilterUserChange", (e) => {
              (0, _.uo)(e, this.props.guildId);
            }),
            U(this, "handleHeaderClick", (e) => {
              let { expandedId: t } = this.state;
              t !== e.id
                ? ((this._clickedInside = !0),
                  this.setState({ expandedId: e.id, lastExpandedId: t }),
                  (this._prevRects = this.getRects()))
                : ((this._expandedRef = null),
                  (this._lastExpandedRef = null),
                  null != t && (this._prevRects = this.getRects()),
                  this.setState({ expandedId: null, lastExpandedId: null }));
            }),
            U(this, "handleOutsideClick", () => {
              null == this.state.expandedId || this._clickedInside
                ? null != this.state.expandedId && (this._clickedInside = !1)
                : ((this._expandedRef = null),
                  (this._lastExpandedRef = null),
                  this.setState({ expandedId: null, lastExpandedId: null }),
                  (this._prevRects = this.getRects()));
            }),
            U(this, "handleContentClick", (e) => {
              (this._clickedInside = !0), e.stopPropagation();
            }),
            U(this, "handleSetScrollerRef", (e) => {
              this._scrollerRef = e;
            }),
            U(this, "handleOnScroll", () => {
              this.isScrollerAtBottom() && this.handleFetchNextPage();
            }),
            U(this, "handleFetchNextPage", () => {
              (0, _.OY)(this.props.guildId);
            }),
            U(this, "handleActionFilterQueryChange", (e) => {
              this.setState({ actionFilterQuery: e });
            }),
            U(this, "handleActionFilterQueryClear", () => {
              this.setState({ actionFilterQuery: "" });
            }),
            U(this, "handleSetExpandedRef", (e) => {
              this._expandedRef = e;
            }),
            U(this, "handleSetLastExpandedRef", (e) => {
              this._lastExpandedRef = e;
            });
        }
      }
      t.Z = d.ZP.connectStores([L.Z, f.Z, h.Z, m.Z, C.Z, x.default], () => {
        let e = f.Z.getGuildId(),
          t = h.Z.getGuild(e),
          n = L.Z.logs;
        return {
          guildId: e,
          guild: t,
          moderators: L.Z.userIds.map((e) => x.default.getUser(e)).filter(p.lm),
          isInitialLoading: L.Z.isInitialLoading,
          isLoading: L.Z.isLoading,
          isLoadingNextPage: L.Z.isLoadingNextPage,
          showLoadMore: L.Z.groupedFetchCount > 2,
          hasError: L.Z.hasError,
          hasOlderLogs: L.Z.hasOlderLogs,
          logs: null != n && null != t ? O._$(n, t) : [],
          actionFilter: L.Z.actionFilter,
          userIdFilter: L.Z.userIdFilter,
          theme: m.Z.theme,
          hide: C.Z.enabled,
        };
      })(B);
    },
    603784: function (e, t, n) {
      "use strict";
      var s = n(735250),
        a = n(470079),
        i = n(120356),
        r = n.n(i),
        l = n(91192),
        o = n(442837),
        c = n(780384),
        d = n(481060),
        u = n(726542),
        _ = n(100527),
        I = n(933557),
        E = n(184301),
        T = n(347475),
        m = n(210887),
        N = n(699516),
        S = n(594174),
        g = n(259580),
        h = n(51144),
        C = n(426563),
        x = n(909746),
        p = n(501801),
        R = n(981631),
        L = n(689938),
        f = n(451316);
      class O extends a.PureComponent {
        render() {
          let { user: e, onContextMenu: t } = this.props;
          return (0, s.jsxs)("span", {
            onContextMenu: t,
            className: f.userHook,
            children: [
              (0, s.jsx)(d.Text, {
                variant: "text-md/normal",
                children: h.ZP.getUserTag(e, { mode: "username" }),
              }),
              "0" !== e.discriminator &&
                (0, s.jsxs)(d.Text, {
                  variant: "text-xs/normal",
                  className: f.discrim,
                  children: ["#", e.discriminator],
                }),
            ],
          });
        }
      }
      class A extends a.PureComponent {
        hasChangesToRender() {
          let { log: e } = this.props,
            { changes: t } = e;
          return (
            (e.actionType !== R.vB8.DELETE ||
              e.action === R.rsA.MEMBER_BAN_ADD ||
              e.action === R.rsA.MEMBER_KICK ||
              e.action === R.rsA.MEMBER_PRUNE) &&
            null != t &&
            t.some((t) => !(0, p.xO)(e, t))
          );
        }
        renderTitle() {
          let {
              log: e,
              onUserContextMenu: t,
              onTargetContextMenu: n,
              onChannelContextMenu: a,
            } = this.props,
            { user: i, target: r, options: l } = e,
            o = x.N5(e);
          return null != o
            ? (0, s.jsx)("div", {
                className: f.overflowEllipsis,
                children: o.format({
                  user: i,
                  target: r,
                  userHook: (n, a) => {
                    if (null != e.user)
                      return (0, s.jsx)(
                        O,
                        { user: e.user, onContextMenu: t },
                        a,
                      );
                    if (null != e.options.integration_type) {
                      var i;
                      let t = u.Z.get(e.options.integration_type);
                      return null !== (i = null == t ? void 0 : t.name) &&
                        void 0 !== i
                        ? i
                        : L.Z.Messages.UNKNOWN_INTEGRATION;
                    }
                    return L.Z.Messages.UNKNOWN_USER;
                  },
                  targetHook: (t, a) =>
                    e.targetType === R.KFR.USER
                      ? (0, s.jsx)(O, { user: e.target, onContextMenu: n }, a)
                      : (0, s.jsx)(
                          "span",
                          { onContextMenu: n, children: t },
                          a,
                        ),
                  count: l.count,
                  channel:
                    null == l.channel || "string" == typeof l.channel
                      ? l.channel
                      : (0, I.F6)(l.channel, S.default, N.Z, !0),
                  channelHook: (e, t) =>
                    (0, s.jsx)("span", { onContextMenu: a, children: e }, t),
                  subtarget: l.subtarget,
                }),
              })
            : null;
        }
        renderChangeSummary() {
          let { expanded: e, log: t, guild: n, onContentClick: a } = this.props;
          return e && null != n
            ? (0, s.jsx)(p.tP, { log: t, guild: n, onContentClick: a })
            : null;
        }
        renderEntryAvatar() {
          let {
              props: { log: e, guildId: t, theme: n },
            } = this,
            {
              user: a,
              userId: i,
              options: { integration_type: r },
            } = e;
          if (null != a && null != i)
            return (0, s.jsx)(d.Popout, {
              preload: () => (0, E.Z)(i, a.getAvatarURL(t, 80), { guildId: t }),
              renderPopout: (e) =>
                (0, s.jsx)(T.Z, {
                  ...e,
                  userId: i,
                  guildId: t,
                  newAnalyticsLocations: [_.Z.AVATAR],
                }),
              children: (n) => {
                var a, i, r;
                return (0, s.jsx)(d.Avatar, {
                  ...n,
                  onClick: (e) => {
                    e.stopPropagation(), n.onClick(e);
                  },
                  className: f.avatar,
                  src:
                    ((a = e),
                    (i = t),
                    a.action === R.rsA.AUTO_MODERATION_BLOCK_MESSAGE ||
                    a.action === R.rsA.AUTO_MODERATION_FLAG_TO_CHANNEL ||
                    a.action ===
                      R.rsA.AUTO_MODERATION_USER_COMMUNICATION_DISABLED ||
                    a.action === R.rsA.AUTO_MODERATION_QUARANTINE_USER
                      ? (0, C.j)()
                      : null === (r = a.user) || void 0 === r
                        ? void 0
                        : r.getAvatarURL(i, 40)),
                  "aria-hidden": !0,
                  size: d.AvatarSizes.SIZE_40,
                });
              },
            });
          if (null != r) {
            let e = u.Z.get(r);
            if (null != e) {
              let t = (0, c.wj)(n) ? e.icon.darkSVG : e.icon.lightSVG;
              return (0, s.jsx)(d.Avatar, {
                className: f.avatar,
                src: t,
                "aria-hidden": !0,
                size: d.AvatarSizes.SIZE_40,
              });
            }
          }
          return null;
        }
        render() {
          let e;
          let {
              log: t,
              className: n,
              expanded: a,
              onHeaderClick: i,
            } = this.props,
            o = this.hasChangesToRender(),
            c = f.headerDefault;
          a ? (c = f.headerExpanded) : o && (c = f.headerClickable);
          let u = t.timestampStart.calendar(),
            _ = t.timestampEnd.calendar();
          e =
            u === _
              ? (0, s.jsx)(d.Text, {
                  className: f.timestamp,
                  variant: "text-sm/normal",
                  children: u,
                })
              : (0, s.jsxs)(d.Text, {
                  className: f.timestamp,
                  variant: "text-sm/normal",
                  children: [u, "—", _],
                });
          let I = o ? i : R.dG4;
          return (0, s.jsx)(l.mh, {
            id: t.id,
            children: (i) =>
              (0, s.jsxs)("div", {
                className: r()(f.auditLog, n),
                children: [
                  (0, s.jsxs)(d.Clickable, {
                    className: c,
                    "aria-expanded": a,
                    onClick: I,
                    ...i,
                    children: [
                      (0, s.jsx)(p.mp, {
                        action: t.action,
                        actionType: t.actionType,
                        targetType: t.targetType,
                      }),
                      this.renderEntryAvatar(),
                      (0, s.jsxs)("div", {
                        className: f.timeWrap,
                        children: [
                          (0, s.jsx)("div", {
                            className: f.title,
                            children: this.renderTitle(),
                          }),
                          e,
                        ],
                      }),
                      o
                        ? (0, s.jsx)(g.Z, {
                            className: f.expand,
                            foreground: f.expandForeground,
                            expanded: a,
                            "aria-hidden": !0,
                          })
                        : null,
                    ],
                  }),
                  a ? (0, s.jsx)("div", { className: f.divider }) : null,
                  this.renderChangeSummary(),
                ],
              }),
          });
        }
      }
      t.Z = o.ZP.connectStores([m.Z], () => ({ theme: m.Z.theme }))(A);
    },
    743475: function (e, t, n) {
      "use strict";
      n.d(t, {
        BG: function () {
          return T;
        },
        DO: function () {
          return N;
        },
        pt: function () {
          return m;
        },
      }),
        n(47120);
      var s = n(570140),
        a = n(668781),
        i = n(881052),
        r = n(45966),
        l = n(637853),
        o = n(592125),
        c = n(823379),
        d = n(889369),
        u = n(570961),
        _ = n(208665),
        I = n(290511),
        E = n(689938);
      function T() {
        s.Z.dispatch({ type: "GUILD_SETTINGS_DEFAULT_CHANNELS_RESET" });
      }
      function m(e) {
        s.Z.dispatch({
          type: "GUILD_SETTINGS_DEFAULT_CHANNELS_TOGGLE",
          channelId: e,
        });
      }
      async function N(e) {
        let t = Array.from(d.Z.editedDefaultChannelIds).filter(
            (e) => null != o.Z.getChannel(e),
          ),
          n = _.Z.advancedMode,
          [T, m] = (0, l.d9)(e.id, [...t]),
          N = (0, l.kl)(e.id, t, _.Z.editedOnboardingPrompts),
          S = (0, l.kl)(e.id, t, _.Z.editedOnboardingPrompts, l.V7);
        if (
          r.Z.getEnabled(e.id) &&
          ((!n && (m.length < I.md || T.length < I.X)) ||
            (n && (N.length < I.md || S.length < I.X)))
        ) {
          a.Z.show({
            title: E.Z.Messages.ONBOARDING_PROMPT_SAVE_FAILED,
            body: E.Z.Messages.DEFAULT_CHANNELS_SAVE_INVALID_DEFAULT_CHANNELS,
          });
          return;
        }
        if (d.Z.hasChanges()) {
          s.Z.dispatch({ type: "GUILD_SETTINGS_DEFAULT_CHANNELS_SUBMIT" });
          try {
            await (0, u.n_)(e.id, { default_channel_ids: t }),
              s.Z.dispatch({
                type: "GUILD_SETTINGS_DEFAULT_CHANNELS_SAVE_SUCCESS",
                guildId: e.id,
                channelIds: t,
              });
          } catch (n) {
            var g;
            let { fieldName: e, error: t } =
              null !== (g = new i.Hx(n).getAnyErrorMessageAndField()) &&
              void 0 !== g
                ? g
                : {};
            a.Z.show({
              title: E.Z.Messages.ONBOARDING_PROMPT_SAVE_FAILED,
              body: [e, t].filter(c.lm).join(": "),
            }),
              s.Z.dispatch({
                type: "GUILD_SETTINGS_DEFAULT_CHANNELS_SAVE_FAILED",
              });
          }
        }
      }
    },
    827907: function (e, t, n) {
      "use strict";
      n.d(t, {
        EH: function () {
          return _;
        },
        Mf: function () {
          return d;
        },
        lL: function () {
          return I;
        },
        t4: function () {
          return u;
        },
      });
      var s = n(442837),
        a = n(592125),
        i = n(430824),
        r = n(700785),
        l = n(889369),
        o = n(981631),
        c = n(689938);
      function d(e, t) {
        return (0, s.e7)(
          [l.Z],
          () =>
            l.Z.editedDefaultChannelIds.has(e) ||
            (null != t && l.Z.editedDefaultChannelIds.has(t)),
        );
      }
      function u(e, t) {
        return (0, s.e7)(
          [l.Z],
          () => e === t || (null != t && l.Z.editedDefaultChannelIds.has(t)),
        );
      }
      function _(e, t) {
        return (0, s.e7)([l.Z, a.Z], () =>
          null != t && l.Z.editedDefaultChannelIds.has(t)
            ? c.Z.Messages.CHANNEL_BROWSER_DISABLED_BY_CATEGORY
            : r.Uu(o.Plq.VIEW_CHANNEL, a.Z.getChannel(e))
              ? void 0
              : c.Z.Messages.DEFAULT_CHANNELS_DISABLED_PRIVATE,
        );
      }
      function I(e, t) {
        let n = (0, s.e7)([i.Z], () => {
            var n;
            return (
              (null === (n = i.Z.getGuild(e)) || void 0 === n
                ? void 0
                : n.rulesChannelId) === t
            );
          }),
          r = (0, s.e7)([a.Z], () => {
            var e;
            return null === (e = a.Z.getChannel(t)) || void 0 === e
              ? void 0
              : e.isGuildVocal();
          });
        return n
          ? c.Z.Messages.GUILD_ONBOARDING_DEFAULT_CHANNELS_RULES_DISCOURAGED
          : r
            ? c.Z.Messages.GUILD_ONBOARDING_DEFAULT_CHANNELS_VOICE_TOOLTIP
            : void 0;
      }
    },
    535907: function (e, t, n) {
      "use strict";
      n.d(t, {
        z: function () {
          return s;
        },
      });
      let s = { authorIds: [], message: "" };
    },
    8426: function (e, t, n) {
      "use strict";
      n.d(t, {
        Hr: function () {
          return S;
        },
        Hz: function () {
          return p;
        },
        To: function () {
          return O;
        },
        XG: function () {
          return x;
        },
        _N: function () {
          return T;
        },
        ad: function () {
          return h;
        },
        bj: function () {
          return D;
        },
        el: function () {
          return N;
        },
        hS: function () {
          return g;
        },
        lq: function () {
          return R;
        },
        mM: function () {
          return L;
        },
        oo: function () {
          return f;
        },
        q6: function () {
          return M;
        },
        r2: function () {
          return C;
        },
        vR: function () {
          return m;
        },
      }),
        n(390547);
      var s = n(392711),
        a = n.n(s),
        i = n(544891),
        r = n(570140),
        l = n(668781),
        o = n(563534),
        c = n(734893),
        d = n(621923),
        u = n(626135),
        _ = n(969632),
        I = n(981631),
        E = n(689938);
      function T(e) {
        r.Z.dispatch({
          type: "GUILD_SETTINGS_ONBOARDING_UPDATE_WELCOME_MESSAGE",
          welcomeMessage: e,
        });
      }
      function m(e) {
        r.Z.dispatch({
          type: "GUILD_SETTINGS_ONBOARDING_ADD_NEW_MEMBER_ACTION",
          action: e,
        });
      }
      function N(e, t) {
        r.Z.dispatch({
          type: "GUILD_SETTINGS_ONBOARDING_UPDATE_NEW_MEMBER_ACTION",
          channelId: e,
          action: t,
        });
      }
      function S(e) {
        r.Z.dispatch({
          type: "GUILD_SETTINGS_ONBOARDING_DELETE_NEW_MEMBER_ACTION",
          channelId: e,
        });
      }
      function g(e) {
        r.Z.dispatch({
          type: "GUILD_SETTINGS_ONBOARDING_REORDER_NEW_MEMBER_ACTION",
          actions: e,
        });
      }
      async function h(e, t, n, s) {
        if (!s) return Promise.resolve();
        try {
          let s = await i.tn.patch({
              url: I.ANM.NEW_MEMBER_ACTION(e, t),
              body: { icon: n },
              oldFormErrors: !0,
            }),
            a = (0, c.cq)(s.body);
          return (
            r.Z.dispatch({
              type: "GUILD_NEW_MEMBER_ACTION_UPDATE_SUCCESS",
              guildId: e,
              action: a,
            }),
            Promise.resolve(s.body)
          );
        } catch (t) {
          var o;
          let e = a().flatMap(
            null !== (o = t.body) && void 0 !== o ? o : {},
            (e) => e,
          );
          return (
            l.Z.show({
              title: E.Z.Messages.GUILD_SETTINGS_ONBOARDING_HOME_SAVE_FAILED,
              body: E.Z.Messages.GUILD_SETTINGS_ONBOARDING_HOME_SAVE_FAILED_INVALID_WITH_DETAILS.format(
                { errorMessage: e.join(", ") },
              ),
            }),
            Promise.reject()
          );
        }
      }
      function C(e) {
        r.Z.dispatch({
          type: "GUILD_SETTINGS_ONBOARDING_ADD_RESOURCE_CHANNEL",
          resourceChannel: e,
        });
      }
      function x(e, t) {
        r.Z.dispatch({
          type: "GUILD_SETTINGS_ONBOARDING_UPDATE_RESOURCE_CHANNEL",
          channelId: e,
          resourceChannel: t,
        });
      }
      function p(e) {
        r.Z.dispatch({
          type: "GUILD_SETTINGS_ONBOARDING_DELETE_RESOURCE_CHANNEL",
          resourceChannelId: e,
        });
      }
      function R(e) {
        r.Z.dispatch({
          type: "GUILD_SETTINGS_ONBOARDING_REORDER_RESOURCE_CHANNEL",
          resourceChannels: e,
        });
      }
      async function L(e, t, n) {
        try {
          let s = await i.tn.put({
              url: I.ANM.RESOURCE_CHANNEL(e, t),
              body: { icon: n },
              oldFormErrors: !0,
            }),
            a = (0, c.vD)(s.body);
          return (
            r.Z.dispatch({
              type: "GUILD_RESOURCE_CHANNEL_UPDATE_SUCCESS",
              guildId: e,
              resourceChannel: a,
            }),
            s.body
          );
        } catch (t) {
          var s;
          let e = a().flatMap(
            null !== (s = t.body) && void 0 !== s ? s : {},
            (e) => e,
          );
          l.Z.show({
            title: E.Z.Messages.GUILD_SETTINGS_ONBOARDING_HOME_SAVE_FAILED,
            body: E.Z.Messages.GUILD_SETTINGS_ONBOARDING_HOME_SAVE_FAILED_INVALID_WITH_DETAILS.format(
              { errorMessage: e.join(", ") },
            ),
          });
        }
      }
      function f(e, t) {
        let n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
        if (!n && !_.Z.hasChanges()) return Promise.resolve();
        let { serverGuideOptional: s } = (0, d.FJ)(e);
        return (!s || o.Z.getEnabled(e)) && !(0, c.uo)(t)
          ? (l.Z.show({
              title: E.Z.Messages.GUILD_SETTINGS_ONBOARDING_HOME_SAVE_FAILED,
              body: E.Z.Messages
                .GUILD_SETTINGS_ONBOARDING_HOME_SAVE_FAILED_REASON,
            }),
            Promise.reject())
          : (!s && null != t && (t.enabled = !0), A(e, t));
      }
      function O(e, t) {
        let n = o.Z.getSettings(e);
        if (t && !(0, c.uo)(n)) {
          l.Z.show({
            title: E.Z.Messages.GUILD_SETTINGS_ONBOARDING_HOME_SAVE_FAILED,
            body: E.Z.Messages
              .GUILD_SETTINGS_ONBOARDING_HOME_SAVE_FAILED_REASON,
          });
          return;
        }
        return (
          r.Z.dispatch({
            type: "GUILD_HOME_SETTINGS_TOGGLE_ENABLED",
            guildId: e,
            enabled: t,
          }),
          A(e, { ...n, enabled: t })
        );
      }
      async function A(e, t) {
        var n, s, o, d, _, T, m, N, S;
        r.Z.dispatch({ type: "GUILD_HOME_SETTINGS_UPDATE_START" });
        try {
          let a = await i.tn.put({
              url: I.ANM.GUILD_HOME_SETTINGS(e),
              body: (0, c.HH)(e, t),
              oldFormErrors: !0,
            }),
            l = (0, c.tB)(a.body);
          return (
            r.Z.dispatch({
              type: "GUILD_HOME_SETTINGS_UPDATE_SUCCESS",
              guildId: e,
              homeSettings: l,
            }),
            u.default.track(I.rMx.GUILD_SETTINGS_GUIDE_UPDATED, {
              guild_id: e,
              welcome_message_author_id: (null !==
                (d =
                  null == l
                    ? void 0
                    : null === (n = l.welcomeMessage) || void 0 === n
                      ? void 0
                      : n.authorIds) && void 0 !== d
                ? d
                : [])[0],
              welcome_message_length:
                null !==
                  (_ =
                    null == l
                      ? void 0
                      : null === (o = l.welcomeMessage) || void 0 === o
                        ? void 0
                        : null === (s = o.message) || void 0 === s
                          ? void 0
                          : s.length) && void 0 !== _
                  ? _
                  : 0,
              member_action_channel_ids: (null !==
                (T = null == l ? void 0 : l.newMemberActions) && void 0 !== T
                ? T
                : []
              ).map((e) => e.channelId),
              member_action_channel_actions: (null !==
                (m = null == l ? void 0 : l.newMemberActions) && void 0 !== m
                ? m
                : []
              ).map((e) => e.actionType),
              resource_channel_ids: (null !==
                (N = null == l ? void 0 : l.resourceChannels) && void 0 !== N
                ? N
                : []
              ).map((e) => e.channelId),
              enabled: null == l ? void 0 : l.enabled,
            }),
            a.body
          );
        } catch (t) {
          let e = a().flatMap(
            null !== (S = t.body) && void 0 !== S ? S : {},
            (e) => e,
          );
          r.Z.dispatch({ type: "GUILD_HOME_SETTINGS_UPDATE_FAIL" }),
            l.Z.show({
              title: E.Z.Messages.GUILD_SETTINGS_ONBOARDING_HOME_SAVE_FAILED,
              body: E.Z.Messages.GUILD_SETTINGS_ONBOARDING_HOME_SAVE_FAILED_INVALID_WITH_DETAILS.format(
                { errorMessage: e.join(", ") },
              ),
            });
        }
      }
      function M(e, t) {
        null != e &&
          r.Z.dispatch({
            type: "GUILD_SETTINGS_ONBOARDING_DISMISS_RESOURCE_CHANNEL_SUGGESTION",
            guildId: e,
            channelIds: t,
          });
      }
      function D() {
        r.Z.dispatch({ type: "GUILD_SETTINGS_ONBOARDING_HOME_SETTINGS_RESET" });
      }
    },
    969632: function (e, t, n) {
      "use strict";
      n(47120);
      var s,
        a = n(392711),
        i = n.n(a),
        r = n(442837),
        l = n(570140),
        o = n(563534),
        c = n(999382);
      function d(e, t, n) {
        return (
          t in e
            ? Object.defineProperty(e, t, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0,
              })
            : (e[t] = n),
          e
        );
      }
      let u = { enabled: !1 },
        _ = null,
        I = Object.assign({}, u),
        E = !1,
        T = {};
      function m() {
        (function () {
          (_ = null), (I = Object.assign({}, u)), (E = !1);
        })(),
          (_ = c.Z.getGuildId()),
          (I = i().cloneDeep(Object.assign({}, o.Z.getSettings(_))));
      }
      function N(e, t) {
        if (null == I.newMemberActions) return !1;
        let n = I.newMemberActions.findIndex((t) => t.channelId === e);
        if (n < 0) return !1;
        (I.newMemberActions[n] = { ...t }),
          (I.newMemberActions = [...I.newMemberActions]);
      }
      function S(e, t) {
        if (null == I.resourceChannels) return !1;
        let n = I.resourceChannels.findIndex((t) => t.channelId === e);
        if (n < 0) return !1;
        (I.resourceChannels[n] = { ...t }),
          (I.resourceChannels = [...I.resourceChannels]);
      }
      function g() {
        (E = !1), (I = i().cloneDeep(Object.assign({}, o.Z.getSettings(_))));
      }
      class h extends (s = r.ZP.PersistedStore) {
        initialize(e) {
          null != e && (T = e.dismissedSuggestedChannelIdsByGuildId),
            this.waitFor(c.Z, o.Z);
        }
        getState() {
          return { dismissedSuggestedChannelIdsByGuildId: T };
        }
        getSettings() {
          return null != I ? I : u;
        }
        hasChanges() {
          return (
            null != _ &&
            !i().isEqual(
              i().omit(I, "newMemberActions"),
              i().omit(o.Z.getSettings(_), "newMemberActions"),
            )
          );
        }
        getSubmitting() {
          return E;
        }
        getDismissedSuggestedChannelIds(e) {
          var t;
          return null == e ? [] : null !== (t = T[e]) && void 0 !== t ? t : [];
        }
        getResourceChannel(e) {
          var t;
          if (null == e) return null;
          let n =
            null === (t = I.resourceChannels) || void 0 === t
              ? void 0
              : t.find((t) => t.channelId === e);
          return null == n ? null : n;
        }
        getNewMemberAction(e) {
          var t;
          if (null == e) return null;
          let n =
            null === (t = I.newMemberActions) || void 0 === t
              ? void 0
              : t.find((t) => t.channelId === e);
          return null == n ? null : n;
        }
      }
      d(h, "displayName", "GuildSettingsOnboardingHomeSettingsStore"),
        d(h, "persistKey", "GuildSettingsOnboardingHomeSettingsStore"),
        (t.Z = new h(l.Z, {
          GUILD_SETTINGS_INIT: m,
          GUILD_SETTINGS_SET_SECTION: m,
          GUILD_SETTINGS_ONBOARDING_HOME_SETTINGS_RESET: m,
          GUILD_HOME_SETTINGS_FETCH_SUCCESS: function () {
            I = i().cloneDeep(Object.assign({}, o.Z.getSettings(_)));
          },
          GUILD_HOME_SETTINGS_UPDATE_START: function () {
            E = !0;
          },
          GUILD_HOME_SETTINGS_UPDATE_SUCCESS: g,
          GUILD_HOME_SETTINGS_UPDATE_FAIL: g,
          GUILD_NEW_MEMBER_ACTION_UPDATE_SUCCESS: function (e) {
            let { action: t } = e;
            return N(t.channelId, t);
          },
          GUILD_RESOURCE_CHANNEL_UPDATE_SUCCESS: function (e) {
            let { resourceChannel: t } = e;
            S(t.channelId, t);
          },
          GUILD_SETTINGS_ONBOARDING_UPDATE_WELCOME_MESSAGE: function (e) {
            let { welcomeMessage: t } = e;
            if (null == t) I.welcomeMessage = void 0;
            else {
              var n, s, a, i, r, l;
              I.welcomeMessage = {
                authorIds:
                  null !==
                    (i =
                      null !== (a = t.authorIds) && void 0 !== a
                        ? a
                        : null === (n = I.welcomeMessage) || void 0 === n
                          ? void 0
                          : n.authorIds) && void 0 !== i
                    ? i
                    : [],
                message:
                  null !==
                    (l =
                      null !== (r = t.message) && void 0 !== r
                        ? r
                        : null === (s = I.welcomeMessage) || void 0 === s
                          ? void 0
                          : s.message) && void 0 !== l
                    ? l
                    : "",
              };
            }
          },
          GUILD_SETTINGS_ONBOARDING_UPDATE_NEW_MEMBER_ACTION: function (e) {
            let { channelId: t, action: n } = e;
            return N(t, n);
          },
          GUILD_SETTINGS_ONBOARDING_ADD_NEW_MEMBER_ACTION: function (e) {
            var t;
            let { action: n } = e;
            (I.newMemberActions =
              null !== (t = I.newMemberActions) && void 0 !== t ? t : []),
              (I.newMemberActions = [...I.newMemberActions, n]);
          },
          GUILD_SETTINGS_ONBOARDING_DELETE_NEW_MEMBER_ACTION: function (e) {
            let { channelId: t } = e;
            if (null == I.newMemberActions) return !1;
            I.newMemberActions = [
              ...I.newMemberActions.filter((e) => e.channelId !== t),
            ];
          },
          GUILD_SETTINGS_ONBOARDING_REORDER_NEW_MEMBER_ACTION: function (e) {
            let { actions: t } = e;
            I.newMemberActions = t;
          },
          GUILD_SETTINGS_ONBOARDING_UPDATE_RESOURCE_CHANNEL: function (e) {
            let { channelId: t, resourceChannel: n } = e;
            S(t, n);
          },
          GUILD_SETTINGS_ONBOARDING_ADD_RESOURCE_CHANNEL: function (e) {
            var t;
            let { resourceChannel: n } = e;
            (I.resourceChannels = (
              null !== (t = I.resourceChannels) && void 0 !== t ? t : []
            ).filter((e) => e.channelId !== n.channelId)),
              (I.resourceChannels = [...I.resourceChannels, n]);
          },
          GUILD_SETTINGS_ONBOARDING_DELETE_RESOURCE_CHANNEL: function (e) {
            let { resourceChannelId: t } = e;
            if (null == I.resourceChannels) return !1;
            I.resourceChannels = [
              ...I.resourceChannels.filter((e) => e.channelId !== t),
            ];
          },
          GUILD_SETTINGS_ONBOARDING_REORDER_RESOURCE_CHANNEL: function (e) {
            let { resourceChannels: t } = e;
            I.resourceChannels = t;
          },
          GUILD_SETTINGS_ONBOARDING_DISMISS_RESOURCE_CHANNEL_SUGGESTION:
            function (e) {
              var t;
              let { guildId: n, channelIds: s } = e;
              T[n] = [...(null !== (t = T[n]) && void 0 !== t ? t : []), ...s];
            },
        }));
    },
    359191: function (e, t, n) {
      "use strict";
      n(47120);
      var s,
        a,
        i,
        r,
        l = n(442837),
        o = n(570140),
        c = n(45966),
        d = n(734893),
        u = n(999382),
        _ = n(392885),
        I = n(740903),
        E = n(889369),
        T = n(969632),
        m = n(208665),
        N = n(84658),
        S = n(142961),
        g = n(981631);
      let h = new Set(),
        C = N.PG.LANDING,
        x = null;
      function p(e) {
        let { subsection: t } = e;
        if (u.Z.getGuildId() === x) return !1;
        (C = t === g.KsC.SERVER_GUIDE ? N.PG.HOME_SETTINGS : N.PG.LANDING),
          (x = u.Z.getGuildId());
      }
      class R extends (s = l.ZP.Store) {
        initialize() {
          this.waitFor(c.Z, E.Z, m.Z, T.Z, _.Z),
            this.syncWith([c.Z, E.Z, m.Z, T.Z, _.Z], () => !0);
        }
        isEducationUpsellDismissed(e) {
          return h.has(e);
        }
        getCurrentPage() {
          return C;
        }
        hasChanges() {
          if (null == x) return !1;
          let e = c.Z.isAdvancedMode(x);
          if (C === N.PG.DEFAULT_CHANNELS)
            return e ? E.Z.hasChanges() || m.Z.hasChanges() : E.Z.hasChanges();
          if (C === N.PG.CUSTOMIZATION_QUESTIONS) return m.Z.hasChanges();
          if (C === N.PG.HOME_SETTINGS) return T.Z.hasChanges();
          return !1;
        }
        hasConfiguredAnythingForCurrentStep() {
          if (null == x) return !1;
          if (C === N.PG.SAFETY_CHECK) return !0;
          if (C === N.PG.DEFAULT_CHANNELS)
            return E.Z.editedDefaultChannelIds.size > 0;
          if (C === N.PG.CUSTOMIZATION_QUESTIONS)
            return m.Z.editedOnboardingPrompts.length > 0;
          else if (C === N.PG.HOME_SETTINGS)
            return !(0, d.av)(T.Z.getSettings());
          return !1;
        }
        hasErrors() {
          return (
            C === N.PG.CUSTOMIZATION_QUESTIONS &&
            null != m.Z.errors.find((e) => null != e)
          );
        }
        showNotice() {
          if (null == x) return !1;
          if ((0, S.C)(x)) return this.hasChanges();
          let e = _.Z.getCurrentPage();
          return (
            (C !== N.PG.SAFETY_CHECK || e === I.u.OVERVIEW) &&
            null != C &&
            C !== N.PG.LANDING
          );
        }
        canCloseEarly() {
          return (
            null == x ||
            (!this.hasErrors() && (!(0, S.C)(x) || !this.hasChanges()))
          );
        }
      }
      (r = "GuildSettingsOnboardingStore"),
        (i = "displayName") in (a = R)
          ? Object.defineProperty(a, i, {
              value: r,
              enumerable: !0,
              configurable: !0,
              writable: !0,
            })
          : (a[i] = r),
        (t.Z = new R(o.Z, {
          GUILD_SETTINGS_INIT: p,
          GUILD_SETTINGS_SET_SECTION: p,
          GUILD_SETTINGS_ONBOARDING_STEP: function (e) {
            let { step: t } = e;
            C = t;
          },
          GUILD_SETTINGS_ONBOARDING_EDUCATION_UPSELL_DISMISSED: function (e) {
            let { upsellType: t } = e;
            h.add(t);
          },
        }));
    },
    868814: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return o;
        },
      }),
        n(653041);
      var s = n(442837),
        a = n(977258),
        i = n(958832),
        r = n(592125),
        l = n(981631);
      function o(e) {
        return (0, s.Wu)([i.Z, r.Z], () => {
          var t;
          let n = (
              null !== (t = i.Z.getTopChannelIds(e.id)) && void 0 !== t ? t : []
            )
              .map((e) => r.Z.getChannel(e))
              .filter((t) => null == t || t.id !== e.rulesChannelId),
            s = [],
            o = 0;
          return (
            n.forEach((e) => {
              if (e.type === l.d4z.GUILD_ANNOUNCEMENT) {
                if (o >= 2) return;
                o++;
              }
              s.length < 5 && !s.includes(e) && s.push(e);
            }),
            s.sort(
              (t, n) =>
                ((0, a.s)(e.id, n.id) ? 1 : 0) - ((0, a.s)(e.id, t.id) ? 1 : 0),
            ),
            s
          );
        });
      }
    },
    142961: function (e, t, n) {
      "use strict";
      n.d(t, {
        C: function () {
          return l;
        },
        Z: function () {
          return r;
        },
      });
      var s = n(442837),
        a = n(430824),
        i = n(981631);
      function r(e) {
        return (0, s.e7)([a.Z], () => {
          let t = a.Z.getGuild(e);
          return null != t && t.hasFeature(i.oNc.GUILD_ONBOARDING_EVER_ENABLED);
        });
      }
      function l(e) {
        let t = a.Z.getGuild(e);
        return null != t && t.hasFeature(i.oNc.GUILD_ONBOARDING_EVER_ENABLED);
      }
    },
    974513: function (e, t, n) {
      "use strict";
      n.d(t, {
        O4: function () {
          return T;
        },
        OA: function () {
          return E;
        },
        Wu: function () {
          return m;
        },
      }),
        n(47120);
      var s = n(735250),
        a = n(470079),
        i = n(399606),
        r = n(481060),
        l = n(312913),
        o = n(45966),
        c = n(637853),
        d = n(983135),
        u = n(208665),
        _ = n(290511),
        I = n(689938);
      function E(e, t) {
        let n = (0, i.Wu)([u.Z], () =>
          (0, c.kl)(e, t, u.Z.editedOnboardingPrompts),
        );
        return [
          (0, i.Wu)([u.Z], () =>
            (0, c.kl)(e, t, u.Z.editedOnboardingPrompts, c.V7),
          ),
          n,
        ];
      }
      function T(e) {
        let t = (0, i.e7)([o.Z], () => o.Z.isAdvancedMode(e)),
          [n, s] = (function (e) {
            let t = (0, i.Wu)([o.Z], () =>
              (0, c.kl)(
                e,
                o.Z.getDefaultChannelIds(e),
                o.Z.getOnboardingPrompts(e),
              ),
            );
            return [
              (0, i.Wu)([o.Z], () =>
                (0, c.kl)(
                  e,
                  o.Z.getDefaultChannelIds(e),
                  o.Z.getOnboardingPrompts(e),
                  c.V7,
                ),
              ),
              t,
            ];
          })(e);
        return !!t && s.length >= _.md && n.length >= _.X;
      }
      function m(e) {
        let { guildId: t, className: n } = e,
          c = (0, l.UQ)(t).advancedModeAllowed,
          u = (0, i.e7)([o.Z], () => o.Z.isAdvancedMode(t)),
          E = a.useCallback(() => {
            let e = u ? _.Un.ONBOARDING_DEFAULT : _.Un.ONBOARDING_ADVANCED;
            u
              ? (0, r.openModal)((n) =>
                  (0, s.jsx)(r.ConfirmModal, {
                    header: I.Z.Messages.ONBOARDING_DEFAULT_MODE_HEADER,
                    confirmText: I.Z.Messages.DISABLE,
                    cancelText: I.Z.Messages.CANCEL,
                    confirmButtonColor: r.Button.Colors.BRAND,
                    onConfirm: () => (0, d.Ts)(t, e),
                    ...n,
                    children: (0, s.jsx)(r.Text, {
                      variant: "text-md/normal",
                      children:
                        I.Z.Messages.ONBOARDING_DEFAULT_MODE_DESCRIPTION,
                    }),
                  }),
                )
              : (0, r.openModal)((n) =>
                  (0, s.jsx)(r.ConfirmModal, {
                    header: I.Z.Messages.ONBOARDING_ADVANCED_MODE_HEADER,
                    confirmText: I.Z.Messages.ONBOARDING_ADVANCED_MODE_ENABLE,
                    cancelText: I.Z.Messages.CANCEL,
                    confirmButtonColor: r.Button.Colors.BRAND,
                    onConfirm: () => (0, d.Ts)(t, e),
                    ...n,
                    children: (0, s.jsx)(r.Text, {
                      variant: "text-md/normal",
                      children:
                        I.Z.Messages.ONBOARDING_ADVANCED_MODE_DESCRIPTION,
                    }),
                  }),
                );
          }, [t, u]);
        return c
          ? (0, s.jsx)("div", {
              className: n,
              children: (0, s.jsx)(r.Anchor, {
                onClick: E,
                children: (0, s.jsx)(r.Text, {
                  variant: "text-sm/medium",
                  color: "text-link",
                  children: u
                    ? I.Z.Messages.ONBOARDING_DEFAULT_MODE_TOGGLE
                    : I.Z.Messages.ONBOARDING_ADVANCED_MODE_TOGGLE,
                }),
              }),
            })
          : null;
      }
    },
    2348: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return L;
        },
      }),
        n(653041);
      var s = n(735250),
        a = n(470079),
        i = n(120356),
        r = n.n(i),
        l = n(692547),
        o = n(481060),
        c = n(239091),
        d = n(111028),
        u = n(977258),
        _ = n(637853),
        I = n(473403),
        E = n(216306),
        T = n(743475),
        m = n(827907),
        N = n(868814),
        S = n(981631),
        g = n(689938),
        h = n(697913);
      function C(e) {
        let { guild: t, channel: a } = e,
          i = (0, m.Mf)(a.id);
        return "null" === a.id
          ? (0, s.jsx)("div", {
              className: r()(h.categoryRow, h.uncategorized),
              children: (0, s.jsx)(o.Text, {
                className: h.categoryText,
                color: "text-muted",
                variant: "text-xs/semibold",
                lineClamp: 1,
                children: a.name,
              }),
            })
          : (0, s.jsxs)(o.Clickable, {
              className: r()(h.categoryRow, {
                [h.uncategorized]: "null" === a.id,
              }),
              onContextMenu: (e) => {
                (0, c.jW)(e, async () => {
                  let { default: e } = await Promise.all([
                    n.e("39285"),
                    n.e("8965"),
                    n.e("44568"),
                  ]).then(n.bind(n, 139035));
                  return (n) => (0, s.jsx)(e, { ...n, channel: a, guild: t });
                });
              },
              onClick: (e) => (
                e.stopPropagation(),
                (0, u.s)(t.id, a.id)
                  ? (0, T.pt)(a.id)
                  : (0, o.openModalLazy)(async () => {
                      let { default: e } = await n
                        .e("35641")
                        .then(n.bind(n, 589279));
                      return (n) =>
                        (0, s.jsx)(e, {
                          ...n,
                          guildId: t.id,
                          startingChannelId: a.id,
                        });
                    }),
                !0
              ),
              children: [
                (0, s.jsx)(o.Text, {
                  className: h.categoryText,
                  color: "text-muted",
                  variant: "text-xs/semibold",
                  lineClamp: 1,
                  children: a.name,
                }),
                (0, s.jsx)(o.Checkbox, {
                  "aria-checked": i,
                  value: i,
                  type: o.Checkbox.Types.INVERTED,
                  className: h.checkbox,
                  displayOnly: !0,
                }),
              ],
            });
      }
      let x = a.memo(function () {
          return (0, s.jsx)("div", { className: h.separator });
        }),
        p = a.memo(function (e) {
          let { index: t } = e;
          return (0, s.jsx)(
            o.Text,
            {
              variant: "text-xs/normal",
              className: h.subtitleSeparator,
              children: "\xb7",
            },
            "separator-".concat(t),
          );
        }),
        R = a.memo(function (e) {
          let {
              channel: t,
              category: a,
              guild: i,
              isFirstChannel: E,
              isLastChannel: C,
              tooltipDirection: R = "right",
            } = e,
            L = (0, m.Mf)(t.id, a.id),
            f = (0, m.t4)(t.id, a.id),
            O = (0, m.EH)(t.id, a.id),
            A = (0, m.lL)(i.id, a.id),
            M = null != (0, N.Z)(i).find((e) => e.id === t.id),
            D = (0, _.mn)(t.id),
            v = (e) => {
              if (!f)
                return (
                  e.stopPropagation(),
                  (0, u.s)(i.id, t.id)
                    ? (0, T.pt)(t.id)
                    : (0, o.openModalLazy)(async () => {
                        let { default: e } = await n
                          .e("35641")
                          .then(n.bind(n, 589279));
                        return (n) =>
                          (0, s.jsx)(e, {
                            ...n,
                            guildId: i.id,
                            startingChannelId: t.id,
                          });
                      }),
                  !0
                );
            },
            j = (e) => {
              t.isGuildVocal()
                ? (0, c.jW)(e, async () => {
                    let { default: e } = await Promise.all([
                      n.e("79695"),
                      n.e("53115"),
                      n.e("39285"),
                      n.e("91625"),
                      n.e("18320"),
                      n.e("83331"),
                      n.e("43557"),
                    ]).then(n.bind(n, 213202));
                    return (n) => (0, s.jsx)(e, { ...n, channel: t, guild: i });
                  })
                : (0, c.jW)(e, async () => {
                    let { default: e } = await Promise.all([
                      n.e("50506"),
                      n.e("89350"),
                      n.e("11438"),
                      n.e("79695"),
                      n.e("13351"),
                      n.e("53115"),
                      n.e("7590"),
                      n.e("64838"),
                      n.e("20399"),
                      n.e("39285"),
                      n.e("67588"),
                      n.e("47321"),
                      n.e("28128"),
                      n.e("37220"),
                      n.e("91625"),
                      n.e("82158"),
                      n.e("91315"),
                      n.e("18320"),
                      n.e("31874"),
                      n.e("35639"),
                    ]).then(n.bind(n, 373651));
                    return (n) => (0, s.jsx)(e, { ...n, channel: t, guild: i });
                  });
            };
          return (0, s.jsxs)(s.Fragment, {
            children: [
              (0, s.jsx)(o.Tooltip, {
                text: null != O ? O : A,
                delay: 500,
                position: R,
                children: (e) =>
                  (0, s.jsxs)(o.Clickable, {
                    className: r()(h.channelRow, {
                      [h.firstChannel]: E,
                      [h.lastChannel]: C,
                      [h.disabled]: f,
                    }),
                    ...e,
                    onClick: v,
                    onContextMenu: j,
                    children: [
                      (0, s.jsx)("div", {
                        className: h.channelInfo,
                        children: (0, s.jsxs)("div", {
                          className: h.channelName,
                          children: [
                            (0, s.jsx)(I._, { channel: t, guild: i }),
                            (0, s.jsx)(d.Z, {
                              className: h.__invalid_name,
                              children: (0, s.jsx)(o.Text, {
                                className: h.channelText,
                                variant: "text-md/medium",
                                lineClamp: 1,
                                color: f ? "text-muted" : "text-normal",
                                children: t.name,
                              }),
                            }),
                            M
                              ? (0, s.jsxs)(s.Fragment, {
                                  children: [
                                    (0, s.jsx)(p, { index: 0 }),
                                    (0, s.jsx)(o.Text, {
                                      variant: "text-xs/medium",
                                      className: h.channelSubtitle,
                                      color: "text-brand",
                                      children: g.Z.Messages.CHANNEL_POPULAR,
                                    }),
                                  ],
                                })
                              : null,
                          ],
                        }),
                      }),
                      (0, s.jsx)("div", {
                        className: h.channelActions,
                        children: (0, u.s)(t.guild_id, t.id)
                          ? (0, s.jsx)(o.Checkbox, {
                              "aria-checked": L,
                              value: L,
                              type: o.Checkbox.Types.INVERTED,
                              disabled: f,
                              color: D
                                ? l.Z.colors.TEXT_BRAND.css
                                : l.Z.colors.BUTTON_SECONDARY_BACKGROUND.css,
                              innerClassName: h.checkboxInner,
                              displayOnly: !0,
                            })
                          : (0, s.jsxs)(o.Button, {
                              look: o.Button.Looks.OUTLINED,
                              color: o.Button.Colors.PRIMARY,
                              className: h.lockedPill,
                              innerClassName: h.lockedPillInner,
                              onClick: S.dG4,
                              children: [
                                (0, s.jsx)(o.LockIcon, {
                                  size: "xs",
                                  color: "currentColor",
                                }),
                                (0, s.jsx)(o.Text, {
                                  variant: "text-sm/medium",
                                  color: "none",
                                  children: g.Z.Messages.UNLOCK,
                                }),
                              ],
                            }),
                      }),
                    ],
                  }),
              }),
              !C && (0, s.jsx)(x, {}),
            ],
          });
        });
      function L(e) {
        let { categories: t, guild: n, className: i, hasSidebar: r } = e,
          l = a.useCallback(
            (e) => {
              let a = t._categories[e];
              return (0, s.jsx)(
                C,
                { channel: a.channel, guild: n },
                a.channel.id,
              );
            },
            [t, n],
          ),
          o = a.useCallback(
            (e, a) => {
              let i = t._categories[e],
                l = t[i.channel.id][a];
              return null == l
                ? null
                : (0, s.jsx)(
                    R,
                    {
                      category: i.channel,
                      channel: l.channel,
                      guild: n,
                      isFirstChannel: 0 === a,
                      isLastChannel: t[i.channel.id].length - 1 === a,
                      tooltipDirection: r ? "right" : "top",
                    },
                    l.channel.id,
                  );
            },
            [t, n, r],
          ),
          c = (0, E.tn)(n.id, t, 64);
        return (0, s.jsx)("div", {
          className: i,
          children: c.map((e, t) => {
            let n = l(t),
              a = [],
              i = e.rowCount;
            if (0 === i) return null;
            for (let e = 0; e < i; e++) a.push(o(t, e));
            return (0, s.jsxs)(s.Fragment, { children: [n, a] });
          }),
        });
      }
    },
    353890: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return N;
        },
      });
      var s = n(735250);
      n(470079);
      var a = n(120356),
        i = n.n(a),
        r = n(442837),
        l = n(481060),
        o = n(471445),
        c = n(977258),
        d = n(637853),
        u = n(816436),
        _ = n(259580),
        I = n(889369),
        E = n(838324),
        T = n(689938),
        m = n(648637);
      function N(e) {
        let { guild: t, scrollToQuestions: n } = e,
          a = (0, r.e7)([I.Z], () => I.Z.editedDefaultChannelIds),
          i = (0, u.b)(t.id, a).filter(
            (e) => e.isCategory() || (0, c.s)(e.guild_id, e.id),
          );
        return (0, s.jsxs)("div", {
          className: m.container,
          children: [
            (0, s.jsx)("div", {
              className: m.header,
              children: (0, s.jsx)(E.Z, {
                guildId: t.id,
                scrollToQuestions: n,
              }),
            }),
            (0, s.jsxs)("div", {
              className: m.channelList,
              children: [
                (0, s.jsx)(h, {}),
                0 === i.length && (0, s.jsx)(S, {}),
                (0, s.jsx)(g, { channels: i }),
              ],
            }),
          ],
        });
      }
      function S() {
        return (0, s.jsxs)("div", {
          className: m.emptyState,
          children: [
            (0, s.jsx)("div", {
              className: m.emptyStateIcon,
              children: (0, s.jsx)(l.TextIcon, {
                size: "md",
                color: "currentColor",
              }),
            }),
            (0, s.jsx)(l.Text, {
              className: m.channelName,
              variant: "text-md/normal",
              color: "text-muted",
              children: T.Z.Messages.DEFAULT_CHANNELS_PREVIEW_EMPTY_STATE,
            }),
          ],
        });
      }
      function g(e) {
        let { channels: t } = e;
        return (0, s.jsx)(s.Fragment, {
          children: t.map((e) =>
            e.isCategory()
              ? (0, s.jsx)(C, { label: e.name }, e.id)
              : (0, s.jsx)(x, { channel: e }, e.id),
          ),
        });
      }
      function h() {
        return (0, s.jsx)("div", { className: m.divider });
      }
      function C(e) {
        let { label: t } = e;
        return (0, s.jsxs)("div", {
          className: m.category,
          children: [
            (0, s.jsx)(_.Z, {
              className: m.caret,
              width: 12,
              height: 12,
              direction: _.Z.Directions.DOWN,
            }),
            (0, s.jsx)(l.Text, {
              variant: "text-xs/semibold",
              color: "text-muted",
              lineClamp: 1,
              children: t,
            }),
          ],
        });
      }
      function x(e) {
        var t;
        let { channel: n } = e,
          a = (0, d.iF)(n),
          r = null !== (t = (0, o.KS)(n)) && void 0 !== t ? t : l.TextIcon;
        return (0, s.jsxs)("div", {
          className: m.channel,
          children: [
            (0, s.jsx)(r, {
              className: m.channelIcon,
              size: "xs",
              color: "currentColor",
            }),
            (0, s.jsx)(l.Text, {
              className: m.channelName,
              variant: "text-md/normal",
              color: "text-muted",
              lineClamp: 1,
              children: n.name,
            }),
            (0, s.jsx)("div", {
              className: i()({ [m.chattableIndicator]: a }),
            }),
          ],
        });
      }
    },
    838324: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return E;
        },
      }),
        n(47120);
      var s = n(735250);
      n(470079);
      var a = n(442837),
        i = n(692547),
        r = n(481060),
        l = n(45966),
        o = n(637853),
        c = n(889369),
        d = n(974513),
        u = n(290511),
        _ = n(689938),
        I = n(435359);
      function E(e) {
        let { guildId: t, scrollToQuestions: n } = e,
          E = (0, a.e7)([l.Z], () => l.Z.isAdvancedMode(t)),
          T = (0, a.e7)([c.Z], () => c.Z.editedDefaultChannelIds),
          [m, N] = (0, o.VF)(t, T),
          [S, g] = (0, d.OA)(t, [...T]),
          h = E ? g.length : N.length,
          C = E ? S.length : m.length,
          x = h < u.md,
          p = C >= u.X,
          R = g.length - N.length,
          L = (0, s.jsx)(r.CircleCheckIcon, {
            size: "sm",
            color: i.Z.unsafe_rawColors.BRAND_500.css,
            secondaryColor: i.Z.unsafe_rawColors.WHITE_100.css,
            className: I.icon,
          }),
          f = (0, s.jsx)(r.CircleXIcon, {
            size: "sm",
            className: I.icon,
            color: i.Z.colors.WHITE.css,
            secondaryColor: i.Z.colors.BACKGROUND_ACCENT.css,
          }),
          O = [
            (Math.min(u.X, C) / u.md) * 100,
            (Math.min(u.md, h) / u.md) * 100,
          ],
          A =
            !x && p
              ? [i.Z.colors.TEXT_POSITIVE.css, i.Z.colors.TEXT_POSITIVE.css]
              : [i.Z.colors.TEXT_BRAND.css, i.Z.colors.TEXT_MUTED.css];
        return (0, s.jsxs)("div", {
          className: I.container,
          children: [
            (0, s.jsxs)("div", {
              className: I.header,
              children: [
                (0, s.jsx)(r.Text, {
                  variant: "text-xs/bold",
                  color: "text-brand",
                  children:
                    _.Z.Messages.DEFAULT_CHANNELS_CHATTABLE_COUNT.format({
                      count: C,
                    }),
                }),
                (0, s.jsx)(r.Text, {
                  variant: "text-xs/bold",
                  color: "text-muted",
                  children: _.Z.Messages.DEFAULT_CHANNELS_TOTAL_COUNT.format({
                    count: h,
                  }),
                }),
              ],
            }),
            (0, s.jsx)(r.StackedProgress, {
              foregroundColors: A,
              percents: O,
              size: r.StackedProgress.Sizes.XSMALL,
            }),
            (0, s.jsxs)("div", {
              className: I.requiredItem,
              children: [
                x ? f : L,
                (0, s.jsx)(r.Text, {
                  variant: "text-xs/normal",
                  color: "text-muted",
                  children:
                    _.Z.Messages.GUILD_ONBOARDING_DEFAULT_CHANNELS_MIN_CHANNELS.format(
                      { count: u.md },
                    ),
                }),
              ],
            }),
            (0, s.jsxs)("div", {
              className: I.requiredItem,
              children: [
                p ? L : f,
                (0, s.jsx)(r.Text, {
                  variant: "text-xs/normal",
                  color: "text-muted",
                  children:
                    _.Z.Messages.GUILD_ONBOARDING_DEFAULT_CHANNELS_MIN_CHATTABLE_CHANNELS.format(
                      { count: u.X },
                    ),
                }),
              ],
            }),
            E &&
              (0, s.jsxs)(s.Fragment, {
                children: [
                  (0, s.jsxs)("div", {
                    className: I.requiredItem,
                    children: [
                      (0, s.jsx)(r.CircleInformationIcon, {
                        size: "sm",
                        color: i.Z.colors.WHITE.css,
                        secondaryColor: i.Z.colors.BACKGROUND_ACCENT.css,
                        className: I.icon,
                      }),
                      (0, s.jsx)(r.Text, {
                        variant: "text-xs/normal",
                        color: "text-muted",
                        children:
                          _.Z.Messages.DEFAULT_CHANNELS_ADVANCED_EXPLAINER,
                      }),
                    ],
                  }),
                  (0, s.jsxs)("div", {
                    className: I.requiredItem,
                    children: [
                      (0, s.jsx)(r.CircleInformationIcon, {
                        size: "sm",
                        color: i.Z.colors.WHITE.css,
                        secondaryColor: i.Z.colors.BACKGROUND_ACCENT.css,
                        className: I.icon,
                      }),
                      (0, s.jsx)(r.Text, {
                        variant: "text-xs/normal",
                        color: "text-muted",
                        children:
                          _.Z.Messages.DEFAULT_CHANNELS_PREVIEW_ADDITIONAL.format(
                            {
                              count: R,
                              prejoinHook: (e) =>
                                (0, s.jsx)(r.Anchor, {
                                  onClick: n,
                                  children: (0, s.jsx)(r.Text, {
                                    tag: "span",
                                    variant: "text-xs/normal",
                                    color: "text-link",
                                    children: e,
                                  }),
                                }),
                            },
                          ),
                      }),
                    ],
                  }),
                ],
              }),
          ],
        });
      }
    },
    232764: function (e, t, n) {
      "use strict";
      n.d(t, {
        Io: function () {
          return c;
        },
        cZ: function () {
          return d;
        },
        g6: function () {
          return u;
        },
        j7: function () {
          return o;
        },
      });
      var s = n(735250);
      n(470079);
      var a = n(481060),
        i = n(983135),
        r = n(689938),
        l = n(878443);
      function o() {
        return (0, s.jsxs)("div", {
          className: l.container,
          children: [
            (0, s.jsx)(a.Text, {
              variant: "text-xs/semibold",
              color: "header-secondary",
              className: l.stepHeader,
              children: r.Z.Messages.STEP_NUMBER.format({ number: 1 }),
            }),
            (0, s.jsx)(a.Heading, {
              variant: "heading-lg/semibold",
              color: "header-primary",
              className: l.header,
              children: r.Z.Messages.GUILD_ONBOARDING_UPSELL_SAFETY_TITLE,
            }),
            (0, s.jsx)(a.Text, {
              variant: "text-sm/normal",
              color: "header-secondary",
              children:
                r.Z.Messages.GUILD_ONBOARDING_UPSELL_SAFETY_TITLE_TOOLTIP,
            }),
            (0, s.jsx)(a.Button, {
              className: l.button,
              onClick: () => (0, i.Nb)("Safety Check"),
              children:
                r.Z.Messages.GUILD_ONBOARDING_SETUP_EDUCATION_OVERVIEW_CTA,
            }),
          ],
        });
      }
      function c() {
        return (0, s.jsxs)("div", {
          className: l.container,
          children: [
            (0, s.jsx)(a.Text, {
              variant: "text-xs/semibold",
              color: "header-secondary",
              className: l.stepHeader,
              children: r.Z.Messages.STEP_NUMBER.format({ number: 2 }),
            }),
            (0, s.jsx)(a.Heading, {
              variant: "heading-lg/semibold",
              color: "header-primary",
              className: l.header,
              children:
                r.Z.Messages
                  .GUILD_ONBOARDING_SETUP_EDUCATION_DEFAULT_CHANNELS_TITLE,
            }),
            (0, s.jsx)(a.Text, {
              variant: "text-sm/normal",
              color: "header-secondary",
              children:
                r.Z.Messages
                  .GUILD_ONBOARDING_SETUP_EDUCATION_DEFAULT_CHANNELS_SUBTITLE,
            }),
            (0, s.jsx)(a.Button, {
              className: l.button,
              onClick: () => (0, i.Nb)("Default Channels"),
              children:
                r.Z.Messages.GUILD_ONBOARDING_SETUP_EDUCATION_OVERVIEW_CTA,
            }),
          ],
        });
      }
      function d() {
        return (0, s.jsxs)("div", {
          className: l.container,
          children: [
            (0, s.jsx)(a.Text, {
              variant: "text-xs/semibold",
              color: "header-secondary",
              className: l.stepHeader,
              children: r.Z.Messages.STEP_NUMBER.format({ number: 3 }),
            }),
            (0, s.jsx)(a.Heading, {
              variant: "heading-lg/semibold",
              color: "header-primary",
              className: l.header,
              children:
                r.Z.Messages
                  .GUILD_ONBOARDING_SETUP_EDUCATION_CUSTOMIZATION_QUESTIONS_TITLE,
            }),
            (0, s.jsx)(a.Text, {
              variant: "text-sm/normal",
              color: "header-secondary",
              children:
                r.Z.Messages
                  .GUILD_ONBOARDING_SETUP_EDUCATION_CUSTOMIZATION_QUESTIONS_SUBTITLE,
            }),
            (0, s.jsx)(a.Button, {
              className: l.button,
              onClick: () => (0, i.Nb)("Customization Questions"),
              children:
                r.Z.Messages.GUILD_ONBOARDING_SETUP_EDUCATION_OVERVIEW_CTA,
            }),
          ],
        });
      }
      function u() {
        return (0, s.jsxs)("div", {
          className: l.container,
          children: [
            (0, s.jsx)(a.Text, {
              variant: "text-xs/semibold",
              color: "header-secondary",
              className: l.stepHeader,
              children: r.Z.Messages.STEP_NUMBER.format({ number: 4 }),
            }),
            (0, s.jsx)(a.Heading, {
              variant: "heading-lg/semibold",
              color: "header-primary",
              className: l.header,
              children:
                r.Z.Messages.GUILD_ONBOARDING_SETUP_EDUCATION_HOME_TITLE,
            }),
            (0, s.jsx)(a.Text, {
              variant: "text-sm/normal",
              color: "header-secondary",
              children:
                r.Z.Messages.GUILD_ONBOARDING_SETUP_EDUCATION_HOME_SUBTITLE,
            }),
            (0, s.jsx)(a.Button, {
              className: l.button,
              onClick: () => (0, i.Nb)("Home Settings"),
              children:
                r.Z.Messages.GUILD_ONBOARDING_SETUP_EDUCATION_OVERVIEW_CTA,
            }),
          ],
        });
      }
    },
    729311: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return Z;
        },
        j: function () {
          return b;
        },
      }),
        n(47120);
      var s = n(735250),
        a = n(470079),
        i = n(120356),
        r = n.n(i),
        l = n(442837),
        o = n(481060),
        c = n(852860),
        d = n(111028),
        u = n(977258),
        _ = n(45966),
        I = n(473403),
        E = n(454585),
        T = n(323502),
        m = n(958832),
        N = n(324067),
        S = n(984933),
        g = n(259580),
        h = n(999382),
        C = n(743475),
        x = n(889369),
        p = n(570961),
        R = n(208665),
        L = n(868814),
        f = n(974513),
        O = n(2348),
        A = n(353890),
        M = n(716130),
        D = n(689938),
        v = n(818304);
      function j(e) {
        let { guild: t } = e,
          i = (0, l.e7)([_.Z], () => _.Z.getEnabled(t.id)),
          r = (0, l.e7)([m.Z], () => m.Z.hasFetched(t.id)),
          c = (0, L.Z)(t),
          N = (0, l.e7)([x.Z], () => x.Z.editedDefaultChannelIds),
          S = c.filter((e) => !N.has(e.id)),
          [g, h] = a.useState(!1);
        a.useEffect(() => {
          !r && !i && (0, T.S)(t.id);
        }, [t.id, r, i]);
        let p = (e) => {
          (0, o.openModalLazy)(async () => {
            let { default: a } = await n.e("35641").then(n.bind(n, 589279));
            return (n) =>
              (0, s.jsx)(a, { ...n, guildId: t.id, startingChannelId: e });
          });
        };
        return g || 0 === S.length
          ? null
          : (0, s.jsxs)("div", {
              className: v.recommendations,
              children: [
                (0, s.jsx)(o.Text, {
                  variant: "text-md/medium",
                  color: "header-primary",
                  children: D.Z.Messages.CHANNEL_RECOMMENDED,
                }),
                (0, s.jsxs)("div", {
                  className: v.recsSubheader,
                  children: [
                    (0, s.jsx)(o.Text, {
                      variant: "text-xs/normal",
                      color: "text-muted",
                      children:
                        D.Z.Messages
                          .GUILD_ONBOARDING_DEFAULT_CHANNELS_RECOMMENDED_DESCRIPTION,
                    }),
                    (0, s.jsxs)(o.Clickable, {
                      className: v.dismissAll,
                      onClick: () => h(!0),
                      children: [
                        (0, s.jsx)(o.CheckmarkLargeIcon, {
                          size: "xxs",
                          color: "currentColor",
                          className: v.checkmark,
                        }),
                        (0, s.jsx)(o.Text, {
                          className: v.dismissAllText,
                          variant: "text-xs/medium",
                          color: "text-brand",
                          children:
                            D.Z.Messages
                              .GUILD_ONBOARDING_DEFAULT_CHANNELS_RECOMMENDED_DISMISS_ALL,
                        }),
                      ],
                    }),
                  ],
                }),
                (0, s.jsx)("div", {
                  className: v.recommendedChannels,
                  children: S.map((e, n) =>
                    (0, s.jsxs)(s.Fragment, {
                      children: [
                        (0, s.jsxs)("div", {
                          className: v.channelRow,
                          children: [
                            (0, s.jsxs)("div", {
                              className: v.channelInfo,
                              children: [
                                (0, s.jsxs)("div", {
                                  className: v.channelName,
                                  children: [
                                    (0, s.jsx)(I._, { channel: e, guild: t }),
                                    (0, s.jsx)(d.Z, {
                                      className: v.__invalid_name,
                                      children: (0, s.jsx)(o.Text, {
                                        className: v.__invalid_channelText,
                                        variant: "text-md/medium",
                                        lineClamp: 1,
                                        color: "text-normal",
                                        children: e.name,
                                      }),
                                    }),
                                  ],
                                }),
                                null != e.topic && e.topic.length > 0
                                  ? (0, s.jsx)(
                                      d.Z,
                                      {
                                        children: (0, s.jsx)(o.Text, {
                                          className: v.topic,
                                          variant: "text-xs/normal",
                                          children: E.Z.parseTopic(
                                            e.topic,
                                            !0,
                                            { channelId: e.id },
                                          ),
                                        }),
                                      },
                                      "topic",
                                    )
                                  : null,
                              ],
                            }),
                            (0, u.s)(t.id, e.id)
                              ? (0, s.jsx)(o.Button, {
                                  color: o.Button.Colors.BRAND,
                                  size: o.Button.Sizes.SMALL,
                                  className: v.addChannelCTA,
                                  onClick: () => (0, C.pt)(e.id),
                                  children: D.Z.Messages.ADD,
                                })
                              : (0, s.jsxs)(o.Button, {
                                  look: o.Button.Looks.OUTLINED,
                                  color: o.Button.Colors.PRIMARY,
                                  className: v.lockedPill,
                                  innerClassName: v.lockedPillInner,
                                  onClick: () => p(e.id),
                                  children: [
                                    (0, s.jsx)(o.LockIcon, {
                                      size: "xs",
                                      color: "currentColor",
                                    }),
                                    (0, s.jsx)(o.Text, {
                                      variant: "text-sm/medium",
                                      children: D.Z.Messages.UNLOCK,
                                    }),
                                  ],
                                }),
                          ],
                        }),
                        n < S.length - 1
                          ? (0, s.jsx)("div", { className: v.separator })
                          : null,
                      ],
                    }),
                  ),
                }),
                (0, s.jsx)("div", { className: v.largeSeparator }),
              ],
            });
      }
      function Z(e) {
        let { saveOnClose: t = !1 } = e,
          n = (0, l.e7)([h.Z], () => h.Z.getGuild()),
          i = (0, l.e7)([_.Z], () => _.Z.isLoading()),
          c = (0, l.e7)([S.ZP], () =>
            S.ZP.getChannels(null == n ? void 0 : n.id),
          ),
          d = (0, l.e7)([N.Z], () =>
            N.Z.getCategories(null == n ? void 0 : n.id),
          ),
          u = (0, l.e7)([R.Z], () => R.Z.advancedMode),
          I = a.useRef(null),
          [E, T] = a.useState(!1);
        return (a.useEffect(() => {
          if (t)
            return () => {
              null != n &&
                (0, C.DO)(n)
                  .then(() => {
                    u &&
                      (0, p.rS)(n, { ignoreDefaultPrompt: !0 }).catch(() => {});
                  })
                  .catch(() => {});
            };
        }, [t, u]),
        null == n)
          ? null
          : i
            ? (0, s.jsx)(o.Spinner, {})
            : (0, s.jsxs)("div", {
                className: v.columns,
                children: [
                  (0, s.jsxs)("div", {
                    className: v.channelBrowser,
                    children: [
                      (0, s.jsx)(o.Clickable, {
                        className: v.collapseButton,
                        onClick: () => T((e) => !e),
                        children: (0, s.jsx)(g.Z, {
                          direction: E
                            ? g.Z.Directions.DOWN
                            : g.Z.Directions.UP,
                          height: 16,
                          width: 16,
                        }),
                      }),
                      (0, s.jsx)(o.Heading, {
                        className: v.header,
                        variant: "heading-lg/extrabold",
                        children: D.Z.Messages.GUILD_SETTINGS_DEFAULT_CHANNELS,
                      }),
                      (0, s.jsx)(o.Text, {
                        variant: "text-sm/normal",
                        color: "header-secondary",
                        children:
                          D.Z.Messages
                            .GUILD_SETTINGS_DEFAULT_CHANNELS_SUBHEADER,
                      }),
                      (0, s.jsx)(f.Wu, {
                        className: v.advancedModeToggle,
                        guildId: n.id,
                      }),
                      E
                        ? null
                        : (0, s.jsxs)(s.Fragment, {
                            children: [
                              (0, s.jsx)(j, { guild: n }),
                              (0, s.jsx)(O.Z, {
                                className: r()(v.channelBrowserOuter),
                                guild: n,
                                categories: d,
                                channels: c,
                                hasSidebar: !1,
                              }),
                            ],
                          }),
                      u &&
                        (0, s.jsxs)(s.Fragment, {
                          children: [
                            (0, s.jsx)("div", { className: v.largeSeparator }),
                            (0, s.jsx)(o.Heading, {
                              className: v.prejoinHeader,
                              variant: "heading-lg/extrabold",
                              children:
                                D.Z.Messages
                                  .GUILD_SETTINGS_PRE_JOIN_QUESTIONS_HEADER,
                            }),
                            (0, s.jsx)(o.Text, {
                              className: v.prejoinSubHeader,
                              variant: "text-sm/normal",
                              color: "header-secondary",
                              children:
                                D.Z.Messages
                                  .GUILD_SETTINGS_PRE_JOIN_QUESTIONS_SUBHEADER,
                            }),
                            (0, s.jsx)("div", {
                              ref: I,
                              className: v.advancedModeQuestions,
                              children: (0, s.jsx)(M.Z, {
                                guildId: n.id,
                                prejoinOnly: !0,
                                includeCount: !0,
                                singleColumn: !0,
                              }),
                            }),
                          ],
                        }),
                    ],
                  }),
                  (0, s.jsx)(A.Z, {
                    guild: n,
                    scrollToQuestions: () => {
                      null != I.current &&
                        I.current.scrollIntoView({ behavior: "smooth" });
                    },
                  }),
                ],
              });
      }
      function b() {
        let e = (0, l.e7)([h.Z], () => h.Z.getProps().guild),
          t = (0, l.e7)([x.Z], () => x.Z.submitting),
          n = (0, l.e7)([R.Z], () => R.Z.advancedMode);
        return null == e
          ? null
          : (0, s.jsx)(c.Z, {
              onSave: () => {
                (0, C.DO)(e)
                  .then(() => {
                    n &&
                      (0, p.rS)(e, { ignoreDefaultPrompt: !0 }).catch(() => {});
                  })
                  .catch(() => {});
              },
              onReset: C.BG,
              submitting: t,
              onSaveText: D.Z.Messages.SAVE,
            });
      }
    },
    850864: function (e, t, n) {
      "use strict";
      n.d(t, {
        T: function () {
          return ei;
        },
        Z: function () {
          return es;
        },
      }),
        n(47120);
      var s = n(735250),
        a = n(470079),
        i = n(120356),
        r = n.n(i),
        l = n(399606),
        o = n(780384),
        c = n(481060),
        d = n(852860),
        u = n(367907),
        _ = n(471445),
        I = n(659388),
        E = n(710344),
        T = n(807582),
        m = n(26323),
        N = n(307707),
        S = n(734893),
        g = n(305762),
        h = n(150512),
        C = n(516129),
        x = n(813197),
        p = n(210887),
        R = n(314897),
        L = n(592125),
        f = n(984933),
        O = n(430824),
        A = n(709586),
        M = n(768581),
        D = n(700785),
        v = n(434404),
        j = n(999382),
        Z = n(8426),
        b = n(969632),
        U = n(535907),
        G = n(981631),
        P = n(30513),
        B = n(486324),
        y = n(200299),
        F = n(689938),
        k = n(812315),
        w = n(91716),
        H = n(470264),
        V = n(710043),
        Y = n(847950);
      function W(e) {
        let { guildId: t, welcomeMessage: i } = e,
          o = a.useCallback(() => {
            if (null != t)
              return (0, c.openModalLazy)(async () => {
                let { default: e } = await n.e("36371").then(n.bind(n, 893626));
                return (n) =>
                  (0, s.jsx)(e, {
                    ...n,
                    guildId: t,
                    welcomeMessage: i,
                    onSave: (e) => (0, Z._N)(e),
                  });
              });
          }, [t, i]),
          d = (0, l.e7)([R.default], () => R.default.getId());
        return (0, S.pw)(i)
          ? (0, s.jsx)(c.Button, {
              size: c.Button.Sizes.SMALL,
              onClick: o,
              children: (0, s.jsx)(c.Text, {
                variant: "text-sm/medium",
                children:
                  F.Z.Messages
                    .GUILD_SETTINGS_ONBOARDING_HOME_SETTINGS_SETUP_WELCOME,
              }),
            })
          : (0, s.jsxs)(c.Clickable, {
              className: k.editWelcomeSection,
              onClick: o,
              children: [
                (0, s.jsx)(h.Z, {
                  guildId: t,
                  welcomeMessage: {
                    authorIds: i.authorIds.length > 0 ? i.authorIds : [d],
                    message: i.message,
                  },
                }),
                (0, s.jsx)(c.Tooltip, {
                  text: F.Z.Messages.EDIT,
                  children: (e) =>
                    (0, s.jsxs)("div", {
                      ...e,
                      className: r()(
                        k.actionItemEditButton,
                        k.editWelcomeButton,
                      ),
                      children: [
                        (0, s.jsx)(c.PencilIcon, {
                          size: "md",
                          color: "currentColor",
                        }),
                        (0, s.jsx)(c.HiddenVisually, {
                          children: F.Z.Messages.EDIT,
                        }),
                      ],
                    }),
                }),
              ],
            });
      }
      function z(e) {
        var t, i, o, d, u;
        let {
            guildId: E,
            action: T,
            actionIndex: m,
            onChange: h,
            onDelete: C,
            onDragStart: x,
            onDragComplete: p,
            onDragReset: R,
          } = e,
          f = (0, l.e7)([L.Z], () => L.Z.getChannel(T.channelId)),
          A = (0, l.e7)([O.Z], () => O.Z.getGuild(E)),
          { customEmoji: D, unicodeEmoji: v } = (0, N.Z)(
            null === (t = T.emoji) || void 0 === t ? void 0 : t.id,
            null === (i = T.emoji) || void 0 === i ? void 0 : i.name,
          ),
          j = null == T.emoji || null != D || null != v,
          Z = M.ZP.getNewMemberActionIconURL({
            channelId: T.channelId,
            icon: T.icon,
          }),
          b = null;
        null != f && (0, S.kb)(f)
          ? !j &&
            (b =
              F.Z.Messages
                .GUILD_SETTINGS_ONBOARDING_HOME_SETTINGS_INVALID_ACTION_CHANNEL_EMOJI)
          : (b =
              F.Z.Messages
                .GUILD_SETTINGS_ONBOARDING_HOME_SETTINGS_INVALID_ACTION_CHANNEL);
        let {
            drag: U,
            dragSourcePosition: G,
            drop: P,
            setIsDraggable: B,
          } = (0, I.Z)({
            type: "NEW_MEMBER_ACTION",
            index: m,
            optionId: T.channelId,
            onDragStart: x,
            onDragComplete: p,
            onDragReset: R,
          }),
          y = a.useCallback(() => {
            if (null != E)
              return (0, c.openModalLazy)(async () => {
                let { default: e } = await n.e("14653").then(n.bind(n, 380716));
                return (t) =>
                  (0, s.jsx)(e, {
                    ...t,
                    guildId: E,
                    action: T,
                    onSave: (e, t, n) => h(m, e, t, n),
                    onDelete: () => C(m),
                  });
              });
          }, [E, T, m, h, C]);
        if (null == f || null == A) return null;
        let w = null !== (u = (0, _.KS)(f)) && void 0 !== u ? u : c.TextIcon;
        return (0, s.jsxs)("div", {
          className: r()(k.actionItemContainer),
          children: [
            (0, s.jsxs)("div", {
              className: r()(k.actionItem, {
                [k.dropIndicatorBefore]: null != G && m < G,
                [k.dropIndicatorAfter]: null != G && m > G,
                [k.actionItemError]: null != b,
              }),
              ref: (e) => U(P(e)),
              children: [
                (0, s.jsx)("div", {
                  className: k.dragContainer,
                  onMouseEnter: () => B(!0),
                  onMouseLeave: () => B(!1),
                  children: (0, s.jsx)(c.DragIcon, {
                    size: "xs",
                    color: "currentColor",
                    className: k.dragIcon,
                  }),
                }),
                null != Z
                  ? (0, s.jsx)("div", {
                      className: k.iconWrapper,
                      children: (0, s.jsx)("img", {
                        src: Z,
                        className: k.icon,
                        width: 48,
                        height: 48,
                        alt: "",
                        "aria-hidden": !0,
                      }),
                    })
                  : (0, s.jsx)("div", {
                      className: k.actionItemEmojiWrapper,
                      children: (0, s.jsx)(g.Z, {
                        emojiId:
                          null === (o = T.emoji) || void 0 === o
                            ? void 0
                            : o.id,
                        emojiName:
                          null === (d = T.emoji) || void 0 === d
                            ? void 0
                            : d.name,
                        size: g.R.MEDIUM,
                        defaultComponent: (0, s.jsx)(w, {}),
                      }),
                    }),
                (0, s.jsxs)("div", {
                  className: k.actionItemText,
                  children: [
                    (0, s.jsx)(c.Text, {
                      variant: "text-md/semibold",
                      color: "header-primary",
                      children: T.title,
                    }),
                    (0, s.jsx)(c.Text, {
                      variant: "text-xs/medium",
                      color: "header-secondary",
                      children: F.Z.Messages.NEW_MEMBER_ACTION_CHANNEL.format({
                        channelName: f.name,
                      }),
                    }),
                  ],
                }),
                (0, s.jsx)(c.Tooltip, {
                  text: F.Z.Messages.EDIT,
                  children: (e) =>
                    (0, s.jsxs)(c.Button, {
                      ...e,
                      className: k.actionItemEditButton,
                      innerClassName: k.actionItemEditButtonInner,
                      size: c.Button.Sizes.MIN,
                      onClick: y,
                      children: [
                        (0, s.jsx)(c.PencilIcon, {
                          size: "md",
                          color: "currentColor",
                        }),
                        (0, s.jsx)(c.HiddenVisually, {
                          children: F.Z.Messages.EDIT,
                        }),
                      ],
                    }),
                }),
              ],
            }),
            null != b &&
              (0, s.jsx)(c.Text, {
                variant: "text-xs/medium",
                color: "text-danger",
                children: b,
              }),
          ],
        });
      }
      function K(e) {
        let { guildId: t } = e,
          n = (0, l.Wu)([b.Z], () => {
            var e;
            return null !== (e = b.Z.getSettings().newMemberActions) &&
              void 0 !== e
              ? e
              : [];
          }),
          i = a.useCallback(
            (e, n) => {
              if (null == t) return;
              (0, Z.vR)(e);
              let s = b.Z.getSettings();
              if (null == s) return;
              let { channelId: a } = e;
              (0, Z.oo)(t, s, !0).then(() => {
                null != n && (0, Z.ad)(t, a, n, !0);
              });
            },
            [t],
          ),
          r = a.useCallback(
            (e, s, a, i) => {
              var r;
              if (null == t) return;
              let l =
                null === (r = n[e]) || void 0 === r ? void 0 : r.channelId;
              if (null == l) return;
              let o = b.Z.getSettings();
              null != o &&
                ((0, Z.el)(l, s),
                (0, Z.oo)(t, o, !0).then(() => {
                  (0, Z.ad)(t, l, a, i);
                }));
            },
            [n, t],
          ),
          o = a.useCallback(
            (e) => {
              var t;
              let s =
                null === (t = n[e]) || void 0 === t ? void 0 : t.channelId;
              null != s && (0, Z.Hr)(s);
            },
            [n],
          ),
          c = n.map((e) => ({ ...e, id: e.channelId })),
          d = a.useCallback(
            (e) => {
              if (null == t) return;
              (0, Z.hS)(e);
              let n = b.Z.getSettings();
              null != n && (0, Z.oo)(t, n, !0);
            },
            [t],
          ),
          {
            handleDragStart: u,
            handleDragReset: _,
            handleDragComplete: I,
          } = (0, E.Z)(c, d);
        return null == t
          ? null
          : (0, s.jsxs)("div", {
              className: k.section,
              children: [
                n.map((e, n) =>
                  (0, s.jsx)(
                    z,
                    {
                      guildId: t,
                      action: e,
                      actionIndex: n,
                      onChange: r,
                      onDelete: o,
                      onDragStart: u,
                      onDragReset: _,
                      onDragComplete: I,
                    },
                    e.channelId,
                  ),
                ),
                (0, s.jsx)(q, {}),
                n.length < S.O9 &&
                  (0, s.jsx)(X, { guildId: t, onAddAction: i }),
              ],
            });
      }
      function q() {
        return (0, s.jsx)("div", {
          className: k.actionItemContainer,
          children: (0, s.jsxs)("div", {
            className: k.actionItem,
            children: [
              (0, s.jsx)("div", {
                className: k.actionItemEmojiWrapper,
                children: (0, s.jsx)(c.BookCheckIcon, {
                  size: "custom",
                  color: "currentColor",
                  height: 20,
                  width: 22,
                }),
              }),
              (0, s.jsx)("div", {
                className: k.actionItemText,
                children: (0, s.jsx)(c.Text, {
                  variant: "text-md/semibold",
                  color: "header-primary",
                  children: F.Z.Messages.GUILD_SETTINGS_ONBOARDING_RULES_ACTION,
                }),
              }),
            ],
          }),
        });
      }
      function X(e) {
        let { guildId: t, onAddAction: i } = e,
          r = a.useCallback(() => {
            if (null != t)
              return (0, c.openModalLazy)(async () => {
                let { default: e } = await n.e("14653").then(n.bind(n, 380716));
                return (n) => (0, s.jsx)(e, { ...n, guildId: t, onSave: i });
              });
          }, [t, i]);
        return (0, s.jsxs)(c.Clickable, {
          className: k.addActionItem,
          onClick: r,
          children: [
            (0, s.jsx)(c.CirclePlusIcon, { size: "xs", color: "currentColor" }),
            (0, s.jsx)(c.Text, {
              variant: "text-md/normal",
              color: "none",
              children: F.Z.Messages.GUILD_SETTINGS_ONBOARDING_ADD_A_TASK,
            }),
          ],
        });
      }
      function Q() {
        return (0, s.jsxs)("div", {
          className: k.badExample,
          children: [
            (0, s.jsx)(c.Text, {
              variant: "eyebrow",
              color: "header-secondary",
              children:
                F.Z.Messages
                  .GUILD_SETTINGS_ONBOARDING_HOME_SETTINGS_TODOS_BAD_EXAMPLE_REASON,
            }),
            (0, s.jsxs)("div", {
              className: k.example,
              children: [
                (0, s.jsx)("div", {
                  className: k.badExampleIcon,
                  children: (0, s.jsx)(c.XSmallIcon, {
                    size: "md",
                    color: "currentColor",
                  }),
                }),
                (0, s.jsxs)("div", {
                  children: [
                    (0, s.jsx)(c.Text, {
                      variant: "text-md/semibold",
                      color: "header-primary",
                      children:
                        F.Z.Messages
                          .GUILD_SETTINGS_ONBOARDING_HOME_SETTINGS_TODOS_BAD_EXAMPLE_TITLE,
                    }),
                    (0, s.jsx)(c.Text, {
                      variant: "text-xs/medium",
                      color: "text-muted",
                      children:
                        F.Z.Messages
                          .GUILD_SETTINGS_ONBOARDING_HOME_SETTINGS_TODOS_BAD_EXAMPLE_CHANNEL,
                    }),
                  ],
                }),
              ],
            }),
          ],
        });
      }
      function J(e) {
        var t;
        let { guildId: i } = e,
          r = (0, l.e7)([O.Z], () => O.Z.getGuild(i)),
          o =
            null !== (t = null == r ? void 0 : r.hasFeature(G.oNc.BANNER)) &&
            void 0 !== t &&
            t,
          d = a.useCallback(
            (e, t) => {
              if (null != i) {
                if (null == e || void 0 === t) {
                  v.Z.saveGuild(i, { homeHeader: null });
                  return;
                }
                (0, c.openModalLazy)(async () => {
                  let { default: a } = await Promise.all([
                    n.e("70687"),
                    n.e("48017"),
                    n.e("299"),
                  ]).then(n.bind(n, 850085));
                  return (n) =>
                    (0, s.jsx)(a, {
                      imgURI: e,
                      file: t,
                      onCrop: (e) => v.Z.saveGuild(i, { homeHeader: e }),
                      uploadType: B.pC.HOME_HEADER,
                      ...n,
                    });
                });
              }
            },
            [i],
          ),
          _ = a.useCallback(
            (e) => {
              e.preventDefault(),
                e.stopPropagation(),
                null != r &&
                  ((0, u.yw)(G.rMx.PREMIUM_GUILD_PROMOTION_OPENED, {
                    location: {
                      section: G.jXE.GUILD_SETTINGS_ONBOARDING,
                      object: G.qAy.LEARN_MORE,
                    },
                    guild_id: null == r ? void 0 : r.id,
                    location_stack: [],
                  }),
                  (0, m.Z)({
                    analyticsLocations: [],
                    analyticsSourceLocation: {
                      section: G.jXE.GUILD_SETTINGS_ONBOARDING,
                      object: G.qAy.ONBOARDING_EDIT,
                      page: G.ZY5.GUILD_SETTINGS,
                    },
                    guild: r,
                    perks: (0, P.XO)(),
                  }));
            },
            [r],
          );
        if (null == r) return null;
        let I = (0, s.jsx)(C.Z, {
          image: r.homeHeader,
          makeURL: (e) =>
            null != e
              ? M.ZP.getGuildHomeHeaderURL({ id: r.id, homeHeader: e })
              : null,
          disabled: !o,
          onChange: d,
          hint: F.Z.Messages.CHANGE_HOME_HEADER,
          enabled: o,
          maxFileSizeBytes: y.B,
        });
        return o
          ? (0, s.jsxs)(s.Fragment, {
              children: [
                (0, s.jsxs)("div", {
                  className: k.sectionHeader,
                  children: [
                    (0, s.jsx)(c.Heading, {
                      className: k.header,
                      variant: "heading-lg/extrabold",
                      children:
                        F.Z.Messages.GUILD_SETTINGS_ONBOARDING_HOME_BANNER,
                    }),
                    (0, s.jsx)(T.Z, {
                      className: k.boostIndicator,
                      guild: r,
                      guildFeature: G.oNc.BANNER,
                      onClick: _,
                    }),
                  ],
                }),
                (0, s.jsxs)("div", {
                  className: k.section,
                  children: [
                    (0, s.jsxs)("div", {
                      className: k.homeBannerExplainer,
                      children: [
                        (0, s.jsx)(c.Text, {
                          variant: "text-sm/normal",
                          color: "header-secondary",
                          children:
                            F.Z.Messages.GUILD_SETTINGS_HOME_HEADER_RECOMMEND,
                        }),
                        (0, s.jsxs)(c.Button, {
                          color: c.ButtonColors.BRAND,
                          className: k.uploadButton,
                          children: [
                            F.Z.Messages.UPLOAD_BACKGROUND,
                            (0, s.jsx)(x.ZP, {
                              onChange: d,
                              maxFileSizeBytes: y.B,
                            }),
                          ],
                        }),
                      ],
                    }),
                    (0, s.jsx)("div", { children: I }),
                  ],
                }),
              ],
            })
          : (0, s.jsxs)(s.Fragment, {
              children: [
                (0, s.jsxs)("div", {
                  className: k.sectionHeader,
                  children: [
                    (0, s.jsx)(c.Heading, {
                      className: k.header,
                      variant: "heading-lg/extrabold",
                      children:
                        F.Z.Messages.GUILD_SETTINGS_ONBOARDING_HOME_BANNER,
                    }),
                    (0, s.jsx)(T.Z, {
                      className: k.boostIndicator,
                      guild: r,
                      guildFeature: G.oNc.BANNER,
                      onClick: _,
                    }),
                  ],
                }),
                (0, s.jsxs)("div", {
                  className: k.section,
                  children: [
                    (0, s.jsxs)("div", {
                      className: k.homeBannerExplainer,
                      children: [
                        (0, s.jsx)(c.Text, {
                          variant: "text-sm/normal",
                          color: "header-secondary",
                          children:
                            F.Z.Messages.GUILD_SETTINGS_HOME_HEADER_RECOMMEND,
                        }),
                        (0, s.jsxs)(c.ShinyButton, {
                          className: k.upsellButton,
                          innerClassName: k.upsellButtonInner,
                          color: c.Button.Colors.GREEN,
                          onClick: _,
                          children: [
                            (0, s.jsx)(A.Z, { height: 16, width: 16 }),
                            (0, s.jsx)(c.Text, {
                              variant: "text-sm/medium",
                              color: "text-normal",
                              children:
                                F.Z.Messages
                                  .PREMIUM_GUILD_UNLOCK_WTH_BOOSTING_CTA,
                            }),
                          ],
                        }),
                      ],
                    }),
                    (0, s.jsx)("div", {
                      children: (0, s.jsx)(c.Clickable, {
                        "aria-hidden": !0,
                        tabIndex: -1,
                        onClick: _,
                        children: I,
                      }),
                    }),
                  ],
                }),
              ],
            });
      }
      function $(e) {
        let {
            guildId: t,
            resourceChannel: i,
            index: o,
            onDragComplete: d,
            onDragStart: u,
            onDragReset: _,
          } = e,
          E = (0, l.e7)([O.Z], () => O.Z.getGuild(t)),
          { title: T, channelId: m, description: N } = i,
          g = L.Z.getChannel(m),
          h = null;
        (null == g || !(0, S.k3)(g)) &&
          (h =
            F.Z.Messages
              .GUILD_SETTINGS_ONBOARDING_HOME_SETTINGS_INVALID_RESOURCE_CHANNEL);
        let C = null == N || 0 === N.length,
          x = M.ZP.getResourceChannelIconURL({
            channelId: i.channelId,
            icon: i.icon,
          }),
          {
            drag: p,
            dragSourcePosition: R,
            drop: f,
            setIsDraggable: A,
          } = (0, I.Z)({
            type: "RESOURCE_CHANNEL",
            optionId: i.channelId,
            index: o,
            onDragStart: u,
            onDragComplete: d,
            onDragReset: _,
          }),
          D = a.useCallback(
            (e) => {
              (0, Z.XG)(i.channelId, e);
            },
            [i.channelId],
          ),
          v = a.useCallback(
            (e, n) => {
              if (null == t) return;
              let s = b.Z.getSettings();
              null != s &&
                ((0, Z.XG)(i.channelId, e),
                (0, Z.oo)(t, s).then(() => {
                  (0, Z.mM)(t, e.channelId, n);
                }));
            },
            [t, i],
          ),
          j = a.useCallback(() => {
            if (null != t)
              return (0, c.openModalLazy)(async () => {
                let { default: e } = await n.e("84725").then(n.bind(n, 462499));
                return (n) =>
                  (0, s.jsx)(e, {
                    ...n,
                    guildId: t,
                    resourceChannel: i,
                    onSave: D,
                    onDelete: () => (0, Z.Hz)(i.channelId),
                    onIconUpload: v,
                  });
              });
          }, [t, i, D, v]);
        return null == E || null == g
          ? null
          : (0, s.jsxs)("div", {
              className: r()(k.resourceChannelContainer),
              children: [
                (0, s.jsxs)("div", {
                  className: r()(k.resourceChannel, {
                    [k.dropIndicatorBefore]: null != R && o < R,
                    [k.dropIndicatorAfter]: null != R && o > R,
                    [k.resourceChannelError]: null != h,
                  }),
                  ref: (e) => p(f(e)),
                  children: [
                    (0, s.jsx)("div", {
                      className: k.dragContainer,
                      onMouseEnter: () => A(!0),
                      onMouseLeave: () => A(!1),
                      children: (0, s.jsx)(c.DragIcon, {
                        size: "xs",
                        color: "currentColor",
                        className: k.dragIcon,
                      }),
                    }),
                    null != x &&
                      (0, s.jsx)("div", {
                        className: k.iconWrapper,
                        children: (0, s.jsx)("img", {
                          src: x,
                          className: k.icon,
                          width: 32,
                          height: 32,
                          alt: "",
                          "aria-hidden": !0,
                        }),
                      }),
                    (0, s.jsxs)("div", {
                      className: k.resourceChannelContent,
                      children: [
                        (0, s.jsx)(c.Text, {
                          className: k.resourceChannelTitle,
                          variant: "text-md/semibold",
                          color: "header-primary",
                          children: T,
                        }),
                        !C &&
                          (0, s.jsx)(c.Text, {
                            className: k.resourceChannelDescription,
                            variant: "text-xs/medium",
                            color: "text-muted",
                            lineClamp: 1,
                            children: N,
                          }),
                      ],
                    }),
                    (0, s.jsx)(c.Tooltip, {
                      text: F.Z.Messages.EDIT,
                      children: (e) =>
                        (0, s.jsxs)(c.Button, {
                          ...e,
                          className: k.resourceChannelEditButton,
                          innerClassName: k.resourceChannelEditButtonInner,
                          size: c.Button.Sizes.MIN,
                          onClick: j,
                          children: [
                            (0, s.jsx)(c.PencilIcon, {
                              size: "md",
                              color: "currentColor",
                            }),
                            (0, s.jsx)(c.HiddenVisually, {
                              children: F.Z.Messages.EDIT,
                            }),
                          ],
                        }),
                    }),
                  ],
                }),
                null != h &&
                  (0, s.jsx)(c.Text, {
                    variant: "text-xs/medium",
                    color: "text-danger",
                    children: h,
                  }),
              ],
            });
      }
      function ee(e) {
        var t;
        let { channel: n, isLast: i } = e,
          r = a.useCallback(() => {
            (0, Z.r2)({
              channelId: n.id,
              title: n.name,
              description: "",
              emoji: null,
              icon: null,
            });
          }, [n]),
          l = null !== (t = (0, _.KS)(n)) && void 0 !== t ? t : c.TextIcon;
        return (0, s.jsxs)(s.Fragment, {
          children: [
            (0, s.jsxs)("div", {
              className: k.suggestedChannel,
              children: [
                (0, s.jsx)(l, { className: k.suggestedChannelIcon }),
                (0, s.jsx)(c.Text, {
                  className: k.suggestedChannelText,
                  variant: "text-sm/normal",
                  children: n.name,
                }),
                (0, s.jsx)(c.Button, {
                  className: k.suggestedChannelButton,
                  size: c.Button.Sizes.MIN,
                  onClick: r,
                  children: (0, s.jsx)(c.Text, {
                    variant: "text-sm/semibold",
                    color: "always-white",
                    children: F.Z.Messages.ADD,
                  }),
                }),
              ],
            }),
            i && (0, s.jsx)("div", { className: k.suggestedSeparator }),
          ],
        });
      }
      function et(e) {
        let { guildId: t } = e,
          n = (0, l.e7)([O.Z], () => O.Z.getGuild(t)),
          i = (0, l.Wu)([b.Z], () => {
            var e, t;
            return null !==
              (t =
                null === (e = b.Z.getSettings().resourceChannels) ||
                void 0 === e
                  ? void 0
                  : e.map((e) => e.channelId)) && void 0 !== t
              ? t
              : [];
          }),
          r = (0, l.Wu)([b.Z], () => b.Z.getDismissedSuggestedChannelIds(t)),
          o = (0, l.e7)([f.ZP], () =>
            null == t ? [] : f.ZP.getSelectableChannels(t),
          )
            .filter(
              (e) =>
                !r.includes(e.channel.id) &&
                !i.includes(e.channel.id) &&
                e.channel.type === G.d4z.GUILD_TEXT &&
                D.Uu(G.Plq.VIEW_CHANNEL, e.channel) &&
                !D.Uu(G.Plq.SEND_MESSAGES, e.channel) &&
                e.channel.id !== (null == n ? void 0 : n.rulesChannelId),
            )
            .slice(0, 5),
          d = a.useCallback(() => {
            let e = o.map((e) => e.channel.id);
            (0, Z.q6)(t, e);
          }, [t, o]);
        return o.length <= 0 || i.length >= S.x3
          ? null
          : (0, s.jsxs)(s.Fragment, {
              children: [
                (0, s.jsxs)("div", {
                  className: k.suggestedChannelsSection,
                  children: [
                    (0, s.jsx)(c.Text, {
                      variant: "text-md/semibold",
                      children: F.Z.Messages.RECOMMENDED,
                    }),
                    (0, s.jsxs)("div", {
                      className: k.suggestedChannelsHeader,
                      children: [
                        (0, s.jsx)(c.Text, {
                          variant: "text-xs/medium",
                          color: "text-muted",
                          children:
                            F.Z.Messages
                              .GUILD_SETTINGS_ONBOARDING_SUGGESTED_RESOURCES_EXPLAINER,
                        }),
                        (0, s.jsxs)(c.Clickable, {
                          className: k.suggestedChannelsDismiss,
                          onClick: d,
                          children: [
                            (0, s.jsx)(c.CheckmarkLargeIcon, {
                              size: "md",
                              color: "currentColor",
                              className: k.suggestedChannelsDismissCheck,
                            }),
                            (0, s.jsx)(c.Text, {
                              variant: "text-xs/semibold",
                              color: "text-brand",
                              children:
                                F.Z.Messages
                                  .GUILD_SETTINGS_ONBOARDING_SUGGESTED_RESOURCES_DISMISS,
                            }),
                          ],
                        }),
                      ],
                    }),
                    (0, s.jsx)("div", {
                      className: k.suggestedChannels,
                      children: o.map((e, t) =>
                        (0, s.jsx)(
                          ee,
                          { channel: e.channel, isLast: t < o.length - 1 },
                          e.channel.id,
                        ),
                      ),
                    }),
                  ],
                }),
                (0, s.jsx)("div", { className: k.sectionSeparator }),
              ],
            });
      }
      function en(e) {
        let { guildId: t } = e,
          i = (0, l.Wu)([b.Z], () => {
            var e;
            return null !== (e = b.Z.getSettings().resourceChannels) &&
              void 0 !== e
              ? e
              : [];
          }),
          r = i.map((e) => ({ ...e, id: e.channelId })),
          {
            handleDragStart: o,
            handleDragReset: d,
            handleDragComplete: u,
          } = (0, E.Z)(r, Z.lq),
          _ = a.useCallback(
            (e, n) => {
              if (null == t) return;
              let s = b.Z.getSettings();
              null != s &&
                ((0, Z.r2)(e),
                (0, Z.oo)(t, s).then(() => {
                  (0, Z.mM)(t, e.channelId, n);
                }));
            },
            [t],
          ),
          I = a.useCallback(() => {
            if (null != t)
              return (0, c.openModalLazy)(async () => {
                let { default: e } = await n.e("84725").then(n.bind(n, 462499));
                return (n) =>
                  (0, s.jsx)(e, {
                    ...n,
                    guildId: t,
                    onSave: Z.r2,
                    onIconUpload: _,
                  });
              });
          }, [t, _]);
        return (0, s.jsxs)("div", {
          className: k.editResources,
          children: [
            i.map((e, n) =>
              (0, s.jsx)(
                $,
                {
                  guildId: t,
                  resourceChannel: e,
                  index: n,
                  onDragStart: o,
                  onDragReset: d,
                  onDragComplete: u,
                },
                e.channelId,
              ),
            ),
            i.length < S.x3 &&
              (0, s.jsxs)(c.Clickable, {
                className: k.addActionItem,
                onClick: I,
                children: [
                  (0, s.jsx)(c.CirclePlusIcon, {
                    size: "xs",
                    color: "currentColor",
                  }),
                  (0, s.jsx)(c.Text, {
                    variant: "text-md/normal",
                    color: "none",
                    children:
                      F.Z.Messages.GUILD_SETTINGS_ONBOARDING_ADD_A_RESOURCE,
                  }),
                ],
              }),
          ],
        });
      }
      function es(e) {
        let { saveOnClose: t } = e,
          n = (0, l.e7)([j.Z], () => j.Z.getGuildId());
        return null == n
          ? null
          : (0, s.jsx)(ea, { guildId: n, saveOnClose: t });
      }
      function ea(e) {
        let { saveOnClose: t, guildId: n } = e,
          i = (0, l.cj)([b.Z], () => {
            var e;
            return null !== (e = b.Z.getSettings().welcomeMessage) &&
              void 0 !== e
              ? e
              : U.z;
          }),
          [r, d] = a.useState("new"),
          u = [
            {
              value: "new",
              name: F.Z.Messages
                .GUILD_SETTINGS_ONBOARDING_HOME_NEW_MEMBER_EXAMPLE,
            },
            {
              value: "existing",
              name: F.Z.Messages
                .GUILD_SETTINGS_ONBOARDING_HOME_EXISTING_MEMBER_EXAMPLE,
            },
          ],
          _ = (0, l.e7)([p.Z], () => p.Z.theme);
        return (
          a.useEffect(
            () => () => {
              if (null == n) return;
              let e = b.Z.getSettings();
              (0, Z.oo)(n, e);
            },
            [t, n],
          ),
          (0, s.jsxs)("div", {
            className: k.page,
            children: [
              (0, s.jsxs)("div", {
                className: k.leftColumn,
                children: [
                  (0, s.jsx)(c.Heading, {
                    className: k.header,
                    variant: "heading-lg/extrabold",
                    children:
                      F.Z.Messages
                        .GUILD_SETTINGS_ONBOARDING_HOME_SETTINGS_WELCOME_TITLE,
                  }),
                  (0, s.jsx)("div", {
                    className: k.descriptionSection,
                    children: (0, s.jsx)(c.Text, {
                      variant: "text-sm/medium",
                      color: "header-secondary",
                      children:
                        F.Z.Messages
                          .GUILD_SETTINGS_ONBOARDING_HOME_SETTINGS_WELCOME_DESCRIPTION,
                    }),
                  }),
                  (0, s.jsx)("div", {
                    className: k.section,
                    children: (0, s.jsx)(W, { guildId: n, welcomeMessage: i }),
                  }),
                  (0, s.jsx)("div", { className: k.sectionSeparator }),
                  (0, s.jsx)(c.Heading, {
                    className: k.header,
                    variant: "heading-lg/extrabold",
                    children:
                      F.Z.Messages
                        .GUILD_SETTINGS_ONBOARDING_HOME_SETTINGS_TODOS_TITLE,
                  }),
                  (0, s.jsx)("div", {
                    className: k.descriptionSection,
                    children: (0, s.jsx)(c.Text, {
                      variant: "text-sm/medium",
                      color: "header-secondary",
                      children:
                        F.Z.Messages.GUILD_SETTINGS_ONBOARDING_HOME_SETTINGS_TODOS_DESCRIPTION.format(),
                    }),
                  }),
                  (0, s.jsx)("div", {
                    className: k.section,
                    children: (0, s.jsx)(Q, {}),
                  }),
                  (0, s.jsx)(K, { guildId: n }),
                  (0, s.jsx)("div", { className: k.sectionSeparator }),
                  (0, s.jsx)(c.Heading, {
                    className: k.header,
                    variant: "heading-lg/extrabold",
                    children:
                      F.Z.Messages
                        .GUILD_SETTINGS_ONBOARDING_HOME_SETTINGS_RESOURCES_TITLE,
                  }),
                  (0, s.jsxs)("div", {
                    className: k.descriptionSection,
                    children: [
                      (0, s.jsx)(c.Text, {
                        variant: "text-sm/medium",
                        color: "header-secondary",
                        children:
                          F.Z.Messages
                            .GUILD_SETTINGS_ONBOARDING_HOME_SETTINGS_RESOURCES_DESCRIPTION,
                      }),
                      (0, s.jsxs)("ul", {
                        className: k.bulletList,
                        children: [
                          (0, s.jsx)("li", {
                            children: (0, s.jsx)(c.Text, {
                              tag: "span",
                              variant: "text-sm/medium",
                              color: "header-secondary",
                              children:
                                F.Z.Messages
                                  .GUILD_SETTINGS_ONBOARDING_HOME_SETTINGS_RESOURCE_BULLET_1,
                            }),
                          }),
                          (0, s.jsx)("li", {
                            children: (0, s.jsx)(c.Text, {
                              tag: "span",
                              variant: "text-sm/medium",
                              color: "header-secondary",
                              children:
                                F.Z.Messages
                                  .GUILD_SETTINGS_ONBOARDING_HOME_SETTINGS_RESOURCE_BULLET_2,
                            }),
                          }),
                          (0, s.jsx)("li", {
                            children: (0, s.jsx)(c.Text, {
                              tag: "span",
                              variant: "text-sm/medium",
                              color: "header-secondary",
                              children:
                                F.Z.Messages
                                  .GUILD_SETTINGS_ONBOARDING_HOME_SETTINGS_RESOURCE_BULLET_3,
                            }),
                          }),
                        ],
                      }),
                    ],
                  }),
                  (0, s.jsxs)("div", {
                    className: k.section,
                    children: [
                      (0, s.jsx)(et, { guildId: n }),
                      (0, s.jsx)(en, { guildId: n }),
                    ],
                  }),
                  (0, s.jsx)("div", { className: k.sectionSeparator }),
                  (0, s.jsx)(J, { guildId: n }),
                ],
              }),
              (0, s.jsxs)("div", {
                className: k.rightColumn,
                children: [
                  (0, s.jsx)("div", {
                    className: k.centeredSection,
                    children: (0, s.jsx)(c.Text, {
                      variant: "text-sm/medium",
                      color: "header-secondary",
                      children: F.Z.Messages.EXAMPLE,
                    }),
                  }),
                  (0, s.jsx)("img", {
                    className: k.previewImage,
                    src: (0, o.ap)(_)
                      ? "existing" === r
                        ? H
                        : Y
                      : "existing" === r
                        ? w
                        : V,
                    alt: F.Z.Messages
                      .GUILD_SETTINGS_ONBOARDING_HOME_GUIDE_EXAMPLE_ALT,
                  }),
                  (0, s.jsx)(c.SegmentedControl, {
                    options: u,
                    value: r,
                    onChange: (e) => {
                      let { value: t } = e;
                      return d(String(t));
                    },
                    look: "pill",
                  }),
                ],
              }),
            ],
          })
        );
      }
      function ei() {
        let e = (0, l.e7)([j.Z], () => j.Z.getGuild()),
          t = (0, l.e7)([b.Z], () => b.Z.getSettings()),
          n = (0, l.e7)([b.Z], () => b.Z.getSubmitting());
        return null == e
          ? null
          : (0, s.jsx)(d.Z, {
              onSave: () => {
                try {
                  (0, Z.oo)(e.id, t);
                } catch {}
              },
              onReset: Z.bj,
              submitting: n,
              onSaveText: F.Z.Messages.SAVE,
            });
      }
    },
    729995: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return R;
        },
      });
      var s = n(735250);
      n(470079);
      var a = n(442837),
        i = n(481060),
        r = n(2052),
        l = n(367907),
        o = n(45966),
        c = n(734893),
        d = n(621923),
        u = n(661824),
        _ = n(430824),
        I = n(626135),
        E = n(983135),
        T = n(8426),
        m = n(969632),
        N = n(570961),
        S = n(84658),
        g = n(974513),
        h = n(677892),
        C = n(981631),
        x = n(689938),
        p = n(14360);
      function R(e) {
        let { guildId: t, completed: n } = e,
          { homeSettingsEnabled: i } = (0, d.kZ)(t),
          c = (0, a.e7)([o.Z], () => o.Z.getEnabled(t)),
          { location: _ } = (0, r.O)();
        _.object = n ? C.qAy.ONBOARDING_EDIT : C.qAy.ONBOARDING_REVIEW;
        let m = async function () {
            let e =
              arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
            c
              ? (await (0, N.$y)(t, !1),
                I.default.track(
                  C.rMx.GUILD_SETTINGS_ONBOARDING_EDIT_PAGE_CLICKED,
                  {
                    ...(0, l.hH)(t),
                    action_taken: S.W$[S.W$.TOGGLE_DISABLED],
                    location: _,
                  },
                ))
              : (await (0, N.$y)(t, !0),
                e && (0, T.To)(t, !0),
                n
                  ? I.default.track(
                      C.rMx.GUILD_SETTINGS_ONBOARDING_EDIT_PAGE_CLICKED,
                      {
                        ...(0, l.hH)(t),
                        action_taken: S.W$[S.W$.TOGGLE_ENABLED],
                        location: _,
                      },
                    )
                  : I.default.track(
                      C.rMx
                        .GUILD_SETTINGS_ONBOARDING_WIZARD_PROGRESS_CTA_CLICKED,
                      {
                        ...(0, l.hH)(t),
                        step: S.PG[S.PG.REVIEW],
                        back: !1,
                        skip: !1,
                        completed: !0,
                      },
                    ));
          },
          g = () => {
            I.default.track(C.rMx.GUILD_SETTINGS_ONBOARDING_EDIT_PAGE_CLICKED, {
              ...(0, l.hH)(t),
              action_taken: S.W$[S.W$.PREVIEW],
              location: _,
            }),
              (0, E.di)(t);
          },
          x = (0, s.jsxs)(s.Fragment, {
            children: [
              (0, s.jsx)(h.ku, {
                guildId: t,
                onEdit: () => {
                  I.default.track(
                    C.rMx.GUILD_SETTINGS_ONBOARDING_EDIT_PAGE_CLICKED,
                    {
                      ...(0, l.hH)(t),
                      action_taken: S.W$[S.W$.EDIT_DEFAULT_CHANNELS],
                      location: _,
                    },
                  ),
                    (0, E.$K)(S.PG.DEFAULT_CHANNELS);
                },
                disableGoodStatus: n,
              }),
              (0, s.jsx)(u.Z, { className: p.divider }),
              (0, s.jsx)(h.ap, {
                guildId: t,
                onEdit: () => {
                  I.default.track(
                    C.rMx.GUILD_SETTINGS_ONBOARDING_EDIT_PAGE_CLICKED,
                    {
                      ...(0, l.hH)(t),
                      action_taken: S.W$[S.W$.EDIT_CUSTOMIZATION_QUESTIONS],
                      location: _,
                    },
                  ),
                    (0, E.$K)(S.PG.CUSTOMIZATION_QUESTIONS);
                },
                disableGoodStatus: n,
              }),
              i &&
                (0, s.jsxs)(s.Fragment, {
                  children: [
                    (0, s.jsx)(u.Z, { className: p.divider }),
                    (0, s.jsx)(h.P_, {
                      guildId: t,
                      onEdit: () => {
                        I.default.track(
                          C.rMx.GUILD_SETTINGS_ONBOARDING_EDIT_PAGE_CLICKED,
                          {
                            ...(0, l.hH)(t),
                            action_taken: S.W$[S.W$.EDIT_HOME_SETTINGS],
                            location: _,
                          },
                        ),
                          (0, E.$K)(S.PG.HOME_SETTINGS);
                      },
                      disableGoodStatus: n,
                    }),
                  ],
                }),
            ],
          });
        return n
          ? (0, s.jsxs)(s.Fragment, {
              children: [
                (0, s.jsx)(L, { guildId: t, handlePreview: g }),
                (0, s.jsx)(f, {}),
                (0, s.jsxs)("div", {
                  className: p.content,
                  children: [
                    (0, s.jsx)(O, { guildId: t, handleOnboardingToggle: m }),
                    x,
                  ],
                }),
              ],
            })
          : (0, s.jsxs)(s.Fragment, {
              children: [
                (0, s.jsxs)("div", {
                  className: p.content,
                  children: [
                    (0, s.jsx)(A, {
                      guildId: t,
                      handleOnboardingToggle: m,
                      handlePreview: g,
                    }),
                    x,
                  ],
                }),
                (0, s.jsx)(M, { guildId: t }),
              ],
            });
      }
      function L(e) {
        let { guildId: t, handlePreview: n } = e;
        return (0, s.jsxs)(s.Fragment, {
          children: [
            (0, s.jsx)(i.Heading, {
              variant: "heading-lg/semibold",
              color: "header-primary",
              className: p.header,
              children: x.Z.Messages.GUILD_SETTINGS_ONBOARDING,
            }),
            (0, s.jsx)(i.Text, {
              variant: "text-md/normal",
              color: "header-secondary",
              className: p.subheader,
              children: x.Z.Messages.GUILD_ONBOARDING_OVERVIEW_SUBTITLE,
            }),
            (0, s.jsxs)("div", {
              className: p.help,
              children: [
                (0, s.jsx)(i.Anchor, {
                  target: "_blank",
                  href: C.EYA.GUILD_ONBOARDING_EXAMPLES,
                  children: (0, s.jsx)(i.Text, {
                    variant: "text-sm/medium",
                    color: "text-link",
                    children:
                      x.Z.Messages.GUILD_ONBOARDING_OVERVIEW_SEE_EXAMPLES,
                  }),
                }),
                (0, s.jsx)("div", { className: p.helpSeparator }),
                (0, s.jsx)(i.Anchor, {
                  onClick: n,
                  children: (0, s.jsx)(i.Text, {
                    variant: "text-sm/medium",
                    color: "text-link",
                    children: x.Z.Messages.GUILD_ONBOARDING_SETUP_PREVIEW,
                  }),
                }),
                (0, s.jsx)("div", { className: p.helpSeparator }),
                (0, s.jsx)(g.Wu, { guildId: t }),
              ],
            }),
          ],
        });
      }
      function f() {
        let e = "• ";
        return (0, s.jsxs)("div", {
          className: p.notice,
          children: [
            (0, s.jsx)("img", {
              className: p.wumpus,
              src: n(33631),
              alt: "wumpus",
            }),
            (0, s.jsxs)("div", {
              children: [
                (0, s.jsx)(i.Heading, {
                  variant: "heading-md/semibold",
                  color: "header-primary",
                  className: p.header,
                  children:
                    x.Z.Messages.GUILD_ONBOARDING_OVERVIEW_UPDATES_HEADER,
                }),
                (0, s.jsxs)(i.Text, {
                  variant: "text-sm/medium",
                  color: "header-secondary",
                  children: [
                    e,
                    x.Z.Messages.GUILD_ONBOARDING_OVERVIEW_UPDATES_2,
                  ],
                }),
                (0, s.jsxs)(i.Text, {
                  variant: "text-sm/medium",
                  color: "header-secondary",
                  children: [
                    e,
                    x.Z.Messages.GUILD_ONBOARDING_OVERVIEW_UPDATES_3,
                  ],
                }),
              ],
            }),
          ],
        });
      }
      function O(e) {
        let { guildId: t, handleOnboardingToggle: n } = e,
          r = (0, h.$$)(t),
          l = (0, a.e7)([o.Z], () => o.Z.getEnabled(t));
        return (0, s.jsxs)("div", {
          className: p.review,
          children: [
            (0, s.jsxs)("div", {
              className: p.reviewHeaderText,
              children: [
                (0, s.jsx)(i.Heading, {
                  variant: "heading-md/semibold",
                  children: l
                    ? x.Z.Messages.GUILD_ONBOARDING_OVERVIEW_TITLE_ENABLED
                    : x.Z.Messages.GUILD_ONBOARDING_OVERVIEW_TITLE_DISABLED,
                }),
                (0, s.jsx)(i.Text, {
                  variant: "text-xs/normal",
                  color: "text-muted",
                  children: l
                    ? x.Z.Messages.GUILD_ONBOARDING_OVERVIEW_SUBTITLE_ENABLED
                    : x.Z.Messages.GUILD_ONBOARDING_OVERVIEW_SUBTITLE_DISABLED,
                }),
              ],
            }),
            (0, s.jsx)(i.Switch, {
              checked: l,
              onChange: () => n(!1),
              disabled: !l && !r,
            }),
          ],
        });
      }
      function A(e) {
        let { guildId: t, handleOnboardingToggle: n, handlePreview: r } = e,
          l = (0, h.$$)(t),
          o = (0, a.e7)([m.Z], () => m.Z.getSettings()),
          d = (0, c.uo)(o);
        return (0, s.jsxs)("div", {
          className: p.reviewHeader,
          children: [
            (0, s.jsxs)("div", {
              className: p.reviewHeaderText,
              children: [
                (0, s.jsx)(i.Heading, {
                  variant: "heading-md/semibold",
                  children: l
                    ? x.Z.Messages.GUILD_ONBOARDING_SETUP_REVIEW_TITLE
                    : x.Z.Messages
                        .GUILD_ONBOARDING_SETUP_REVIEW_TITLE_INCOMPLETE,
                }),
                (0, s.jsx)(i.Text, {
                  variant: "text-xs/normal",
                  children: l
                    ? x.Z.Messages.GUILD_ONBOARDING_SETUP_REVIEW_DESCRIPTION
                    : x.Z.Messages
                        .GUILD_ONBOARDING_SETUP_REVIEW_DESCRIPTION_INCOMPLETE,
                }),
              ],
            }),
            (0, s.jsxs)("div", {
              className: p.reviewActions,
              children: [
                (0, s.jsx)(i.Button, {
                  size: i.Button.Sizes.SMALL,
                  color: i.Button.Colors.PRIMARY,
                  look: i.Button.Looks.OUTLINED,
                  onClick: r,
                  children: x.Z.Messages.GUILD_ONBOARDING_SETUP_PREVIEW,
                }),
                (0, s.jsx)(i.Button, {
                  size: i.Button.Sizes.SMALL,
                  color: i.Button.Colors.BRAND,
                  onClick: () => n(d),
                  disabled: !l,
                  children:
                    x.Z.Messages
                      .GUILD_ONBOARDING_SETUP_REVIEW_ENABLE_ONBOARDING,
                }),
              ],
            }),
          ],
        });
      }
      function M(e) {
        let { guildId: t } = e,
          n = (0, a.e7)([_.Z], () => _.Z.getGuild(t));
        return null == n || n.verificationLevel < C.sFg.VERY_HIGH
          ? null
          : (0, s.jsxs)("div", {
              className: p.rolesWarning,
              children: [
                (0, s.jsx)(i.CircleWarningIcon, {
                  size: "xs",
                  color: "currentColor",
                  className: p.warningIcon,
                }),
                (0, s.jsx)(i.Text, {
                  variant: "text-sm/medium",
                  color: "text-muted",
                  children:
                    x.Z.Messages.GUILD_ONBOARDING_SETUP_PREVIEW_ROLES_WARNING,
                }),
              ],
            });
      }
    },
    730910: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return U;
        },
      }),
        n(47120);
      var s = n(735250),
        a = n(470079),
        i = n(120356),
        r = n.n(i),
        l = n(526629),
        o = n(442837),
        c = n(692547),
        d = n(215569),
        u = n(780384),
        _ = n(481060),
        I = n(410030),
        E = n(367907),
        T = n(768762),
        m = n(626135),
        N = n(585483),
        S = n(999382),
        g = n(743475),
        h = n(983135),
        C = n(8426),
        x = n(969632),
        p = n(570961),
        R = n(208665),
        L = n(359191),
        f = n(84658),
        O = n(142961),
        A = n(232764),
        M = n(729311),
        D = n(850864),
        v = n(966301),
        j = n(981631),
        Z = n(689938),
        b = n(693310);
      function U() {
        let e = (0, o.e7)([S.Z], () => S.Z.getGuild());
        return null == e ? null : (0, s.jsx)(G, { guild: e });
      }
      function G(e) {
        let { guild: t } = e,
          i = t.id,
          S = (0, o.e7)([L.Z], () => L.Z.getCurrentPage()),
          U = (0, O.Z)(i),
          {
            hasChanges: G,
            hasConfiguredAnythingForCurrentStep: P,
            hasErrors: B,
          } = (0, o.cj)([L.Z], () => ({
            hasChanges: L.Z.hasChanges(),
            hasConfiguredAnythingForCurrentStep:
              L.Z.hasConfiguredAnythingForCurrentStep(),
            hasErrors: L.Z.hasErrors(),
          })),
          y = (0, o.e7)([L.Z], () => {
            let e = (0, f.lg)(S);
            return null != e && !L.Z.isEducationUpsellDismissed(e);
          }),
          F = (0, I.ZP)(),
          k = a.useRef(null),
          [{ spring: w }, H] = (0, _.useSpring)(
            () => ({ spring: 0 }),
            "animate-always",
          );
        a.useEffect(() => {
          function e() {
            H({ spring: 1, config: l.config.gentle }),
              H({ spring: 0, config: l.config.gentle, delay: 1e3 });
          }
          return (
            N.S.subscribe(j.CkL.EMPHASIZE_NOTICE, e),
            () => {
              N.S.unsubscribe(j.CkL.EMPHASIZE_NOTICE, e);
            }
          );
        }, [H]);
        let V = (0, _.useToken)(c.Z.colors.BACKGROUND_FLOATING).hex(),
          Y = (0, _.useToken)(c.Z.unsafe_rawColors.PRIMARY_160).hex(),
          W = (0, u.wj)(F) ? V : Y,
          z = w.to({
            range: [0, 1],
            output: [
              (0, _.useToken)(c.Z.unsafe_rawColors.WHITE_500).hex(),
              (0, _.useToken)(c.Z.colors.TEXT_NORMAL).hex(),
            ],
          }),
          K = w.to({
            range: [0, 1],
            output: [W, (0, _.useToken)(c.Z.colors.STATUS_DANGER).hex()],
          });
        if (U) {
          if (S === f.PG.DEFAULT_CHANNELS) return (0, s.jsx)(M.j, {});
          if (S === f.PG.CUSTOMIZATION_QUESTIONS) return (0, s.jsx)(v.Zm, {});
          else if (S === f.PG.HOME_SETTINGS) return (0, s.jsx)(D.T, {});
        }
        let q = S === f.xh[f.xh.length - 1],
          X = async () => {
            let e = R.Z.advancedMode;
            if (G)
              try {
                if (S === f.PG.DEFAULT_CHANNELS)
                  await (0, g.DO)(t).then(() =>
                    e
                      ? (0, p.rS)(t, { ignoreDefaultPrompt: !0 })
                      : Promise.resolve(),
                  );
                else if (S === f.PG.CUSTOMIZATION_QUESTIONS)
                  await (0, p.rS)(t, { ignoreDefaultPrompt: !0 });
                else if (S === f.PG.HOME_SETTINGS) {
                  let e = x.Z.getSettings();
                  await (0, C.oo)(t.id, e);
                }
              } catch {
                return !1;
              }
            return !0;
          },
          Q = async () => {
            m.default.track(
              j.rMx.GUILD_SETTINGS_ONBOARDING_WIZARD_PROGRESS_CTA_CLICKED,
              { ...(0, E.hH)(i), step: f.PG[S], back: !1, skip: !G },
            ),
              (0, h.Nb)((0, f.lg)(S)),
              (await X()) && (0, h.IG)(i, S);
          },
          J = async () => {
            m.default.track(
              j.rMx.GUILD_SETTINGS_ONBOARDING_WIZARD_PROGRESS_CTA_CLICKED,
              { ...(0, E.hH)(i), step: f.PG[S], back: !0, skip: !1 },
            ),
              (await X()) && (0, h.Wy)(i, S);
          },
          $ = null;
        y &&
          (S === f.PG.SAFETY_CHECK
            ? ($ = (0, s.jsx)(A.j7, {}))
            : S === f.PG.DEFAULT_CHANNELS
              ? ($ = (0, s.jsx)(A.Io, {}))
              : S === f.PG.CUSTOMIZATION_QUESTIONS
                ? ($ = (0, s.jsx)(A.cZ, {}))
                : S === f.PG.HOME_SETTINGS && ($ = (0, s.jsx)(A.g6, {})));
        let ee = (0, s.jsx)(_.Button, {
            className: r()(b.button, { [b.hidden]: y }),
            color: _.Button.Colors.PRIMARY,
            look: _.Button.Looks.OUTLINED,
            size: _.Button.Sizes.SMALL,
            onClick: J,
            disabled: y || B,
            children: (0, s.jsxs)("span", {
              className: b.button,
              children: [
                (0, s.jsx)(T.Z, {
                  className: b.arrow,
                  direction: T.Z.Directions.LEFT,
                }),
                Z.Z.Messages.BACK,
              ],
            }),
          }),
          et = (0, s.jsx)(_.Button, {
            className: b.button,
            color: P ? _.Button.Colors.BRAND : _.Button.Colors.PRIMARY,
            look: _.Button.Looks.FILLED,
            size: _.Button.Sizes.SMALL,
            onClick: Q,
            disabled: y || B,
            children: (0, s.jsxs)(l.animated.span, {
              className: b.button,
              style: { color: z },
              children: [
                P ? Z.Z.Messages.NEXT : Z.Z.Messages.SKIP,
                (0, s.jsx)(T.Z, {
                  className: b.arrow,
                  direction: T.Z.Directions.RIGHT,
                }),
              ],
            }),
          });
        return (0, s.jsx)(d.W, {
          component: "div",
          children: (0, s.jsx)(_.SlideIn, {
            className: r()(b.noticeRegion),
            children: (0, s.jsx)(l.animated.div, {
              className: b.container,
              style: { backgroundColor: K },
              children: (0, s.jsxs)("div", {
                className: b.flexContainer,
                ref: k,
                children: [
                  y
                    ? (0, s.jsxs)("div", {
                        className: b.educationUpsellRoot,
                        children: [
                          (0, s.jsx)("img", {
                            className: r()(b.wumpus),
                            src: n(33631),
                            alt: "wumpus",
                          }),
                          (0, s.jsxs)("div", {
                            className: b.educationUpsell,
                            children: [
                              $,
                              (0, s.jsx)("div", {
                                className: b.educationUpsellArrow,
                              }),
                            ],
                          }),
                        ],
                      })
                    : null,
                  (0, s.jsx)(_.FocusRingScope, {
                    containerRef: k,
                    children: (0, s.jsxs)("div", {
                      className: b.actions,
                      children: [
                        ee,
                        (0, s.jsxs)("div", {
                          className: b.next,
                          children: [
                            B
                              ? (0, s.jsx)(_.Text, {
                                  variant: "text-sm/normal",
                                  color: "status-warning",
                                  children:
                                    Z.Z.Messages.ONBOARDING_PROMPTS_INCOMPLETE,
                                })
                              : null,
                            q ? null : et,
                          ],
                        }),
                      ],
                    }),
                  }),
                ],
              }),
            }),
          }),
        });
      }
    },
    966301: function (e, t, n) {
      "use strict";
      n.d(t, {
        ZP: function () {
          return p;
        },
        Zm: function () {
          return L;
        },
      }),
        n(47120);
      var s = n(735250),
        a = n(470079),
        i = n(442837),
        r = n(481060),
        l = n(852860),
        o = n(471445),
        c = n(45966),
        d = n(637853),
        u = n(999382),
        _ = n(889369),
        I = n(983135),
        E = n(570961),
        T = n(208665),
        m = n(974513),
        N = n(716130),
        S = n(981631),
        g = n(290511),
        h = n(689938),
        C = n(84877);
      function x(e) {
        let { guildId: t, prompts: n } = e,
          l = (0, i.e7)([_.Z], () => _.Z.editedDefaultChannelIds),
          [c, u] = (0, d.dF)(t, n, [...l]),
          I = c.length,
          E = c.length + u.length,
          T = (I / E) * 100,
          m = Math.max(Math.ceil((85 * E) / 100) - I, 0),
          [N, S] = a.useState(!1),
          g = N ? r.ChevronSmallDownIcon : r.ChevronSmallUpIcon;
        return (0, s.jsxs)("div", {
          className: C.channelCoverage,
          children: [
            (0, s.jsxs)(r.Clickable, {
              className: C.coverageHeader,
              onClick: () => S(!N),
              children: [
                (0, s.jsxs)("div", {
                  className: C.warningTextContainer,
                  children: [
                    T <= 85 &&
                      (0, s.jsx)(r.CircleWarningIcon, {
                        size: "xs",
                        color: "currentColor",
                        className: C.warning,
                      }),
                    (0, s.jsx)(r.Text, {
                      className: C.coverageTitle,
                      variant: "text-xs/medium",
                      color: "text-muted",
                      children:
                        h.Z.Messages.ONBOARDING_PROMPT_CHANNEL_COVERAGE_MISSING_CHANNELS.format(
                          { numChannelsMissing: E - I },
                        ),
                    }),
                  ],
                }),
                (0, s.jsxs)("div", {
                  className: C.progressContainer,
                  children: [
                    (0, s.jsx)(r.Progress, {
                      className: C.coverageProgress,
                      foregroundColor:
                        T > 85
                          ? "var(--status-positive)"
                          : "var(--status-warning)",
                      percent: T,
                    }),
                    (0, s.jsx)(g, {
                      size: "md",
                      color: "currentColor",
                      className: C.caret,
                    }),
                  ],
                }),
              ],
            }),
            N
              ? (0, s.jsxs)("div", {
                  className: C.channelCoverageDetails,
                  children: [
                    (0, s.jsx)(r.Text, {
                      variant: "text-xs/semibold",
                      color: "text-muted",
                      children:
                        h.Z.Messages
                          .ONBOARDING_PROMPT_CHANNEL_COVERAGE_CHANNELS,
                    }),
                    (0, s.jsx)("div", {
                      className: C.channels,
                      children: u.map((e) => {
                        var t;
                        let n =
                          null !== (t = (0, o.KS)(e)) && void 0 !== t
                            ? t
                            : r.TextIcon;
                        return (0, s.jsx)(
                          "div",
                          {
                            className: C.channelPill,
                            children: (0, s.jsxs)(r.Text, {
                              className: C.channel,
                              variant: "text-xs/normal",
                              color: "interactive-active",
                              children: [
                                (0, s.jsx)(n, {
                                  size: "xxs",
                                  color: "currentColor",
                                }),
                                e.name,
                              ],
                            }),
                          },
                          e.id,
                        );
                      }),
                    }),
                    (0, s.jsx)("div", {
                      className: C.channelCoverageHint,
                      children:
                        m > 0
                          ? (0, s.jsxs)(s.Fragment, {
                              children: [
                                (0, s.jsx)(r.CircleWarningIcon, {
                                  size: "xs",
                                  color: "currentColor",
                                }),
                                (0, s.jsx)(r.Text, {
                                  variant: "text-xs/normal",
                                  color: "text-muted",
                                  children:
                                    h.Z.Messages.ONBOARDING_PROMPT_CHANNEL_COVERAGE_ADD_HELP.format(
                                      { numChannels: m },
                                    ),
                                }),
                              ],
                            })
                          : (0, s.jsx)(r.Text, {
                              variant: "text-xs/normal",
                              color: "text-muted",
                              children: h.Z.Messages.GUILD_NO_CHANNELS_HEADER,
                            }),
                    }),
                  ],
                })
              : null,
          ],
        });
      }
      function p(e) {
        let { saveOnClose: t } = e,
          n = (0, i.e7)([u.Z], () => u.Z.getGuild());
        return null == n ? null : (0, s.jsx)(R, { guild: n, saveOnClose: t });
      }
      function R(e) {
        let { guild: t, saveOnClose: n } = e,
          l = (0, i.e7)([c.Z], () => c.Z.isLoading()),
          o = (0, i.e7)([T.Z], () => T.Z.editedOnboardingPrompts),
          d = (0, i.e7)([T.Z], () => T.Z.advancedMode),
          u = a.useRef(!1);
        if (
          (a.useEffect(() => {
            !l &&
              !u.current &&
              0 === o.length &&
              ((u.current = !0), !d && (0, E.tS)(t, [(0, g.ae)()], !1));
          }),
          a.useEffect(() => {
            if (n)
              return () => {
                (0, E.rS)(t, { ignoreDefaultPrompt: !0 }).catch(() => {});
              };
          }, [n]),
          null == t)
        )
          return null;
        let _ = async () => {
          try {
            await (0, E.rS)(t), await (0, I.di)(t.id);
          } catch {}
        };
        return (0, s.jsxs)(s.Fragment, {
          children: [
            (0, s.jsx)(r.Heading, {
              className: C.header,
              variant: "heading-lg/extrabold",
              children: d
                ? h.Z.Messages.ONBOARDING_PROMPT_SETTINGS_HEADER_ADVANCED
                : h.Z.Messages.ONBOARDING_PROMPT_SETTINGS_HEADER,
            }),
            (0, s.jsx)(r.Text, {
              variant: "text-sm/normal",
              color: "header-secondary",
              children: h.Z.Messages.ONBOARDING_PROMPT_SETTINGS_SUBHEADER,
            }),
            (0, s.jsxs)("div", {
              className: C.links,
              children: [
                (0, s.jsx)(r.Anchor, {
                  target: "_blank",
                  href: S.EYA.GUILD_ONBOARDING_EXAMPLES,
                  children: (0, s.jsx)(r.Text, {
                    variant: "text-sm/medium",
                    color: "text-link",
                    children:
                      h.Z.Messages.GUILD_ONBOARDING_OVERVIEW_SEE_EXAMPLES,
                  }),
                }),
                (0, s.jsx)("div", { className: C.dot }),
                (0, s.jsx)(r.Anchor, {
                  onClick: _,
                  children: (0, s.jsx)(r.Text, {
                    variant: "text-sm/medium",
                    color: "text-link",
                    children: h.Z.Messages.GUILD_ONBOARDING_SETUP_PREVIEW,
                  }),
                }),
                (0, s.jsx)("div", { className: C.dot }),
                (0, s.jsx)(m.Wu, { guildId: t.id }),
              ],
            }),
            (0, s.jsx)(x, { guildId: t.id, prompts: o }),
            (0, s.jsx)("div", {
              className: C.prompts,
              children: l
                ? (0, s.jsx)(r.Spinner, {})
                : (0, s.jsx)(N.Z, { postjoinOnly: d, guildId: t.id }),
            }),
          ],
        });
      }
      function L() {
        let e = (0, i.e7)([u.Z], () => u.Z.getGuild()),
          t = (0, i.e7)([T.Z], () => T.Z.submitting);
        return null == e
          ? null
          : (0, s.jsx)(l.Z, {
              onSave: () => {
                try {
                  (0, E.rS)(e);
                } catch {}
              },
              onReset: E.NB,
              submitting: t,
              onSaveText: h.Z.Messages.SAVE,
            });
      }
    },
    959508: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return p;
        },
      }),
        n(47120);
      var s = n(735250),
        a = n(470079),
        i = n(120356),
        r = n.n(i),
        l = n(442837),
        o = n(481060),
        c = n(659388),
        d = n(710344),
        u = n(637853),
        _ = n(107862),
        I = n(259580),
        E = n(823379),
        T = n(889369),
        m = n(570961),
        N = n(208665),
        S = n(976983),
        g = n(290511),
        h = n(689938),
        C = n(277767);
      let x = { optionErrors: [] };
      function p(e) {
        var t;
        let {
            guild: n,
            prompt: i,
            disableAutofocus: d,
            promptIndex: S,
            dragIndex: p,
            includeCount: f,
            singleColumn: O,
            onPromptDragComplete: A,
            onPromptDragStart: M,
            onPromptDragReset: D,
          } = e,
          { dropdownsAllowed: v } = (0, _.Ug)(n.id),
          j = (0, l.e7)([T.Z], () => T.Z.editedDefaultChannelIds),
          Z = v ? g.qm : g.M$,
          {
            drag: b,
            dragSourcePosition: U,
            drop: G,
            setIsDraggable: P,
          } = (0, c.Z)({
            type: "ONBOARDING_PROMPT_CARD",
            index: p,
            optionId: i.id,
            onDragStart: M,
            onDragComplete: A,
            onDragReset: D,
          }),
          B = (0, l.cj)([N.Z], () => {
            var e;
            return null !== (e = N.Z.errors[S]) && void 0 !== e ? e : x;
          }),
          [y, F] = a.useState(!1),
          [k, w] = a.useState(!1),
          H =
            null !== (t = B.options) && void 0 !== t
              ? t
              : B.optionErrors.filter(E.lm)[0],
          V = B.config,
          Y = v && i.options.length >= g.fY,
          W = (0, u.kl)(n.id, Array.from(j), [i]).length - j.size,
          z = a.useRef(null);
        return (a.useLayoutEffect(() => {
          setTimeout(() => {
            if (0 === S && !d) {
              var e;
              null === (e = z.current) || void 0 === e || e.focus();
            }
          }, 0);
        }, [d]),
        y)
          ? (0, s.jsx)(o.FocusRing, {
              children: (0, s.jsxs)("div", {
                tabIndex: 0,
                onFocus: () => w(!0),
                onBlur: () => w(!1),
                onMouseLeave: () => w(!1),
                className: r()(C.container, {
                  [C.dropIndicatorBefore]: null != U && S < U,
                  [C.dropIndicatorAfter]: null != U && S > U,
                  [C.containerFocused]: k,
                }),
                ref: (e) => b(G(e)),
                children: [
                  (0, s.jsx)("div", {
                    className: C.dragContainer,
                    onMouseEnter: () => P(!0),
                    onMouseLeave: () => P(!1),
                    children: (0, s.jsx)(o.DragIcon, {
                      size: "xs",
                      color: "currentColor",
                      className: C.dragIcon,
                    }),
                  }),
                  (0, s.jsx)(o.Text, {
                    className: C.questionNumber,
                    variant: "text-xs/semibold",
                    color: "text-muted",
                    children:
                      h.Z.Messages.ONBOARDING_PROMPT_OPTION_QUESTION_NUMBER.format(
                        { index: S + 1 },
                      ),
                  }),
                  (0, s.jsx)(o.Text, {
                    variant: "text-lg/semibold",
                    color: "text-normal",
                    children: i.title,
                  }),
                  (0, s.jsx)(o.Clickable, {
                    className: C.collapseButton,
                    onClick: () => F(!1),
                    children: (0, s.jsx)(I.Z, {
                      direction: I.Z.Directions.DOWN,
                      height: 16,
                      width: 16,
                    }),
                  }),
                  (0, s.jsx)(o.TooltipContainer, {
                    text: h.Z.Messages.ONBOARDING_PROMPT_DELETE,
                    className: C.removeButton,
                    children: (0, s.jsx)(o.Clickable, {
                      className: C.closeIcon,
                      onClick: () => (0, m.fi)(n, i.id),
                      children: (0, s.jsx)(o.TrashIcon, {
                        size: "xs",
                        color: "currentColor",
                      }),
                    }),
                  }),
                ],
              }),
            })
          : (0, s.jsx)(o.FocusRing, {
              children: (0, s.jsxs)("div", {
                tabIndex: 0,
                onFocus: () => w(!0),
                onBlur: () => w(!1),
                className: r()(C.container, {
                  [C.dropIndicatorBefore]: null != U && S < U,
                  [C.dropIndicatorAfter]: null != U && S > U,
                  [C.containerFocused]: k,
                }),
                ref: (e) => b(G(e)),
                children: [
                  (0, s.jsx)("div", {
                    className: C.dragContainer,
                    onMouseEnter: () => P(!0),
                    onMouseLeave: () => P(!1),
                    children: (0, s.jsx)(o.DragIcon, {
                      size: "xs",
                      color: "currentColor",
                      className: C.dragIcon,
                    }),
                  }),
                  (0, s.jsx)(o.Text, {
                    className: C.questionNumber,
                    variant: "text-xs/semibold",
                    color: "text-muted",
                    children:
                      h.Z.Messages.ONBOARDING_PROMPT_OPTION_QUESTION_NUMBER.format(
                        { index: S + 1 },
                      ),
                  }),
                  (0, s.jsx)(o.TextInput, {
                    className: C.title,
                    inputClassName: C.titleInput,
                    inputRef: z,
                    value: i.title,
                    onChange: (e) => (0, m.Kk)(n, i.id, { title: e }),
                    placeholder:
                      h.Z.Messages.ONBOARDING_PROMPT_TITLE_PLACEHOLDER,
                    maxLength: g.iU,
                    error: B.title,
                  }),
                  (0, s.jsx)(R, { prompt: i, guild: n }),
                  (0, s.jsx)(o.Text, {
                    className: C.optionsHeader,
                    variant: "text-xs/semibold",
                    color: "text-muted",
                    children: Y
                      ? h.Z.Messages.ONBOARDING_PROMPT_DROPDOWN_OPTIONS_HEADER.format(
                          { count: i.options.length, total: Z },
                        )
                      : h.Z.Messages.ONBOARDING_PROMPT_OPTIONS_HEADER.format({
                          count: i.options.length,
                          total: Z,
                        }),
                  }),
                  (0, s.jsx)(L, {
                    guild: n,
                    prompt: i,
                    promptIndex: S,
                    errors: B,
                    singleColumn: O,
                  }),
                  null != H ? (0, s.jsx)(o.InputError, { error: H }) : null,
                  (0, s.jsxs)("div", {
                    className: C.buttons,
                    children: [
                      (0, s.jsxs)("div", {
                        className: C.checkboxes,
                        children: [
                          (0, s.jsx)(o.Checkbox, {
                            size: 20,
                            type: o.Checkbox.Types.INVERTED,
                            value: !i.singleSelect,
                            onChange: (e, t) =>
                              (0, m.Kk)(n, i.id, { singleSelect: !t }),
                            children: (0, s.jsx)(o.Text, {
                              variant: "text-sm/normal",
                              color: "interactive-normal",
                              children:
                                h.Z.Messages
                                  .ONBOARDING_PROMPT_ALLOW_MULTIPLE_LABEL,
                            }),
                          }),
                          i.inOnboarding
                            ? (0, s.jsx)(o.Checkbox, {
                                size: 20,
                                type: o.Checkbox.Types.INVERTED,
                                value: i.inOnboarding && i.required,
                                onChange: (e, t) =>
                                  (0, m.Kk)(n, i.id, { required: t }),
                                disabled: !i.inOnboarding,
                                children: (0, s.jsx)(o.Text, {
                                  variant: "text-sm/normal",
                                  color: "interactive-normal",
                                  children: f
                                    ? h.Z.Messages.ONBOARDING_PROMPT_REQUIRED_LABEL_WITH_COUNT.format(
                                        { count: W },
                                      )
                                    : h.Z.Messages
                                        .ONBOARDING_PROMPT_REQUIRED_LABEL,
                                }),
                              })
                            : null,
                        ],
                      }),
                      (0, s.jsx)(o.Clickable, {
                        className: C.collapseButton,
                        onClick: () => F(!0),
                        children: (0, s.jsx)(I.Z, {
                          direction: I.Z.Directions.UP,
                          height: 16,
                          width: 16,
                        }),
                      }),
                      (0, s.jsx)(o.TooltipContainer, {
                        text: h.Z.Messages.ONBOARDING_PROMPT_DELETE,
                        className: C.removeButton,
                        children: (0, s.jsx)(o.Clickable, {
                          className: C.closeIcon,
                          onClick: () => (0, m.fi)(n, i.id),
                          children: (0, s.jsx)(o.TrashIcon, {
                            size: "xs",
                            color: "currentColor",
                          }),
                        }),
                      }),
                    ],
                  }),
                  null != V ? (0, s.jsx)(o.InputError, { error: V }) : null,
                ],
              }),
            });
      }
      function R(e) {
        let { prompt: t, guild: n } = e,
          [i, r] = a.useState(!1);
        if (
          (a.useEffect(() => {
            !i && t.title.length > 0 && r(!0);
          }, [i, t]),
          i)
        )
          return null;
        function l(e) {
          return (0, s.jsx)(o.Clickable, {
            className: C.example,
            onClick: () => (0, m.Kk)(n, t.id, { title: e }),
            children: (0, s.jsx)(o.Text, {
              variant: "text-xs/normal",
              children: e,
            }),
          });
        }
        return (0, s.jsxs)("div", {
          className: C.examplesSection,
          children: [
            (0, s.jsx)(o.Text, {
              variant: "text-xs/normal",
              color: "text-muted",
              children: h.Z.Messages.ONBOARDING_PROMPT_EXAMPLES_HEADER,
            }),
            (0, s.jsxs)("div", {
              className: C.examples,
              children: [
                l(h.Z.Messages.ONBOARDING_PROMPT_EXAMPLES_1),
                l(h.Z.Messages.ONBOARDING_PROMPT_EXAMPLES_2),
                l(h.Z.Messages.ONBOARDING_PROMPT_EXAMPLES_3),
                l(h.Z.Messages.ONBOARDING_PROMPT_EXAMPLES_4),
              ],
            }),
          ],
        });
      }
      function L(e) {
        let {
            guild: t,
            prompt: n,
            promptIndex: a,
            singleColumn: i,
            errors: r,
          } = e,
          { dropdownsAllowed: l } = (0, _.Ug)(t.id),
          o = l ? g.qm : g.M$,
          {
            handleDragStart: c,
            handleDragReset: u,
            handleDragComplete: I,
          } = (0, d.Z)(n.options, (e) => (0, m.Kk)(t, n.id, { options: e }));
        return (0, s.jsxs)("div", {
          className: C.options,
          children: [
            n.options.map((e, l) =>
              (0, s.jsx)(
                S.Z,
                {
                  guild: t,
                  prompt: n,
                  promptIndex: a,
                  singleColumn: i,
                  option: e,
                  onDragStart: c,
                  onDragComplete: I,
                  onDragReset: u,
                  hasError: null != r.optionErrors[l],
                },
                e.id,
              ),
            ),
            n.options.length < o
              ? (0, s.jsx)(S.B, {
                  guild: t,
                  prompt: n,
                  promptIndex: a,
                  singleColumn: i,
                })
              : null,
          ],
        });
      }
    },
    976983: function (e, t, n) {
      "use strict";
      n.d(t, {
        B: function () {
          return g;
        },
        Z: function () {
          return S;
        },
      }),
        n(47120);
      var s = n(735250);
      n(470079);
      var a = n(120356),
        i = n.n(a),
        r = n(392711),
        l = n.n(r),
        o = n(481060),
        c = n(668781),
        d = n(659388),
        u = n(107862),
        _ = n(307707),
        I = n(305762),
        E = n(570961),
        T = n(290511),
        m = n(689938),
        N = n(926916);
      function S(e) {
        var t, a, r, c;
        let {
            guild: u,
            prompt: S,
            singleColumn: g,
            promptIndex: h,
            option: C,
            hasError: x,
            onDragStart: p,
            onDragComplete: R,
            onDragReset: L,
          } = e,
          f = null,
          O = l().findIndex(S.options, (e) => e.id === C.id),
          {
            drag: A,
            dragSourcePosition: M,
            drop: D,
            setIsDraggable: v,
          } = (0, d.Z)({
            type: "ONBOARDING_PROMPT_OPTION_CARD-".concat(S.id),
            index: O,
            optionId: C.id,
            onDragStart: p,
            onDragComplete: R,
            onDragReset: L,
          }),
          { customEmoji: j, unicodeEmoji: Z } = (0, _.Z)(
            null === (t = C.emoji) || void 0 === t ? void 0 : t.id,
            null === (a = C.emoji) || void 0 === a ? void 0 : a.name,
          );
        return (
          !((0, T.Oq)(C.emoji) || null != j || null != Z) &&
            (f = m.Z.Messages.GUILD_SETTINGS_ONBOARDING_PROMPT_INVALID_EMOJI),
          (0, s.jsxs)(o.Clickable, {
            className: i()(N.optionCard, {
              [N.hasError]: x || null != f,
              [N.dropIndicatorBefore]: null != M && O < M,
              [N.dropIndicatorAfter]: null != M && O > M,
              [N.singleColumn]: g,
            }),
            onClick: () =>
              (0, o.openModalLazy)(async () => {
                let { default: e } = await n.e("1862").then(n.bind(n, 801001));
                return (t) =>
                  (0, s.jsx)(e, {
                    ...t,
                    guild: u,
                    prompt: S,
                    option: C,
                    index: h,
                    onSave: (e) => {
                      (0, E.Kk)(u, S.id, {
                        options: S.options.map((t) => (t.id === C.id ? e : t)),
                      });
                    },
                    onDelete: () => {
                      (0, E.Kk)(u, S.id, {
                        options: S.options.filter((e) => e.id !== C.id),
                      });
                    },
                  });
              }),
            onMouseEnter: () => v(!0),
            onMouseLeave: () => v(!1),
            innerRef: (e) => A(D(e)),
            children: [
              (0, s.jsx)("div", {
                className: N.dragContainer,
                children: (0, s.jsx)(o.DragIcon, {
                  size: "xs",
                  color: "currentColor",
                  className: N.__invalid_dragIcon,
                }),
              }),
              (0, s.jsxs)("div", {
                className: N.optionCardRow,
                children: [
                  (0, s.jsx)("div", {
                    className: N.emoji,
                    children: (0, s.jsx)(I.Z, {
                      emojiId:
                        null === (r = C.emoji) || void 0 === r ? void 0 : r.id,
                      emojiName:
                        null === (c = C.emoji) || void 0 === c
                          ? void 0
                          : c.name,
                      defaultComponent: null,
                    }),
                  }),
                  (0, s.jsxs)("div", {
                    className: N.text,
                    children: [
                      (0, s.jsx)(o.Text, {
                        variant: "text-md/medium",
                        color: "header-primary",
                        lineClamp: 1,
                        children: C.title,
                      }),
                      "" !== C.description &&
                        (0, s.jsx)(o.Text, {
                          className: N.description,
                          variant: "text-xs/normal",
                          color: "header-secondary",
                          children: C.description,
                        }),
                    ],
                  }),
                ],
              }),
              null != f &&
                (0, s.jsx)(o.Text, {
                  variant: "text-xs/medium",
                  color: "text-danger",
                  children: f,
                }),
            ],
          })
        );
      }
      function g(e) {
        let { guild: t, prompt: a, promptIndex: r, singleColumn: l } = e,
          { dropdownsAllowed: d } = (0, u.Ug)(t.id),
          _ = () => {
            (0, o.openModalLazy)(async () => {
              let { default: e } = await n.e("1862").then(n.bind(n, 801001));
              return (n) =>
                (0, s.jsx)(e, {
                  ...n,
                  guild: t,
                  prompt: a,
                  onSave: (e) =>
                    (0, E.Kk)(t, a.id, { options: [...a.options, e] }),
                  onDelete: () => {},
                  index: r,
                });
            });
          };
        return (0, s.jsx)(o.Clickable, {
          className: i()(N.optionCard, N.addOptionCard, {
            [N.addFirstOptionCard]: 0 === a.options.length,
            [N.singleColumn]: l,
          }),
          onClick: () => {
            d && a.options.length + 1 === T.fY
              ? c.Z.show({
                  title: m.Z.Messages.ONBOARDING_PROMPT_THRESHOLD_ALERT_TITLE,
                  body: m.Z.Messages.ONBOARDING_PROMPT_THRESHOLD_ALERT_DESCRIPTION.format(
                    { thresholdCount: T.fY },
                  ),
                  confirmText: m.Z.Messages.OKAY,
                  cancelText: m.Z.Messages.CANCEL,
                  onConfirm: _,
                })
              : _();
          },
          children: (0, s.jsxs)("div", {
            className: N.optionCardRow,
            children: [
              (0, s.jsx)(o.CirclePlusIcon, {
                size: "md",
                color: "currentColor",
                className: N.plusIcon,
              }),
              (0, s.jsx)(o.Text, {
                variant: "text-md/medium",
                color: "header-primary",
                children: m.Z.Messages.ONBOARDING_PROMPT_ADD_OPTION,
              }),
            ],
          }),
        });
      }
    },
    716130: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return h;
        },
      }),
        n(47120);
      var s = n(735250),
        a = n(470079),
        i = n(120356),
        r = n.n(i),
        l = n(399606),
        o = n(481060),
        c = n(668781),
        d = n(659388),
        u = n(710344),
        _ = n(430824),
        I = n(570961),
        E = n(208665),
        T = n(959508),
        m = n(290511),
        N = n(689938),
        S = n(84877);
      function g(e) {
        let { guild: t, prejoinOnly: n, postjoinOnly: i } = e,
          c = (0, l.e7)([E.Z], () => E.Z.editedOnboardingPrompts),
          u = c.filter((e) => e.inOnboarding),
          _ = u.length,
          {
            drag: T,
            drop: g,
            dragSourcePosition: h,
            setIsDraggable: C,
          } = (0, d.Z)({
            type: "ONBOARDING_PROMPT_CARD",
            index: _,
            optionId: "separator",
            onDragStart: () => {},
            onDragComplete: () => {},
            onDragReset: () => {},
          }),
          x = a.useRef(null);
        return (
          a.useEffect(() => {
            C(!1);
          }, [C]),
          a.useEffect(() => {
            T(g(x));
          }, [T, g, x]),
          (0, s.jsxs)("div", {
            ref: x,
            className: r()(S.separatorSection, {
              [S.dropIndicatorBefore]: null != h && _ < h,
              [S.dropIndicatorAfter]: null != h && _ > h,
            }),
            children: [
              !i && u.length < m.b3
                ? (0, s.jsxs)(o.Clickable, {
                    className: S.addPrompt,
                    onClick: () => (0, I.tS)(t, [...c, (0, m.yZ)(!0)], !1),
                    children: [
                      (0, s.jsx)(o.CirclePlusIcon, {
                        size: "custom",
                        color: "currentColor",
                        className: S.plusIcon,
                        width: 20,
                        height: 20,
                      }),
                      (0, s.jsx)(o.Text, {
                        variant: "text-md/medium",
                        color: "text-brand",
                        children: N.Z.Messages.ONBOARDING_PROMPT_ADD_PROMPT,
                      }),
                    ],
                  })
                : null,
              n
                ? null
                : (0, s.jsxs)(s.Fragment, {
                    children: [
                      (0, s.jsx)("div", { className: S.divider }),
                      (0, s.jsx)(o.Heading, {
                        variant: "heading-md/bold",
                        children:
                          N.Z.Messages.ONBOARDING_QUESTIONS_POST_JOIN_HEADER,
                      }),
                      (0, s.jsx)(o.Text, {
                        variant: "text-sm/normal",
                        color: "header-secondary",
                        className: S.subtitle,
                        children:
                          N.Z.Messages.ONBOARDING_QUESTIONS_POST_JOIN_SUBHEADER,
                      }),
                    ],
                  }),
            ],
          })
        );
      }
      function h(e) {
        let {
            guildId: t,
            prejoinOnly: n,
            postjoinOnly: a,
            includeCount: i,
            singleColumn: r,
          } = e,
          d = (0, l.e7)([_.Z], () => _.Z.getGuild(t)),
          h = (0, l.e7)([E.Z], () => E.Z.editedOnboardingPrompts),
          C = h.filter((e) => e.inOnboarding),
          x = h.filter((e) => !0 !== e.inOnboarding),
          p = [
            ...C.map((e) => ({ id: e.id, data: e })),
            { id: "separator", data: (0, m.ae)() },
            ...x.map((e) => ({ id: e.id, data: e })),
          ],
          {
            handleDragStart: R,
            handleDragReset: L,
            handleDragComplete: f,
          } = (0, u.Z)(p, (e) => {
            let t = e.findIndex((e) => "separator" === e.id),
              n = e.slice(0, t).map((e) => ({ ...e.data, inOnboarding: !0 })),
              s = e
                .slice(t + 1)
                .map((e) => ({ ...e.data, inOnboarding: !1, required: !1 }));
            if (n.length > m.b3) {
              c.Z.show({
                title: N.Z.Messages.ONBOARDING_QUESTIONS_CANNOT_MOVE,
                body: N.Z.Messages.ONBOARDING_QUESTIONS_SAVE_TOO_MANY_PROMPTS_IN_ONBOARDING.format(
                  { numQuestions: m.b3 },
                ),
              });
              return;
            }
            (0, I.tS)(d, [...n, ...s]);
          });
        return null == d
          ? null
          : (0, s.jsxs)(s.Fragment, {
              children: [
                a
                  ? null
                  : (0, s.jsxs)(s.Fragment, {
                      children: [
                        n
                          ? null
                          : (0, s.jsxs)("div", {
                              children: [
                                (0, s.jsx)(o.Heading, {
                                  variant: "heading-md/bold",
                                  children:
                                    N.Z.Messages
                                      .ONBOARDING_QUESTIONS_PRE_JOIN_HEADER,
                                }),
                                (0, s.jsx)(o.Text, {
                                  variant: "text-sm/normal",
                                  color: "header-secondary",
                                  className: S.subtitle,
                                  children:
                                    N.Z.Messages
                                      .ONBOARDING_QUESTIONS_PRE_JOIN_SUBHEADER,
                                }),
                              ],
                            }),
                        C.map((e, t) =>
                          (0, s.jsx)(
                            T.Z,
                            {
                              guild: d,
                              prompt: e,
                              disableAutofocus: n,
                              includeCount: i,
                              singleColumn: r,
                              promptIndex: t,
                              dragIndex: t,
                              onPromptDragStart: R,
                              onPromptDragReset: L,
                              onPromptDragComplete: f,
                            },
                            e.id,
                          ),
                        ),
                      ],
                    }),
                (0, s.jsx)(g, { guild: d, prejoinOnly: n, postjoinOnly: a }),
                n
                  ? null
                  : (0, s.jsxs)(s.Fragment, {
                      children: [
                        x.map((e, t) =>
                          (0, s.jsx)(
                            T.Z,
                            {
                              guild: d,
                              prompt: e,
                              promptIndex: t + C.length,
                              dragIndex: t + C.length + 1,
                              onPromptDragStart: R,
                              onPromptDragReset: L,
                              onPromptDragComplete: f,
                            },
                            e.id,
                          ),
                        ),
                        h.length < m.YW
                          ? (0, s.jsxs)(o.Clickable, {
                              className: S.addPrompt,
                              onClick: () =>
                                (0, I.tS)(d, [...h, (0, m.yZ)(!1)], !1),
                              children: [
                                (0, s.jsx)(o.CirclePlusIcon, {
                                  size: "custom",
                                  color: "currentColor",
                                  className: S.plusIcon,
                                  width: 20,
                                  height: 20,
                                }),
                                (0, s.jsx)(o.Text, {
                                  variant: "text-md/medium",
                                  color: "text-brand",
                                  children:
                                    N.Z.Messages.ONBOARDING_PROMPT_ADD_PROMPT,
                                }),
                              ],
                            })
                          : null,
                      ],
                    }),
              ],
            });
      }
    },
    677892: function (e, t, n) {
      "use strict";
      n.d(t, {
        $$: function () {
          return g;
        },
        P_: function () {
          return x;
        },
        ap: function () {
          return C;
        },
        ku: function () {
          return h;
        },
      }),
        n(47120);
      var s = n(735250),
        a = n(470079),
        i = n(442837),
        r = n(481060),
        l = n(45966),
        o = n(637853),
        c = n(734893),
        d = n(621923),
        u = n(8426),
        _ = n(969632),
        I = n(974513),
        E = n(290511),
        T = n(689938),
        m = n(839754);
      function N(e) {
        let t,
          {
            title: n,
            description: a,
            icon: i,
            hasStarted: l,
            status: o,
            onEdit: c,
            extra: d,
          } = e;
        switch (o) {
          case "good":
            t = (0, s.jsxs)(s.Fragment, {
              children: [
                (0, s.jsx)(r.CheckmarkLargeIcon, {
                  size: "xs",
                  color: "currentColor",
                  className: m.checkmark,
                }),
                (0, s.jsx)(r.Text, {
                  variant: "text-xs/semibold",
                  color: "status-positive",
                  className: m.statusText,
                  children: T.Z.Messages.DEFAULT_CHANNELS_GOOD,
                }),
              ],
            });
            break;
          case "warning":
            t = (0, s.jsxs)(s.Fragment, {
              children: [
                (0, s.jsx)(r.CircleWarningIcon, {
                  size: "xs",
                  color: "currentColor",
                  className: m.warning,
                }),
                (0, s.jsx)(r.Text, {
                  variant: "text-xs/semibold",
                  color: "status-warning",
                  className: m.statusText,
                  children: T.Z.Messages.ONBOARDING_PROMPTS_WARNING,
                }),
              ],
            });
            break;
          case "required":
            t = (0, s.jsxs)(s.Fragment, {
              children: [
                (0, s.jsx)(r.CircleWarningIcon, {
                  size: "xs",
                  color: "currentColor",
                  className: m.danger,
                }),
                (0, s.jsx)(r.Text, {
                  variant: "text-xs/semibold",
                  color: "status-danger",
                  className: m.statusText,
                  children: T.Z.Messages.REQUIRED,
                }),
              ],
            });
        }
        return (0, s.jsxs)("div", {
          className: m.onboardingStepContainer,
          children: [
            (0, s.jsxs)("div", {
              className: m.leftContainer,
              children: [
                (0, s.jsx)("div", { className: m.iconContainer, children: i }),
                (0, s.jsxs)("div", {
                  className: m.onboardingStepText,
                  children: [
                    (0, s.jsx)(r.Heading, {
                      variant: "heading-md/semibold",
                      children: n,
                    }),
                    (0, s.jsx)(r.Text, {
                      variant: "text-xs/normal",
                      color:
                        l && "required" === o ? "status-danger" : "text-normal",
                      children: a,
                    }),
                  ],
                }),
              ],
            }),
            (0, s.jsxs)("div", {
              className: m.rightContainer,
              children: [
                t,
                d,
                l
                  ? (0, s.jsx)(r.Button, {
                      className: m.cta,
                      size: r.Button.Sizes.SMALL,
                      color: r.Button.Colors.PRIMARY,
                      look: r.Button.Looks.OUTLINED,
                      onClick: c,
                      children: T.Z.Messages.EDIT,
                    })
                  : (0, s.jsxs)(r.Button, {
                      className: m.cta,
                      innerClassName: m.ctaInner,
                      size: r.Button.Sizes.SMALL,
                      color: r.Button.Colors.PRIMARY,
                      onClick: c,
                      children: [
                        T.Z.Messages.GUILD_ONBOARDING_SETUP_REVIEW_SET_UP,
                        (0, s.jsx)(r.ArrowSmallRightIcon, {
                          size: "xxs",
                          color: "currentColor",
                        }),
                      ],
                    }),
              ],
            }),
          ],
        });
      }
      function S(e) {
        let t = (0, i.e7)([l.Z], () => l.Z.getDefaultChannelIds(e)),
          n = a.useMemo(() => new Set(t), [t]),
          [s, r] = (0, o.VF)(e, n);
        return r.length >= E.md && s.length >= E.X;
      }
      function g(e) {
        let t = S(e),
          n = (0, I.O4)(e);
        return t || n;
      }
      function h(e) {
        var t, n, c, d;
        let { guildId: u, onEdit: _, disableGoodStatus: g } = e,
          h = (0, i.Wu)([l.Z], () => l.Z.getDefaultChannelIds(u)),
          C = (0, i.e7)(
            [l.Z],
            () =>
              (0, o.kl)(
                u,
                l.Z.getDefaultChannelIds(u),
                l.Z.getOnboardingPrompts(u),
              ).length,
          ),
          x = a.useMemo(() => new Set(h), [h]),
          [, p] = (0, o.VF)(u, x),
          R = p.length,
          L = S(u),
          f = (0, I.O4)(u),
          O = (0, i.e7)([l.Z], () => l.Z.isAdvancedMode(u));
        let A =
          ((t = L),
          (n = O),
          (c = R),
          (d = C),
          n
            ? T.Z.Messages.GUILD_ONBOARDING_SETUP_REVIEW_NUM_DEFAULT_CHANNELS_ADVANCED.format(
                { numDefaultChannels: c, numFromQuestions: d - c },
              )
            : t
              ? T.Z.Messages.GUILD_ONBOARDING_SETUP_REVIEW_NUM_DEFAULT_CHANNELS.format(
                  { numDefaultChannels: c },
                )
              : T.Z.Messages.GUILD_ONBOARDING_SETUP_REVIEW_NOT_ENOUGH_DEFAULT_CHANNELS.format(
                  { numDefaultChannels: E.md, numChattableChannels: E.X },
                ));
        return (0, s.jsx)(N, {
          title: O
            ? T.Z.Messages.GUILD_SETTINGS_DEFAULT_CHANNELS_ADVANCED
            : T.Z.Messages.GUILD_SETTINGS_DEFAULT_CHANNELS,
          description: A,
          icon: (0, s.jsx)(r.TextIcon, {
            size: "md",
            color: "currentColor",
            className: m.channelIcon,
          }),
          hasStarted: R > 0 || O,
          status: L || f ? (g ? "none" : "good") : "required",
          onEdit: _,
        });
      }
      function C(e) {
        let { guildId: t, onEdit: n, disableGoodStatus: a } = e,
          c = (0, i.Wu)([l.Z], () => l.Z.getDefaultChannelIds(t)),
          d = (0, i.Wu)([l.Z], () => l.Z.getOnboardingPrompts(t)),
          u = d.length,
          [_, I] = (0, o.dF)(t, d, c),
          E = _.length,
          S = _.length + I.length,
          g = (E / S) * 100,
          h = (0, i.e7)([l.Z], () => l.Z.isAdvancedMode(t)),
          C = u > 0,
          x = "none";
        return (
          C && (g >= 85 && !a ? (x = "good") : g < 85 && (x = "warning")),
          (0, s.jsx)(N, {
            title: h
              ? T.Z.Messages.ONBOARDING_PROMPT_SETTINGS_HEADER_ADVANCED
              : T.Z.Messages.ONBOARDING_PROMPT_SETTINGS_HEADER,
            description: T.Z.Messages.ONBOARDING_PROMPT_CHANNEL_COVERAGE.format(
              {
                numChannels: E,
                numTotalChannels: S,
                channelsHook: (e, t) =>
                  (0, s.jsx)(
                    "span",
                    {
                      style: {
                        color:
                          g > 85
                            ? "var(--header-primary)"
                            : "var(--status-warning)",
                      },
                      children: e,
                    },
                    t,
                  ),
              },
            ),
            icon: (0, s.jsx)(r.FriendsIcon, {
              size: "md",
              color: "currentColor",
              className: m.channelIcon,
            }),
            hasStarted: C,
            status: x,
            onEdit: n,
          })
        );
      }
      function x(e) {
        let { guildId: t, onEdit: n, disableGoodStatus: o } = e,
          I = (0, i.e7)([_.Z], () => _.Z.getSettings()),
          E = (0, i.e7)([l.Z], () => l.Z.getEnabled(t)),
          { serverGuideOptional: S } = (0, d.hl)(t),
          g = (0, c.uo)(I),
          h = I.enabled,
          C = a.useCallback(() => {
            (0, u.To)(t, !h);
          }, [t, h]),
          x = !(0, c.av)(I),
          p = "none";
        x && (g && !o ? (p = "good") : !g && (p = "required"));
        let R = T.Z.Messages.GUILD_SETTINGS_ONBOARDING_HOME_REVIEW_DESCRIPTION;
        g
          ? !x &&
            (R =
              T.Z.Messages
                .GUILD_SETTINGS_ONBOARDING_HOME_REVIEW_NOT_STARTED_DESCRIPTION)
          : (R =
              T.Z.Messages
                .GUILD_SETTINGS_ONBOARDING_HOME_REVIEW_INVALID_DESCRIPTION);
        let L = null;
        return (
          x &&
            S &&
            E &&
            (L = (0, s.jsx)(r.Switch, {
              className: m.inlineSwitch,
              checked: h,
              onChange: C,
              disabled: !g,
            })),
          (0, s.jsx)(N, {
            title: T.Z.Messages.GUILD_SETTINGS_ONBOARDING_HOME_REVIEW_TITLE,
            description: R,
            icon: (0, s.jsx)(r.SignPostIcon, {
              size: "md",
              color: "currentColor",
              className: m.channelIcon,
            }),
            hasStarted: x,
            status: p,
            onEdit: n,
            extra: L,
          })
        );
      }
    },
    494831: function (e, t, n) {
      "use strict";
      n.d(t, {
        Cl: function () {
          return d;
        },
      });
      var s,
        a,
        i = n(149765),
        r = n(692547),
        l = n(700785),
        o = n(981631),
        c = n(689938);
      let d = 371;
      ((s = a || (a = {}))[(s.COSMETIC = 0)] = "COSMETIC"),
        (s[(s.MEMBER = 1)] = "MEMBER"),
        (s[(s.MODERATOR = 2)] = "MODERATOR"),
        (s[(s.MANAGER = 3)] = "MANAGER");
      let u = l.TP;
      i.Od(u, o.Plq.MENTION_EVERYONE);
      let _ = i.$e(
          u,
          o.Plq.VIEW_AUDIT_LOG,
          o.Plq.MANAGE_NICKNAMES,
          o.Plq.KICK_MEMBERS,
          o.Plq.BAN_MEMBERS,
          o.Plq.MANAGE_MESSAGES,
          o.Plq.MUTE_MEMBERS,
          o.Plq.DEAFEN_MEMBERS,
          o.Plq.MOVE_MEMBERS,
          o.Plq.PRIORITY_SPEAKER,
          o.Plq.MODERATE_MEMBERS,
        ),
        I = i.$e(
          _,
          o.Plq.MANAGE_CHANNELS,
          o.Plq.MANAGE_THREADS,
          o.Plq.MANAGE_ROLES,
          o.Plq.MANAGE_GUILD_EXPRESSIONS,
          o.Plq.MANAGE_GUILD,
          o.Plq.MANAGE_WEBHOOKS,
          o.Plq.SEND_TTS_MESSAGES,
        );
      i.IH(I, o.Plq.VIEW_GUILD_ANALYTICS),
        r.Z.unsafe_rawColors.BRAND_500.css,
        l.Hn,
        r.Z.unsafe_rawColors.GREEN_360.css,
        r.Z.unsafe_rawColors.YELLOW_300.css,
        r.Z.unsafe_rawColors.RED_400.css,
        () => c.Z.Messages.ROLE_PERMISSION_TEMPLATE_MANAGER_CONTENT_PREFACE;
    },
    130341: function (e, t, n) {
      "use strict";
      n.d(t, {
        UT: function () {
          return x;
        },
        _4: function () {
          return m;
        },
        cm: function () {
          return N;
        },
        e: function () {
          return g;
        },
        eg: function () {
          return C;
        },
        lJ: function () {
          return S;
        },
        rY: function () {
          return h;
        },
        uo: function () {
          return p;
        },
      }),
        n(724458),
        n(653041),
        n(47120);
      var s = n(470079),
        a = n(658722),
        i = n.n(a),
        r = n(442837),
        l = n(271383),
        o = n(594174),
        c = n(626135),
        d = n(823379),
        u = n(892880),
        _ = n(51144),
        I = n(480608),
        E = n(203377),
        T = n(981631);
      let m = 50,
        N = 1e3;
      function S(e, t) {
        let n = (0, r.Wu)(
            [l.ZP],
            () => {
              let n = l.ZP.getMembers(e);
              return null == t ? n : n.filter(t);
            },
            [e, t],
          ),
          a = (0, r.cj)(
            [o.default],
            () =>
              n.reduce((e, t) => {
                let n = o.default.getUser(t.userId);
                return null == n ? e : ((e[t.userId] = n), e);
              }, {}),
            [n],
          );
        return s.useMemo(() => {
          let t = [];
          for (let i of n) {
            var s;
            let n = a[i.userId];
            null != n &&
              t.push({
                name:
                  null !== (s = i.nick) && void 0 !== s ? s : _.ZP.getName(n),
                userTag: _.ZP.getUserTag(n),
                id: i.userId,
                avatarSource: n.getAvatarSource(e),
                avatarURL: n.getAvatarURL(e, 80),
                bot: n.bot,
                verifiedBot: n.isVerifiedBot(),
                roles: i.roles,
                key: i.userId,
                user: n,
              });
          }
          return t;
        }, [n, a, e]);
      }
      function g(e, t, n) {
        return (
          s.useEffect(() => {
            (0, I.H)(e, t).catch(n);
          }, [e, t]),
          S(
            e,
            s.useCallback((e) => e.roles.includes(t), [t]),
          )
        );
      }
      function h(e, t) {
        let n = s.useRef(!1);
        s.useEffect(() => {
          u.Z.requestMembers(e, t, 200),
            "" !== t &&
              !n.current &&
              (c.default.track(T.rMx.SEARCH_STARTED, {
                search_type: "Role Members",
              }),
              (n.current = !0));
        }, [e, t]);
      }
      function C(e, t) {
        let n = e.trim().toLowerCase();
        return (
          t.id === n ||
          i()(n, t.name.toLowerCase()) ||
          i()(n, t.userTag.toLowerCase())
        );
      }
      function x(e) {
        switch (e) {
          case E.ZI.MEMBERS:
            return "Members";
          case E.ZI.PERMISSIONS:
            return "Permissions";
          case E.ZI.DISPLAY:
            return "Role Settings";
          case E.ZI.VERIFICATIONS:
            return "Connections";
          default:
            (0, d.vE)(e);
        }
      }
      function p(e, t) {
        return "" === t || e.name.toLowerCase().includes(t.toLowerCase());
      }
    },
    853813: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return O;
        },
      });
      var s = n(735250),
        a = n(470079),
        i = n(512722),
        r = n.n(i),
        l = n(442837),
        o = n(481060),
        c = n(367907),
        d = n(605436),
        u = n(228643),
        _ = n(496675),
        I = n(626135),
        E = n(823379),
        T = n(243730),
        m = n(946724),
        N = n(999382),
        S = n(130341),
        g = n(981975),
        h = n(660962),
        C = n(442182),
        x = n(322816),
        p = n(266665),
        R = n(203377),
        L = n(981631),
        f = n(77473);
      function O(e) {
        let t,
          {
            editRoleId: n,
            setEditRoleId: i,
            selectedSection: O,
            setSelectedSection: A,
          } = e,
          M = (0, l.e7)([m.Z], () => m.Z.guild, []);
        r()(null != M, "guildId cannot be null here");
        let { role: D, permissionSearchQuery: v } = (0, l.cj)(
          [m.Z],
          () => ({
            role: m.Z.getRole(n),
            permissionSearchQuery: m.Z.getPermissionSearchQuery(),
          }),
          [n],
        );
        a.useEffect(() => {
          null == D && i(null);
        }, [D, i]);
        let j = (0, l.e7)([_.Z], () => _.Z.getHighestRole(M), [M]),
          Z = (0, l.e7)([_.Z], () => !_.Z.isRoleHigher(M, j, D)),
          b = a.useRef(null),
          U = (0, l.e7)([N.Z], () => N.Z.getProps().integrations);
        if (
          (a.useEffect(() => {
            var e, t;
            let s = (0, S.UT)(O),
              a =
                null !==
                  (t =
                    null === (e = T.Z.getRoleMemberCount(M.id)) || void 0 === e
                      ? void 0
                      : e[n]) && void 0 !== t
                  ? t
                  : 0;
            I.default.track(L.rMx.ROLE_PAGE_VIEWED, {
              tab_opened: s,
              is_everyone: (0, d.pM)(M.id, n),
              role_id: n,
              role_mentionable: null == D ? void 0 : D.mentionable,
              role_hoist: null == D ? void 0 : D.hoist,
              role_permissions: null == D ? void 0 : D.permissions.toString(),
              role_num_members: a,
              ...(0, c.hH)(M.id),
            });
          }, [O, M.id, null == D ? void 0 : D.id]),
          a.useEffect(() => {
            if ((null == D ? void 0 : D.id) != null) (0, u.sE)(M.id, D.id);
          }, [M.id, null == D ? void 0 : D.id]),
          null == D)
        )
          return null;
        switch (O) {
          case R.ZI.DISPLAY:
            t = (0, s.jsx)(h.ZP, {
              guild: M,
              role: D,
              locked: Z,
              highestRole: j,
              setSelectedSection: A,
            });
            break;
          case R.ZI.PERMISSIONS:
            t = (0, s.jsx)(x.ZP, {
              guild: M,
              role: D,
              locked: Z,
              setSelectedSection: A,
              initialSearchQuery: v,
            });
            break;
          case R.ZI.VERIFICATIONS:
            t = (0, s.jsx)(g.Z, {
              guild: M,
              role: D,
              locked: Z,
              setSelectedSection: A,
              integrations: null != U ? U : void 0,
            });
            break;
          case R.ZI.MEMBERS:
            t = (0, s.jsx)(C.ZP, {
              guild: M,
              role: D,
              locked: Z,
              setSelectedSection: A,
            });
            break;
          default:
            (0, E.vE)(O);
        }
        return (0, s.jsxs)(o.FormSection, {
          className: f.page,
          children: [
            (0, s.jsx)(p.Z, {
              guild: M,
              currentRoleId: n,
              setCurrentRoleId: i,
              setSelectedSection: A,
            }),
            (0, s.jsx)("div", {
              className: f.contentContainer,
              ref: b,
              children: (0, s.jsx)(o.FocusRingScope, {
                containerRef: b,
                children: t,
              }),
            }),
          ],
        });
      }
    },
    714939: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return o;
        },
      });
      var s = n(735250);
      n(470079);
      var a = n(481060),
        i = n(259580),
        r = n(689938),
        l = n(914908);
      function o(e) {
        let { role: t, onClick: n } = e;
        return (0, s.jsxs)(a.Clickable, {
          className: l.container,
          onClick: n,
          children: [
            (0, s.jsx)("div", {
              className: l.icon,
              children: (0, s.jsx)(a.GroupIcon, {
                size: "custom",
                color: "currentColor",
                width: 20,
                height: 20,
              }),
            }),
            (0, s.jsxs)("div", {
              className: l.description,
              children: [
                (0, s.jsx)(a.Text, {
                  className: l.label,
                  color: "none",
                  variant: "text-md/bold",
                  children: r.Z.Messages.ROLE_EVERYONE_LABEL,
                }),
                (0, s.jsxs)(a.Text, {
                  color: "none",
                  variant: "text-xs/normal",
                  children: [
                    t.name,
                    " • ",
                    r.Z.Messages.ROLE_EVERYONE_DESCRIPTION,
                  ],
                }),
              ],
            }),
            (0, s.jsx)(i.Z, {
              className: l.arrow,
              direction: i.Z.Directions.RIGHT,
            }),
          ],
        });
      }
    },
    163249: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return g;
        },
      }),
        n(47120);
      var s = n(735250),
        a = n(470079),
        i = n(120356),
        r = n.n(i),
        l = n(442837),
        o = n(481060),
        c = n(749210),
        d = n(493544),
        u = n(607070),
        _ = n(714939),
        I = n(981631),
        E = n(689938),
        T = n(912111);
      function m(e) {
        let { color: t, children: n } = e;
        return (0, s.jsxs)("div", {
          className: T.roleTag,
          children: [
            (0, s.jsx)(o.RoleCircle, { className: T.roleDot, color: t }),
            (0, s.jsx)("span", { className: T.roleText, children: n }),
          ],
        });
      }
      function N(e) {
        let { guild: t, display: n } = e;
        return (0, s.jsxs)("div", {
          className: r()(T.banner, t.backgroundClass, { [T.bannerOut]: !n }),
          children: [
            (0, s.jsx)("div", {
              className: T.roles,
              children: t.roles.map((e, t) =>
                (0, s.jsx)(
                  "div",
                  {
                    className: T.rolesRow,
                    children: e.map((e) =>
                      (0, s.jsx)(
                        m,
                        { color: e.color, children: e.name },
                        e.name,
                      ),
                    ),
                  },
                  t,
                ),
              ),
            }),
            (0, s.jsx)("div", {
              className: T.profileCard,
              children: (0, s.jsxs)("div", {
                className: T.avatarContainer,
                children: [
                  (0, s.jsx)(o.Avatar, {
                    size: o.AvatarSizes.SIZE_56,
                    "aria-hidden": !0,
                    status: I.Skl.ONLINE,
                    src: t.avatar,
                  }),
                  (0, s.jsx)(o.Text, {
                    color: "header-primary",
                    variant: "text-md/bold",
                    className: T.avatarName,
                    children: t.username,
                  }),
                ],
              }),
            }),
          ],
        });
      }
      function S() {
        let e = (0, l.e7)([u.Z], () => u.Z.useReducedMotion),
          t = a.useMemo(
            () => [
              {
                backgroundClass: T.bannerClubs,
                username: "Wumpus#0000",
                avatar: n(91055),
                roles: [
                  [
                    {
                      name: E.Z.Messages.ROLE_EMPTY_STATE_CLUBS_ROLE_1,
                      color: "#7e00fc",
                    },
                    {
                      name: E.Z.Messages.ROLE_EMPTY_STATE_CLUBS_ROLE_2,
                      color: "#faa61a",
                    },
                    {
                      name: E.Z.Messages.ROLE_EMPTY_STATE_CLUBS_ROLE_3,
                      color: "#f06ea8",
                    },
                  ],
                  [
                    {
                      name: E.Z.Messages.ROLE_EMPTY_STATE_CLUBS_ROLE_4,
                      color: "#45ddc0",
                    },
                    {
                      name: E.Z.Messages.ROLE_EMPTY_STATE_CLUBS_ROLE_5,
                      color: "#00b0f4",
                    },
                    {
                      name: E.Z.Messages.ROLE_EMPTY_STATE_CLUBS_ROLE_6,
                      color: "#ba1616",
                    },
                  ],
                ],
              },
              {
                backgroundClass: T.bannerGaming,
                username: "Graggle#0000",
                avatar: n(507003),
                roles: [
                  [
                    {
                      name: E.Z.Messages.ROLE_EMPTY_STATE_GAMING_ROLE_1,
                      color: "#4a76e6",
                    },
                    {
                      name: E.Z.Messages.ROLE_EMPTY_STATE_GAMING_ROLE_2,
                      color: "#ad87ff",
                    },
                    {
                      name: E.Z.Messages.ROLE_EMPTY_STATE_GAMING_ROLE_3,
                      color: "#6defcf",
                    },
                  ],
                  [
                    {
                      name: E.Z.Messages.ROLE_EMPTY_STATE_GAMING_ROLE_4,
                      color: "#ff73fa",
                    },
                    {
                      name: E.Z.Messages.ROLE_EMPTY_STATE_GAMING_ROLE_5,
                      color: "#3ba55c",
                    },
                    {
                      name: E.Z.Messages.ROLE_EMPTY_STATE_GAMING_ROLE_6,
                      color: "#ff1b66",
                    },
                  ],
                ],
              },
              {
                backgroundClass: T.bannerHobbies,
                username: "Mallow#0000",
                avatar: n(552557),
                roles: [
                  [
                    {
                      name: E.Z.Messages.ROLE_EMPTY_STATE_HOBBIES_ROLE_1,
                      color: "#20d6b8",
                    },
                    {
                      name: E.Z.Messages.ROLE_EMPTY_STATE_HOBBIES_ROLE_2,
                      color: "#236136",
                    },
                    {
                      name: E.Z.Messages.ROLE_EMPTY_STATE_HOBBIES_ROLE_3,
                      color: "#ff9a15",
                    },
                  ],
                  [
                    {
                      name: E.Z.Messages.ROLE_EMPTY_STATE_HOBBIES_ROLE_4,
                      color: "#ff78b9",
                    },
                    {
                      name: E.Z.Messages.ROLE_EMPTY_STATE_HOBBIES_ROLE_5,
                      color: "#00b0f4",
                    },
                    {
                      name: E.Z.Messages.ROLE_EMPTY_STATE_HOBBIES_ROLE_6,
                      color: "#6f52e4",
                    },
                  ],
                ],
              },
            ],
            [],
          ),
          [i, r] = a.useState(0);
        return (
          a.useEffect(() => {
            if (e) return;
            let n = setTimeout(() => r((i + 1) % t.length), 6332);
            return () => clearTimeout(n);
          }, [i]),
          (0, s.jsx)("div", {
            className: T.bannerContainer,
            "aria-hidden": !0,
            children: t.map((e, t) =>
              (0, s.jsx)(N, { guild: e, display: t === i }, t),
            ),
          })
        );
      }
      function g(e) {
        let { guild: t, everyoneRole: n, setEditRoleId: i } = e,
          [r, l] = a.useState(!1),
          u = async () => {
            l(!0), await c.Z.createRole(t.id), l(!1);
          },
          I = a.useCallback(() => {
            i(n.id);
          }, [i, n.id]);
        return (0, s.jsx)(d.NM, {
          children: (0, s.jsxs)(o.FormSection, {
            className: T.section,
            title: E.Z.Messages.ROLES,
            tag: o.FormTitleTags.H2,
            children: [
              (0, s.jsxs)("div", {
                className: T.container,
                children: [
                  (0, s.jsx)(S, {}),
                  (0, s.jsx)(o.Heading, {
                    variant: "heading-xl/semibold",
                    children: E.Z.Messages.ROLE_OVERVIEW_EMPTY_SUBHEADER,
                  }),
                  (0, s.jsx)(o.Text, {
                    color: "header-secondary",
                    variant: "text-md/normal",
                    className: T.introBody,
                    children: E.Z.Messages.ROLE_OVERVIEW_DESCRIPTION,
                  }),
                  (0, s.jsx)(o.Button, {
                    className: T.button,
                    size: o.Button.Sizes.MEDIUM,
                    onClick: u,
                    submitting: r,
                    children: E.Z.Messages.ROLE_CREATE_CTA,
                  }),
                ],
              }),
              (0, s.jsx)(o.FormDivider, { className: T.divider }),
              (0, s.jsx)(_.Z, { role: n, onClick: I }),
            ],
          }),
        });
      }
    },
    34112: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return Z;
        },
      }),
        n(47120);
      var s = n(735250),
        a = n(470079),
        i = n(120356),
        r = n.n(i),
        l = n(225857),
        o = n(290843),
        c = n(866442),
        d = n(442837),
        u = n(481060),
        _ = n(239091),
        I = n(493544),
        E = n(134433),
        T = n(91218),
        m = n(646892),
        N = n(741247),
        S = n(518738),
        g = n(549631),
        h = n(496675),
        C = n(626135),
        x = n(480608),
        p = n(243730),
        R = n(130341),
        L = n(970129),
        f = n(712181),
        O = n(203377),
        A = n(981631),
        M = n(689938),
        D = n(956385),
        v = n(928014);
      let j = "DRAGGABLE_ROLE";
      function Z(e) {
        let {
            setEditRoleId: t,
            guild: n,
            everyoneRole: i,
            otherRoles: r,
            setSelectedSection: l,
            renderHeader: o,
            headerHeight: c,
            query: u,
          } = e,
          _ = (0, d.e7)([p.Z], () => p.Z.getRoleMemberCount(n.id), [n.id]),
          E = (0, d.e7)([h.Z], () => h.Z.getHighestRole(n), [n]),
          T = u.trim();
        a.useEffect(() => {
          (0, x.E)(n.id);
        }, [n.id]);
        let m = a.useRef(!1);
        a.useEffect(() => {
          if (!m.current && "" !== u.trimStart())
            C.default.track(A.rMx.SEARCH_STARTED, { search_type: "Roles" }),
              (m.current = !0);
        }, [u]);
        let N = a.useMemo(() => r.filter((e) => (0, R.uo)(e, T)), [r, T]),
          S = a.useMemo(() => [...r, i], [r, i]),
          {
            draggingId: g,
            handleDragStart: L,
            handleDragReset: O,
            handleDragComplete: M,
          } = (0, f.Z)(S),
          D = a.useCallback(
            (e) => {
              var a;
              let { row: i } = e;
              if (0 === N.length) return (0, s.jsx)(b, {}, "empty-role");
              let o = N[i];
              return (0, s.jsx)(
                U,
                {
                  role: o,
                  guild: n,
                  highestRole: E,
                  currentPosition: i,
                  memberCount:
                    null !== (a = null == _ ? void 0 : _[o.id]) && void 0 !== a
                      ? a
                      : 0,
                  onDragStart: L,
                  onDragReset: O,
                  onDragComplete: M,
                  disableHover: null != g,
                  disableDrag: r.length !== N.length,
                  setEditRoleId: t,
                  setSelectedSection: l,
                },
                o.id,
              );
            },
            [N, n, E, _, L, O, M, g, r, t, l],
          );
        return (0, s.jsx)(I.Xi, {
          sections: [Math.max(N.length, 1)],
          sectionHeight: c,
          renderSection: o,
          rowHeight: 61,
          renderRow: D,
        });
      }
      function b() {
        return (0, s.jsxs)("div", {
          className: D.emptyRoles,
          children: [
            (0, s.jsx)("div", { className: v.dragSpacing }),
            (0, s.jsx)(u.GroupIcon, { size: "md", color: "currentColor" }),
            (0, s.jsx)(u.Text, {
              className: D.emptyRolesText,
              variant: "text-md/semibold",
              color: "text-muted",
              children: M.Z.Messages.ROLE_LIST_EMPTY,
            }),
          ],
        });
      }
      function U(e) {
        var t, i, c;
        let {
            role: d,
            guild: I,
            highestRole: T,
            currentPosition: S,
            memberCount: h,
            onDragStart: C,
            onDragReset: x,
            onDragComplete: p,
            disableHover: R,
            disableDrag: f,
            setEditRoleId: A,
            setSelectedSection: Z,
          } = e,
          b = (0, L.T)(I, T, d),
          U = null != b,
          [P, B] = a.useState(!1),
          y = a.useMemo(
            () => ({
              type: j,
              item: () => (C(d.id), { id: d.id, position: S }),
              canDrag: () => P && !U,
              collect: (e) => ({ isDragging: e.isDragging() }),
              end: (e, t) => {
                let n = t.getDropResult();
                if (null == n) {
                  x();
                  return;
                }
                p(n.roleId);
              },
            }),
            [d, C, x, p, U, P],
          ),
          [{ isDragging: F }, k] = (0, l.c)(y),
          w = a.useMemo(
            () => ({
              accept: j,
              canDrop: () => !U,
              collect: (e) => {
                let t = e.getItem();
                return null != t && e.isOver() && e.canDrop()
                  ? { dragSourcePosition: t.position }
                  : { dragSourcePosition: null };
              },
              drop: () => ({ roleId: d.id }),
            }),
            [U, d],
          ),
          [{ dragSourcePosition: H }, V] = (0, o.L)(w),
          Y = a.useCallback(
            (e) => {
              (0, _.jW)(e, async () => {
                let { default: e } = await Promise.resolve().then(
                  n.bind(n, 741247),
                );
                return (t) => (0, s.jsx)(e, { ...t, role: d, guild: I });
              });
            },
            [I, d],
          ),
          W = (0, N.useHasGuildRoleItems)(I, d);
        if (F)
          return (0, s.jsx)("div", {
            ref: k,
            className: r()(D.roleRow, D.roleRowDragging),
          });
        function z() {
          A(d.id);
        }
        function K() {
          z(), Z(O.ZI.MEMBERS);
        }
        return (0, s.jsxs)(u.Clickable, {
          className: r()(D.roleRow, {
            [D.roleRowDisableHover]: R,
            [D.containerDragBefore]: null != H && S < H,
            [D.containerDragAfter]: null != H && S > H,
          }),
          onClick: z,
          onContextMenu: Y,
          innerRef: (e) => k(V(e)),
          "data-dnd-name": d.name,
          "aria-label": M.Z.Messages.ROLE_ROW_DESCRIPTION.format({
            name: d.name,
            count: "".concat(h),
          }),
          children: [
            (0, s.jsx)("div", {
              className: r()(D.dragIcon, v.dragSpacing, {
                [D.dragIconHidden]: U || f,
              }),
              onMouseEnter: () => B(!0),
              onMouseLeave: () => B(!1),
              children: (0, s.jsx)(u.DragIcon, {
                size: "xs",
                color: "currentColor",
              }),
            }),
            (0, s.jsxs)("div", {
              className: r()(D.roleNameContainer, v.roleNameSpacing),
              children: [
                (null === (t = d.tags) || void 0 === t
                  ? void 0
                  : t.guild_connections) === null
                  ? (0, s.jsx)(E.Z, {
                      className: D.roleFlowerStar,
                      color: d.colorString,
                      size: 24,
                    })
                  : (0, s.jsx)(G, {
                      guildId: I.id,
                      role: d,
                      size: 24,
                      className: D.roleIcon,
                      defaultIconClassName: D.shield,
                    }),
                null != b
                  ? (0, s.jsx)(L.Z, { className: D.lock, tooltipText: b })
                  : null,
                (0, s.jsx)(u.Text, {
                  className: D.roleName,
                  color: "header-primary",
                  variant: "text-md/medium",
                  children: d.name,
                }),
                (null === (i = d.tags) || void 0 === i
                  ? void 0
                  : i.subscription_listing_id) != null &&
                  (0, s.jsx)(g.Z, {
                    className: D.subscriptionRoleIcon,
                    "aria-label":
                      M.Z.Messages
                        .GUILD_ROLE_SUBSCRIPTION_PREMIUM_ROLE_ICON_LABEL,
                  }),
                (null === (c = d.tags) || void 0 === c
                  ? void 0
                  : c.is_guild_product_role) === !0 && (0, s.jsx)(m.Z, {}),
              ],
            }),
            (0, s.jsx)(u.Tooltip, {
              text: M.Z.Messages.ROLE_OVERVIEW_VIEW_MEMBERS,
              "aria-label": M.Z.Messages.ROLE_ROW_VIEW_MEMBERS.format({
                count: "".concat(h),
              }),
              position: "right",
              children: (e) =>
                (0, s.jsxs)(u.Clickable, {
                  ...e,
                  className: r()(D.memberCountContainer, v.memberSpacing),
                  onClick: K,
                  children: [
                    (0, s.jsx)(u.Text, {
                      variant: "text-md/normal",
                      color: "none",
                      children: h,
                    }),
                    (0, s.jsx)(u.UserIcon, {
                      size: "custom",
                      color: "currentColor",
                      className: D.person,
                      width: 20,
                      height: 20,
                    }),
                  ],
                }),
            }),
            (0, s.jsxs)("div", {
              className: r()(D.buttonsContainer, v.buttonsSpacing),
              children: [
                (0, s.jsx)(u.CircleIconButton, {
                  className: r()(D.circleButton, D.editButton),
                  tooltip: U ? M.Z.Messages.VIEW : M.Z.Messages.EDIT,
                  color: u.CircleIconButtonColors.SECONDARY,
                  size: u.CircleIconButtonSizes.SIZE_36,
                  icon: U
                    ? (0, s.jsx)(u.EyeIcon, {
                        size: "custom",
                        color: "currentColor",
                        width: 20,
                        height: 20,
                      })
                    : (0, s.jsx)(u.PencilIcon, {
                        size: "custom",
                        color: "currentColor",
                        width: 20,
                        height: 20,
                      }),
                  onClick: z,
                }),
                (0, s.jsx)(u.CircleIconButton, {
                  className: D.circleButton,
                  tooltip: M.Z.Messages.MORE,
                  color: u.CircleIconButtonColors.SECONDARY,
                  size: u.CircleIconButtonSizes.SIZE_36,
                  icon: (0, s.jsx)(u.MoreHorizontalIcon, {
                    size: "custom",
                    color: "currentColor",
                    width: 20,
                    height: 20,
                  }),
                  onClick: Y,
                  disabled: !W,
                }),
              ],
            }),
          ],
        });
      }
      function G(e) {
        var t;
        let {
            guildId: n,
            role: a,
            size: i,
            enableTooltip: l,
            className: o,
            defaultIconClassName: d,
          } = e,
          _ = (0, S.p9)({ guildId: n, roleId: a.id, size: i });
        return null != _
          ? (0, s.jsx)(T.Z, { ..._, className: o, enableTooltip: l })
          : (0, s.jsx)(u.ShieldUserIcon, {
              size: "custom",
              className: r()(o, d),
              color:
                null !== (t = a.colorString) && void 0 !== t
                  ? t
                  : (0, c.Rf)(A.p6O),
              width: i,
              height: i,
            });
      }
    },
    475013: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return L;
        },
        _: function () {
          return R;
        },
      }),
        n(47120);
      var s = n(735250),
        a = n(470079),
        i = n(512722),
        r = n.n(i),
        l = n(442837),
        o = n(749210),
        c = n(852860),
        d = n(605436),
        u = n(650774),
        _ = n(823379),
        I = n(434404),
        E = n(764260),
        T = n(946724),
        m = n(999382),
        N = n(130341),
        S = n(853813),
        g = n(163249),
        h = n(150689),
        C = n(203377),
        x = n(981631);
      function p(e) {
        I.Z.selectRole(e);
      }
      let R = () => {
        let { guild: e } = (0, l.cj)([m.Z], () => m.Z.getProps()),
          t = (0, l.e7)([T.Z], () => T.Z.formState),
          n = (0, l.e7)([T.Z], () => T.Z.errorMessage);
        return (0, s.jsx)(c.Z, {
          errorMessage: n,
          onSave: () => {
            if (null == e) return;
            let { id: t } = e,
              n = T.Z.editedRoleIds.map((e) => T.Z.getRole(e)).filter(_.lm),
              s = T.Z.getSortDeltas(),
              a = null,
              i = null;
            T.Z.hasRoleConfigurationChanges &&
              ((i = T.Z.editedRoleIdsForConfigurations),
              (a = T.Z.getEditedRoleConnectionConfigurationsMap())),
              (0, E.Gf)(t, n, s, i, a);
          },
          submitting: t === x.QZA.SUBMITTING,
          onReset: E.S1,
        });
      };
      function L(e) {
        let { refToScroller: t } = e,
          { guild: n, roles: i } = (0, l.cj)(
            [T.Z],
            () => ({ guild: T.Z.guild, roles: T.Z.roles }),
            [],
          );
        r()(null != n, "Guild cannot be null here");
        let c = a.useMemo(() => i.find((e) => (0, d.pM)(n.id, e.id)), [i, n]);
        r()(null != c, "Guild must have an everyone role");
        let _ = a.useMemo(
            () => i.filter((e) => !(0, d.pM)(n.id, e.id)),
            [i, n],
          ),
          I = (0, l.e7)([m.Z], () => m.Z.getSelectedRoleId()),
          [E, x] = a.useState(_.length > 0);
        a.useEffect(() => {
          x(E || _.length > 0);
        }, [E, _.length]),
          a.useEffect(() => {
            let e = u.Z.getMemberCount(n.id);
            null != e && e <= N.cm && o.Z.requestMembers(n.id, "", 0, !1);
          }, []);
        let [R, L] = a.useState(C.ZI.DISPLAY);
        return (a.useEffect(() => {
          null == I && L(C.ZI.DISPLAY);
        }, [I]),
        null != I)
          ? (0, s.jsx)(S.Z, {
              editRoleId: I,
              setEditRoleId: p,
              selectedSection: R,
              setSelectedSection: L,
            })
          : E
            ? (0, s.jsx)(h.Z, {
                setEditRoleId: p,
                guild: n,
                everyoneRole: c,
                otherRoles: _,
                setSelectedSection: L,
                refToScroller: t,
              })
            : (0, s.jsx)(g.Z, { guild: n, everyoneRole: c, setEditRoleId: p });
      }
    },
    150689: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return c;
        },
      }),
        n(47120);
      var s = n(735250),
        a = n(470079),
        i = n(130341),
        r = n(34112),
        l = n(623691),
        o = n(494831);
      function c(e) {
        let {
            setEditRoleId: t,
            guild: n,
            everyoneRole: c,
            otherRoles: d,
            setSelectedSection: u,
          } = e,
          [_, I] = a.useState(""),
          [E, T] = a.useState(o.Cl),
          m = _.trim(),
          N = a.useMemo(() => d.filter((e) => (0, i.uo)(e, m)), [d, m]),
          S = a.useCallback(
            () =>
              (0, s.jsx)(
                l.Z,
                {
                  guild: n,
                  everyoneRole: c,
                  filteredRoles: N,
                  setEditRoleId: t,
                  query: _,
                  setQuery: I,
                  setHeaderHeight: T,
                },
                "header",
              ),
            [n, c, N, t, _],
          );
        return (0, s.jsx)(r.Z, {
          setEditRoleId: t,
          guild: n,
          everyoneRole: c,
          otherRoles: d,
          setSelectedSection: u,
          renderHeader: S,
          headerHeight: E,
          query: _,
        });
      }
    },
    623691: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return T;
        },
      }),
        n(47120);
      var s = n(735250),
        a = n(470079),
        i = n(120356),
        r = n.n(i),
        l = n(481060),
        o = n(749210),
        c = n(63063),
        d = n(714939),
        u = n(494831),
        _ = n(981631),
        I = n(689938),
        E = n(928014);
      function T(e) {
        let {
            guild: t,
            everyoneRole: n,
            filteredRoles: i,
            setEditRoleId: r,
            query: o,
            setQuery: c,
            setHeaderHeight: d,
          } = e,
          _ = a.useRef(null);
        a.useEffect(() => {
          var e, t;
          d(
            null !==
              (t =
                null === (e = _.current) || void 0 === e
                  ? void 0
                  : e.offsetHeight) && void 0 !== t
              ? t
              : u.Cl,
          );
        }, [d]);
        let T = a.useCallback(() => {
          r(n.id);
        }, [r, n.id]);
        return (0, s.jsxs)("div", {
          ref: _,
          children: [
            (0, s.jsx)(l.FormTitle, {
              tag: l.FormTitleTags.H1,
              children: I.Z.Messages.ROLES,
            }),
            (0, s.jsx)(l.Text, {
              className: E.description,
              color: "header-secondary",
              variant: "text-sm/normal",
              children: I.Z.Messages.ROLE_OVERVIEW_DESCRIPTION,
            }),
            (0, s.jsx)(m, {
              guild: t,
              everyoneRole: n,
              filteredRoles: i,
              query: o,
              setQuery: c,
              onEveryoneRoleClick: T,
            }),
          ],
        });
      }
      function m(e) {
        let {
          guild: t,
          everyoneRole: n,
          filteredRoles: a,
          query: i,
          setQuery: o,
          onEveryoneRoleClick: u,
        } = e;
        return (0, s.jsxs)(s.Fragment, {
          children: [
            (0, s.jsx)(d.Z, { role: n, onClick: u }),
            (0, s.jsx)(N, { guild: t, query: i, setQuery: o }),
            (0, s.jsx)(l.Text, {
              className: E.helpText,
              color: "header-secondary",
              variant: "text-sm/normal",
              children: I.Z.Messages.ROLE_LIST_BODY_WITH_HELP.format({
                articleURL: c.Z.getArticleURL(_.BhN.PERMISSIONS_TUTORIAL),
              }),
            }),
            (0, s.jsx)("div", {
              className: E.rolesTable,
              children: (0, s.jsxs)("div", {
                className: E.tableHeader,
                children: [
                  (0, s.jsx)("div", { className: E.dragSpacing }),
                  (0, s.jsx)(l.Text, {
                    className: r()(E.tableTitle, E.roleNameSpacing),
                    variant: "text-sm/normal",
                    children: I.Z.Messages.ROLE_LIST_HEADER.format({
                      numRoles: String(a.length),
                    }),
                  }),
                  (0, s.jsx)(l.Text, {
                    className: r()(E.tableTitle, E.memberSpacing),
                    variant: "text-sm/normal",
                    children: I.Z.Messages.MEMBERS,
                  }),
                  (0, s.jsx)("div", { className: E.buttonsSpacing }),
                ],
              }),
            }),
          ],
        });
      }
      function N(e) {
        let { guild: t, query: n, setQuery: i } = e,
          [r, c] = a.useState(!1),
          d = a.useCallback(
            (e) => {
              i(e);
            },
            [i],
          ),
          u = a.useCallback(() => {
            i("");
          }, [i]),
          _ = async () => {
            c(!0), await o.Z.createRole(t.id), c(!1);
          };
        return (0, s.jsx)("div", {
          className: E.__invalid_rolesList,
          children: (0, s.jsxs)("div", {
            className: E.searchContainer,
            children: [
              (0, s.jsx)(l.SearchBar, {
                size: l.SearchBar.Sizes.MEDIUM,
                query: n,
                onChange: d,
                onClear: u,
                placeholder: I.Z.Messages.SEARCH_ROLES,
                "aria-label": I.Z.Messages.SEARCH_ROLES,
              }),
              (0, s.jsx)(l.Button, {
                className: E.createButton,
                size: l.Button.Sizes.SMALL,
                onClick: _,
                submitting: r,
                children: I.Z.Messages.ROLE_CREATE_CTA,
              }),
            ],
          }),
        });
      }
    },
    970129: function (e, t, n) {
      "use strict";
      n.d(t, {
        T: function () {
          return c;
        },
        Z: function () {
          return d;
        },
      });
      var s = n(735250),
        a = n(470079),
        i = n(442837),
        r = n(481060),
        l = n(496675),
        o = n(689938);
      function c(e, t, n) {
        let s = (0, i.e7)([l.Z], () => !l.Z.isRoleHigher(e, t, n), [e, t, n]);
        return a.useMemo(
          () => s && n.id === (null == t ? void 0 : t.id),
          [s, n, t],
        )
          ? o.Z.Messages.HELP_ROLE_LOCKED_MINE
          : s
            ? o.Z.Messages.HELP_ROLE_LOCKED
            : null;
      }
      function d(e) {
        let { className: t, tooltipText: n, width: a = 16, height: i = 16 } = e;
        return (0, s.jsx)(r.Tooltip, {
          text: n,
          children: (e) =>
            (0, s.jsx)("div", {
              className: t,
              ...e,
              children: (0, s.jsx)(r.LockIcon, {
                size: "custom",
                color: "currentColor",
                width: a,
                height: i,
              }),
            }),
        });
      }
    },
    541575: function (e, t, n) {
      "use strict";
      var s = n(735250);
      n(470079);
      var a = n(780384),
        i = n(481060),
        r = n(410030),
        l = n(367907),
        o = n(906732),
        c = n(91218),
        d = n(807582),
        u = n(518738),
        _ = n(26323),
        I = n(764260),
        E = n(981631),
        T = n(30513),
        m = n(689938),
        N = n(691440);
      t.Z = function (e) {
        let { guild: t, disabled: S, role: g } = e,
          h = (0, r.ZP)(),
          C = (0, u.oC)(t.id, g),
          { analyticsLocations: x } = (0, o.ZP)(),
          p = () => {
            (0, i.openModalLazy)(async () => {
              let { default: e } = await n.e("22942").then(n.bind(n, 660727));
              return (n) =>
                (0, s.jsx)(e, {
                  ...n,
                  guildId: t.id,
                  onUploadIcon: (e) => (0, I._l)(g.id, e, null),
                  onSelectUnicodeEmoji: (e) => (0, I._l)(g.id, null, e),
                });
            });
          },
          R = t.features.has(E.oNc.ROLE_ICONS),
          L = (e) => {
            !R &&
              ((0, l.yw)(E.rMx.PREMIUM_GUILD_PROMOTION_OPENED, {
                location: { ...e, section: E.jXE.CUSTOM_ROLE_ICONS_TOOLTIP },
                guild_id: null == t ? void 0 : t.id,
                location_stack: x,
              }),
              (0, _.Z)({
                analyticsLocations: x,
                analyticsSourceLocation: {
                  page: E.ZY5.GUILD_SETTINGS,
                  section: E.jXE.GUILD_ROLE_EDIT_UPSELL_MODAL,
                  object: E.qAy.BADGE,
                },
                guild: t,
                perks: (0, T.Yp)(),
              }));
          },
          f = (0, s.jsx)(d.Z, {
            className: N.availabilityIndicator,
            guild: t,
            guildFeature: E.oNc.ROLE_ICONS,
            tooltipPosition: "top",
            hideTooltip: R,
            onClick: () =>
              L({ object: E.qAy.LEARN_MORE, objectType: E.Qqv.TIER_2 }),
          });
        return (0, s.jsxs)(i.FormItem, {
          className: N.container,
          children: [
            (0, s.jsxs)(i.FormTitle, {
              className: N.formTitle,
              children: [
                (0, s.jsx)("div", {
                  children: m.Z.Messages.FORM_LABEL_ROLE_ICON,
                }),
                f,
              ],
            }),
            (0, s.jsx)(i.FormText, {
              className: N.description,
              children: m.Z.Messages.ROLE_ICON_HELP,
            }),
            (0, s.jsxs)("div", {
              className: N.rolePreviewArea,
              children: [
                (0, s.jsx)("div", {
                  className: N.previewContainer,
                  children:
                    null != C
                      ? (0, s.jsx)(c.Z, {
                          ...C,
                          className: N.roleIconPreview,
                          enableTooltip: !1,
                        })
                      : (0, s.jsx)(i.ImagePlusIcon, {
                          size: "custom",
                          color: "currentColor",
                          width: 24,
                          height: 24,
                          className: N.preview,
                        }),
                }),
                (0, s.jsx)(i.Button, {
                  className: N.button,
                  color: (0, a.ap)(h)
                    ? i.Button.Colors.PRIMARY
                    : i.Button.Colors.WHITE,
                  look: i.Button.Looks.OUTLINED,
                  onClick: () =>
                    t.hasFeature(E.oNc.ROLE_ICONS)
                      ? p()
                      : L({ object: E.qAy.UPLOAD_IMAGE }),
                  disabled: S,
                  children: m.Z.Messages.ROLE_ICON_CHOOSE_IMAGE,
                }),
                null != C
                  ? (0, s.jsx)(i.Button, {
                      className: N.button,
                      color: (0, a.ap)(h)
                        ? i.Button.Colors.PRIMARY
                        : i.Button.Colors.TRANSPARENT,
                      look: i.Button.Looks.BLANK,
                      onClick: () => {
                        (0, I._l)(g.id, null, null);
                      },
                      disabled: S,
                      children: m.Z.Messages.REMOVE_ICON,
                    })
                  : null,
              ],
            }),
          ],
        });
      };
    },
    530198: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return M;
        },
      }),
        n(47120);
      var s = n(735250),
        a = n(470079),
        i = n(120356),
        r = n.n(i),
        l = n(512722),
        o = n.n(l),
        c = n(780384),
        d = n(481060),
        u = n(99690),
        _ = n(410030),
        I = n(726542),
        E = n(981631),
        T = n(856651),
        m = n(689938),
        N = n(650593);
      function S(e) {
        var t, n;
        let a,
          { theme: i, platform: l, integration: _, onRemove: I, locked: E } = e;
        if ((null == _ ? void 0 : _.application) != null)
          o()(null != _.application.bot, "bot is null"),
            (a = (0, s.jsx)(u.Z, {
              size: d.AvatarSizes.SIZE_24,
              user: _.application.bot,
              className: N.verifiedIcon,
            }));
        else if (null != l) {
          let e = (0, c.ap)(i) ? l.icon.lightSVG : l.icon.darkSVG;
          a = (0, s.jsx)("img", {
            className: N.verifiedIcon,
            src: e,
            alt: m.Z.Messages.IMG_ALT_LOGO.format({ name: l.name }),
          });
        }
        return (0, s.jsxs)("div", {
          className: r()(
            N.verifiedRow,
            (null == l ? void 0 : l.hasMetadata) === !0 ||
              ((null == _ ? void 0 : _.role_connections_metadata) != null &&
                (null == _ ? void 0 : _.role_connections_metadata.length) > 0)
              ? N.verifiedRowWithMetadata
              : null,
          ),
          children: [
            a,
            (0, s.jsx)(d.Text, {
              variant: "text-md/medium",
              className: N.verifiedText,
              children:
                m.Z.Messages.ROLE_EDIT_CONNECTIONS_CONTROLS_MUST_HAVE_ACCOUNT.format(
                  {
                    platformName:
                      null !== (n = null == l ? void 0 : l.name) && void 0 !== n
                        ? n
                        : null == _
                          ? void 0
                          : null === (t = _.application) || void 0 === t
                            ? void 0
                            : t.name,
                  },
                ),
            }),
            (0, s.jsx)(d.Button, {
              "aria-label": m.Z.Messages.REMOVE,
              size: d.Button.Sizes.TINY,
              look: d.Button.Looks.BLANK,
              onClick: I,
              disabled: E,
              className: N.closeButton,
              children: (0, s.jsx)(d.Tooltip, {
                text: m.Z.Messages.REMOVE,
                children: (e) =>
                  (0, s.jsx)(d.XSmallIcon, {
                    size: "md",
                    color: "currentColor",
                    className: N.closeIcon,
                    ...e,
                  }),
              }),
            }),
          ],
        });
      }
      function g(e) {
        var t, n, i;
        let {
            inputRef: r,
            existingPendingConfiguration: l,
            locked: o,
            onConfigurationChange: c,
            platform: u,
            applicationId: _,
            metadataField: I,
            operator: E,
          } = e,
          m =
            null !== (n = null == l ? void 0 : l.index) && void 0 !== n
              ? n
              : -1,
          S = null != E ? E : T.iO.GREATER_THAN,
          g = Math.round(
            Number(
              null !==
                (i =
                  null == l
                    ? void 0
                    : null === (t = l.configuration) || void 0 === t
                      ? void 0
                      : t.value) && void 0 !== i
                ? i
                : 0,
            ),
          );
        S === T.iO.GREATER_THAN
          ? (g = Math.max(1, g + 1))
          : S === T.iO.LESS_THAN && (g = Math.max(0, g - 1));
        let [h, C] = a.useState(g.toString());
        return (
          a.useEffect(() => {
            C(h);
          }, [h]),
          (0, s.jsx)(
            d.TextInput,
            {
              inputRef: r,
              type: "number",
              className: N.numericalRuleInput,
              size: d.TextInput.Sizes.MINI,
              value: h,
              onChange: (e) => {
                if (null != l) {
                  if ("" !== e) {
                    var t;
                    let n = Math.round(Number(e));
                    S === T.iO.GREATER_THAN
                      ? (n = Math.max(0, n - 1))
                      : S === T.iO.LESS_THAN && (n = Math.max(1, n + 1)),
                      c(
                        {
                          connectionType:
                            null !== (t = null == u ? void 0 : u.type) &&
                            void 0 !== t
                              ? t
                              : T.Kt,
                          applicationId: _,
                          connectionMetadataField: I,
                          operator: S,
                          value: n.toString(),
                        },
                        m,
                      );
                  }
                  C(e);
                }
              },
              disabled: o,
            },
            I,
          )
        );
      }
      function h(e) {
        let {
          titleText: t,
          fieldText: n,
          metadataField: a,
          existingPendingConfiguration: i,
          platform: r,
          applicationId: l,
          onConfigurationChange: o,
          locked: c,
        } = e;
        return (0, s.jsxs)(
          "div",
          {
            className: N.ruleContainer,
            children: [
              (0, s.jsxs)("div", {
                children: [
                  (0, s.jsx)(d.Text, {
                    variant: "text-md/bold",
                    className: N.ruleItemHeader,
                    children: t,
                  }),
                  (0, s.jsx)("div", {
                    className: N.numericalRuleSubItemContainer,
                    children: (0, s.jsx)(d.Text, {
                      variant: "text-md/normal",
                      className: N.numericalRuleSubText,
                      children: n,
                    }),
                  }),
                ],
              }),
              (0, s.jsx)(d.Switch, {
                className: N.ruleItemSwitch,
                checked: (null == i ? void 0 : i.configuration.value) === "1",
                onChange: (e) => {
                  var t, n;
                  let s = null;
                  e &&
                    (s = {
                      connectionType:
                        null !== (t = null == r ? void 0 : r.type) &&
                        void 0 !== t
                          ? t
                          : T.Kt,
                      applicationId: l,
                      connectionMetadataField: a,
                      operator: T.iO.EQUAL,
                      value: "1",
                    }),
                    o(
                      s,
                      null !== (n = null == i ? void 0 : i.index) &&
                        void 0 !== n
                        ? n
                        : -1,
                    );
                },
                disabled: c,
              }),
            ],
          },
          a,
        );
      }
      function C(e) {
        let {
            titleText: t,
            fieldText: n,
            fieldTextHook: i,
            metadataField: r,
            existingPendingConfiguration: l,
            platform: o,
            applicationId: c,
            onConfigurationChange: u,
            locked: _,
            operator: I,
          } = e,
          E = a.createRef(),
          m = (null == l ? void 0 : l.configuration) != null,
          S = (0, s.jsx)(
            g,
            {
              inputRef: E,
              metadataField: r,
              existingPendingConfiguration: l,
              locked: _ || !m,
              onConfigurationChange: u,
              platform: o,
              operator: I,
              applicationId: c,
            },
            r,
          ),
          h =
            null != i
              ? i.format({ metadataHook: () => S })
              : (0, s.jsxs)(s.Fragment, {
                  children: [
                    S,
                    (0, s.jsx)("span", { className: N.fieldText, children: n }),
                  ],
                });
        return (0, s.jsxs)(
          "div",
          {
            className: N.ruleContainer,
            children: [
              (0, s.jsxs)("div", {
                className: N.ruleContainerLabel,
                children: [
                  (0, s.jsx)(d.Text, {
                    variant: "text-md/bold",
                    className: N.ruleItemHeader,
                    children: t,
                  }),
                  (0, s.jsx)("div", {
                    className: N.numericalRuleSubItemContainer,
                    children: (0, s.jsx)(d.Text, {
                      variant: "text-md/normal",
                      className: N.numericalRuleSubText,
                      children: h,
                    }),
                  }),
                ],
              }),
              (0, s.jsx)(d.Switch, {
                className: N.ruleItemSwitch,
                checked: m,
                onChange: (e) => {
                  var t, n, s;
                  let a = null;
                  if (e) {
                    let e = null != I ? I : T.iO.GREATER_THAN,
                      s = Math.round(
                        Number(
                          null === (t = E.current) || void 0 === t
                            ? void 0
                            : t.value,
                        ),
                      );
                    e === T.iO.GREATER_THAN
                      ? (s = Math.max(0, s - 1))
                      : e === T.iO.LESS_THAN && (s = Math.max(1, s + 1)),
                      (a = {
                        connectionType:
                          null !== (n = null == o ? void 0 : o.type) &&
                          void 0 !== n
                            ? n
                            : T.Kt,
                        applicationId: c,
                        connectionMetadataField: r,
                        operator: e,
                        value: s.toString(),
                      });
                  }
                  u(
                    a,
                    null !== (s = null == l ? void 0 : l.index) && void 0 !== s
                      ? s
                      : -1,
                  );
                },
                disabled: _,
              }),
            ],
          },
          r,
        );
      }
      function x(e) {
        let { configMetadataMap: t, onConfigurationChange: n, locked: a } = e,
          i = I.Z.get(E.ABu.STEAM);
        return (0, s.jsxs)(s.Fragment, {
          children: [
            (0, s.jsx)(C, {
              titleText:
                m.Z.Messages.ROLE_EDIT_CONNECTIONS_CONTROLS_HEADER_ACCOUNT_AGE,
              fieldTextHook: m.Z.Messages.ROLE_EDIT_CONNECTIONS_CONTROLS_AGE,
              metadataField: T.PC.CREATED_AT,
              existingPendingConfiguration: t.get(T.PC.CREATED_AT),
              platform: i,
              onConfigurationChange: n,
              locked: a,
            }),
            (0, s.jsx)(C, {
              titleText: m.Z.Messages.CONNECTIONS_STEAM_GAMES,
              fieldTextHook:
                m.Z.Messages
                  .ROLE_EDIT_CONNECTIONS_CONTROLS_MUST_HAVE_AT_LEAST_GAMES,
              metadataField: T.PC.STEAM_GAME_COUNT,
              existingPendingConfiguration: t.get(T.PC.STEAM_GAME_COUNT),
              platform: i,
              onConfigurationChange: n,
              locked: a,
            }),
            (0, s.jsx)(C, {
              titleText:
                m.Z.Messages.ROLE_EDIT_CONNECTIONS_CONTROLS_HEADER_ITEMS.format(
                  { gameName: m.Z.Messages.CONNECTIONS_STEAM_DOTA2 },
                ),
              fieldTextHook:
                m.Z.Messages
                  .ROLE_EDIT_CONNECTIONS_CONTROLS_MUST_HAVE_AT_LEAST_DOTA2,
              metadataField: T.PC.STEAM_ITEM_COUNT_DOTA2,
              existingPendingConfiguration: t.get(T.PC.STEAM_ITEM_COUNT_DOTA2),
              platform: i,
              onConfigurationChange: n,
              locked: a,
            }),
            (0, s.jsx)(C, {
              titleText:
                m.Z.Messages.ROLE_EDIT_CONNECTIONS_CONTROLS_HEADER_ITEMS.format(
                  { gameName: m.Z.Messages.CONNECTIONS_STEAM_TF2 },
                ),
              fieldTextHook:
                m.Z.Messages
                  .ROLE_EDIT_CONNECTIONS_CONTROLS_MUST_HAVE_AT_LEAST_TF2,
              metadataField: T.PC.STEAM_ITEM_COUNT_TF2,
              existingPendingConfiguration: t.get(T.PC.STEAM_ITEM_COUNT_TF2),
              platform: i,
              onConfigurationChange: n,
              locked: a,
            }),
          ],
        });
      }
      function p(e) {
        let { configMetadataMap: t, onConfigurationChange: n, locked: a } = e,
          i = I.Z.get(E.ABu.TWITTER);
        return (0, s.jsxs)(s.Fragment, {
          children: [
            (0, s.jsx)(C, {
              titleText:
                m.Z.Messages.ROLE_EDIT_CONNECTIONS_CONTROLS_HEADER_ACCOUNT_AGE,
              fieldTextHook: m.Z.Messages.ROLE_EDIT_CONNECTIONS_CONTROLS_AGE,
              metadataField: T.PC.CREATED_AT,
              existingPendingConfiguration: t.get(T.PC.CREATED_AT),
              platform: i,
              onConfigurationChange: n,
              locked: a,
            }),
            (0, s.jsx)(C, {
              titleText: m.Z.Messages.CONNECTIONS_TWITTER_FOLLOWERS,
              fieldTextHook:
                m.Z.Messages
                  .ROLE_EDIT_CONNECTIONS_CONTROLS_MUST_HAVE_AT_LEAST_FOLLOWERS,
              metadataField: T.PC.TWITTER_FOLLOWERS_COUNT,
              existingPendingConfiguration: t.get(T.PC.TWITTER_FOLLOWERS_COUNT),
              platform: i,
              onConfigurationChange: n,
              locked: a,
            }),
            (0, s.jsx)(C, {
              titleText: m.Z.Messages.CONNECTIONS_TWITTER_STATUSES,
              fieldTextHook:
                m.Z.Messages
                  .ROLE_EDIT_CONNECTIONS_CONTROLS_MUST_HAVE_AT_LEAST_TWEETS,
              metadataField: T.PC.TWITTER_STATUSES_COUNT,
              existingPendingConfiguration: t.get(T.PC.TWITTER_STATUSES_COUNT),
              platform: i,
              onConfigurationChange: n,
              locked: a,
            }),
            (0, s.jsx)(h, {
              titleText:
                m.Z.Messages.ROLE_EDIT_CONNECTIONS_CONTROLS_HEADER_VERIFIED,
              fieldText:
                m.Z.Messages.ROLE_EDIT_CONNECTIONS_CONTROLS_MUST_BE_VERIFIED,
              metadataField: T.PC.TWITTER_VERIFIED,
              existingPendingConfiguration: t.get(T.PC.TWITTER_VERIFIED),
              platform: i,
              onConfigurationChange: n,
              locked: a,
            }),
          ],
        });
      }
      function R(e) {
        let { configMetadataMap: t, onConfigurationChange: n, locked: a } = e,
          i = I.Z.get(E.ABu.REDDIT);
        return (0, s.jsxs)(s.Fragment, {
          children: [
            (0, s.jsx)(C, {
              titleText:
                m.Z.Messages.ROLE_EDIT_CONNECTIONS_CONTROLS_HEADER_ACCOUNT_AGE,
              fieldTextHook: m.Z.Messages.ROLE_EDIT_CONNECTIONS_CONTROLS_AGE,
              metadataField: T.PC.CREATED_AT,
              existingPendingConfiguration: t.get(T.PC.CREATED_AT),
              platform: i,
              onConfigurationChange: n,
              locked: a,
            }),
            (0, s.jsx)(C, {
              titleText: m.Z.Messages.CONNECTIONS_REDDIT_KARMA,
              fieldTextHook:
                m.Z.Messages
                  .ROLE_EDIT_CONNECTIONS_CONTROLS_MUST_HAVE_AT_LEAST_KARMA,
              metadataField: T.PC.REDDIT_TOTAL_KARMA,
              existingPendingConfiguration: t.get(T.PC.REDDIT_TOTAL_KARMA),
              platform: i,
              onConfigurationChange: n,
              locked: a,
            }),
            (0, s.jsx)(h, {
              titleText: m.Z.Messages.CONNECTIONS_REDDIT_MOD,
              fieldText:
                m.Z.Messages.ROLE_EDIT_CONNECTIONS_CONTROLS_MUST_BE_MOD,
              metadataField: T.PC.REDDIT_MOD,
              existingPendingConfiguration: t.get(T.PC.REDDIT_MOD),
              platform: i,
              onConfigurationChange: n,
              locked: a,
            }),
            (0, s.jsx)(h, {
              titleText: m.Z.Messages.CONNECTIONS_REDDIT_GOLD,
              fieldText:
                m.Z.Messages.ROLE_EDIT_CONNECTIONS_CONTROLS_MUST_HAVE_GOLD,
              metadataField: T.PC.REDDIT_GOLD,
              existingPendingConfiguration: t.get(T.PC.REDDIT_GOLD),
              platform: i,
              onConfigurationChange: n,
              locked: a,
            }),
          ],
        });
      }
      function L(e) {
        let { configMetadataMap: t, onConfigurationChange: n, locked: a } = e,
          i = I.Z.get(E.ABu.PAYPAL);
        return (0, s.jsxs)(s.Fragment, {
          children: [
            (0, s.jsx)(C, {
              titleText:
                m.Z.Messages.ROLE_EDIT_CONNECTIONS_CONTROLS_HEADER_ACCOUNT_AGE,
              fieldTextHook: m.Z.Messages.ROLE_EDIT_CONNECTIONS_CONTROLS_AGE,
              metadataField: T.PC.CREATED_AT,
              existingPendingConfiguration: t.get(T.PC.CREATED_AT),
              platform: i,
              onConfigurationChange: n,
              locked: a,
            }),
            (0, s.jsx)(h, {
              titleText: m.Z.Messages.CONNECTIONS_PAYPAL_VERIFIED,
              fieldText:
                m.Z.Messages
                  .ROLE_EDIT_CONNECTIONS_CONTROLS_MUST_HAVE_PAYPAL_VERIFIED_BANK_ACCOUNT,
              metadataField: T.PC.PAYPAL_VERIFIED,
              existingPendingConfiguration: t.get(T.PC.PAYPAL_VERIFIED),
              platform: i,
              onConfigurationChange: n,
              locked: a,
            }),
          ],
        });
      }
      function f(e) {
        let { configMetadataMap: t, onConfigurationChange: n, locked: a } = e,
          i = I.Z.get(E.ABu.EBAY);
        return (0, s.jsxs)(s.Fragment, {
          children: [
            (0, s.jsx)(C, {
              titleText:
                m.Z.Messages.ROLE_EDIT_CONNECTIONS_CONTROLS_HEADER_ACCOUNT_AGE,
              fieldTextHook: m.Z.Messages.ROLE_EDIT_CONNECTIONS_CONTROLS_AGE,
              metadataField: T.PC.CREATED_AT,
              existingPendingConfiguration: t.get(T.PC.CREATED_AT),
              platform: i,
              onConfigurationChange: n,
              locked: a,
            }),
            (0, s.jsx)(C, {
              titleText:
                m.Z.Messages.CONNECTIONS_EBAY_POSITIVE_FEEDBACK_PERCENTAGE,
              fieldTextHook:
                m.Z.Messages
                  .ROLE_EDIT_CONNECTIONS_CONTROLS_MUST_HAVE_AT_LEAST_POSITIVE_FEEDBACK_PERCENTAGE,
              metadataField: T.PC.EBAY_POSITIVE_FEEDBACK_PERCENTAGE,
              existingPendingConfiguration: t.get(
                T.PC.EBAY_POSITIVE_FEEDBACK_PERCENTAGE,
              ),
              platform: i,
              onConfigurationChange: n,
              locked: a,
            }),
            (0, s.jsx)(C, {
              titleText:
                m.Z.Messages.CONNECTIONS_EBAY_UNIQUE_POSITIVE_FEEDBACK_COUNT,
              fieldTextHook:
                m.Z.Messages
                  .ROLE_EDIT_CONNECTIONS_CONTROLS_MUST_HAVE_AT_LEAST_UNIQUE_POSITIVE_FEEDBACK_COUNT,
              metadataField: T.PC.EBAY_UNIQUE_POSITIVE_FEEDBACK_COUNT,
              existingPendingConfiguration: t.get(
                T.PC.EBAY_UNIQUE_POSITIVE_FEEDBACK_COUNT,
              ),
              platform: i,
              onConfigurationChange: n,
              locked: a,
            }),
            (0, s.jsx)(C, {
              titleText:
                m.Z.Messages.CONNECTIONS_EBAY_UNIQUE_NEGATIVE_FEEDBACK_COUNT,
              fieldTextHook:
                m.Z.Messages
                  .ROLE_EDIT_CONNECTIONS_CONTROLS_MUST_HAVE_AT_MOST_UNIQUE_NEGATIVE_FEEDBACK_COUNT,
              metadataField: T.PC.EBAY_UNIQUE_NEGATIVE_FEEDBACK_COUNT,
              existingPendingConfiguration: t.get(
                T.PC.EBAY_UNIQUE_NEGATIVE_FEEDBACK_COUNT,
              ),
              platform: i,
              onConfigurationChange: n,
              locked: a,
              operator: T.iO.LESS_THAN,
            }),
            (0, s.jsx)(h, {
              titleText: m.Z.Messages.CONNECTIONS_EBAY_TOP_RATED_SELLER,
              fieldText:
                m.Z.Messages
                  .ROLE_EDIT_CONNECTIONS_CONTROLS_MUST_BE_TOP_RATED_SELLER,
              metadataField: T.PC.EBAY_TOP_RATED_SELLER,
              existingPendingConfiguration: t.get(T.PC.EBAY_TOP_RATED_SELLER),
              platform: i,
              onConfigurationChange: n,
              locked: a,
            }),
          ],
        });
      }
      function O(e) {
        let { configMetadataMap: t, onConfigurationChange: n, locked: a } = e,
          i = I.Z.get(E.ABu.TIKTOK);
        return (0, s.jsxs)(s.Fragment, {
          children: [
            (0, s.jsx)(h, {
              titleText: m.Z.Messages.CONNECTIONS_TIKTOK_VERIFIED,
              fieldText:
                m.Z.Messages.ROLE_EDIT_CONNECTIONS_CONTROLS_MUST_BE_VERIFIED,
              metadataField: T.PC.TIKTOK_VERIFIED,
              existingPendingConfiguration: t.get(T.PC.TIKTOK_VERIFIED),
              platform: i,
              onConfigurationChange: n,
              locked: a,
            }),
            (0, s.jsx)(C, {
              titleText: m.Z.Messages.CONNECTIONS_TIKTOK_FOLLOWERS,
              fieldTextHook:
                m.Z.Messages
                  .ROLE_EDIT_CONNECTIONS_CONTROLS_MUST_HAVE_AT_LEAST_FOLLOWERS,
              metadataField: T.PC.TIKTOK_FOLLOWER_COUNT,
              existingPendingConfiguration: t.get(T.PC.TIKTOK_FOLLOWER_COUNT),
              platform: i,
              onConfigurationChange: n,
              locked: a,
            }),
            (0, s.jsx)(C, {
              titleText: m.Z.Messages.CONNECTIONS_TIKTOK_FOLLOWING,
              fieldTextHook:
                m.Z.Messages
                  .ROLE_EDIT_CONNECTIONS_CONTROLS_MUST_HAVE_AT_LEAST_FOLLOWING,
              metadataField: T.PC.TIKTOK_FOLLOWING_COUNT,
              existingPendingConfiguration: t.get(T.PC.TIKTOK_FOLLOWING_COUNT),
              platform: i,
              onConfigurationChange: n,
              locked: a,
            }),
            (0, s.jsx)(C, {
              titleText: m.Z.Messages.CONNECTIONS_TIKTOK_LIKES,
              fieldTextHook:
                m.Z.Messages
                  .ROLE_EDIT_CONNECTIONS_CONTROLS_MUST_HAVE_AT_LEAST_LIKES,
              metadataField: T.PC.TIKTOK_LIKES_COUNT,
              existingPendingConfiguration: t.get(T.PC.TIKTOK_LIKES_COUNT),
              platform: i,
              onConfigurationChange: n,
              locked: a,
            }),
          ],
        });
      }
      function A(e) {
        let {
          configMetadataMap: t,
          onConfigurationChange: n,
          locked: a,
          integration: i,
        } = e;
        if (null == i || null == i.role_connections_metadata) return null;
        let r = i.role_connections_metadata.map((e) => {
          var r, l;
          let o;
          switch (e.type) {
            case T.xn.INTEGER_LESS_THAN_EQUAL:
            case T.xn.DATETIME_LESS_THAN_EQUAL:
              o = T.iO.LESS_THAN;
              break;
            case T.xn.INTEGER_GREATER_THAN_EQUAL:
            case T.xn.DATETIME_GREATER_THAN_EQUAL:
              o = T.iO.GREATER_THAN;
              break;
            case T.xn.INTEGER_EQUAL:
            case T.xn.BOOLEAN_EQUAL:
              o = T.iO.EQUAL;
              break;
            case T.xn.INTEGER_NOT_EQUAL:
            case T.xn.BOOLEAN_NOT_EQUAL:
              o = T.iO.NOT_EQUAL;
              break;
            default:
              return null;
          }
          switch (e.type) {
            case T.xn.INTEGER_LESS_THAN_EQUAL:
            case T.xn.INTEGER_GREATER_THAN_EQUAL:
            case T.xn.INTEGER_EQUAL:
            case T.xn.INTEGER_NOT_EQUAL:
            case T.xn.DATETIME_LESS_THAN_EQUAL:
            case T.xn.DATETIME_GREATER_THAN_EQUAL:
              return (0, s.jsx)(
                C,
                {
                  titleText: e.name,
                  fieldText: e.description,
                  metadataField: e.key,
                  existingPendingConfiguration: t.get(e.key),
                  platform: null,
                  onConfigurationChange: n,
                  locked: a,
                  operator: o,
                  applicationId:
                    null === (r = i.application) || void 0 === r
                      ? void 0
                      : r.id,
                },
                e.key,
              );
            case T.xn.BOOLEAN_EQUAL:
            case T.xn.BOOLEAN_NOT_EQUAL:
              return (0, s.jsx)(
                h,
                {
                  titleText: e.name,
                  fieldText: e.description,
                  metadataField: e.key,
                  existingPendingConfiguration: t.get(e.key),
                  platform: null,
                  onConfigurationChange: n,
                  locked: a,
                  operator: o,
                  applicationId:
                    null === (l = i.application) || void 0 === l
                      ? void 0
                      : l.id,
                },
                e.key,
              );
          }
        });
        return (0, s.jsx)(s.Fragment, { children: r });
      }
      function M(e) {
        let t,
          {
            configurationItems: n,
            onConfigurationChange: a,
            locked: i,
            integrations: r,
          } = e,
          l = (0, _.ZP)();
        if (n.length < 1) return null;
        let o = n[0].configuration.applicationId,
          c =
            null != o
              ? null == r
                ? void 0
                : r.find((e) => {
                    var t;
                    return (
                      (null === (t = e.application) || void 0 === t
                        ? void 0
                        : t.id) === o
                    );
                  })
              : void 0;
        if (null != o && null == c) return null;
        let d = null;
        try {
          d = I.Z.get(n[0].configuration.connectionType);
        } catch (e) {}
        let u = new Map();
        n.forEach((e) => {
          null != e.configuration.connectionMetadataField
            ? u.set(e.configuration.connectionMetadataField, e)
            : null == e.configuration.value &&
              null == e.configuration.operator &&
              null == e.configuration.connectionMetadataField &&
              (t = e);
        });
        let T = { configMetadataMap: u, onConfigurationChange: a, locked: i },
          m = null;
        switch (null == d ? void 0 : d.type) {
          case E.ABu.STEAM:
            m = (0, s.jsx)(x, { ...T });
            break;
          case E.ABu.TWITTER:
            m = (0, s.jsx)(p, { ...T });
            break;
          case E.ABu.REDDIT:
            m = (0, s.jsx)(R, { ...T });
            break;
          case E.ABu.PAYPAL:
            m = (0, s.jsx)(L, { ...T });
            break;
          case E.ABu.EBAY:
            m = (0, s.jsx)(f, { ...T });
            break;
          case E.ABu.TIKTOK:
            m = (0, s.jsx)(O, { ...T });
            break;
          default:
            m = (0, s.jsx)(A, { ...T, integration: c });
        }
        return (0, s.jsxs)("div", {
          className: N.container,
          children: [
            (0, s.jsx)(S, {
              theme: l,
              platform: d,
              integration: c,
              onRemove: () => a(null, t.index),
              locked: i,
            }),
            m,
          ],
        });
      }
    },
    981975: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return D;
        },
      }),
        n(47120),
        n(653041),
        n(536091);
      var s = n(735250),
        a = n(470079),
        i = n(120356),
        r = n.n(i),
        l = n(392711),
        o = n.n(l),
        c = n(442837),
        d = n(481060),
        u = n(570140),
        _ = n(275759),
        I = n(313201),
        E = n(63063),
        T = n(243730),
        m = n(764260),
        N = n(946724),
        S = n(95242),
        g = n(530198),
        h = n(420966),
        C = n(203377),
        x = n(981631),
        p = n(856651),
        R = n(689938),
        L = n(16297),
        f = n(571621);
      let O = (0, I.hQ)();
      function A(e, t) {
        return t !== _.O1.AND
          ? Object.values(
              o().groupBy(e, (e) =>
                "".concat(e.connectionType, ":").concat(e.applicationId),
              ),
            )
          : 0 === e.length
            ? []
            : [[...e]];
      }
      function M(e) {
        let { handleAddVerificationClicked: t, locked: n } = e;
        return (0, s.jsxs)("div", {
          className: L.headerNoConfigContainer,
          children: [
            (0, s.jsx)(d.Heading, {
              className: L.headerHeading,
              variant: "eyebrow",
              children: R.Z.Messages.ROLE_EDIT_CONNECTIONS_CONTROLS_HEADER,
            }),
            (0, s.jsx)(d.Text, {
              variant: "text-sm/normal",
              color: "header-secondary",
              children:
                R.Z.Messages.ROLE_EDIT_CONNECTIONS_CONTROLS_DESCRIPTION_LEARN_MORE.format(
                  {
                    helpdeskArticleUrl: E.Z.getArticleURL(
                      x.BhN.CONNECTION_DETAILS_ADMIN,
                    ),
                  },
                ),
            }),
            (0, s.jsx)(d.Button, {
              disabled: n,
              className: L.addVerificationButton,
              size: d.Button.Sizes.MEDIUM,
              look: d.Button.Looks.FILLED,
              color: d.Button.Colors.BRAND,
              onClick: t,
              children:
                R.Z.Messages.ROLE_EDIT_CONNECTIONS_CONTROLS_ADD_CONNECTION,
            }),
          ],
        });
      }
      function D(e) {
        let {
            guild: t,
            role: n,
            locked: i,
            setSelectedSection: l,
            integrations: o,
          } = e,
          { headerHeight: I, headerRef: D } = (0, S.Z)(0),
          { scrolledToTop: v, handleScroll: j } = (0, h.V)(),
          Z = (0, c.e7)(
            [T.Z],
            () => {
              var e;
              return null === (e = T.Z.getRoleMemberCount(t.id)) || void 0 === e
                ? void 0
                : e[n.id];
            },
            [n.id, t.id],
          ),
          b = (0, c.Wu)([N.Z], () => {
            var e;
            return null !==
              (e = N.Z.getEditedRoleConnectionConfigurationsMap().get(n.id)) &&
              void 0 !== e
              ? e
              : [];
          }),
          U = b.length > 1 ? _.O1.OR : _.O1.AND,
          G = a.useMemo(
            () =>
              U === _.O1.OR ? b.flat() : null != b && b.length > 0 ? b[0] : [],
            [U, b],
          ),
          P = a.useMemo(() => new Set(G.map((e) => e.connectionType)), [G]);
        function B(e) {
          let t =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : void 0,
            s = [...G];
          s.push({
            connectionType: e,
            connectionMetadataField: void 0,
            applicationId: t,
            operator: void 0,
            value: void 0,
          }),
            (0, m.d_)(n.id, A(s, U));
        }
        function y() {
          u.Z.dispatch({
            type: "CONNECTIONS_GRID_MODAL_SHOW",
            onComplete: (e) => B(e),
            excludedPlatformTypes: P,
            integrations: o,
            onCompleteApplication: (e) => B(p.Kt, e),
          });
        }
        let F = null;
        if (0 === G.length)
          F = (0, s.jsx)(M, { handleAddVerificationClicked: y, locked: i });
        else if (G.length > 0) {
          var k, w;
          let e = null;
          G.length < 10 &&
            (e = (0, s.jsx)(d.Button, {
              className: r()(
                L.addVerificationButton,
                L.addVerificationButtonAppend,
              ),
              size: d.Button.Sizes.LARGE,
              look: d.Button.Looks.BLANK,
              color: d.Button.Colors.LINK,
              onClick: y,
              disabled: i,
              children: (0, s.jsxs)("div", {
                className: L.addVerificationButtonAppendTextContainer,
                children: [
                  (0, s.jsx)(d.CirclePlusIcon, {
                    size: "xs",
                    color: "currentColor",
                  }),
                  R.Z.Messages.ROLE_EDIT_CONNECTIONS_CONTROLS_ADD_CONNECTION,
                ],
              }),
            })),
            (F = (0, s.jsxs)(s.Fragment, {
              children: [
                ((k = () => (0, m.d_)(n.id, [])),
                (w = i),
                (0, s.jsxs)(s.Fragment, {
                  children: [
                    (0, s.jsxs)("div", {
                      className: L.headerTitleContainer,
                      children: [
                        (0, s.jsx)("div", {
                          className: L.headerTitleTextContainer,
                          children: (0, s.jsx)(d.Heading, {
                            variant: "eyebrow",
                            children:
                              R.Z.Messages
                                .ROLE_EDIT_CONNECTIONS_CONTROLS_HEADER,
                          }),
                        }),
                        (0, s.jsx)(d.Button, {
                          className: L.headerTitleButton,
                          size: d.Button.Sizes.TINY,
                          look: d.Button.Looks.LINK,
                          color: d.Button.Colors.LINK,
                          onClick: k,
                          disabled: w,
                          children:
                            R.Z.Messages
                              .ROLE_EDIT_CONNECTIONS_CONTROLS_CLEAR_ALL,
                        }),
                      ],
                    }),
                    (0, s.jsx)(d.Text, {
                      variant: "text-sm/normal",
                      children:
                        R.Z.Messages.ROLE_EDIT_CONNECTIONS_CONTROLS_DESCRIPTION_LEARN_MORE.format(
                          {
                            helpdeskArticleUrl: E.Z.getArticleURL(
                              x.BhN.CONNECTION_DETAILS_ADMIN,
                            ),
                          },
                        ),
                    }),
                  ],
                })),
                (function (e, t, n, a, i) {
                  let r = A(a, _.O1.OR);
                  return (0, s.jsx)(d.FormItem, {
                    className: L.operatorContainer,
                    title:
                      R.Z.Messages.ROLE_EDIT_CONNECTIONS_CONTROLS_REQUIREMENTS,
                    children: (0, s.jsx)(d.RadioGroup, {
                      options: [
                        {
                          name: R.Z.Messages
                            .ROLE_EDIT_CONNECTIONS_CONTROLS_OR_DESCRIPTION,
                          value: _.O1.OR,
                        },
                        {
                          name: R.Z.Messages
                            .ROLE_EDIT_CONNECTIONS_CONTROLS_AND_DESCRIPTION,
                          value: _.O1.AND,
                        },
                      ],
                      onChange: (e) => i(a, e.value),
                      value: n,
                      disabled: e || r.length < 2,
                      "aria-labelledby": O,
                    }),
                  });
                })(i, n.id, U, G, (e, t) => (0, m.d_)(n.id, A(e, t))),
                (function (e, t, n, a, i) {
                  function r(n, s) {
                    let a = [];
                    for (let t of e) a.push({ ...t });
                    if (null == n) {
                      let t = e[s];
                      null !== t &&
                      null == t.connectionMetadataField &&
                      null == t.operator &&
                      null == t.value
                        ? (a = a.filter((e) =>
                            null == t.applicationId
                              ? e.connectionType !== t.connectionType
                              : e.connectionType !== t.connectionType &&
                                e.applicationId !== t.applicationId,
                          ))
                        : a.splice(s, 1);
                    } else -1 === s ? a.push(n) : s >= 0 && (a[s] = n);
                    t(a);
                  }
                  let l = new Map();
                  for (let t of (e.forEach((e, t) => {
                    let n = ""
                      .concat(e.connectionType, ":")
                      .concat(e.applicationId);
                    if (l.has(n)) {
                      let s = l.get(n);
                      null == s || s.push({ index: t, configuration: e });
                    } else l.set(n, [{ index: t, configuration: e }]);
                  }),
                  l.values())) {
                    if (
                      t.some((e) => {
                        let { configuration: t } = e;
                        return (
                          null == t.connectionMetadataField &&
                          null == t.operator &&
                          null == t.value
                        );
                      })
                    )
                      continue;
                    let n = {
                        ...t[0].configuration,
                        connectionMetadataField: void 0,
                        operator: void 0,
                        value: void 0,
                      },
                      s = e.push(n);
                    t.push({ index: s - 1, configuration: n });
                  }
                  return (0, s.jsx)("div", {
                    className: L.configurationsContainer,
                    children: Array.from(l.values()).map((e) =>
                      (0, s.jsx)(
                        g.Z,
                        {
                          configurationItems: e,
                          onConfigurationChange: r,
                          locked: n,
                          integrations: i,
                        },
                        e[0].configuration.connectionType + ":" + e[0].index,
                      ),
                    ),
                  });
                })(G, (e) => (0, m.d_)(n.id, A(e, U)), i, n.id, o),
                e,
              ],
            }));
        }
        return (0, s.jsx)(d.AdvancedScrollerAuto, {
          className: L.scroller,
          style: { scrollPaddingTop: I },
          onScroll: j,
          children: (0, s.jsxs)("div", {
            className: f.contentWidth,
            children: [
              (0, s.jsx)("div", {
                className: r()(f.header, f.stickyHeader, {
                  [f.stickyHeaderElevated]: !v,
                }),
                ref: D,
                children: (0, s.jsx)(h.Z, {
                  guild: t,
                  role: n,
                  selectedSection: C.ZI.VERIFICATIONS,
                  setSelectedSection: l,
                }),
              }),
              (null != Z ? Z : 0) > 0
                ? (0, s.jsxs)("div", {
                    className: L.warningContainer,
                    children: [
                      (0, s.jsx)(d.CircleWarningIcon, {
                        size: "custom",
                        width: 20,
                        height: 20,
                        color: "currentColor",
                        className: L.warningIcon,
                      }),
                      (0, s.jsx)(d.Text, {
                        variant: "text-sm/normal",
                        color: "text-normal",
                        children:
                          R.Z.Messages
                            .ROLE_EDIT_CONNECTIONS_CONTROLS_MEMBERS_WARNING,
                      }),
                    ],
                  })
                : null,
              F,
            ],
          }),
        });
      }
    },
    660962: function (e, t, n) {
      "use strict";
      n.d(t, {
        ZP: function () {
          return B;
        },
      }),
        n(47120);
      var s = n(735250),
        a = n(470079),
        i = n(120356),
        r = n.n(i),
        l = n(392711),
        o = n.n(l),
        c = n(442837),
        d = n(481060),
        u = n(605436),
        _ = n(663993),
        I = n(518738),
        E = n(786761),
        T = n(3148),
        m = n(753206),
        N = n(598077),
        S = n(496675),
        g = n(764260),
        h = n(95242),
        C = n(541575),
        x = n(420966),
        p = n(337344),
        R = n(275296),
        L = n(203377),
        f = n(981631),
        O = n(689938),
        A = n(281654),
        M = n(571621),
        D = n(179517),
        v = n(79829);
      let j = (0, _.Un)({
          createPromise: () => n.e("5609").then(n.bind(n, 336231)),
          webpackId: 336231,
        }),
        Z = o().debounce((e, t) => (0, g.Uv)(e, t), 200);
      function b(e) {
        let { role: t, disabled: n } = e,
          [i, r] = a.useState(t.name);
        return (
          a.useEffect(() => {
            r(t.name);
          }, [t.name]),
          (0, s.jsx)(d.FormItem, {
            title: O.Z.Messages.FORM_LABEL_ROLE_NAME,
            required: !0,
            children: (0, s.jsx)(d.TextInput, {
              type: "text",
              value: i,
              maxLength: f.VKK,
              onChange: function (e) {
                r(e), Z(t.id, e);
              },
              disabled: n,
            }),
          })
        );
      }
      function U(e) {
        let { role: t, disabled: n } = e;
        return (0, s.jsxs)(d.FormItem, {
          className: A.colorPicker,
          title: O.Z.Messages.FORM_LABEL_ROLE_COLOR,
          required: !0,
          children: [
            (0, s.jsx)(d.FormText, {
              className: A.colorDescription,
              children: O.Z.Messages.ROLE_COLOR_HELP,
            }),
            (0, s.jsx)(
              j,
              {
                defaultColor: f.p6O,
                colors: f.pmI,
                value: t.color,
                disabled: n,
                onChange: (e) =>
                  (function (e, t) {
                    if (e.color !== t && (t !== f.p6O || 0 !== e.color))
                      t === f.p6O && (t = 0), (0, g.OW)(e.id, t);
                  })(t, e),
                customPickerPosition: "right",
              },
              t.id,
            ),
          ],
        });
      }
      function G(e) {
        var t, i;
        let { role: r, guildId: l } = e;
        let o =
            ((i = O.Z.Messages.ROLE_SAMPLE_MESSAGE),
            a.useMemo(() => {
              let e = (0, E.e5)({
                ...(0, T.ZP)({ channelId: "1337", content: i }),
                state: f.yb.SENT,
                id: "31337",
              });
              return (
                (e.author = new N.Z({
                  id: "313337",
                  username: O.Z.Messages.WUMPUS,
                  discriminator: "0000",
                  bot: !1,
                })),
                (e.author.getAvatarURL = () => n(52008)),
                e
              );
            }, [i])),
          c = {
            nick: o.author.username,
            colorString:
              null !== (t = r.colorString) && void 0 !== t ? t : void 0,
          },
          u = { src: D, name: r.name },
          _ = { src: v, name: r.name },
          S = (0, I.oC)(l, r);
        return (0, s.jsx)(d.FocusBlock, {
          children: (0, s.jsxs)("div", {
            className: A.previewContainer,
            "aria-hidden": !0,
            "data-disable-adaptive-theme": !0,
            children: [
              (0, s.jsx)(d.ThemeProvider, {
                theme: f.BRd.LIGHT,
                children: (e) =>
                  (0, s.jsx)("div", {
                    className: e,
                    children: (0, s.jsx)("div", {
                      className: A.messageContainer,
                      children: (0, s.jsx)(m.Z, {
                        author: c,
                        message: o,
                        roleIcon: null != S ? S : _,
                        isGroupStart: !0,
                      }),
                    }),
                  }),
              }),
              (0, s.jsx)(d.ThemeProvider, {
                theme: f.BRd.DARK,
                children: (e) =>
                  (0, s.jsx)("div", {
                    className: e,
                    children: (0, s.jsx)("div", {
                      className: A.messageContainer,
                      children: (0, s.jsx)(m.Z, {
                        author: c,
                        message: o,
                        roleIcon: null != S ? S : u,
                        isGroupStart: !0,
                      }),
                    }),
                  }),
              }),
            ],
          }),
        });
      }
      function P(e) {
        let { role: t, disabled: n } = e;
        return (0, s.jsxs)(s.Fragment, {
          children: [
            (0, s.jsx)(d.FormSwitch, {
              disabled: n,
              value: t.hoist,
              onChange: (e) => (0, g.we)(t.id, e, t.mentionable),
              hideBorder: !0,
              children: O.Z.Messages.FORM_LABEL_HOIST_DESCRIPTION,
            }),
            (0, s.jsx)(d.FormDivider, { className: A.divider }),
            (0, s.jsx)(d.FormSwitch, {
              disabled: n,
              value: t.mentionable,
              onChange: (e) => (0, g.we)(t.id, t.hoist, e),
              note: O.Z.Messages.FORM_LABEL_MENTIONABLE_DESCRIPTION,
              hideBorder: !0,
              children: O.Z.Messages.FORM_LABEL_MENTIONABLE.format(),
            }),
          ],
        });
      }
      function B(e) {
        let { guild: t, role: n, locked: a, setSelectedSection: i } = e,
          l = (0, u.pM)(null == t ? void 0 : t.id, n.id),
          o = a || l,
          _ = (0, c.e7)([S.Z], () => S.Z.canImpersonateRole(t, n)),
          { headerHeight: I, headerRef: E } = (0, h.Z)(0),
          { scrolledToTop: T, handleScroll: m } = (0, x.V)();
        return (0, s.jsx)(d.AdvancedScrollerAuto, {
          className: A.scroller,
          style: { scrollPaddingTop: I },
          onScroll: m,
          children: (0, s.jsxs)("div", {
            className: M.contentWidth,
            children: [
              (0, s.jsx)("div", {
                className: r()(M.header, M.stickyHeader, {
                  [M.stickyHeaderElevated]: !T,
                }),
                ref: E,
                children: (0, s.jsx)(x.Z, {
                  guild: t,
                  role: n,
                  selectedSection: L.ZI.DISPLAY,
                  setSelectedSection: i,
                }),
              }),
              (0, s.jsx)(b, { role: n, disabled: o }),
              (0, s.jsx)("div", {
                className: A.noticeContainer,
                children: (0, s.jsx)(R.Z, { role: n }),
              }),
              (0, s.jsx)(d.FormDivider, { className: A.divider }),
              (0, s.jsx)(U, { role: n, disabled: o }),
              (0, s.jsx)(C.Z, { guild: t, disabled: o, role: n }),
              (0, s.jsx)(G, { role: n, guildId: t.id }),
              (0, s.jsx)(d.FormDivider, { className: A.divider }),
              (0, s.jsx)(P, { role: n, disabled: o }),
              _
                ? (0, s.jsxs)(s.Fragment, {
                    children: [
                      (0, s.jsx)(d.FormDivider, { className: A.divider }),
                      (0, s.jsx)(p.L, { guildId: t.id, role: n }),
                    ],
                  })
                : null,
            ],
          }),
        });
      }
    },
    420966: function (e, t, n) {
      "use strict";
      n.d(t, {
        V: function () {
          return T;
        },
        Z: function () {
          return m;
        },
      }),
        n(47120);
      var s = n(735250),
        a = n(470079),
        i = n(442837),
        r = n(481060),
        l = n(239091),
        o = n(605436),
        c = n(741247),
        d = n(243730),
        u = n(852898),
        _ = n(203377),
        I = n(689938),
        E = n(729824);
      function T() {
        let [e, t] = a.useState(!0);
        return {
          scrolledToTop: e,
          handleScroll: function (e) {
            t(0 === e.currentTarget.scrollTop);
          },
        };
      }
      function m(e) {
        let {
            guild: t,
            role: T,
            selectedSection: m,
            setSelectedSection: N,
          } = e,
          S = a.useCallback(
            (e) => {
              N(e);
            },
            [N],
          ),
          g = (0, i.e7)(
            [d.Z],
            () => {
              var e;
              return null === (e = d.Z.getRoleMemberCount(t.id)) || void 0 === e
                ? void 0
                : e[T.id];
            },
            [T.id, t.id],
          ),
          h = (0, o.pM)(t.id, T.id),
          C = (0, u.Z)(T);
        a.useEffect(() => {
          h && N(_.ZI.PERMISSIONS);
        }, [h, N]);
        let x = (0, c.useHasGuildRoleItems)(t, T);
        return (0, s.jsxs)(s.Fragment, {
          children: [
            (0, s.jsxs)("div", {
              className: E.titleContainer,
              children: [
                (0, s.jsx)(r.Text, {
                  className: E.titleText,
                  color: "header-primary",
                  variant: "text-md/semibold",
                  children: I.Z.Messages.ROLE_EDIT_TITLE_WITH_NAME.format({
                    roleName: T.name,
                  }),
                }),
                x
                  ? (0, s.jsx)(r.Clickable, {
                      className: E.menu,
                      onClick: function (e) {
                        (0, l.jW)(e, async () => {
                          let { default: e } = await Promise.resolve().then(
                            n.bind(n, 741247),
                          );
                          return (n) =>
                            (0, s.jsx)(e, { ...n, guild: t, role: T });
                        });
                      },
                      "aria-label": I.Z.Messages.MORE_OPTIONS,
                      children: (0, s.jsx)(r.MoreHorizontalIcon, {
                        size: "md",
                        color: "currentColor",
                      }),
                    })
                  : null,
              ],
            }),
            null != C
              ? (0, s.jsx)(r.HelpMessage, {
                  messageType: r.HelpMessageTypes.WARNING,
                  children: C,
                })
              : null,
            (0, s.jsxs)(r.TabBar, {
              className: E.tabBar,
              "aria-label": I.Z.Messages.OPTIONS,
              selectedItem: m,
              type: "top",
              look: "brand",
              onItemSelect: S,
              children: [
                (0, s.jsx)(r.TabBar.Item, {
                  className: E.tabBarItem,
                  id: _.ZI.DISPLAY,
                  disabled: h,
                  children: I.Z.Messages.ROLE_EDIT_TAB_DISPLAY,
                }),
                (0, s.jsx)(r.TabBar.Item, {
                  className: E.tabBarItem,
                  id: _.ZI.PERMISSIONS,
                  children: I.Z.Messages.ROLE_EDIT_TAB_PERMISSIONS,
                }),
                (0, s.jsx)(r.TabBar.Item, {
                  className: E.tabBarItem,
                  id: _.ZI.VERIFICATIONS,
                  disabled: h,
                  children: I.Z.Messages.ROLE_EDIT_TAB_VERIFICATION,
                }),
                (0, s.jsx)(r.TabBar.Item, {
                  className: E.tabBarItem,
                  id: _.ZI.MEMBERS,
                  disabled: h,
                  children: h
                    ? I.Z.Messages.ROLE_EDIT_TAB_MANAGE_MEMBERS
                    : I.Z.Messages.ROLE_EDIT_TAB_MEMBERS_WITH_LIST.format({
                        numMembers: String(g),
                      }),
                }),
              ],
            }),
          ],
        });
      }
    },
    442182: function (e, t, n) {
      "use strict";
      n.d(t, {
        ZP: function () {
          return U;
        },
      }),
        n(47120);
      var s = n(735250),
        a = n(470079),
        i = n(120356),
        r = n.n(i),
        l = n(442837),
        o = n(481060),
        c = n(239091),
        d = n(479531),
        u = n(58540),
        _ = n(100527),
        I = n(906732),
        E = n(184301),
        T = n(347475),
        m = n(594174),
        N = n(626135),
        S = n(243730),
        g = n(434404),
        h = n(946724),
        C = n(130341),
        x = n(95242),
        p = n(420966),
        R = n(566476),
        L = n(203377),
        f = n(981631),
        O = n(689938),
        A = n(465848),
        M = n(571621);
      async function D(e, t, n) {
        let a = e.roles.filter((e) => e !== n);
        try {
          await g.Z.updateMemberRoles(t, e.id, a, [], [n]);
        } catch (t) {
          let e = new d.Z(t);
          (0, o.openModal)((t) =>
            (0, s.jsx)(o.ConfirmModal, {
              ...t,
              header: O.Z.Messages.ERROR_GENERIC_TITLE,
              confirmText: O.Z.Messages.OKAY,
              confirmButtonColor: o.Button.Colors.BRAND,
              children: (0, s.jsx)(o.Text, {
                color: "text-normal",
                variant: "text-md/normal",
                children: e.getAnyErrorMessage(),
              }),
            }),
          );
        }
      }
      function v(e) {
        let { member: t, guildId: i, roleId: l, locked: d } = e,
          _ = a.useMemo(() => ({ [i]: [t.id] }), [i, t.id]);
        function I(e) {
          if ((e.stopPropagation(), !d)) {
            if (e.shiftKey) {
              D(t, i, l);
              return;
            }
            !(function (e, t, n) {
              let a = h.Z.getRole(n);
              (0, o.openModal)((i) =>
                (0, s.jsxs)(o.ConfirmModal, {
                  ...i,
                  header: O.Z.Messages.ROLE_REMOVE_MEMBER_CONFIRM_TITLE,
                  confirmText: O.Z.Messages.REMOVE,
                  cancelText: O.Z.Messages.CANCEL,
                  onConfirm: () => D(e, t, n),
                  children: [
                    (0, s.jsx)(o.Text, {
                      color: "text-normal",
                      variant: "text-md/normal",
                      children:
                        O.Z.Messages.ROLE_REMOVE_MEMBER_CONFIRM_BODY.format({
                          username: e.name,
                          roleName: null == a ? void 0 : a.name,
                        }),
                    }),
                    (0, s.jsx)(o.Text, {
                      className: A.removeTip,
                      color: "text-muted",
                      variant: "text-md/normal",
                      children: O.Z.Messages.ROLE_REMOVE_MEMBER_CONFIRM_TIP,
                    }),
                  ],
                }),
              );
            })(t, i, l);
          }
        }
        function N(e) {
          let a = m.default.getUser(t.id);
          if (null != a)
            (0, c.jW)(e, async () => {
              let { default: e } = await Promise.all([
                n.e("79695"),
                n.e("13125"),
                n.e("26976"),
                n.e("49448"),
              ]).then(n.bind(n, 415118));
              return (t) =>
                (0, s.jsx)(e, { ...t, user: a, guildId: i, showChatItems: !1 });
            });
        }
        return (
          (0, u.$)(_),
          (0, s.jsx)("div", {
            className: M.contentWidth,
            children: (0, s.jsx)(o.Popout, {
              renderPopout: (e) =>
                (0, s.jsx)(T.Z, { guildId: i, userId: t.id, roleId: l, ...e }),
              position: "left",
              preload: () => (0, E.Z)(t.id, t.avatarURL, { guildId: i }),
              children: (e) =>
                (0, s.jsxs)(o.Clickable, {
                  ...e,
                  className: A.memberRow,
                  onContextMenu: N,
                  children: [
                    (0, s.jsx)(R.Z, {
                      className: A.memberDetails,
                      avatarURL: t.avatarURL,
                      name: t.name,
                      bot: t.bot,
                      verifiedBot: t.verifiedBot,
                      userTag: t.userTag,
                    }),
                    (0, s.jsx)("div", {
                      className: A.removeButtonContainer,
                      children: (0, s.jsx)(o.Tooltip, {
                        text: d
                          ? O.Z.Messages.ROLE_REMOVE_MEMBER_MANAGED
                          : O.Z.Messages.ROLE_REMOVE_MEMBER_CONFIRM_TITLE,
                        position: "top",
                        children: (e) =>
                          (0, s.jsx)(o.Clickable, {
                            ...e,
                            className: r()(A.removeButton, {
                              [A.removeButtonDisabled]: d,
                            }),
                            onClick: I,
                            children: (0, s.jsx)(o.CircleXIcon, {
                              size: "xs",
                              color: "currentColor",
                            }),
                          }),
                      }),
                    }),
                  ],
                }),
            }),
          })
        );
      }
      function j(e) {
        let { handleAddClick: t, locked: n } = e;
        return (0, s.jsx)("div", {
          className: M.contentWidth,
          children: (0, s.jsxs)("div", {
            className: r()(A.memberRow, A.emptyRowContainer),
            children: [
              (0, s.jsx)(o.GroupIcon, { size: "md", color: "currentColor" }),
              (0, s.jsx)(o.Text, {
                className: A.emptyRowText,
                variant: "text-sm/semibold",
                color: "text-muted",
                children:
                  O.Z.Messages.ROLE_EDIT_MEMBERS_NO_SEARCH_RESULTS.format({
                    addMembersHook: function (e, a) {
                      return n
                        ? null
                        : (0, s.jsx)(o.Anchor, { onClick: t, children: e }, a);
                    },
                  }),
              }),
            ],
          }),
        });
      }
      function Z(e) {
        let {
            guildId: t,
            roleId: n,
            query: i,
            headerHeight: r,
            locked: l,
            onScroll: c,
            roleMembers: d,
            handleAddClick: u,
          } = e,
          { analyticsLocations: E } = (0, I.ZP)(_.Z.MEMBER_LIST),
          T = a.useMemo(() => i.trim().toLowerCase(), [i]);
        (0, C.rY)(t, T);
        let m = a.useMemo(() => d.filter((e) => (0, C.eg)(T, e)), [d, T]),
          N = a.useMemo(
            () => m.sort((e, t) => e.name.localeCompare(t.name)),
            [m],
          );
        return (0, s.jsx)(I.Gt, {
          value: E,
          children: (0, s.jsx)(o.ListAuto, {
            className: A.list,
            sections: [Math.max(m.length, 1)],
            sectionHeight: r,
            renderSection: () =>
              (0, s.jsx)("div", { style: { height: r } }, "section"),
            style: { scrollPaddingTop: r },
            rowHeight: 40,
            renderRow: function (e) {
              let { row: a } = e;
              if (0 === N.length)
                return (0, s.jsx)(j, { handleAddClick: u, locked: l }, "empty");
              let i = N[a];
              return (0, s.jsx)(
                v,
                { member: i, guildId: t, roleId: n, locked: l },
                i.id,
              );
            },
            onScroll: c,
          }),
        });
      }
      function b(e) {
        let { query: t, setQuery: n, locked: a, handleAddClick: i } = e;
        return (0, s.jsxs)("div", {
          className: A.searchContainer,
          children: [
            (0, s.jsx)(o.SearchBar, {
              size: o.SearchBar.Sizes.MEDIUM,
              query: t,
              onChange: n,
              onClear: () => n(""),
              placeholder: O.Z.Messages.SEARCH_MEMBERS,
              "aria-label": O.Z.Messages.SEARCH_MEMBERS,
            }),
            (0, s.jsx)(o.Button, {
              className: A.addButton,
              size: o.Button.Sizes.SMALL,
              onClick: i,
              disabled: a,
              children: O.Z.Messages.ROLE_ADD_MEMBERS_BUTTON,
            }),
          ],
        });
      }
      function U(e) {
        let { guild: t, role: i, locked: c, setSelectedSection: d } = e,
          [u, _] = a.useState(""),
          { headerHeight: I, headerRef: E } = (0, x.Z)(0),
          { scrolledToTop: T, handleScroll: m } = (0, p.V)(),
          g = i.managed || c,
          h = (0, C.e)(t.id, i.id),
          R =
            (0, l.e7)([S.Z], () => {
              var e, n;
              return null !==
                (n =
                  null === (e = S.Z.getRoleMemberCount(t.id)) || void 0 === e
                    ? void 0
                    : e[i.id]) && void 0 !== n
                ? n
                : 0;
            }) > h.length,
          D = () => {
            N.default.track(f.rMx.OPEN_MODAL, {
              type: "Add Role Members",
              location_page: "Role Settings",
              location_section: "Members",
            }),
              (0, o.openModalLazy)(async () => {
                let { default: e } = await Promise.all([
                  n.e("7590"),
                  n.e("65851"),
                ]).then(n.bind(n, 24722));
                return (n) =>
                  (0, s.jsx)(e, { ...n, roleId: i.id, guildId: t.id });
              });
          };
        return (0, s.jsxs)("div", {
          className: A.container,
          children: [
            (0, s.jsx)("div", {
              className: A.headerContainer,
              ref: E,
              children: (0, s.jsx)("div", {
                className: M.contentWidth,
                children: (0, s.jsxs)("div", {
                  className: r()(M.header, { [M.stickyHeaderElevated]: !T }),
                  children: [
                    (0, s.jsx)(p.Z, {
                      guild: t,
                      role: i,
                      selectedSection: L.ZI.MEMBERS,
                      setSelectedSection: d,
                    }),
                    (0, s.jsx)(b, {
                      query: u,
                      setQuery: _,
                      locked: g,
                      handleAddClick: D,
                    }),
                    R
                      ? (0, s.jsx)(o.HelpMessage, {
                          className: A.searchWarning,
                          messageType: o.HelpMessageTypes.INFO,
                          children: O.Z.Messages.ROLE_EDIT_MEMBERS_MISSING,
                        })
                      : null,
                  ],
                }),
              }),
            }),
            (0, s.jsx)(Z, {
              headerHeight: I + 8,
              query: u,
              guildId: t.id,
              roleId: i.id,
              locked: g,
              onScroll: m,
              roleMembers: h,
              handleAddClick: D,
            }),
          ],
        });
      }
    },
    322816: function (e, t, n) {
      "use strict";
      n.d(t, {
        ZP: function () {
          return A;
        },
      }),
        n(411104),
        n(47120);
      var s = n(735250),
        a = n(470079),
        i = n(120356),
        r = n.n(i),
        l = n(149765),
        o = n(442837),
        c = n(481060),
        d = n(144991),
        u = n(496675),
        _ = n(594174),
        I = n(626135),
        E = n(233608),
        T = n(700785),
        m = n(764260),
        N = n(631969),
        S = n(95242),
        g = n(420966),
        h = n(275296),
        C = n(203377),
        x = n(981631),
        p = n(689938),
        R = n(366468),
        L = n(571621);
      function f(e) {
        let { guild: t, role: n, locked: i } = e,
          r = (0, o.e7)([_.default], () => _.default.getCurrentUser()),
          d = a.useMemo(() => T.uB({ user: r, context: t }), [r, t]),
          u = a.useMemo(() => ({ [n.id]: { ...n, permissions: T.Hn } }), [n]),
          I = a.useMemo(
            () => T.uB({ user: r, context: t, roles: u }),
            [r, t, u],
          ),
          E = !l.fS(d, I);
        return (0, s.jsx)("div", {
          className: R.clearButtonWrapper,
          children: (0, s.jsx)(c.Tooltip, {
            text: E ? p.Z.Messages.HELP_CLEAR_PERMISSIONS : null,
            position: "top",
            color: c.Tooltip.Colors.RED,
            children: (e) => {
              let { onMouseEnter: t, onMouseLeave: a } = e;
              return (0, s.jsx)(c.Button, {
                className: R.clearButton,
                size: c.Button.Sizes.TINY,
                look: c.Button.Looks.LINK,
                color: c.Button.Colors.LINK,
                onClick: () => (0, m.TY)(n.id),
                onMouseEnter: t,
                onMouseLeave: a,
                disabled: l.fS(n.permissions, T.Hn) || E || i,
                children: p.Z.Messages.ROLE_PERMISSIONS_CLEAR_PERMISSIONS,
              });
            },
          }),
        });
      }
      function O(e) {
        let { guild: t, role: n, specs: a, locked: i } = e;
        if (0 === a.length)
          return (0, s.jsxs)("div", {
            className: R.noResultsContainer,
            children: [
              (0, s.jsx)(N.Z, { className: R.noResults }),
              (0, s.jsx)(c.Text, {
                variant: "text-sm/normal",
                children: p.Z.Messages.ROLE_PERMISSIONS_EMPTY_TEXT,
              }),
            ],
          });
        function r(e) {
          return u.Z.can(e, t)
            ? !u.Z.can(e, t, null, {
                [n.id]: { ...n, permissions: l.Od(n.permissions, e) },
              }) && p.Z.Messages.HELP_SINGULAR_PERMISSION
            : p.Z.Messages.HELP_MISSING_PERMISSION;
        }
        return (0, s.jsxs)("div", {
          className: R.permissionsWrapper,
          children: [
            (0, s.jsx)(f, { guild: t, role: n, locked: i }),
            a.map((e, t) =>
              (0, s.jsx)(
                d.Z,
                {
                  className: R.permissionsForm,
                  spec: e,
                  permissions: n.permissions,
                  locked: i,
                  onChange: (e, t) => {
                    if ("string" == typeof t)
                      throw Error("Unexpected string `allow`");
                    (0, m.lO)(n.id, e, t);
                  },
                  permissionRender: r,
                },
                t,
              ),
            ),
          ],
        });
      }
      function A(e) {
        let {
            guild: t,
            role: n,
            locked: i,
            setSelectedSection: l,
            initialSearchQuery: o,
          } = e,
          [d, u] = a.useState(null != o ? o : ""),
          _ = a
            .useMemo(() => E.Z.generateGuildPermissionSpec(t), [t])
            .map((e) => ({
              ...e,
              permissions: e.permissions.filter((e) => {
                let t = d.trimStart().toLowerCase();
                return (
                  e.title.toLowerCase().includes(t) ||
                  (null != e.description &&
                    e.description.toString().toLowerCase().includes(t))
                );
              }),
            }))
            .filter((e) => e.permissions.length > 0),
          { headerHeight: T, headerRef: m } = (0, S.Z)(0),
          { scrolledToTop: N, handleScroll: f } = (0, g.V)(),
          A = a.useRef(!1);
        return (
          a.useEffect(() => {
            if (!A.current && "" !== d.trimStart())
              I.default.track(x.rMx.SEARCH_STARTED, {
                search_type: "Permissions",
              }),
                (A.current = !0);
          }, [d]),
          (0, s.jsx)(c.AdvancedScrollerAuto, {
            className: R.scroller,
            style: { scrollPaddingTop: T },
            onScroll: f,
            children: (0, s.jsxs)("div", {
              className: L.contentWidth,
              children: [
                (0, s.jsxs)("div", {
                  className: r()(L.header, L.stickyHeader, {
                    [L.stickyHeaderElevated]: !N,
                  }),
                  ref: m,
                  children: [
                    (0, s.jsx)(g.Z, {
                      guild: t,
                      role: n,
                      selectedSection: C.ZI.PERMISSIONS,
                      setSelectedSection: l,
                    }),
                    (0, s.jsx)("div", {
                      className: R.noticeContainer,
                      children: (0, s.jsx)(h.Z, { role: n }),
                    }),
                    (0, s.jsx)("div", {
                      className: R.searchContainer,
                      children: (0, s.jsx)(c.SearchBar, {
                        size: c.SearchBar.Sizes.MEDIUM,
                        query: d,
                        onChange: u,
                        onClear: () => u(""),
                        placeholder:
                          p.Z.Messages.ROLE_PERMISSIONS_SEARCH_PLACEHOLDER,
                        "aria-label":
                          p.Z.Messages.ROLE_PERMISSIONS_SEARCH_PLACEHOLDER,
                      }),
                    }),
                  ],
                }),
                (0, s.jsx)(O, { guild: t, role: n, specs: _, locked: i }),
              ],
            }),
          })
        );
      }
    },
    266665: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return D;
        },
      }),
        n(47120);
      var s = n(735250),
        a = n(470079),
        i = n(120356),
        r = n.n(i),
        l = n(225857),
        o = n(290843),
        c = n(866442),
        d = n(442837),
        u = n(481060),
        _ = n(239091),
        I = n(749210),
        E = n(607070),
        T = n(605436),
        m = n(134433),
        N = n(325476),
        S = n(496675),
        g = n(671533),
        h = n(946724),
        C = n(970129),
        x = n(712181),
        p = n(420966),
        R = n(203377),
        L = n(981631),
        f = n(689938),
        O = n(100161);
      let A = "DRAGGABLE_ROLE";
      function M(e) {
        var t, a;
        let i,
          {
            guild: d,
            role: I,
            highestRole: E,
            selectedItem: N,
            onClick: S,
            currentPosition: g,
            onDragStart: h,
            onDragReset: x,
            onDragComplete: p,
            roleStyle: R,
          } = e,
          f = (0, C.T)(d, E, I),
          M = (0, T.pM)(d.id, I.id),
          D = null == f && !M,
          v =
            (null === (t = I.tags) || void 0 === t
              ? void 0
              : t.guild_connections) !== void 0,
          [, j] = (0, l.c)({
            type: A,
            item: () => (h(I.id), { id: I.id, position: g }),
            canDrag: () => D,
            end: (e, t) => {
              let n = t.getDropResult();
              if (null == n) {
                x();
                return;
              }
              p(n.roleId);
            },
          }),
          [{ dragSourcePosition: Z }, b] = (0, o.L)({
            accept: A,
            canDrop: () => D,
            collect: (e) => {
              let t = e.getItem();
              return null != t && e.isOver() && e.canDrop()
                ? { dragSourcePosition: t.position }
                : { dragSourcePosition: null };
            },
            drop: () => ({ roleId: I.id }),
          }),
          U =
            null !== (a = I.colorString) && void 0 !== a ? a : (0, c.Rf)(L.p6O);
        return (
          (i = v
            ? (0, s.jsx)(m.Z, {
                size: 12,
                color: I.colorString,
                className: O.verifiedRoleIcon,
              })
            : "dot" === R
              ? (0, s.jsx)(u.RoleDot, { color: U, background: !1, tooltip: !1 })
              : (0, s.jsx)(u.RoleCircle, { color: U })),
          (0, s.jsxs)(u.TabBar.Item, {
            className: r()(O.row, {
              [O.dragBefore]: null !== Z && g < Z,
              [O.dragAfter]: null !== Z && g > Z,
            }),
            id: I.id,
            selectedItem: N,
            itemType: "side",
            onClick: S,
            onContextMenu: function (e) {
              (0, _.jW)(e, async () => {
                let { default: e } = await Promise.resolve().then(
                  n.bind(n, 741247),
                );
                return (t) => (0, s.jsx)(e, { ...t, role: I, guild: d });
              });
            },
            "aria-label": I.name,
            clickableRef: (e) => {
              var t;
              return j(
                b(
                  null !== (t = null == e ? void 0 : e.ref) && void 0 !== t
                    ? t
                    : null,
                ),
              );
            },
            children: [
              i,
              null != f
                ? (0, s.jsx)(C.Z, { className: O.lock, tooltipText: f })
                : null,
              (0, s.jsx)(u.Text, {
                variant: "text-sm/medium",
                color: M ? "header-primary" : "interactive-active",
                lineClamp: 1,
                children: I.name,
              }),
            ],
          })
        );
      }
      function D(e) {
        let {
            guild: t,
            currentRoleId: n,
            setCurrentRoleId: i,
            setSelectedSection: l,
          } = e,
          o = (0, d.e7)([h.Z], () => h.Z.roles),
          c = (0, d.e7)([S.Z], () => S.Z.getHighestRole(t)),
          _ = (0, d.e7)([E.Z], () => E.Z.roleStyle),
          [T, m] = a.useState(o.length),
          { scrolledToTop: C, handleScroll: L } = (0, p.V)(),
          {
            handleDragStart: A,
            handleDragReset: D,
            handleDragComplete: v,
          } = (0, x.Z)(o),
          j = a.useRef(null),
          Z = a.useCallback(
            (e) => {
              var t, n;
              let s = o.findIndex((t) => t.id === e);
              null === (n = j.current) ||
                void 0 === n ||
                null === (t = n.getScrollerNode()) ||
                void 0 === t ||
                t.scrollTo({ top: Math.max((s - 2) * 34, 0) });
            },
            [o],
          );
        a.useEffect(() => {
          Z(n);
        }, []),
          a.useEffect(() => {
            o.length > T && Z(n), o.length !== T && m(o.length);
          }, [o.length, T, m, Z, n]);
        let b = () => {
          I.Z.createRole(t.id), l(R.ZI.DISPLAY);
        };
        return (0, s.jsx)(N.ZP.Sidebar, {
          className: O.sidebar,
          children: (0, s.jsxs)("div", {
            className: O.container,
            children: [
              (0, s.jsxs)("div", {
                className: r()(O.titleContainer, { [O.titleElevated]: !C }),
                children: [
                  (0, s.jsxs)(u.Clickable, {
                    className: O.title,
                    onClick: () => i(null),
                    children: [
                      (0, s.jsx)(g.Z, { direction: g.Z.Directions.LEFT }),
                      (0, s.jsx)(u.Text, {
                        className: O.titleText,
                        variant: "text-md/semibold",
                        color: "none",
                        children: f.Z.Messages.BACK,
                      }),
                    ],
                  }),
                  (0, s.jsx)(u.Tooltip, {
                    position: "top",
                    "aria-label":
                      f.Z.Messages.GUILD_SETTINGS_ACTION_FILTER_ROLE_CREATE,
                    text: (0, s.jsx)(u.Text, {
                      className: O.tooltip,
                      variant: "text-sm/normal",
                      children:
                        f.Z.Messages.GUILD_SETTINGS_ACTION_FILTER_ROLE_CREATE,
                    }),
                    children: (e) =>
                      (0, s.jsx)(u.Clickable, {
                        className: O.addRole,
                        ...e,
                        onClick: b,
                        children: (0, s.jsx)(u.PlusSmallIcon, {
                          size: "custom",
                          color: "currentColor",
                          width: 20,
                          height: 20,
                        }),
                      }),
                  }),
                ],
              }),
              (0, s.jsx)(u.AdvancedScroller, {
                className: O.list,
                ref: j,
                onScroll: L,
                children: (0, s.jsx)(u.TabBar, {
                  selectedItem: n,
                  onItemSelect: (e) => i(e),
                  orientation: "vertical",
                  children: o.map((e, a) =>
                    (0, s.jsx)(
                      M,
                      {
                        guild: t,
                        role: e,
                        highestRole: c,
                        selectedItem: n,
                        onClick: () => i(e.id),
                        currentPosition: a,
                        onDragStart: A,
                        onDragReset: D,
                        onDragComplete: v,
                        roleStyle: _,
                      },
                      e.id,
                    ),
                  ),
                }),
              }),
            ],
          }),
        });
      }
    },
    337344: function (e, t, n) {
      "use strict";
      n.d(t, {
        L: function () {
          return _;
        },
      });
      var s = n(735250);
      n(470079);
      var a = n(481060),
        i = n(962086),
        r = n(225675),
        l = n(671533),
        o = n(434404),
        c = n(981631),
        d = n(689938),
        u = n(657968);
      function _(e) {
        let { guildId: t, role: n } = e;
        return (0, s.jsx)(s.Fragment, {
          children: (0, s.jsxs)(a.FormItem, {
            title: d.Z.Messages.VIEW_AS_ROLE,
            className: u.container,
            children: [
              (0, s.jsx)(a.Text, {
                variant: "text-sm/normal",
                children: d.Z.Messages.VIEW_AS_ROLE_DESCRIPTION,
              }),
              (0, s.jsxs)(a.Button, {
                className: u.button,
                innerClassName: u.buttonInner,
                size: a.Button.Sizes.SMALL,
                color: a.Button.Colors.PRIMARY,
                onClick: () => {
                  o.Z.close(),
                    (0, i.iD)(t, {
                      type: r.z.ROLES,
                      roles: { [n.id]: n },
                      returnToSection: c.pNK.ROLES,
                    });
                },
                children: [
                  d.Z.Messages.VIEW_AS_ROLE,
                  (0, s.jsx)(l.Z, {
                    width: 16,
                    height: 16,
                    direction: l.Z.Directions.RIGHT,
                    className: u.arrowIcon,
                  }),
                ],
              }),
            ],
          }),
        });
      }
    },
    275296: function (e, t, n) {
      "use strict";
      n(789020);
      var s = n(735250);
      n(470079);
      var a = n(481060),
        i = n(630388),
        r = n(402148),
        l = n(981631),
        o = n(689938),
        c = n(329070);
      t.Z = (e) => {
        let { role: t } = e;
        return (0, i.yE)(t.flags, l.aO5.IN_PROMPT)
          ? (0, r.F)(t)
            ? (0, s.jsxs)("div", {
                className: c.notice,
                children: [
                  (0, s.jsx)(a.CircleWarningIcon, {
                    size: "custom",
                    width: 20,
                    height: 20,
                    color: "currentColor",
                    className: c.noticeIconPowerful,
                  }),
                  (0, s.jsx)(a.Text, {
                    variant: "text-sm/normal",
                    children: o.Z.Messages.ROLE_IN_PROMPT_POWERFUL_NOTICE_TEXT,
                  }),
                ],
              })
            : (0, s.jsxs)("div", {
                className: c.notice,
                children: [
                  (0, s.jsx)(a.CircleWarningIcon, {
                    size: "custom",
                    width: 20,
                    height: 20,
                    color: "currentColor",
                    className: c.noticeIcon,
                  }),
                  (0, s.jsx)(a.Text, {
                    variant: "text-sm/normal",
                    children: o.Z.Messages.ROLE_IN_PROMPT_NOTICE_TEXT,
                  }),
                ],
              })
          : null;
      };
    },
    566476: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return u;
        },
      });
      var s = n(735250);
      n(470079);
      var a = n(120356),
        i = n.n(a),
        r = n(399606),
        l = n(481060),
        o = n(385499),
        c = n(246946),
        d = n(199712);
      function u(e) {
        let {
            className: t,
            avatarURL: n,
            name: a,
            bot: u,
            verifiedBot: _,
            userTag: I,
          } = e,
          E = (0, r.e7)([c.Z], () => c.Z.hidePersonalInformation);
        return (0, s.jsxs)("div", {
          className: i()(d.container, t),
          children: [
            (0, s.jsx)(l.Avatar, {
              className: d.avatar,
              src: n,
              size: l.AvatarSizes.SIZE_24,
              "aria-label": a,
            }),
            (0, s.jsxs)("div", {
              className: d.textContainer,
              children: [
                (0, s.jsx)(l.Text, {
                  tag: "span",
                  className: d.name,
                  color: "header-primary",
                  variant: "text-sm/semibold",
                  children: a,
                }),
                u
                  ? (0, s.jsx)(o.Z, { className: d.botTag, verified: _ })
                  : null,
                E
                  ? null
                  : (0, s.jsx)(l.Text, {
                      tag: "span",
                      color: "interactive-normal",
                      className: d.userTag,
                      variant: "text-sm/normal",
                      children: I,
                    }),
              ],
            }),
          ],
        });
      }
    },
    712181: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return r;
        },
      }),
        n(47120);
      var s = n(710344),
        a = n(764260);
      function i(e) {
        (0, a.sI)([...e.map((e) => e.id)]);
      }
      function r(e) {
        return (0, s.Z)(e, i);
      }
    },
    95242: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return a;
        },
      }),
        n(47120);
      var s = n(470079);
      function a(e) {
        let [t, n] = s.useState(e),
          a = s.useRef(null);
        return (
          s.useEffect(() => {
            var t, s;
            n(
              null !==
                (s =
                  null === (t = a.current) || void 0 === t
                    ? void 0
                    : t.offsetHeight) && void 0 !== s
                ? s
                : e,
            );
          }),
          { headerHeight: t, headerRef: a }
        );
      }
    },
    852898: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return I;
        },
      });
      var s = n(735250),
        a = n(470079),
        i = n(442837),
        r = n(139387),
        l = n(726542),
        o = n(690221),
        c = n(434404),
        d = n(999382),
        u = n(981631),
        _ = n(689938);
      function I(e) {
        let t = (0, i.e7)([d.Z], () => d.Z.getProps().integrations);
        return a.useMemo(
          () =>
            (function (e, t) {
              var n, a, i, d;
              let I;
              if (!e.managed) return null;
              let E = null === (n = e.tags) || void 0 === n ? void 0 : n.bot_id,
                T =
                  null === (a = e.tags) || void 0 === a
                    ? void 0
                    : a.integration_id,
                m =
                  (null === (i = e.tags) || void 0 === i
                    ? void 0
                    : i.premium_subscriber) !== void 0,
                N =
                  (null === (d = e.tags) || void 0 === d
                    ? void 0
                    : d.guild_connections) !== void 0;
              if (
                (null != E
                  ? (I =
                      null == t
                        ? void 0
                        : t.find((e) => {
                            var t;
                            let { application: n } = e;
                            return (
                              (null == n
                                ? void 0
                                : null === (t = n.bot) || void 0 === t
                                  ? void 0
                                  : t.id) === E
                            );
                          }))
                  : null != T &&
                    (I =
                      null == t
                        ? void 0
                        : t.find((e) => {
                            let { id: t } = e;
                            return t === T;
                          })),
                null != I && null != I.application && null != I.name)
              ) {
                let e = I.application.id,
                  t = I.name;
                [u.ABu.TWITCH, u.ABu.YOUTUBE].includes(I.type) &&
                  (t = "".concat(l.Z.get(I.type).name, " - ").concat(t));
                let n = () => {
                  c.Z.setSection(u.pNK.INTEGRATIONS),
                    r.Z.setSection(u.b4C.APPLICATION, e);
                };
                return _.Z.Messages.MANAGED_ROLE_INTEGRATION_LINKED_EXPLANATION.format(
                  {
                    name: t,
                    integrationNameHook: (e, t) =>
                      (0, s.jsx)(o.Z, { onClick: n, children: e }, t),
                  },
                );
              }
              return m
                ? _.Z.Messages.MANAGED_ROLE_PREMIUM_SUBSCRIBER_EXPLANATION
                : N
                  ? _.Z.Messages.MANAGED_ROLE_GUILD_CONNECTIONS_EXPLANATION
                  : _.Z.Messages.MANAGED_ROLE_EXPLAINATION;
            })(e, t),
          [e, t],
        );
      }
    },
    84613: function (e, t, n) {
      "use strict";
      n.d(t, {
        K: function () {
          return a;
        },
      });
      var s = n(570140);
      function a(e) {
        s.Z.dispatch({ type: "GUILD_SETTINGS_SAFETY_PAGE", page: e });
      }
    },
    392885: function (e, t, n) {
      "use strict";
      var s,
        a,
        i,
        r,
        l = n(442837),
        o = n(570140),
        c = n(999382),
        d = n(740903),
        u = n(981631);
      let _ = d.u.OVERVIEW,
        I = null;
      function E(e) {
        let { subsection: t } = e;
        switch (t) {
          case u.KsC.SAFETY_AUTOMOD:
            _ = d.u.AUTOMOD;
            break;
          case u.KsC.SAFETY_DM_AND_SPAM_PROTECTION:
            _ = d.u.DM_AND_SPAM_PROTECTION;
            break;
          case u.KsC.SAFETY_CAPTCHA_AND_RAID_PROTECTION:
            _ = d.u.CAPTCHA_AND_RAID_PROTECTION;
            break;
          case u.KsC.SAFETY_PERMISSIONS:
            _ = d.u.PERMISSIONS;
            break;
          case u.KsC.SAFETY_OVERVIEW:
          default:
            _ = d.u.OVERVIEW;
        }
      }
      class T extends (r = l.ZP.Store) {
        getCurrentPage() {
          return _;
        }
      }
      (i = "GuildSettingsSafetyStore"),
        (a = "displayName") in (s = T)
          ? Object.defineProperty(s, a, {
              value: i,
              enumerable: !0,
              configurable: !0,
              writable: !0,
            })
          : (s[a] = i),
        (t.Z = new T(o.Z, {
          GUILD_SETTINGS_INIT: function () {
            if (c.Z.getGuildId() === I) return !1;
            I = c.Z.getGuildId();
          },
          GUILD_SETTINGS_SET_SECTION: E,
          GUILD_SETTINGS_SAFETY_SET_SUBSECTION: E,
          GUILD_SETTINGS_SAFETY_PAGE: function (e) {
            let { page: t } = e;
            _ = t;
          },
        }));
    },
    740903: function (e, t, n) {
      "use strict";
      var s, a;
      n.d(t, {
        u: function () {
          return s;
        },
      }),
        ((a = s || (s = {}))[(a.OVERVIEW = 0)] = "OVERVIEW"),
        (a[(a.CAPTCHA_AND_RAID_PROTECTION = 1)] =
          "CAPTCHA_AND_RAID_PROTECTION"),
        (a[(a.DM_AND_SPAM_PROTECTION = 2)] = "DM_AND_SPAM_PROTECTION"),
        (a[(a.AUTOMOD = 3)] = "AUTOMOD"),
        (a[(a.PERMISSIONS = 4)] = "PERMISSIONS");
    },
    213956: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return x;
        },
      });
      var s = n(735250),
        a = n(470079),
        i = n(442837),
        r = n(704215),
        l = n(481060),
        o = n(605236),
        c = n(874993),
        d = n(768762),
        u = n(430824),
        _ = n(999382),
        I = n(84613),
        E = n(392885),
        T = n(740903),
        m = n(464610),
        N = n(733629),
        S = n(598622),
        g = n(921944),
        h = n(689938),
        C = n(176981);
      function x(e) {
        let t,
          { hideChangelog: n } = e,
          x = (0, i.e7)([_.Z], () => _.Z.getGuildId()),
          p = (0, i.e7)([u.Z], () => u.Z.getGuild(x)),
          R = (0, i.e7)([E.Z], () => E.Z.getCurrentPage());
        if (
          (a.useEffect(() => {
            (0, o.EW)(r.z.COMMUNITY_GUILD_SETTINGS_SAFETY, {
              dismissAction: g.L.AUTO,
            });
          }, []),
          null == p)
        )
          return null;
        let L = (0, S.Q)(p);
        switch (R) {
          case T.u.OVERVIEW:
            t = (0, s.jsx)(m.Z, { guild: p, hideChangelog: n });
            break;
          case T.u.CAPTCHA_AND_RAID_PROTECTION:
            t = (0, s.jsx)(N.Z, {
              title: h.Z.Messages.GUILD_SETTINGS_SAFETY_CAPTCHA_RAID_PROTECTION,
              settings: L[T.u.CAPTCHA_AND_RAID_PROTECTION],
            });
            break;
          case T.u.DM_AND_SPAM_PROTECTION:
            t = (0, s.jsx)(N.Z, {
              title: h.Z.Messages.GUILD_SETTINGS_SAFETY_DM_SPAM_PROTECTION,
              settings: L[T.u.DM_AND_SPAM_PROTECTION],
            });
            break;
          case T.u.AUTOMOD:
            t = (0, s.jsx)(c.Z, { guildId: p.id });
            break;
          case T.u.PERMISSIONS:
            t = (0, s.jsx)(N.Z, {
              title: h.Z.Messages.GUILD_SETTINGS_SAFETY_PERMISSIONS_TITLE,
              settings: L[T.u.PERMISSIONS],
            });
        }
        return (0, s.jsxs)(s.Fragment, {
          children: [
            R !== T.u.OVERVIEW &&
              (0, s.jsxs)(l.Button, {
                className: C.back,
                innerClassName: C.backButton,
                look: l.Button.Looks.BLANK,
                size: l.Button.Sizes.MIN,
                onClick: () => {
                  (0, I.K)(T.u.OVERVIEW);
                },
                children: [
                  (0, s.jsx)(d.Z, {
                    className: C.__invalid_arrow,
                    direction: d.Z.Directions.LEFT,
                  }),
                  (0, s.jsx)(l.Text, {
                    variant: "text-sm/semibold",
                    color: "interactive-normal",
                    children: h.Z.Messages.BACK,
                  }),
                ],
              }),
            t,
          ],
        });
      }
    },
    464610: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return N;
        },
      }),
        n(536091);
      var s = n(735250),
        a = n(470079),
        i = n(481060),
        r = n(727072),
        l = n(85960),
        o = n(676317),
        c = n(823379),
        d = n(84613),
        u = n(740903),
        _ = n(598622),
        I = n(689938),
        E = n(579524);
      function T() {
        let e = "• ";
        return (0, s.jsxs)("div", {
          className: E.changelog,
          children: [
            (0, s.jsx)("img", {
              className: E.changelogImage,
              src: n(531945),
              alt: "changelog",
            }),
            (0, s.jsxs)("div", {
              children: [
                (0, s.jsx)(i.Heading, {
                  variant: "heading-md/semibold",
                  color: "header-primary",
                  className: E.updatesHeader,
                  children: I.Z.Messages.GUILD_SETTINGS_SAFETY_UPDATES_HEADER,
                }),
                (0, s.jsx)(i.Text, {
                  variant: "text-sm/medium",
                  color: "header-secondary",
                  className: E.updatesDescription,
                  children: I.Z.Messages.GUILD_SETTINGS_SAFETY_UPDATES_LINE_1,
                }),
                (0, s.jsx)(i.Text, {
                  variant: "text-sm/medium",
                  color: "header-secondary",
                  className: E.updatesDescription,
                  children: I.Z.Messages.GUILD_SETTINGS_SAFETY_UPDATES_LINE_2,
                }),
                (0, s.jsxs)(i.Text, {
                  variant: "text-sm/medium",
                  color: "header-secondary",
                  children: [
                    e,
                    I.Z.Messages.GUILD_SETTINGS_SAFETY_UPDATES_ITEM_1,
                  ],
                }),
                (0, s.jsxs)(i.Text, {
                  variant: "text-sm/medium",
                  color: "header-secondary",
                  children: [
                    e,
                    I.Z.Messages.GUILD_SETTINGS_SAFETY_UPDATES_ITEM_2,
                  ],
                }),
                (0, s.jsxs)(i.Text, {
                  variant: "text-sm/medium",
                  color: "header-secondary",
                  children: [
                    e,
                    I.Z.Messages.GUILD_SETTINGS_SAFETY_UPDATES_ITEM_3,
                  ],
                }),
                (0, s.jsxs)(i.Text, {
                  variant: "text-sm/medium",
                  color: "header-secondary",
                  children: [
                    e,
                    I.Z.Messages.GUILD_SETTINGS_SAFETY_UPDATES_ITEM_4,
                  ],
                }),
              ],
            }),
          ],
        });
      }
      function m(e) {
        let { title: t, subtitle: n, icon: a, page: r } = e;
        return (0, s.jsxs)("div", {
          className: E.safetyStepRow,
          children: [
            (0, s.jsxs)("div", {
              className: E.safetyStepContent,
              children: [
                (0, s.jsx)(i.Avatar, {
                  src: a,
                  size: i.AvatarSizes.SIZE_40,
                  "aria-label": t,
                }),
                (0, s.jsxs)("div", {
                  children: [
                    (0, s.jsx)(i.Heading, {
                      variant: "heading-md/semibold",
                      color: "header-primary",
                      children: t,
                    }),
                    (0, s.jsx)(i.Text, {
                      variant: "text-xs/medium",
                      color: "header-secondary",
                      children: n,
                    }),
                  ],
                }),
              ],
            }),
            (0, s.jsx)(i.Button, {
              className: E.__invalid_editButton,
              size: i.Button.Sizes.SMALL,
              color: i.Button.Colors.PRIMARY,
              look: i.Button.Looks.OUTLINED,
              onClick: () => (0, d.K)(r),
              children: I.Z.Messages.EDIT,
            }),
          ],
        });
      }
      function N(e) {
        let { guild: t, hideChangelog: d } = e;
        (0, r.RD)(t.id);
        let N = (0, l.Z6)(t.id),
          { rulesByTriggerType: S } = (0, r.pH)(t.id),
          { numEnabledRules: g, numRules: h } = a.useMemo(() => {
            let e = 0,
              t = 0;
            return null == S
              ? { numEnabledRules: e, numRules: t }
              : (Object.values(N)
                  .flat()
                  .forEach((n) => {
                    var s;
                    let a =
                      null === (s = S[n]) || void 0 === s
                        ? void 0
                        : s.filter(c.lm);
                    if (null == a || 0 === a.length) {
                      t++;
                      return;
                    }
                    a.forEach((n) => {
                      n.enabled && e++, t++;
                    });
                  }),
                { numEnabledRules: e, numRules: t });
          }, [N, S]),
          C = (0, _.Q)(t),
          x = C[u.u.CAPTCHA_AND_RAID_PROTECTION],
          p = C[u.u.DM_AND_SPAM_PROTECTION],
          R = C[u.u.PERMISSIONS],
          L = (0, o.pr)(t.id);
        return (0, s.jsxs)("div", {
          children: [
            (0, s.jsx)(i.Heading, {
              variant: "heading-lg/semibold",
              color: "header-primary",
              className: E.header,
              children: I.Z.Messages.GUILD_SETTINGS_SAFETY_SETUP_HEADER,
            }),
            !d && (0, s.jsx)(T, {}),
            (0, s.jsxs)("div", {
              className: E.safetyChecklist,
              children: [
                (0, s.jsx)(m, {
                  icon: n(14215),
                  title:
                    I.Z.Messages.GUILD_SETTINGS_SAFETY_CAPTCHA_RAID_PROTECTION,
                  subtitle:
                    I.Z.Messages.GUILD_SETTINGS_SAFETY_OVERVIEW_NUM_ENABLED.format(
                      {
                        enabled: x.filter((e) => e.enabled).length,
                        total: x.length,
                      },
                    ),
                  page: u.u.CAPTCHA_AND_RAID_PROTECTION,
                }),
                (0, s.jsx)("div", { className: E.divider }),
                (0, s.jsx)(m, {
                  icon: n(128724),
                  title: I.Z.Messages.GUILD_SETTINGS_SAFETY_DM_SPAM_PROTECTION,
                  subtitle:
                    I.Z.Messages.GUILD_SETTINGS_SAFETY_OVERVIEW_NUM_ENABLED.format(
                      {
                        enabled: p.filter((e) => e.enabled).length,
                        total: p.length,
                      },
                    ),
                  page: u.u.DM_AND_SPAM_PROTECTION,
                }),
                (0, s.jsx)("div", { className: E.divider }),
                L &&
                  (0, s.jsxs)(s.Fragment, {
                    children: [
                      (0, s.jsx)(m, {
                        icon: n(145136),
                        title: I.Z.Messages.GUILD_SETTINGS_AUTOMOD_TITLE,
                        subtitle:
                          I.Z.Messages.GUILD_SETTINGS_SAFETY_OVERVIEW_NUM_ENABLED.format(
                            { enabled: g, total: h },
                          ),
                        page: u.u.AUTOMOD,
                      }),
                      (0, s.jsx)("div", { className: E.divider }),
                    ],
                  }),
                (0, s.jsx)(m, {
                  icon: n(913414),
                  title: I.Z.Messages.PERMISSIONS,
                  subtitle:
                    I.Z.Messages.GUILD_SETTINGS_SAFETY_OVERVIEW_NUM_ENABLED.format(
                      {
                        enabled: R.filter((e) => e.enabled).length,
                        total: R.length,
                      },
                    ),
                  page: u.u.PERMISSIONS,
                }),
              ],
            }),
          ],
        });
      }
    },
    733629: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return r;
        },
      });
      var s = n(735250);
      n(470079);
      var a = n(481060),
        i = n(176981);
      function r(e) {
        let { title: t, settings: n } = e;
        return (0, s.jsxs)("div", {
          children: [
            (0, s.jsx)(a.Heading, {
              variant: "heading-lg/semibold",
              color: "header-primary",
              className: i.header,
              children: t,
            }),
            n.map((e) => e.renderComponent()),
          ],
        });
      }
    },
    426434: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return T;
        },
      });
      var s = n(735250);
      n(470079);
      var a = n(392711),
        i = n(442837),
        r = n(481060),
        l = n(230711),
        o = n(496675),
        c = n(594174),
        d = n(434404),
        u = n(449226),
        _ = n(981631),
        I = n(689938),
        E = n(176981);
      function T(e) {
        let t,
          { guild: n } = e,
          T = n.mfaLevel,
          m = (0, i.e7)(
            [o.Z],
            () => null != n && o.Z.can(_.Plq.MANAGE_GUILD, n),
            [n],
          ),
          N = (0, i.e7)([c.default], () => c.default.getCurrentUser()),
          S = n.isOwner(N),
          g = null == N ? void 0 : N.mfaEnabled,
          h = T === _.BpS.ELEVATED,
          C = S && g,
          x = (0, a.throttle)(async (e) => {
            if (!!C)
              await d.Z.updateMFALevel({
                guildId: n.id,
                level: e ? _.BpS.ELEVATED : _.BpS.NONE,
                isEnabled: !e,
              });
          }, 1e3);
        if (!m) return null;
        !C &&
          (t = S
            ? I.Z.Messages.GUILD_SETTINGS_SAFETY_MFA_OWNER_DETAIL.format({
                settingsHook: () => l.Z.open(_.oAB.ACCOUNT),
              })
            : I.Z.Messages.GUILD_SETTINGS_SAFETY_MFA_NON_OWNER_DETAIL);
        let p = n.hasFeature(_.oNc.DISCOVERABLE);
        return (0, s.jsxs)("div", {
          className: E.simpleItemWrapper,
          children: [
            (0, s.jsxs)("div", {
              className: E.itemContent,
              children: [
                (0, s.jsx)(r.Heading, {
                  variant: "text-md/semibold",
                  color: "header-primary",
                  children: I.Z.Messages.GUILD_SETTINGS_REQ_MFA_LABEL,
                }),
                (0, s.jsxs)(r.Text, {
                  variant: "text-sm/medium",
                  color: "header-secondary",
                  children: [
                    I.Z.Messages.GUILD_SETTINGS_SAFETY_MFA_BODY,
                    " ",
                    t,
                  ],
                }),
              ],
            }),
            !C || (h && p)
              ? (0, s.jsx)(r.Tooltip, {
                  text: p
                    ? I.Z.Messages
                        .GUILD_SETTINGS_SAFETY_MFA_DISCOVERABLE_DISABLED_TOOLTIP
                    : S
                      ? I.Z.Messages.GUILD_SETTINGS_SAFETY_MFA_OWNER_TOOLTIP
                      : I.Z.Messages
                          .GUILD_SETTINGS_SAFETY_MFA_NON_OWNER_TOOLTIP,
                  children: (e) =>
                    (0, s.jsx)(u.Z, {
                      checked: h,
                      disabled: !0,
                      onChange: x,
                      className: E.bringToFront,
                      tooltipProps: e,
                    }),
                })
              : (0, s.jsx)(u.Z, {
                  checked: h,
                  onChange: x,
                  className: E.bringToFront,
                }),
          ],
        });
      }
    },
    112824: function (e, t, n) {
      "use strict";
      n.d(t, {
        R: function () {
          return m;
        },
        Z: function () {
          return N;
        },
      });
      var s = n(735250);
      n(470079);
      var a = n(120356),
        i = n.n(a),
        r = n(149765),
        l = n(442837),
        o = n(481060),
        c = n(430824),
        d = n(496675),
        u = n(700785),
        _ = n(647086),
        I = n(135899),
        E = n(689938),
        T = n(176981);
      function m(e) {
        return I.$X.filter(
          (t) => (null == e ? void 0 : e.id) !== _._ && u.oz(t, e),
        );
      }
      function N(e) {
        let { guild: t } = e,
          a = (0, l.e7)([c.Z], () => c.Z.getRole(t.id, t.getEveryoneRoleId())),
          u = m(t),
          _ = u.length > 0,
          N = I.$X.some(
            (e) =>
              !d.Z.can(e, t, null, {
                [a.id]: { ...a, permissions: r.Od(a.permissions, e) },
              }),
          ),
          S = (0, s.jsxs)(s.Fragment, {
            children: [
              (0, s.jsxs)("div", {
                className: T.itemContent,
                children: [
                  (0, s.jsx)(o.Heading, {
                    variant: "text-md/semibold",
                    color: "header-primary",
                    children:
                      E.Z.Messages
                        .GUILD_SETTINGS_SAFETY_EVERYONE_RISKY_PERMISSIONS,
                  }),
                  (0, s.jsx)(o.Text, {
                    variant: "text-sm/medium",
                    color: "header-secondary",
                    children:
                      E.Z.Messages.GUILD_SETTINGS_SAFETY_EVERYONE_RISKY_PERMISSIONS_DETAILS.format(
                        { numPerms: u.length },
                      ),
                  }),
                ],
              }),
              _
                ? (0, s.jsx)(o.CircleWarningIcon, {
                    size: "custom",
                    color: "currentColor",
                    height: 24,
                    width: 24,
                    className: T.warning,
                    "aria-label":
                      E.Z.Messages.SAFETY_REMOVE_RISKY_PERMS_ARIA_LABEL,
                  })
                : (0, s.jsx)(o.CircleCheckIcon, {
                    size: "custom",
                    color: "currentColor",
                    height: 24,
                    width: 24,
                    className: T.check,
                    "aria-label":
                      E.Z.Messages
                        .SAFETY_REMOVE_RISKY_PERMS_ARIA_LABEL_COMPLETE,
                  }),
            ],
          });
        return _
          ? N
            ? (0, s.jsx)(o.Tooltip, {
                text: E.Z.Messages.SAFETY_REMOVE_RISKY_PERMS_WARNING,
                children: (e) =>
                  (0, s.jsx)("div", {
                    className: i()(T.simpleItemWrapper, T.disabled),
                    ...e,
                    children: S,
                  }),
              })
            : (0, s.jsx)(o.Clickable, {
                onClick: () => {
                  (0, o.openModalLazy)(async () => {
                    let { default: e } = await n
                      .e("39627")
                      .then(n.bind(n, 193845));
                    return (n) => (0, s.jsx)(e, { guild: t, ...n });
                  });
                },
                className: i()(T.simpleItemWrapper, T.clickable),
                children: S,
              })
          : (0, s.jsx)("div", { className: T.simpleItemWrapper, children: S });
      }
    },
    181339: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return A;
        },
        w: function () {
          return M;
        },
      }),
        n(47120);
      var s = n(735250),
        a = n(470079),
        i = n(120356),
        r = n.n(i),
        l = n(106351),
        o = n(442837),
        c = n(481060),
        d = n(367907),
        u = n(933557),
        _ = n(369994),
        I = n(162157),
        E = n(177862),
        T = n(11265),
        m = n(592125),
        N = n(984933),
        S = n(496675),
        g = n(699516),
        h = n(594174),
        C = n(434404),
        x = n(449226),
        p = n(981631),
        R = n(689938),
        L = n(176981);
      function f(e) {
        let { guild: t, isExpanded: n, selectedChannelId: i, className: l } = e,
          T = (0, I.BT)(t),
          N = t.canHaveRaidActivityAlerts(),
          [S, g] = a.useState(N),
          h = (0, o.e7)([m.Z], () => m.Z.getChannel(i), [i]),
          C = (0, u.ZP)(h),
          f = async () => {
            g(!S);
            try {
              var e;
              await (0, _.f6)(t, !N);
              let n =
                null !== (e = null != i ? i : t.safetyAlertsChannelId) &&
                void 0 !== e
                  ? e
                  : null;
              if (null != n) {
                let e = {
                  raid_alert_type: E.wR.JOIN_RAID,
                  enabled: !N,
                  raid_alert_channel_id: n,
                  guild_id: t.id,
                  channel_id: n,
                };
                (0, d.yw)(p.rMx.GUILD_RAID_ALERTS_SETUP, e);
              }
            } catch (e) {
              (0, c.showToast)(
                (0, c.createToast)(
                  R.Z.Messages.GUILD_ANTIRAID_SAFETY_SETUP_ERROR,
                  c.ToastType.FAILURE,
                ),
              ),
                g(!N);
            }
          };
        return (0, s.jsxs)("div", {
          className: r()(L.itemWrapper, l),
          children: [
            (0, s.jsxs)("div", {
              className: L.itemContent,
              children: [
                (0, s.jsx)(c.Heading, {
                  variant: "text-md/semibold",
                  color: "header-primary",
                  children:
                    R.Z.Messages.GUILD_SETTINGS_SAFETY_RAID_ALERTS_TITLE,
                }),
                (0, s.jsx)(c.Text, {
                  variant: "text-sm/medium",
                  color: "header-secondary",
                  children:
                    R.Z.Messages.GUILD_SETTINGS_SAFETY_RAID_ALERTS_DESCRIPTION,
                }),
                n || null == i
                  ? null
                  : (0, s.jsxs)(c.Text, {
                      color: "interactive-normal",
                      variant: "text-xs/medium",
                      className: L.valuePill,
                      children: [
                        (0, s.jsx)(c.TextIcon, {
                          size: "xxs",
                          color: "currentColor",
                        }),
                        " ",
                        C,
                      ],
                    }),
              ],
            }),
            (0, s.jsx)(x.Z, {
              checked: S,
              onChange: f,
              disabled: !T || null == i,
            }),
          ],
        });
      }
      function O(e) {
        var t;
        let {
            guild: n,
            selectedChannelId: a,
            setSelectedChannelId: i,
            className: _,
          } = e,
          I = null !== (t = n.safetyAlertsChannelId) && void 0 !== t ? t : null,
          T = (0, o.Wu)(
            [N.ZP, h.default, g.Z, S.Z],
            () => {
              let e = N.ZP.getChannels(n.id)
                [N.sH].filter((e) => {
                  let { channel: t } = e;
                  return (
                    t.type === l.d.GUILD_TEXT && S.Z.can(p.Plq.SEND_MESSAGES, t)
                  );
                })
                .map((e) => {
                  let { channel: t } = e;
                  return {
                    value: t.id,
                    label: (0, u.F6)(t, h.default, g.Z, !0),
                  };
                });
              return null != I ? e : [...e];
            },
            [n.id, I],
          ),
          m = async (e) => {
            i(e);
            try {
              if (
                (e !== I &&
                  (await C.Z.saveGuild(
                    n.id,
                    { safetyAlertsChannelId: e },
                    { throwErr: !0 },
                  ),
                  C.Z.updateGuild({ safetyAlertsChannelId: e })),
                null != e)
              ) {
                let t = {
                  raid_alert_type: E.wR.JOIN_RAID,
                  enabled: n.canHaveRaidActivityAlerts(),
                  raid_alert_channel_id: e,
                  guild_id: n.id,
                  channel_id: e,
                };
                (0, d.yw)(p.rMx.GUILD_RAID_ALERTS_SETUP, t);
              }
            } catch (e) {
              (0, c.showToast)(
                (0, c.createToast)(
                  R.Z.Messages.GUILD_ANTIRAID_SAFETY_SETUP_ERROR,
                  c.ToastType.FAILURE,
                ),
              ),
                i(I);
            }
          };
        return (0, s.jsx)("div", {
          className: r()(L.itemBodyContainer, _),
          children: (0, s.jsxs)("div", {
            className: L.itemBodyInner,
            children: [
              (0, s.jsx)(c.FormTitle, {
                children: R.Z.Messages.GUILD_ANTIRAID_SAFETY_CHANNEL_TITLE,
              }),
              (0, s.jsx)(c.SearchableSelect, {
                wrapperClassName: L.bringToFront,
                options: T,
                onChange: m,
                value: a,
                maxVisibleItems: 5,
              }),
              (0, s.jsx)(c.Text, {
                variant: "text-sm/medium",
                color: "interactive-normal",
                children:
                  R.Z.Messages
                    .GUILD_SETTINGS_SAFETY_NOTIFICATIONS_CHANNEL_DESCRIPTION,
              }),
            ],
          }),
        });
      }
      function A(e) {
        var t, n;
        let { guild: i } = e,
          [r, l] = a.useState(!1),
          o = null !== (t = i.safetyAlertsChannelId) && void 0 !== t ? t : null,
          [c, d] = a.useState(
            null != o
              ? o
              : null !== (n = null == i ? void 0 : i.publicUpdatesChannelId) &&
                  void 0 !== n
                ? n
                : null,
          );
        return (0, s.jsx)(T.Z, {
          renderHeader: (0, s.jsx)(f, {
            isExpanded: r,
            guild: i,
            selectedChannelId: c,
          }),
          isExpanded: r,
          onExpand: () => l(!r),
          children: (0, s.jsx)(O, {
            guild: i,
            selectedChannelId: c,
            setSelectedChannelId: d,
          }),
        });
      }
      function M(e) {
        var t, n;
        let { guild: i } = e,
          r = null !== (t = i.safetyAlertsChannelId) && void 0 !== t ? t : null,
          [l, o] = a.useState(
            null != r
              ? r
              : null !== (n = null == i ? void 0 : i.publicUpdatesChannelId) &&
                  void 0 !== n
                ? n
                : null,
          );
        return (0, s.jsxs)(s.Fragment, {
          children: [
            (0, s.jsx)(f, {
              isExpanded: !0,
              guild: i,
              selectedChannelId: l,
              className: L.noPadding,
            }),
            (0, s.jsx)(O, {
              guild: i,
              selectedChannelId: l,
              setSelectedChannelId: o,
              className: L.noPadding,
            }),
          ],
        });
      }
    },
    598622: function (e, t, n) {
      "use strict";
      n.d(t, {
        Q: function () {
          return I;
        },
      });
      var s = n(735250);
      n(470079);
      var a = n(740903),
        i = n(426434),
        r = n(112824),
        l = n(181339),
        o = n(195189),
        c = n(616230),
        d = n(3896),
        u = n(981631),
        _ = n(689938);
      let I = (e) => ({
        [a.u.CAPTCHA_AND_RAID_PROTECTION]: [
          {
            renderComponent: () => (0, s.jsx)(l.Z, { guild: e }, "raid-alerts"),
            enabled: !e.hasFeature(u.oNc.RAID_ALERTS_DISABLED),
          },
          {
            renderComponent: () =>
              (0, s.jsx)(
                o.Z,
                { title: _.Z.Messages.GUILD_SETTINGS_SAFETY_RAID_CAPTCHA },
                "captcha-suspicious-joins",
              ),
            enabled: !0,
          },
          {
            renderComponent: () =>
              (0, s.jsx)(
                o.Z,
                { title: _.Z.Messages.GUILD_SETTINGS_SAFETY_RAID_CAPTCH_RAID },
                "captcha-raid-joins",
              ),
            enabled: !0,
          },
        ],
        [a.u.DM_AND_SPAM_PROTECTION]: [
          {
            renderComponent: () =>
              (0, s.jsx)(d.Z, { guild: e }, "verification-level"),
            enabled: !0,
          },
          {
            renderComponent: () =>
              (0, s.jsx)(c.Z, { guild: e }, "member-verification"),
            enabled: e.hasVerificationGate(),
          },
          {
            renderComponent: () =>
              (0, s.jsx)(
                o.Z,
                {
                  title: _.Z.Messages.GUILD_SETTINGS_SAFETY_SPAM_SUSPICIOUS_DMS,
                  details:
                    _.Z.Messages
                      .GUILD_SETTINGS_SAFETY_SPAM_SUSPICIOUS_DMS_DESCRIPTION,
                },
                "hide-suspicious-dms",
              ),
            enabled: !0,
          },
          {
            renderComponent: () =>
              (0, s.jsx)(
                o.Z,
                {
                  title: _.Z.Messages.GUILD_SETTINGS_SAFETY_SPAM_DM_NON_FRIENDS,
                  details:
                    _.Z.Messages
                      .GUILD_SETTINGS_SAFETY_SPAM_DM_NON_FRIENDS_DESCRIPTION,
                },
                "filter-unknown-dms",
              ),
            enabled: !0,
          },
          {
            renderComponent: () =>
              (0, s.jsx)(
                o.Z,
                {
                  title:
                    _.Z.Messages.GUILD_SETTINGS_SAFETY_SPAM_SUSPICIOUS_LINKS,
                },
                "outbound-links-warn",
              ),
            enabled: !0,
          },
          {
            renderComponent: () =>
              (0, s.jsx)(
                o.Z,
                {
                  title:
                    _.Z.Messages
                      .GUILD_SETTINGS_SAFETY_SPAM_DM_SUSPCIOUS_MESSAGES,
                },
                "delete-spam",
              ),
            enabled: !0,
          },
        ],
        [a.u.PERMISSIONS]: [
          {
            renderComponent: () => (0, s.jsx)(i.Z, { guild: e }, "guild-mfa"),
            enabled: e.mfaLevel === u.BpS.ELEVATED,
          },
          {
            renderComponent: () =>
              (0, s.jsx)(r.Z, { guild: e }, "disable-risky-perms"),
            enabled: 0 === (0, r.R)(e).length,
          },
        ],
      });
    },
    195189: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return c;
        },
      });
      var s = n(735250);
      n(470079);
      var a = n(481060),
        i = n(449226),
        r = n(231338),
        l = n(689938),
        o = n(176981);
      function c(e) {
        let { title: t, details: n } = e;
        return (0, s.jsxs)("div", {
          className: o.simpleItemWrapper,
          children: [
            (0, s.jsxs)("div", {
              className: o.itemContent,
              children: [
                (0, s.jsx)(a.Heading, {
                  variant: "text-md/semibold",
                  color: "header-primary",
                  children: t,
                }),
                "string" == typeof n
                  ? (0, s.jsx)(a.Text, {
                      variant: "text-sm/medium",
                      color: "header-secondary",
                      children: n,
                    })
                  : n,
              ],
            }),
            (0, s.jsx)(a.Tooltip, {
              tooltipContentClassName: o.tooltip,
              text: l.Z.Messages.GUILD_SETTINGS_SAFETY_ON_BY_DEFAULT,
              children: (e) =>
                (0, s.jsx)(i.Z, {
                  checked: !0,
                  disabled: !0,
                  onChange: r.dG,
                  className: o.bringToFront,
                  tooltipProps: e,
                }),
            }),
          ],
        });
      }
    },
    3896: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return I;
        },
      });
      var s = n(735250),
        a = n(470079),
        i = n(120356),
        r = n.n(i),
        l = n(481060),
        o = n(456935),
        c = n(259580),
        d = n(981631),
        u = n(689938),
        _ = n(176981);
      function I(e) {
        let { guild: t } = e,
          i = t.verificationLevel,
          I = a.useMemo(() => (0, o.I9)(i), [i]);
        return (0, s.jsxs)(l.Clickable, {
          onClick: () =>
            (0, l.openModalLazy)(async () => {
              let { default: e } = await n.e("27933").then(n.bind(n, 694278));
              return (n) => (0, s.jsx)(e, { ...n, guild: t, hideColors: !0 });
            }),
          className: r()(_.simpleItemWrapper, _.clickable),
          children: [
            (0, s.jsxs)("div", {
              className: _.itemContent,
              children: [
                (0, s.jsx)(l.Heading, {
                  variant: "text-md/semibold",
                  color: "header-primary",
                  children: u.Z.Messages.FORM_LABEL_VERIFICATION_LEVEL,
                }),
                (0, s.jsx)(l.Text, {
                  variant: "text-sm/medium",
                  color: "header-secondary",
                  children:
                    u.Z.Messages.GUILD_SETTINGS_SAFETY_VERIFICATION_DESCRIPTION,
                }),
                (0, s.jsx)("div", {
                  className: _.__invalid_pillRow,
                  children: (0, s.jsxs)(l.Text, {
                    variant: "text-xs/medium",
                    color: "interactive-normal",
                    className: _.valuePill,
                    children: [
                      i === d.sFg.VERY_HIGH
                        ? (0, s.jsx)(l.MobilePhoneIcon, {
                            size: "custom",
                            color: "currentColor",
                            width: 16,
                            height: 16,
                          })
                        : (0, s.jsx)(l.EnvelopeIcon, {
                            size: "custom",
                            color: "currentColor",
                            width: 16,
                            height: 16,
                          }),
                      I,
                    ],
                  }),
                }),
              ],
            }),
            (0, s.jsx)(c.Z, {
              height: 24,
              width: 24,
              direction: c.Z.Directions.RIGHT,
              className: _.caret,
            }),
          ],
        });
      }
    },
    92160: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return c;
        },
      });
      var s = n(735250);
      n(470079);
      var a = n(120356),
        i = n.n(a),
        r = n(481060),
        l = n(689938),
        o = n(382689);
      function c(e) {
        let {
          className: t,
          enabled: n,
          previewCTA: a,
          onPreview: c,
          onToggle: d,
          animateStatus: u,
          firstLine: _,
          secondLine: I,
          disabled: E,
        } = e;
        return (0, s.jsxs)("div", {
          className: i()(t, o.enableContainer),
          children: [
            n
              ? (0, s.jsx)(r.CheckmarkLargeIcon, {
                  size: "custom",
                  color: "currentColor",
                  width: 24,
                  height: 24,
                  className: i()(o.activeCircle, { [o.animate]: u }),
                })
              : (0, s.jsx)(r.PencilIcon, {
                  size: "custom",
                  color: "currentColor",
                  width: 24,
                  height: 24,
                  className: i()(o.editCircle, { [o.animate]: u }),
                }),
            (0, s.jsxs)("div", {
              className: o.enableDescription,
              children: [
                (0, s.jsx)(r.Text, { variant: "text-sm/normal", children: _ }),
                (0, s.jsx)(r.Text, { variant: "text-sm/normal", children: I }),
              ],
            }),
            (0, s.jsxs)("div", {
              className: o.buttonContainer,
              children: [
                null == c
                  ? null
                  : (0, s.jsx)(r.Button, {
                      className: o.previewButton,
                      look: r.Button.Looks.LINK,
                      size: r.Button.Sizes.SMALL,
                      onClick: c,
                      disabled: E,
                      color: r.Button.Colors.PRIMARY,
                      children:
                        null != a
                          ? a
                          : l.Z.Messages.GUILD_SETTINGS_PUBLIC_WELCOME_PREVIEW,
                    }),
                (0, s.jsx)(r.Button, {
                  disabled: null == d || E,
                  size: r.Button.Sizes.SMALL,
                  color: n ? r.Button.Colors.RED : r.Button.Colors.BRAND,
                  onClick: d,
                  children: n ? l.Z.Messages.DISABLE : l.Z.Messages.ENABLE,
                }),
              ],
            }),
          ],
        });
      }
    },
    994763: function (e, t, n) {
      "use strict";
      n.r(t),
        n.d(t, {
          default: function () {
            return eJ;
          },
          getGuildSettingsSections: function () {
            return eK;
          },
        }),
        n(47120);
      var s = n(735250),
        a = n(470079),
        i = n(990547),
        r = n(442837),
        l = n(704215),
        o = n(481060),
        c = n(37234),
        d = n(503089),
        u = n(493544),
        _ = n(100527),
        I = n(367907),
        E = n(906732),
        T = n(132871),
        m = n(147890),
        N = n(353093),
        S = n(593128),
        g = n(979264),
        h = n(223892),
        C = n(738774),
        x = n(296386),
        p = n(605236),
        R = n(688465),
        L = n(676317),
        f = n(874993),
        O = n(745752),
        A = n(45966),
        M = n(637853),
        D = n(526120),
        v = n(621923),
        j = n(352981),
        Z = n(610403),
        b = n(923726),
        U = n(144507),
        G = n(303737),
        P = n(15030),
        B = n(220685),
        y = n(751189),
        F = n(409059),
        k = n(810788),
        w = n(918658),
        H = n(84615),
        V = n(163400),
        Y = n(210887),
        W = n(524329),
        z = n(575258),
        K = n(995532),
        q = n(276687),
        X = n(984933),
        Q = n(650774),
        J = n(496675),
        $ = n(594174),
        ee = n(585483),
        et = n(771212),
        en = n(85001),
        es = n(434404),
        ea = n(146596),
        ei = n(559368),
        er = n(600553),
        el = n(360606),
        eo = n(946724),
        ec = n(999382),
        ed = n(44550),
        eu = n(853714),
        e_ = n(359191),
        eI = n(84658),
        eE = n(142961),
        eT = n(730910),
        em = n(475013),
        eN = n(213956),
        eS = n(702478),
        eg = n(247031),
        eh = n(787561),
        eC = n(579648),
        ex = n(511480),
        ep = n(460461),
        eR = n(29605),
        eL = n(365307),
        ef = n(497666),
        eO = n(324330),
        eA = n(495300),
        eM = n(312397),
        eD = n(651780),
        ev = n(279542),
        ej = n(413335),
        eZ = n(665324),
        eb = n(208150),
        eU = n(353398),
        eG = n(365774),
        eP = n(803288),
        eB = n(804153),
        ey = n(981631),
        eF = n(308083),
        ek = n(190378),
        ew = n(135899),
        eH = n(689938),
        eV = n(9917);
      function eY(e) {
        return "" !== e.toString()
          ? e.toString()
          : eH.Z.Messages.SERVER_SETTINGS;
      }
      function eW(e, t) {
        let { homeSettingsEnabled: n } = (0, v.l6)(e);
        if (A.Z.getEnabled(e))
          return eH.Z.Messages.GUILD_ONBOARDING_ON.toUpperCase();
        if ((0, eE.C)(e))
          return eH.Z.Messages.GUILD_ONBOARDING_OFF.toUpperCase();
        let s = eI.ug.filter((e) => !!n || e !== eI.PG.HOME_SETTINGS || !1),
          a = s.findIndex((e) => e === t);
        if (-1 !== a)
          return eH.Z.Messages.GUILD_ONBOARDING_SETUP_STEP_COUNTER.format({
            count: a + 1,
            total: s.length,
          });
      }
      function ez(e) {
        var t;
        let {
            guild: a,
            isGuildAdmin: r,
            canManageGuild: d,
            canViewAuditLog: _,
            canManageRoles: I,
            canManageGuildExpressions: E,
            canManageWebhooks: x,
            canUnlinkChannels: O,
            canManageBans: A,
            canAccessMembersPage: D,
            canViewGuildAnalytics: v,
            isOwner: y,
            isOwnerWithRequiredMfaLevel: F,
            showDirtyGuildTemplateIndicator: w,
            memberCount: V,
            showAccessRate: Y,
            onboardingStep: W,
            onboardingEnabled: K,
            welcomeScreenEmpty: X,
            guildMetadata: Q,
            section: J,
            canAccessClanSettings: et,
          } = e,
          ea = er.$.getCurrentConfig({
            guildId: a.id,
            location: "generateSections",
          }).enabled,
          ei = () =>
            (0, U.X$)({
              guild: a,
              isOwner: y,
              canManageGuildRoleSubscriptions: (0, U.H2)(a),
              isMonetizationWaitlistEnabledForGuild: (0, h.mG)(a.id),
              isGuildEligibleForRoleSubscriptions: (0, b.kT)(a.id),
              isExpeditedMonetizationOnboardingGuild: (0, h.Rw)(a),
              isUserInCreatorMonetizationEligibleCountry: (0, h.DB)(),
              shouldRestrictUpdatingRoleSubscriptionSettings: (0, C.cu)(a.id),
            }),
          eI = (0, j.p)(a.id, "guild_settings"),
          eE =
            !1 === a.hasFeature(ey.oNc.CREATOR_MONETIZABLE) &&
            !1 === a.hasFeature(ey.oNc.CREATOR_MONETIZABLE_PROVISIONAL),
          ez =
            eI && eE
              ? {
                  label: (0, s.jsx)("div", {
                    className: eV.roleSubLabel,
                    children:
                      eH.Z.Messages
                        .GUILD_SETTINGS_ENABLE_MONETIZATION_TAB_TITLE,
                  }),
                  ariaLabel:
                    eH.Z.Messages.GUILD_SETTINGS_ENABLE_MONETIZATION_TAB_TITLE,
                }
              : {
                  label: (0, s.jsx)("div", {
                    className: eV.roleSubLabel,
                    children: eH.Z.Messages.GUILD_ROLE_SUBSCRIPTIONS_TITLE,
                  }),
                  ariaLabel: eH.Z.Messages.GUILD_ROLE_SUBSCRIPTIONS_TITLE,
                },
          eK =
            (null === (t = a.clan) || void 0 === t ? void 0 : t.badge) != null
              ? (0, N.ky)(a.id, a.clan.badge, eF.NC.SIZE_16)
              : null,
          eq = {
            section: ey.pNK.DELETE,
            onClick() {
              let e = $.default.getCurrentUser();
              if (null == e) return;
              let t = a.toString(),
                i = {
                  header: eH.Z.Messages.DELETE_SERVER_TITLE.format({ name: t }),
                  confirmText: eH.Z.Messages.DELETE_SERVER,
                  cancelText: eH.Z.Messages.CANCEL,
                  onConfirm: () => {
                    ee.S.subscribeOnce(ey.CkL.LAYER_POP_COMPLETE, () => {
                      es.Z.deleteGuild(a.id, t).then(() => {
                        if ((0, p.un)(l.z.GUILD_DELETE_FEEDBACK)) return;
                        en.Z.trackExposure({ location: "e4be39_1" });
                        let { showFeedback: e } = en.Z.getCurrentConfig(
                          { location: "e4be39_2" },
                          { autoTrackExposure: !1 },
                        );
                        e &&
                          (0, o.openModalLazy)(async () => {
                            let { default: e } = await n
                              .e("31811")
                              .then(n.bind(n, 945903));
                            return (t) =>
                              (0, s.jsx)(e, { ...t, guildId: a.id });
                          });
                      });
                    }),
                      (0, c.xf)();
                  },
                };
              e.mfaEnabled
                ? (0, o.openModal)((e) =>
                    (0, s.jsx)(o.ConfirmModal, {
                      ...e,
                      ...i,
                      children: (0, s.jsx)(o.Text, {
                        variant: "text-md/normal",
                        children: eH.Z.Messages.DELETE_SERVER_BODY.format({
                          name: t,
                        }),
                      }),
                    }),
                  )
                : (0, o.openModalLazy)(async () => {
                    let { default: e } = await n
                      .e("18259")
                      .then(n.bind(n, 1493));
                    return (n) =>
                      (0, s.jsx)(e, {
                        ...n,
                        ...i,
                        validationText: t,
                        instructionText: eH.Z.Messages.DELETE_SERVER_ENTER_NAME,
                        errorText: eH.Z.Messages.DELETE_SERVER_INCORRECT_NAME,
                        children: eH.Z.Messages.DELETE_SERVER_BODY.format({
                          name: t,
                        }),
                      });
                  });
            },
            label: eH.Z.Messages.DELETE_SERVER,
            ariaLabel: eH.Z.Messages.DELETE_SERVER,
            icon: (0, s.jsx)(o.TrashIcon, {
              size: "xs",
              color: "currentColor",
            }),
            predicate: () => F,
          };
        if (ea) {
          let e = [
              { section: u.ID.DIVIDER },
              {
                section: u.ID.HEADER,
                label: eH.Z.Messages.GUILD_SETTINGS_SECTION_TITLE_ADD_FUN_STUFF,
              },
              {
                section: ey.pNK.EMOJI,
                impressionName: i.ImpressionNames.GUILD_SETTINGS_EMOJI,
                label: eH.Z.Messages.EMOJI,
                element: eR.ZP,
                predicate: () => E,
              },
              {
                section: ey.pNK.STICKERS,
                impressionName: i.ImpressionNames.GUILD_SETTINGS_STICKERS,
                label: eH.Z.Messages.GUILD_SETTINGS_STICKERS,
                ariaLabel: eH.Z.Messages.GUILD_SETTINGS_STICKERS,
                element: eb.Z,
                predicate: () => E,
              },
              {
                section: ey.pNK.SOUNDBOARD,
                impressionName: i.ImpressionNames.GUILD_SETTINGS_SOUNDBOARD,
                label: eH.Z.Messages.GUILD_SETTINGS_SOUNDBOARD,
                ariaLabel: eH.Z.Messages.GUILD_SETTINGS_SOUNDBOARD,
                element: eZ.Z,
                predicate: () => E,
              },
              {
                section: ey.pNK.APP_DIRECTORY,
                label: eH.Z.Messages.APPS,
                ariaLabel: eH.Z.Messages.APPS,
                onClick() {
                  (0, m.goToAppDirectory)({
                    guildId: a.id,
                    entrypoint: {
                      name: T.ApplicationDirectoryEntrypointNames
                        .GUILD_SETTINGS,
                      guildSettingsSection: J,
                    },
                  }),
                    (0, c.xf)();
                },
              },
              {
                section: ey.pNK.INTEGRATIONS,
                impressionName: i.ImpressionNames.GUILD_SETTINGS_INTEGRATION,
                label: eH.Z.Messages.INTEGRATIONS,
                ariaLabel: eH.Z.Messages.INTEGRATIONS,
                element: eL.Z,
                notice: { stores: [el.Z, ec.Z], element: eL.j },
                predicate: () => d || x || O,
              },
            ],
            t =
              I || D || d
                ? [
                    { section: u.ID.DIVIDER },
                    {
                      section: u.ID.HEADER,
                      label:
                        eH.Z.Messages.GUILD_SETTINGS_SECTION_TITLE_MANAGE_USERS,
                    },
                    {
                      section: ey.pNK.ROLES,
                      impressionName: i.ImpressionNames.GUILD_SETTINGS_ROLES,
                      label: eH.Z.Messages.ROLES,
                      element: em.Z,
                      type: u.bT.MINIMAL,
                      ariaLabel:
                        eH.Z.Messages
                          .GUILD_SETTINGS_ROLE_ICON_SIDEBAR_NEW_ARIA_LABEL,
                      notice: { stores: [eo.Z], element: em._ },
                      predicate: () => I,
                    },
                    {
                      section: ey.pNK.MEMBERS,
                      impressionName: i.ImpressionNames.GUILD_SETTINGS_MEMBERS,
                      label: (0, s.jsx)(eO.$, {}),
                      ariaLabel: eH.Z.Messages.MEMBERS,
                      element: eO.Z,
                      type: u.bT.CUSTOM,
                      predicate: () => D,
                    },
                    {
                      section: ey.pNK.INSTANT_INVITES,
                      impressionName: i.ImpressionNames.GUILD_SETTINGS_INVITES,
                      label: eH.Z.Messages.INVITES,
                      element: ef.Z,
                      type: u.bT.CUSTOM,
                      predicate: () => d,
                    },
                  ]
                : [],
            n = a.hasFeature(ey.oNc.COMMUNITY),
            r = d && n,
            o = d && !n,
            N = !n && ((0, L.Nb)(a.id) || (0, L.ze)(a.id)),
            h =
              r || o || N || _ || A
                ? [
                    { section: u.ID.DIVIDER },
                    {
                      section: u.ID.HEADER,
                      label:
                        eH.Z.Messages.GUILD_SETTINGS_SECTION_TITLE_KEEP_IT_SAFE,
                    },
                    {
                      section: ey.pNK.SAFETY,
                      impressionName: i.ImpressionNames.GUILD_SETTINGS_SAFETY,
                      label: eH.Z.Messages.SAFETY_SETUP,
                      ariaLabel: eH.Z.Messages.SAFETY_SETUP,
                      element: eN.Z,
                      newIndicatorDismissibleContentTypes: [
                        l.z.COMMUNITY_GUILD_SETTINGS_SAFETY,
                      ],
                      predicate: () => r,
                    },
                    {
                      section: ey.pNK.MODERATION,
                      impressionName:
                        i.ImpressionNames.GUILD_SETTINGS_MODERATION,
                      label: eH.Z.Messages.SAFETY_SETUP,
                      element: ev.ZP,
                      predicate: () => o,
                    },
                    {
                      section: ey.pNK.GUILD_AUTOMOD,
                      label: (0, s.jsx)("div", {
                        className: eV.landingPageTabLink,
                        children: eH.Z.Messages.GUILD_SETTINGS_AUTOMOD_TITLE,
                      }),
                      ariaLabel: eH.Z.Messages.GUILD_SETTINGS_AUTOMOD_TITLE,
                      element: f.Z,
                      newIndicatorDismissibleContentTypes: null,
                      predicate: () => N,
                    },
                    {
                      section: ey.pNK.AUDIT_LOG,
                      impressionName:
                        i.ImpressionNames.GUILD_SETTINGS_AUDIT_LOG,
                      label: eH.Z.Messages.GUILD_SETTINGS_LABEL_AUDIT_LOG,
                      element: eu.Z,
                      type: u.bT.CUSTOM,
                      predicate: () => _,
                    },
                    {
                      section: ey.pNK.BANS,
                      impressionName: i.ImpressionNames.GUILD_SETTINGS_BANS,
                      label: eH.Z.Messages.BANS,
                      element: eg.Z,
                      predicate: () => A,
                    },
                  ]
                : [],
            C = (0, M.wC)(a.id),
            p = n && v,
            U =
              d &&
              (a.hasFeature(ey.oNc.DISCOVERABLE) ||
                !!(null == Q ? void 0 : Q.isPublished)),
            y = d && !X && !a.hasFeature(ey.oNc.GUILD_SERVER_GUIDE),
            $ =
              n && (d || C || p || U || y)
                ? [
                    { section: u.ID.DIVIDER },
                    { section: u.ID.HEADER, label: eH.Z.Messages.COMMUNITY },
                    {
                      section: ey.pNK.COMMUNITY,
                      impressionName:
                        i.ImpressionNames.GUILD_SETTINGS_COMMUNITY_OVERVIEW,
                      label: eH.Z.Messages.OVERVIEW,
                      element: eh.Z,
                      ariaLabel: eH.Z.Messages.OVERVIEW,
                      notice: { stores: [ec.Z], element: eh.X },
                      predicate: () => d,
                    },
                    {
                      section: ey.pNK.ONBOARDING,
                      label: eH.Z.Messages.ONBOARDING,
                      element: eA.Z,
                      ariaLabel: eH.Z.Messages.ONBOARDING,
                      newIndicatorDismissibleContentTypes: K
                        ? null
                        : [l.z.COMMUNITY_ONBOARDING_NEW_BADGE],
                      notice: { stores: [e_.Z], element: eT.Z },
                      predicate: () => C,
                      decoration: eW(a.id, W),
                    },
                    {
                      section: ey.pNK.ANALYTICS,
                      impressionName:
                        i.ImpressionNames.GUILD_SETTINGS_ANALYTICS,
                      label: eH.Z.Messages.SERVER_INSIGHTS,
                      ariaLabel: eH.Z.Messages.SERVER_INSIGHTS,
                      element: eS.Z,
                      newIndicator: k.Z.hasHotspot(
                        ek.v.GUILD_ANALYTICS_GUILD_SETTINGS_MENU,
                      ),
                      newIndicatorDismissibleContentTypes: Y
                        ? [l.z.GUILD_INSIGHTS_ACCESS_RATE_NEW]
                        : null,
                      predicate: () => p,
                    },
                    {
                      section: ey.pNK.DISCOVERY,
                      impressionName:
                        i.ImpressionNames.GUILD_SETTINGS_DISCOVERY,
                      label: eH.Z.Messages.DISCOVERY,
                      element: ex.Z,
                      notice: { stores: [ec.Z], element: ex.s },
                      predicate: () => d,
                      ariaLabel: a.hasFeature(ey.oNc.DISCOVERABLE)
                        ? eH.Z.Messages.DISCOVERY
                        : eH.Z.Messages.GUILD_SETTINGS_ENABLE_DISCOVERABLE,
                    },
                    {
                      section: ey.pNK.DISCOVERY_LANDING_PAGE,
                      impressionName:
                        i.ImpressionNames.GUILD_SETTINGS_DISCOVERY_LANDING_PAGE,
                      label: (0, s.jsxs)("div", {
                        className: eV.landingPageTabLink,
                        children: [
                          eH.Z.Messages.DISCOVERY_LANDING_PAGE,
                          " ",
                          (0, s.jsx)(R.Z, {}),
                        ],
                      }),
                      ariaLabel: eH.Z.Messages.DISCOVERY_LANDING_PAGE,
                      element: ep.Z,
                      notice: { stores: [ec.Z], element: ep.J },
                      type: u.bT.CUSTOM,
                      predicate: () => U,
                    },
                    {
                      section: ey.pNK.COMMUNITY_WELCOME,
                      impressionName:
                        i.ImpressionNames.GUILD_SETTINGS_COMMUNITY_WELCOME,
                      label: eH.Z.Messages.GUILD_SETTINGS_PUBLIC_WELCOME,
                      ariaLabel: eH.Z.Messages.GUILD_SETTINGS_PUBLIC_WELCOME,
                      element: eC.Z,
                      notice: { stores: [z.Z], element: q.Z },
                      predicate: () => y,
                    },
                  ]
                : [],
            ee = ei()
              ? [
                  { section: u.ID.DIVIDER },
                  { section: u.ID.HEADER, label: eH.Z.Messages.MONETIZATION },
                  {
                    ...ez,
                    section: ey.pNK.ROLE_SUBSCRIPTIONS,
                    element: P.Z,
                    type: u.bT.CUSTOM,
                    newIndicatorDismissibleContentTypes: (0, G.sO)(a)
                      ? [
                          l.z
                            .SERVER_SUBSCRIPTION_SETTINGS_NEW_BADGE_TIER_TEMPLATE,
                        ]
                      : null,
                  },
                  {
                    section: ey.pNK.GUILD_PRODUCTS,
                    label: eH.Z.Messages.GUILD_PRODUCTS_TITLE,
                    ariaLabel: eH.Z.Messages.GUILD_PRODUCTS_TITLE,
                    element: Z.Z,
                    predicate: () =>
                      (0, j.p)(a.id, "guild_product_settings_predicate") &&
                      (0, b.sy)(a),
                  },
                  {
                    section: ey.pNK.ROLE_SUBSCRIPTIONS_STORE_PAGE,
                    impressionName:
                      i.ImpressionNames
                        .GUILD_ROLE_SUBSCRIPTION_STORE_PAGE_GUILD_SETTINGS,
                    newIndicator: 2022 === new Date().getFullYear(),
                    label:
                      eH.Z.Messages
                        .GUILD_SETTINGS_ROLE_SUBSCRIPTIONS_STORE_PAGE,
                    ariaLabel:
                      eH.Z.Messages
                        .GUILD_SETTINGS_ROLE_SUBSCRIPTIONS_STORE_PAGE,
                    element: B.Z,
                    predicate: () => (0, b.sy)(a),
                  },
                ]
              : [],
            en = null != et && et,
            es = d && !a.hasFeature(ey.oNc.COMMUNITY),
            ea =
              en || es || d
                ? [
                    { section: u.ID.DIVIDER },
                    {
                      section: ey.pNK.CLAN,
                      label: eH.Z.Messages.CLAN_SETTINGS,
                      ariaLabel: eH.Z.Messages.CLAN_SETTINGS,
                      onClick() {
                        (0, H.q4)(
                          (e) => {
                            let { closeLayer: t } = e;
                            return (0, s.jsx)(S.Z, {
                              onClose: t,
                              guildId: a.id,
                            });
                          },
                          { layerKey: eF.q2 },
                        ),
                          (0, c.xf)();
                      },
                      predicate: () => en,
                      icon: null != eK ? (0, s.jsx)(g.KQ, { src: eK }) : null,
                    },
                    {
                      section: ey.pNK.COMMUNITY,
                      impressionName:
                        i.ImpressionNames.GUILD_SETTINGS_ENABLE_COMMUNITY,
                      label:
                        eH.Z.Messages.GUILD_SETTINGS_COMMUNITY_ENABLE_COMMUNITY,
                      element: eh.Z,
                      ariaLabel:
                        eH.Z.Messages.GUILD_SETTINGS_COMMUNITY_ENABLE_COMMUNITY,
                      newIndicator:
                        null != V &&
                        V >= ew.U3 &&
                        k.Z.hasHotspot(
                          ek.v.GUILD_SETTINGS_COMMUNITY_GUILD_UPSELL,
                        ),
                      notice: { stores: [ec.Z], element: eh.X },
                      predicate: () => es,
                    },
                    {
                      section: ey.pNK.WIDGET,
                      impressionName: i.ImpressionNames.GUILD_SETTINGS_WIDGET,
                      label: eH.Z.Messages.WIDGET,
                      element: eB.Z,
                      predicate: () => d,
                    },
                    {
                      section: ey.pNK.VANITY_URL,
                      impressionName:
                        i.ImpressionNames.GUILD_SETTINGS_VANITY_URL,
                      label: eH.Z.Messages.VANITY_URL,
                      element: eP.Z,
                      notice: { stores: [ed.Z], element: eP.T },
                      predicate: () => d,
                    },
                    {
                      section: ey.pNK.GUILD_TEMPLATES,
                      impressionName: i.ImpressionNames.GUILD_SETTINGS_TEMPLATE,
                      label: (0, s.jsx)(eG.Z, { showDirtyIndicator: w }),
                      ariaLabel: eH.Z.Messages.GUILD_TEMPLATES,
                      element: eU.ZP,
                      notice: { stores: [eU.Sf], element: eU.Q5 },
                      predicate: () => d,
                    },
                  ]
                : [];
          return [
            { section: u.ID.HEADER, label: eY(a) },
            {
              section: ey.pNK.OVERVIEW,
              impressionName: i.ImpressionNames.GUILD_SETTINGS_OVERVIEW,
              label: eH.Z.Messages.OVERVIEW,
              ariaLabel: eH.Z.Messages.OVERVIEW,
              element: eM.Z,
              notice: { stores: [ec.Z], element: eM.O },
            },
            ...e,
            ...t,
            ...h,
            ...$,
            ...ee,
            { section: u.ID.DIVIDER },
            {
              section: ey.pNK.GUILD_PREMIUM,
              impressionName: i.ImpressionNames.GUILD_SETTINGS_BOOST_STATUS,
              label: eH.Z.Messages.GUILD_PREMIUM,
              ariaLabel: eH.Z.Messages.GUILD_PREMIUM,
              element: eD.Z,
              className: eV.serverBoostTabItem,
              icon: (0, s.jsx)(ej.Z, { className: eV.icon }),
            },
            ...ea,
            { section: u.ID.DIVIDER, predicate: () => F },
            eq,
          ];
        }
        return [
          { section: u.ID.HEADER, label: eY(a) },
          {
            section: ey.pNK.OVERVIEW,
            impressionName: i.ImpressionNames.GUILD_SETTINGS_OVERVIEW,
            label: eH.Z.Messages.OVERVIEW,
            ariaLabel: eH.Z.Messages.OVERVIEW,
            element: eM.Z,
            notice: { stores: [ec.Z], element: eM.O },
          },
          {
            section: ey.pNK.ROLES,
            impressionName: i.ImpressionNames.GUILD_SETTINGS_ROLES,
            label: eH.Z.Messages.ROLES,
            element: em.Z,
            type: u.bT.MINIMAL,
            ariaLabel:
              eH.Z.Messages.GUILD_SETTINGS_ROLE_ICON_SIDEBAR_NEW_ARIA_LABEL,
            notice: { stores: [eo.Z], element: em._ },
            predicate: () => I,
          },
          {
            section: ey.pNK.EMOJI,
            impressionName: i.ImpressionNames.GUILD_SETTINGS_EMOJI,
            label: eH.Z.Messages.EMOJI,
            element: eR.ZP,
            predicate: () => E,
          },
          {
            section: ey.pNK.STICKERS,
            impressionName: i.ImpressionNames.GUILD_SETTINGS_STICKERS,
            label: eH.Z.Messages.GUILD_SETTINGS_STICKERS,
            ariaLabel: eH.Z.Messages.GUILD_SETTINGS_STICKERS,
            element: eb.Z,
            predicate: () => E,
          },
          {
            section: ey.pNK.SOUNDBOARD,
            impressionName: i.ImpressionNames.GUILD_SETTINGS_SOUNDBOARD,
            label: eH.Z.Messages.GUILD_SETTINGS_SOUNDBOARD,
            ariaLabel: eH.Z.Messages.GUILD_SETTINGS_SOUNDBOARD,
            element: eZ.Z,
            predicate: () => E,
          },
          {
            section: ey.pNK.WIDGET,
            impressionName: i.ImpressionNames.GUILD_SETTINGS_WIDGET,
            label: eH.Z.Messages.WIDGET,
            element: eB.Z,
            predicate: () => d,
          },
          {
            section: ey.pNK.GUILD_TEMPLATES,
            impressionName: i.ImpressionNames.GUILD_SETTINGS_TEMPLATE,
            label: (0, s.jsx)(eG.Z, { showDirtyIndicator: w }),
            ariaLabel: eH.Z.Messages.GUILD_TEMPLATES,
            element: eU.ZP,
            notice: { stores: [eU.Sf], element: eU.Q5 },
            predicate: () => d,
          },
          {
            section: ey.pNK.VANITY_URL,
            impressionName: i.ImpressionNames.GUILD_SETTINGS_VANITY_URL,
            label: eH.Z.Messages.VANITY_URL,
            element: eP.Z,
            notice: { stores: [ed.Z], element: eP.T },
            predicate: () => r,
          },
          { section: u.ID.DIVIDER, predicate: () => d || x },
          {
            section: u.ID.HEADER,
            label: eH.Z.Messages.APPS,
            predicate: () => d || x,
          },
          {
            section: ey.pNK.INTEGRATIONS,
            impressionName: i.ImpressionNames.GUILD_SETTINGS_INTEGRATION,
            label: eH.Z.Messages.INTEGRATIONS,
            ariaLabel: eH.Z.Messages.INTEGRATIONS,
            element: eL.Z,
            notice: { stores: [el.Z, ec.Z], element: eL.j },
            predicate: () => d || x,
          },
          {
            section: ey.pNK.APP_DIRECTORY,
            label: eH.Z.Messages.APP_DIRECTORY,
            ariaLabel: eH.Z.Messages.APP_DIRECTORY,
            onClick() {
              (0, m.goToAppDirectory)({
                guildId: a.id,
                entrypoint: {
                  name: T.ApplicationDirectoryEntrypointNames.GUILD_SETTINGS,
                  guildSettingsSection: J,
                },
              }),
                (0, c.xf)();
            },
          },
          { section: u.ID.DIVIDER, predicate: () => d },
          {
            section: u.ID.HEADER,
            label: eH.Z.Messages.MODERATION,
            predicate: () => d,
          },
          {
            section: ey.pNK.SAFETY,
            impressionName: i.ImpressionNames.GUILD_SETTINGS_SAFETY,
            label: eH.Z.Messages.SAFETY_SETUP,
            ariaLabel: eH.Z.Messages.SAFETY_SETUP,
            element: eN.Z,
            newIndicatorDismissibleContentTypes: [
              l.z.COMMUNITY_GUILD_SETTINGS_SAFETY,
            ],
            predicate: () => d && a.hasFeature(ey.oNc.COMMUNITY),
          },
          {
            section: ey.pNK.MODERATION,
            impressionName: i.ImpressionNames.GUILD_SETTINGS_MODERATION,
            label: eH.Z.Messages.SAFETY_SETUP,
            element: ev.ZP,
            predicate: () => d && !a.hasFeature(ey.oNc.COMMUNITY),
          },
          {
            section: ey.pNK.GUILD_AUTOMOD,
            label: (0, s.jsx)("div", {
              className: eV.landingPageTabLink,
              children: eH.Z.Messages.GUILD_SETTINGS_AUTOMOD_TITLE,
            }),
            ariaLabel: eH.Z.Messages.GUILD_SETTINGS_AUTOMOD_TITLE,
            element: f.Z,
            newIndicatorDismissibleContentTypes: null,
            predicate: () =>
              !a.hasFeature(ey.oNc.COMMUNITY) &&
              ((0, L.Nb)(a.id) || (0, L.ze)(a.id)),
          },
          {
            section: ey.pNK.AUDIT_LOG,
            impressionName: i.ImpressionNames.GUILD_SETTINGS_AUDIT_LOG,
            label: eH.Z.Messages.GUILD_SETTINGS_LABEL_AUDIT_LOG,
            element: eu.Z,
            type: u.bT.CUSTOM,
            predicate: () => _,
          },
          {
            section: ey.pNK.BANS,
            impressionName: i.ImpressionNames.GUILD_SETTINGS_BANS,
            label: eH.Z.Messages.BANS,
            element: eg.Z,
            predicate: () => A,
          },
          { section: u.ID.DIVIDER, predicate: () => d || v },
          {
            section: u.ID.HEADER,
            label: eH.Z.Messages.COMMUNITY,
            predicate: () => !et && (d || v),
          },
          {
            section: ey.pNK.CLAN,
            label: eH.Z.Messages.CLAN_SETTINGS,
            ariaLabel: eH.Z.Messages.CLAN_SETTINGS,
            onClick() {
              (0, H.q4)(
                (e) => {
                  let { closeLayer: t } = e;
                  return (0, s.jsx)(S.Z, { onClose: t, guildId: a.id });
                },
                { layerKey: eF.q2 },
              ),
                (0, c.xf)();
            },
            predicate: () => null != et && et,
            icon: null != eK ? (0, s.jsx)(g.KQ, { src: eK }) : null,
          },
          {
            section: ey.pNK.COMMUNITY,
            impressionName: a.hasFeature(ey.oNc.COMMUNITY)
              ? i.ImpressionNames.GUILD_SETTINGS_COMMUNITY_OVERVIEW
              : i.ImpressionNames.GUILD_SETTINGS_ENABLE_COMMUNITY,
            label: a.hasFeature(ey.oNc.COMMUNITY)
              ? eH.Z.Messages.OVERVIEW
              : eH.Z.Messages.GUILD_SETTINGS_COMMUNITY_ENABLE_COMMUNITY,
            element: eh.Z,
            ariaLabel: a.hasFeature(ey.oNc.COMMUNITY)
              ? eH.Z.Messages.OVERVIEW
              : eH.Z.Messages.GUILD_SETTINGS_COMMUNITY_ENABLE_COMMUNITY,
            newIndicator:
              !a.hasFeature(ey.oNc.COMMUNITY) &&
              null != V &&
              V >= ew.U3 &&
              k.Z.hasHotspot(ek.v.GUILD_SETTINGS_COMMUNITY_GUILD_UPSELL),
            notice: { stores: [ec.Z], element: eh.X },
            predicate: () => d,
          },
          {
            section: ey.pNK.ONBOARDING,
            label: eH.Z.Messages.ONBOARDING,
            element: eA.Z,
            ariaLabel: eH.Z.Messages.ONBOARDING,
            newIndicatorDismissibleContentTypes: K
              ? null
              : [l.z.COMMUNITY_ONBOARDING_NEW_BADGE],
            notice: { stores: [e_.Z], element: eT.Z },
            predicate: () => (0, M.wC)(a.id),
            decoration: eW(a.id, W),
          },
          {
            section: ey.pNK.ANALYTICS,
            impressionName: i.ImpressionNames.GUILD_SETTINGS_ANALYTICS,
            label: eH.Z.Messages.SERVER_INSIGHTS,
            ariaLabel: eH.Z.Messages.SERVER_INSIGHTS,
            element: eS.Z,
            newIndicator: k.Z.hasHotspot(
              ek.v.GUILD_ANALYTICS_GUILD_SETTINGS_MENU,
            ),
            newIndicatorDismissibleContentTypes: Y
              ? [l.z.GUILD_INSIGHTS_ACCESS_RATE_NEW]
              : null,
            predicate: () => v && a.hasFeature(ey.oNc.COMMUNITY),
          },
          {
            section: ey.pNK.DISCOVERY,
            impressionName: i.ImpressionNames.GUILD_SETTINGS_DISCOVERY,
            label: eH.Z.Messages.DISCOVERY,
            element: ex.Z,
            notice: { stores: [ec.Z], element: ex.s },
            predicate: () => d && a.hasFeature(ey.oNc.COMMUNITY),
            ariaLabel: a.hasFeature(ey.oNc.DISCOVERABLE)
              ? eH.Z.Messages.DISCOVERY
              : eH.Z.Messages.GUILD_SETTINGS_ENABLE_DISCOVERABLE,
          },
          {
            section: ey.pNK.DISCOVERY_LANDING_PAGE,
            impressionName:
              i.ImpressionNames.GUILD_SETTINGS_DISCOVERY_LANDING_PAGE,
            label: (0, s.jsxs)("div", {
              className: eV.landingPageTabLink,
              children: [
                eH.Z.Messages.DISCOVERY_LANDING_PAGE,
                " ",
                (0, s.jsx)(R.Z, {}),
              ],
            }),
            ariaLabel: eH.Z.Messages.DISCOVERY_LANDING_PAGE,
            element: ep.Z,
            notice: { stores: [ec.Z], element: ep.J },
            type: u.bT.CUSTOM,
            predicate: () =>
              d &&
              (a.hasFeature(ey.oNc.DISCOVERABLE) ||
                !!(null == Q ? void 0 : Q.isPublished)),
          },
          {
            section: ey.pNK.COMMUNITY_WELCOME,
            impressionName: i.ImpressionNames.GUILD_SETTINGS_COMMUNITY_WELCOME,
            label: eH.Z.Messages.GUILD_SETTINGS_PUBLIC_WELCOME,
            ariaLabel: eH.Z.Messages.GUILD_SETTINGS_PUBLIC_WELCOME,
            element: eC.Z,
            notice: { stores: [z.Z], element: q.Z },
            predicate: () =>
              d &&
              a.hasFeature(ey.oNc.COMMUNITY) &&
              !X &&
              !a.hasFeature(ey.oNc.GUILD_SERVER_GUIDE),
          },
          { section: u.ID.DIVIDER, predicate: ei },
          {
            section: u.ID.HEADER,
            label: eH.Z.Messages.MONETIZATION,
            predicate: ei,
          },
          {
            ...ez,
            section: ey.pNK.ROLE_SUBSCRIPTIONS,
            element: P.Z,
            type: u.bT.CUSTOM,
            predicate: ei,
            newIndicatorDismissibleContentTypes: (0, G.sO)(a)
              ? [l.z.SERVER_SUBSCRIPTION_SETTINGS_NEW_BADGE_TIER_TEMPLATE]
              : null,
          },
          {
            section: ey.pNK.GUILD_PRODUCTS,
            label: eH.Z.Messages.GUILD_PRODUCTS_TITLE,
            ariaLabel: eH.Z.Messages.GUILD_PRODUCTS_TITLE,
            element: Z.Z,
            predicate: () =>
              ei() &&
              (0, j.p)(a.id, "guild_product_settings_predicate") &&
              (0, b.sy)(a),
          },
          {
            section: ey.pNK.ROLE_SUBSCRIPTIONS_STORE_PAGE,
            impressionName:
              i.ImpressionNames
                .GUILD_ROLE_SUBSCRIPTION_STORE_PAGE_GUILD_SETTINGS,
            newIndicator: 2022 === new Date().getFullYear(),
            label: eH.Z.Messages.GUILD_SETTINGS_ROLE_SUBSCRIPTIONS_STORE_PAGE,
            ariaLabel:
              eH.Z.Messages.GUILD_SETTINGS_ROLE_SUBSCRIPTIONS_STORE_PAGE,
            element: B.Z,
            predicate: () => ei() && (0, b.sy)(a),
          },
          { section: u.ID.DIVIDER },
          {
            section: ey.pNK.GUILD_PREMIUM,
            impressionName: i.ImpressionNames.GUILD_SETTINGS_BOOST_STATUS,
            label: eH.Z.Messages.GUILD_PREMIUM,
            ariaLabel: eH.Z.Messages.GUILD_PREMIUM,
            element: eD.Z,
            className: eV.serverBoostTabItem,
            icon: (0, s.jsx)(ej.Z, { className: eV.icon }),
          },
          { section: u.ID.DIVIDER },
          { section: u.ID.HEADER, label: eH.Z.Messages.USER_MANAGEMENT },
          {
            section: ey.pNK.MEMBERS,
            impressionName: i.ImpressionNames.GUILD_SETTINGS_MEMBERS,
            label: (0, s.jsx)(eO.$, {}),
            ariaLabel: eH.Z.Messages.MEMBERS,
            element: eO.Z,
            type: u.bT.CUSTOM,
            predicate: () => D,
          },
          {
            section: ey.pNK.INSTANT_INVITES,
            impressionName: i.ImpressionNames.GUILD_SETTINGS_INVITES,
            label: eH.Z.Messages.INVITES,
            element: ef.Z,
            type: u.bT.CUSTOM,
            predicate: () => d,
          },
          { section: u.ID.DIVIDER, predicate: () => F },
          eq,
        ];
      }
      function eK(e, t) {
        let n = J.Z.getGuildPermissionProps(e),
          s = (0, V.p)(e.id).length > 0;
        return ez({
          channels: t,
          showDirtyGuildTemplateIndicator: !1,
          ...n,
          canUnlinkChannels: s,
          showAccessRate: !1,
          canAccessClanSettings: n.isGuildAdmin && e.hasFeature(ey.oNc.CLAN),
          welcomeScreenEmpty: K.Z.isEmpty(e.id),
        })
          .filter((e) => {
            let { section: t } = e;
            return t !== u.ID.HEADER && t !== u.ID.DIVIDER;
          })
          .filter((e) => null == e.predicate || e.predicate());
      }
      function eq(e) {
        let t =
            arguments.length > 1 && void 0 !== arguments[1]
              ? arguments[1]
              : null,
          n = arguments.length > 2 ? arguments[2] : void 0;
        I.ZP.trackWithMetadata(ey.rMx.SETTINGS_PANE_VIEWED, {
          settings_type: "guild",
          origin_pane: t,
          destination_pane: e,
          location: n,
        });
      }
      let eX = {
        canManageGuild: !1,
        canManageChannels: !1,
        canManageRoles: !1,
        canManageBans: !1,
        canManageNicknames: !1,
        canManageGuildExpressions: !1,
        canViewAuditLog: !1,
        canManageWebhooks: !1,
        canAccessMembersPage: !1,
        canViewGuildAnalytics: !1,
        isOwner: !1,
        isOwnerWithRequiredMfaLevel: !1,
        isGuildAdmin: !1,
      };
      class eQ extends a.PureComponent {
        componentDidMount() {
          eq(this.props.section, null, this.props.analyticsLocation);
        }
        componentWillUnmount() {
          es.Z.close();
        }
        componentDidUpdate(e) {
          let { section: t } = e,
            {
              section: n,
              isGuildAdmin: s,
              canManageGuild: a,
              canManageRoles: i,
              canManageBans: r,
              canManageNicknames: l,
              canManageGuildExpressions: o,
              canViewAuditLog: d,
              canManageWebhooks: u,
              canAccessMembersPage: _,
              canViewGuildAnalytics: I,
            } = this.props;
          n !== t && eq(n, t),
            ((!s && !a && !i && !r && !l && !o && !d && !_ && !u) ||
              (!d && n === ey.pNK.AUDIT_LOG) ||
              (!i && n === ey.pNK.ROLES) ||
              (!o && n === ey.pNK.EMOJI) ||
              (!o && n === ey.pNK.STICKERS) ||
              (!o && n === ey.pNK.SOUNDBOARD) ||
              (!r && n === ey.pNK.BANS) ||
              (!I && n === ey.pNK.ANALYTICS) ||
              (!_ && n === ey.pNK.MEMBERS)) &&
              (0, c.xf)();
        }
        render() {
          var e, t;
          let {
            theme: n,
            sidebarTheme: a,
            section: i,
            guild: r,
            channels: l,
            isGuildAdmin: o,
            canManageGuild: u,
            canViewAuditLog: _,
            canManageRoles: I,
            canManageGuildExpressions: E,
            canManageWebhooks: T,
            canUnlinkChannels: m,
            canManageBans: N,
            canAccessMembersPage: S,
            canViewGuildAnalytics: g,
            isOwner: h,
            isOwnerWithRequiredMfaLevel: C,
            showDirtyGuildTemplateIndicator: x,
            memberCount: p,
            showAccessRate: R,
            onboardingStep: L,
            onboardingEnabled: f,
            welcomeScreenEmpty: O,
            guildMetadata: A,
            canAccessClanSettings: M,
          } = this.props;
          if (null == r) return null;
          let D = ez({
              guild: r,
              channels: l,
              isGuildAdmin: o,
              canManageGuild: u,
              canViewAuditLog: _,
              canManageRoles: I,
              canManageGuildExpressions: E,
              canManageWebhooks: T,
              canUnlinkChannels: m,
              canManageBans: N,
              canAccessMembersPage: S,
              canViewGuildAnalytics: g,
              isOwner: h,
              isOwnerWithRequiredMfaLevel: C,
              showDirtyGuildTemplateIndicator: x,
              memberCount: p,
              showAccessRate: R,
              onboardingStep: L,
              onboardingEnabled: f,
              welcomeScreenEmpty: O,
              guildMetadata: A,
              section: i,
              canAccessClanSettings: M,
            }),
            v =
              (null === (t = D.find((e) => e.section === i)) || void 0 === t
                ? void 0
                : null === (e = t.predicate) || void 0 === e
                  ? void 0
                  : e.call(t)) !== !1;
          return (0, s.jsxs)("div", {
            children: [
              (0, s.jsx)(d.ZP, {
                theme: n,
                sidebarTheme: a,
                section: v && null != i ? i : ey.pNK.OVERVIEW,
                onSetSection: es.Z.setSection,
                onClose: c.xf,
                title: eY(r),
                sections: D,
              }),
              (0, s.jsx)(w.d, { guildId: r.id }),
            ],
          });
        }
      }
      function eJ() {
        var e;
        let {
            guild: t,
            section: n,
            analyticsLocation: i,
            guildMetadata: l,
            isGuildMetadataLoaded: o,
          } = (0, r.cj)([ec.Z], () => ec.Z.getProps()),
          { analyticsLocations: c } = (0, E.ZP)(_.Z.GUILD_SETTINGS),
          d = (0, r.e7)([Y.Z], () => Y.Z.theme),
          u = (0, r.e7)([Y.Z], () => (Y.Z.darkSidebar ? ey.BRd.DARK : void 0)),
          I = (0, r.e7)(
            [X.ZP],
            () => (null != t ? X.ZP.getChannels(t.id).SELECTABLE : null),
            [t],
          ),
          T = (0, r.cj)([J.Z], () =>
            null != t ? J.Z.getGuildPermissionProps(t) : eX,
          ),
          m = null == t ? void 0 : t.id,
          N = (0, r.e7)(
            [J.Z],
            () => null != t && J.Z.canAccessGuildSettings(t),
          ),
          S = null != t && (0, et.Fv)(t.id),
          g = S || N,
          h = S || T.canViewGuildAnalytics,
          { shouldFetchMemberInsights: C, hasAccessRate: p } = (0, r.cj)(
            [ei.Z],
            () => ({
              shouldFetchMemberInsights:
                null != t && ei.Z.shouldFetchMemberInsights(t.id),
              hasAccessRate:
                null != t && ei.Z.getMemberInsights(t.id).hasAccessRate,
            }),
          );
        a.useEffect(() => {
          !o && null != m && (0, x.aC)(m);
        }, [o, m]),
          a.useEffect(() => {
            g && h && C && null != m && (0, ea.r2)(m);
          }, [g, h, C, m]);
        let R =
          null !== (e = null == t ? void 0 : t.hasFeature(ey.oNc.COMMUNITY)) &&
          void 0 !== e &&
          e;
        a.useEffect(() => {
          null != m && R && ((0, O.eM)(m), (0, W.RM)(m));
        }, [m, R]);
        let { homeSettingsEnabled: L } = (0, v.kZ)(null != m ? m : ey.lds);
        a.useEffect(() => {
          null != m && L && (0, D.cP)(m);
        }, [L, m]);
        let { showAccessRate: f } = (0, et.eA)(
            null == t ? void 0 : t.id,
            !p || !h || !g,
          ),
          M =
            T.isGuildAdmin && (null == t ? void 0 : t.hasFeature(ey.oNc.CLAN)),
          j = (0, r.e7)(
            [F.Z],
            () => {
              var e;
              return (
                (null == t ? void 0 : t.id) != null &&
                (null === (e = F.Z.getForGuild(t.id)) || void 0 === e
                  ? void 0
                  : e.isDirty) === !0
              );
            },
            [t],
          ),
          Z = (0, r.e7)(
            [Q.Z],
            () => Q.Z.getMemberCount(null == t ? void 0 : t.id),
            [t],
          );
        a.useEffect(() => {
          null != m && T.canManageGuild && y.Z.loadTemplatesForGuild(m);
        }, [m, T.canManageGuild]),
          a.useEffect(() => {
            !g && es.Z.close();
          }, [g]);
        let b = (0, r.e7)([e_.Z], () => e_.Z.getCurrentPage()),
          U = (0, r.e7)([A.Z], () => null != m && A.Z.getEnabled(m)),
          G = (0, r.e7)([K.Z], () => null != m && K.Z.isEmpty(m)),
          P = (0, V.F)(m).length > 0;
        return (0, s.jsx)(E.Gt, {
          value: c,
          children: (0, s.jsx)(eQ, {
            guild: t,
            section: n,
            theme: d,
            sidebarTheme: u,
            channels: I,
            showDirtyGuildTemplateIndicator: j,
            analyticsLocation: i,
            memberCount: Z,
            ...T,
            canUnlinkChannels: P,
            canViewGuildAnalytics: h,
            showAccessRate: f,
            onboardingStep: b,
            onboardingEnabled: U,
            welcomeScreenEmpty: G,
            guildMetadata: l,
            canAccessClanSettings: M,
          }),
        });
      }
    },
    702478: function (e, t, n) {
      "use strict";
      n(47120);
      var s = n(735250),
        a = n(470079),
        i = n(772848),
        r = n(640358),
        l = n(442837),
        o = n(544891),
        c = n(704215),
        d = n(692547),
        u = n(481060),
        _ = n(497321),
        I = n(841470),
        E = n(605236),
        T = n(142497),
        m = n(690221),
        N = n(706454),
        S = n(650774),
        g = n(430824),
        h = n(246946),
        C = n(626135),
        x = n(771212),
        p = n(434404),
        R = n(146596),
        L = n(559368),
        f = n(999382),
        O = n(981631),
        A = n(921944),
        M = n(190378),
        D = n(689938),
        v = n(396466),
        j = n(287837),
        Z = n(573189),
        b = n(899947),
        U = n(117831),
        G = n(996737),
        P = n(21846),
        B = n(280632),
        y = n(44234),
        F = n(117428);
      let k = function (e, t, n) {
          let s =
              arguments.length > 3 && void 0 !== arguments[3] && arguments[3],
            a = null;
          return (
            null == t || Number.isNaN(t)
              ? (null == t || Number.isNaN(t)) &&
                null != e &&
                (a = D.Z.Messages.GUILD_ANALYTICS_METRICS_LAST_WEEK)
              : (a = D.Z.Messages.PERCENTAGE_SINCE_LAST_WEEK.format({
                  percentage: (0, r.o)(Math.abs(t), n),
                })),
            {
              localizedNumber:
                null != e
                  ? "".concat((0, r.o)(e, n)).concat(s ? "%" : "")
                  : D.Z.Messages.NOT_AVAILABLE,
              subtext: a,
              isTrendingUp: t > 0,
              isTrendingDown: t < 0,
            }
          );
        },
        w = function (e) {
          let t =
            arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
          return t || e === O.evJ.NOT_ENOUGH_GUILD_MEMBERS
            ? (0, s.jsx)(u.FormErrorBlock, {
                icon: u.CircleInformationIcon,
                className: v.notEnoughMembersError,
                backgroundColor: u.FormErrorBlockColors.BACKGROUND_ACCENT,
                children: D.Z.Messages.GUILD_ANALYTICS_ERROR_GUILD_SIZE,
              })
            : null == e
              ? null
              : (0, s.jsx)(u.FormErrorBlock, {
                  backgroundColor: u.FormErrorBlockColors.BACKGROUND_ACCENT,
                  children: D.Z.Messages.GUILD_ANALYTICS_ERROR_MESSAGE,
                });
        };
      function H(e) {
        C.default.track(O.rMx.GUILD_INSIGHTS_SETTINGS_CTA_CLICKED, {
          guild_id: e,
        });
        let t =
            null == e
              ? O.E07.DEVELOPER_PORTAL
              : O.E07.DEVELOPER_PORTAL_GUILD_ANALYTICS(e),
          n = (0, i.Z)();
        return o.tn
          .post({ url: O.ANM.HANDOFF, body: { key: n }, oldFormErrors: !0 })
          .then(
            (e) => {
              let s = e.body.handoff_token;
              window.open(O.EYA.DEVELOPER_PORTAL_LOGIN_HANDOFF(n, s, t));
            },
            () => {
              window.open(t);
            },
          );
      }
      let V = () => {
        let [e, t] = a.useState(!1),
          n = (0, l.e7)([f.Z], () => f.Z.getGuildId());
        return (0, s.jsx)(u.Button, {
          className: v.developerPortalCta,
          onClick: () => {
            t(!0),
              H(n).then(() => {
                t(!1);
              });
          },
          submitting: e,
          children: D.Z.Messages.GUILD_ANALYICS_DEVELOPERS_BUTTON,
        });
      };
      function Y(e) {
        let { guildId: t } = e,
          { hasAccessRate: n, accessRate: i } = (0, l.cj)([L.Z], () =>
            L.Z.getMemberInsights(t),
          ),
          r = (0, l.e7)([S.Z], () => {
            var e;
            return null !== (e = S.Z.getMemberCount()) && void 0 !== e ? e : 0;
          }),
          { showAccessRate: o } = (0, x.eA)(t, !n);
        if (
          (a.useEffect(() => {
            o &&
              ((0, E.kk)(c.z.GUILD_INSIGHTS_ACCESS_RATE_NEW),
              (0, E.EW)(c.z.GUILD_INSIGHTS_ACCESS_RATE_NEW, {
                dismissAction: A.L.AUTO,
              }));
          }, [o]),
          !o || !n || null == i)
        )
          return null;
        let _ = 10 * Math.ceil((1 - i) * 10),
          I = F,
          T = null,
          N = null;
        return (
          i >= 0.9
            ? ((I = F),
              (T = D.Z.Messages.MEMBER_INSIGHTS_ACCESS_RATING_VERY_GOOD.format({
                ratingHook: (e, t) =>
                  (0, s.jsx)(
                    "span",
                    { className: v.ratingVeryGood, children: e },
                    t,
                  ),
              })),
              (N = D.Z.Messages.MEMBER_INSIGHTS_ACCESS_RATING_LESS.format({
                accessRate: 10,
              })))
            : i >= (r > 1e4 ? 0.7 : 0.8)
              ? ((I = B),
                (T = D.Z.Messages.MEMBER_INSIGHTS_ACCESS_RATING_GOOD.format({
                  ratingHook: (e, t) =>
                    (0, s.jsx)(
                      "span",
                      { className: v.ratingGood, children: e },
                      t,
                    ),
                })),
                (N = D.Z.Messages.MEMBER_INSIGHTS_ACCESS_RATING_APPROX.format({
                  accessRate: _,
                })))
              : i >= 0.5
                ? ((I = y),
                  (T =
                    D.Z.Messages.MEMBER_INSIGHTS_ACCESS_RATING_NEUTRAL.format({
                      ratingHook: (e, t) =>
                        (0, s.jsx)(
                          "span",
                          { className: v.ratingNeutral, children: e },
                          t,
                        ),
                    })),
                  (N = D.Z.Messages.MEMBER_INSIGHTS_ACCESS_RATING_APPROX.format(
                    { accessRate: _ },
                  )))
                : ((I = P),
                  (T = D.Z.Messages.MEMBER_INSIGHTS_ACCESS_RATING_BAD.format({
                    ratingHook: (e, t) =>
                      (0, s.jsx)(
                        "span",
                        { className: v.ratingBad, children: e },
                        t,
                      ),
                  })),
                  (N =
                    100 === _
                      ? D.Z.Messages.MEMBER_INSIGHTS_ACCESS_RATING_APPROX.format(
                          { accessRate: _ },
                        )
                      : D.Z.Messages.MEMBER_INSIGHTS_ACCESS_RATING_MORE.format({
                          accessRate: _,
                        }))),
          (0, s.jsxs)(s.Fragment, {
            children: [
              (0, s.jsxs)(u.Heading, {
                variant: "heading-md/semibold",
                className: v.insightsTitle,
                children: [
                  D.Z.Messages.MEMBER_INSIGHTS_SERVER_ACCESS,
                  (0, s.jsx)(u.TextBadge, {
                    text: D.Z.Messages.BETA,
                    color: d.Z.unsafe_rawColors.BRAND_500.css,
                    className: v.betaTag,
                  }),
                ],
              }),
              (0, s.jsxs)("div", {
                className: v.memberInsightsContainer,
                children: [
                  (0, s.jsxs)("div", {
                    className: v.insightsHeader,
                    children: [
                      (0, s.jsx)("img", {
                        alt: "",
                        className: v.insightsIcon,
                        src: I,
                      }),
                      (0, s.jsxs)("div", {
                        children: [
                          (0, s.jsx)(u.Text, {
                            variant: "text-md/semibold",
                            className: v.title,
                            children: T,
                          }),
                          (0, s.jsxs)(u.Text, {
                            className: v.description,
                            variant: "text-sm/normal",
                            children: [
                              N,
                              (0, s.jsx)(u.TooltipContainer, {
                                text: D.Z.Messages
                                  .MEMBER_INSIGHTS_ACCESS_RATE_TOOLTIP,
                                className: v.insightsTooltip,
                                children: (0, s.jsx)(u.CircleInformationIcon, {
                                  size: "xs",
                                  color: "currentColor",
                                  className: v.insightsTooltipIcon,
                                }),
                              }),
                            ],
                          }),
                        ],
                      }),
                    ],
                  }),
                  i < 0.9
                    ? (0, s.jsxs)(s.Fragment, {
                        children: [
                          (0, s.jsx)("div", { className: v.divider }),
                          (0, s.jsx)(u.Text, {
                            className: v.tips,
                            variant: "text-sm/semibold",
                            children:
                              D.Z.Messages.MEMBER_INSIGHTS_TIPS.format(),
                          }),
                          (0, s.jsxs)("div", {
                            className: v.insightsActions,
                            children: [
                              (0, s.jsxs)("div", {
                                className: v.insightAction,
                                children: [
                                  (0, s.jsx)("img", {
                                    alt: "",
                                    className: v.actionIcon,
                                    src: b,
                                  }),
                                  (0, s.jsx)(u.Text, {
                                    className: v.actionText,
                                    variant: "text-sm/normal",
                                    children:
                                      D.Z.Messages.ACCESS_RATE_ACTION_SIMPLIFY,
                                  }),
                                ],
                              }),
                              (0, s.jsx)("div", { className: v.dividerInline }),
                              (0, s.jsxs)("div", {
                                className: v.insightAction,
                                children: [
                                  (0, s.jsx)("img", {
                                    alt: "",
                                    className: v.actionIcon,
                                    src: U,
                                  }),
                                  (0, s.jsx)(u.Text, {
                                    className: v.actionText,
                                    variant: "text-sm/normal",
                                    children:
                                      D.Z.Messages
                                        .ACCESS_RATE_ACTION_EXTRA_STEPS,
                                  }),
                                ],
                              }),
                              (0, s.jsx)("div", { className: v.dividerInline }),
                              (0, s.jsxs)("div", {
                                className: v.insightAction,
                                children: [
                                  (0, s.jsx)("img", {
                                    alt: "",
                                    className: v.actionIcon,
                                    src: Z,
                                  }),
                                  (0, s.jsx)(u.Text, {
                                    className: v.actionText,
                                    variant: "text-sm/normal",
                                    children:
                                      D.Z.Messages.ACCESS_RATE_ACTION_BOTS.format(
                                        {
                                          integrationsHook: (e, t) =>
                                            (0, s.jsx)(
                                              m.Z,
                                              {
                                                onClick: () =>
                                                  p.Z.setSection(
                                                    O.pNK.INTEGRATIONS,
                                                  ),
                                                className: v.link,
                                                children: e,
                                              },
                                              t,
                                            ),
                                        },
                                      ),
                                  }),
                                ],
                              }),
                              (0, s.jsx)("div", { className: v.dividerInline }),
                              (0, s.jsxs)("div", {
                                className: v.insightAction,
                                children: [
                                  (0, s.jsx)("img", {
                                    alt: "",
                                    className: v.actionIcon,
                                    src: j,
                                  }),
                                  (0, s.jsx)(u.Text, {
                                    className: v.actionText,
                                    variant: "text-sm/normal",
                                    children:
                                      D.Z.Messages.ACCESS_RATE_ACTION_AUDIT,
                                  }),
                                ],
                              }),
                            ],
                          }),
                        ],
                      })
                    : (0, s.jsx)("div", {
                        className: v.insightsActions,
                        children: (0, s.jsxs)("div", {
                          className: v.insightAction,
                          children: [
                            (0, s.jsx)("img", {
                              alt: "",
                              className: v.actionIcon,
                              src: G,
                            }),
                            (0, s.jsx)(u.Text, {
                              className: v.actionText,
                              variant: "text-sm/normal",
                              children:
                                D.Z.Messages.ACCESS_RATE_ACTION_SUCCESS.format({
                                  insightsHook: (e, n) =>
                                    (0, s.jsx)(
                                      m.Z,
                                      {
                                        onClick: () => H(t),
                                        className: v.link,
                                        children: e,
                                      },
                                      n,
                                    ),
                                }),
                            }),
                          ],
                        }),
                      }),
                ],
              }),
              (0, s.jsx)("div", { className: v.divider }),
              (0, s.jsx)(u.Heading, {
                variant: "heading-md/semibold",
                className: v.insightsTitle,
                children: D.Z.Messages.SERVER_INSIGHTS,
              }),
            ],
          })
        );
      }
      t.Z = () => {
        let e = (0, l.e7)([f.Z], () => f.Z.getGuildId()),
          t = (0, l.e7)([S.Z], () => S.Z.getMemberCount(e)),
          n = (0, l.e7)([g.Z], () => g.Z.getGuild(e)),
          i = (0, l.e7)([N.default], () => N.default.locale),
          { analytics: r, errorCode: o } = (0, l.cj)([L.Z], () => ({
            analytics: null != e ? L.Z.getOverviewAnalytics(e) : null,
            errorCode: L.Z.getError(),
          })),
          c = (0, l.e7)([h.Z], () => h.Z.getSettings().enabled),
          d =
            null == t ||
            null == n ||
            (null != t &&
              t < 500 &&
              null != n &&
              !n.hasFeature(O.oNc.PARTNERED) &&
              !n.hasFeature(O.oNc.VERIFIED));
        a.useEffect(() => {
          null != e && !d && ((0, R.Vk)(e), (0, R.SR)(e), (0, R.xl)(e));
        }, [e, d]),
          a.useEffect(() => {
            (0, T.Kw)(M.v.GUILD_ANALYTICS_GUILD_SETTINGS_MENU);
          }, []);
        let E =
          null != r
            ? (0, s.jsx)("div", {
                className: v.__invalid_guildAnalyticsOverviewWrapper,
                children: (0, s.jsxs)("div", {
                  className: v.overviewData,
                  children: [
                    (0, s.jsx)(I.Z, {
                      title: D.Z.Messages.WEEKLY_VISITORS,
                      tooltipText: D.Z.Messages.VISITORS_INFO,
                      ...k(r.visitors, r.visitorsChange, i),
                    }),
                    (0, s.jsx)(I.Z, {
                      title: D.Z.Messages.WEEKLY_COMMUNICATORS,
                      tooltipText: D.Z.Messages.COMMUNICATORS_INFO,
                      ...k(r.communicators, r.communicatorsChange, i),
                    }),
                    (0, s.jsx)(I.Z, {
                      title: D.Z.Messages.WEEKLY_NEW_MEMBERS,
                      ...k(r.newMembers, r.newMembersChange, i),
                    }),
                    (0, s.jsx)(I.Z, {
                      title: D.Z.Messages.WEEKLY_NEW_MEMBER_RETENTION,
                      tooltipText: D.Z.Messages.NEW_MEMBER_RETENTION_INFO,
                      ...k(r.pctRetained, r.pctRetainedChange, i, !0),
                    }),
                  ],
                }),
              })
            : null;
        return (0, s.jsxs)(u.FormSection, {
          tag: u.FormTitleTags.H1,
          title: D.Z.Messages.SERVER_INSIGHTS,
          children: [
            (0, s.jsx)(u.FormText, {
              type: u.FormTextTypes.DESCRIPTION,
              children: D.Z.Messages.GUILD_ANALYTICS_DESCRIPTION.format(),
            }),
            w(o, d),
            null != e ? (0, s.jsx)(Y, { guildId: e }) : null,
            (0, s.jsxs)("div", {
              className: v.developerPortalCtaWrapper,
              children: [
                (0, s.jsx)("div", { className: v.placeholderImage }),
                (0, s.jsx)(u.Text, {
                  className: v.developerPortalCtaText,
                  variant: "text-sm/normal",
                  children: D.Z.Messages.GUILD_ANALYTICS_DEVELOPERS_CTA,
                }),
                (0, s.jsx)(V, {}),
              ],
            }),
            c
              ? (0, s.jsx)("div", {
                  className: v.streamerMode,
                  children: (0, s.jsx)(_.Z, {}),
                })
              : E,
          ],
        });
      };
    },
    247031: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return G;
        },
      }),
        n(47120),
        n(653041);
      var s = n(735250),
        a = n(470079),
        i = n(120356),
        r = n.n(i),
        l = n(392711),
        o = n(442837),
        c = n(481060),
        d = n(239091),
        u = n(749210),
        _ = n(493544),
        I = n(479531),
        E = n(112831),
        T = n(210887),
        m = n(246946),
        N = n(594174),
        S = n(251625),
        g = n(226951),
        h = n(51144),
        C = n(434404),
        x = n(372454),
        p = n(999382),
        R = n(84613),
        L = n(740903),
        f = n(1080),
        O = n(981631),
        A = n(689938),
        M = n(828965),
        D = n(869042);
      function v(e, t, n) {
        return (
          t in e
            ? Object.defineProperty(e, t, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0,
              })
            : (e[t] = n),
          e
        );
      }
      function j(e) {
        let {
            transitionState: t,
            guild: n,
            user: i,
            ban: r,
            hideDiscriminator: l,
            onClose: o,
          } = e,
          [d, _] = a.useState(!1),
          [T, m] = a.useState(null);
        async function N() {
          if (null != n) {
            m(null), _(!0);
            try {
              await u.Z.unbanUser(n.id, i.id), o();
            } catch (e) {
              m(new I.Z(e)), _(!1);
            }
          }
        }
        return (0, s.jsxs)(c.ModalRoot, {
          className: M.bannedUserModal,
          transitionState: t,
          children: [
            (0, s.jsxs)(c.ModalHeader, {
              className: M.header,
              separator: !1,
              children: [
                (0, s.jsx)(E.Z, {
                  size: E.Z.Sizes.SIZE_24,
                  className: M.userUsername,
                  children: h.ZP.getUserTag(i, {
                    mode: "username",
                    identifiable: l ? "never" : "always",
                  }),
                }),
                l || i.isPomelo()
                  ? null
                  : (0, s.jsxs)(E.Z, {
                      size: E.Z.Sizes.SIZE_24,
                      className: M.userDiscrim,
                      children: ["#", i.discriminator],
                    }),
              ],
            }),
            (0, s.jsxs)(c.ModalContent, {
              className: M.content,
              children: [
                (0, s.jsx)(c.Text, {
                  className: M.reasonHeader,
                  variant: "text-xs/normal",
                  children: A.Z.Messages.BAN_REASON,
                }),
                (0, s.jsx)(c.Text, {
                  variant: "text-sm/normal",
                  children:
                    null != r.reason && "" !== r.reason
                      ? r.reason
                      : A.Z.Messages.NO_BAN_REASON,
                }),
                null != T
                  ? (0, s.jsx)(c.Text, {
                      className: M.error,
                      color: "text-danger",
                      variant: "text-sm/normal",
                      children: T.getAnyErrorMessage(),
                    })
                  : null,
              ],
            }),
            (0, s.jsxs)(c.ModalFooter, {
              className: M.footer,
              children: [
                (0, s.jsx)(c.Button, {
                  onClick: N,
                  look: c.Button.Looks.LINK,
                  color: c.Button.Colors.RED,
                  submitting: d,
                  children: A.Z.Messages.REVOKE_BAN,
                }),
                (0, s.jsx)(c.Button, {
                  onClick: o,
                  children: A.Z.Messages.DONE,
                }),
              ],
            }),
          ],
        });
      }
      class Z extends a.PureComponent {
        render() {
          let { user: e, hideDiscriminator: t, guild: n } = this.props;
          return (0, s.jsxs)(c.Clickable, {
            className: r()(M.bannedUser, D.card),
            onClick: this.handleShowModal,
            onContextMenu: this.handleContextMenu,
            children: [
              (0, s.jsx)(c.Avatar, {
                src: e.getAvatarURL(null == n ? void 0 : n.id, 40),
                "aria-label": e.username,
                size: c.AvatarSizes.SIZE_40,
                className: M.bannedUserAvatar,
              }),
              (0, s.jsxs)("div", {
                className: M.username,
                children: [
                  h.ZP.getUserTag(e, {
                    mode: "username",
                    identifiable: t ? "never" : "always",
                  }),
                  !t &&
                    !e.isPomelo() &&
                    (0, s.jsxs)("span", {
                      className: M.discrim,
                      children: ["#", e.discriminator],
                    }),
                ],
              }),
            ],
          });
        }
        constructor(...e) {
          super(...e),
            v(this, "handleShowModal", () => {
              let {
                guild: e,
                user: t,
                hideDiscriminator: n,
                ban: a,
              } = this.props;
              (0, c.openModal)((i) =>
                (0, s.jsx)(j, {
                  ...i,
                  guild: e,
                  user: t,
                  ban: a,
                  hideDiscriminator: n,
                }),
              );
            }),
            v(this, "handleContextMenu", (e) => {
              (0, d.jW)(e, async () => {
                let { default: e } = await n.e("23835").then(n.bind(n, 768079));
                return (t) => (0, s.jsx)(e, { ...t, user: this.props.user });
              });
            });
        }
      }
      class b extends a.PureComponent {
        makeFilter(e) {
          if (null == e || 0 === e.length) return (e) => null != e;
          {
            let t = RegExp("^".concat(g.Z.escape(e)), "i");
            return (n) => null != n && (n.id === e || t.test(n.username));
          }
        }
        render() {
          let { bans: e, guild: t, searchQuery: n } = this.props;
          if (null == t) return null;
          let a = this.getSortedBans(e, n);
          return (0, s.jsx)(_.Xi, {
            sections: [Math.max(1, a.length)],
            sectionHeight: this.getSectionHeight,
            renderSection: this.renderSection,
            rowHeight: this.getRowHeight,
            renderRow: this.renderRow,
          });
        }
        handleModerationClick() {
          C.Z.setSection(O.pNK.SAFETY), (0, R.K)(L.u.DM_AND_SPAM_PROTECTION);
        }
        handleQueryChange(e) {
          C.Z.setSearchQuery(e);
        }
        handleQueryClear() {
          C.Z.setSearchQuery("");
        }
        constructor(...e) {
          super(...e),
            v(
              this,
              "getSortedBans",
              (0, S.oH)((e, t) => {
                if (null == e) return [];
                let n = this.makeFilter(t),
                  s = [];
                for (let t of e.keys()) {
                  let e = N.default.getUser(t);
                  null != e && n(e) && s.push(e);
                }
                return s.sort((e, t) => e.username.localeCompare(t.username));
              }),
            ),
            v(this, "getRowHeight", (e, t) => {
              var n;
              if (e > 0) return 0;
              let { bans: s, searchQuery: a } = this.props,
                i = this.getSortedBans(s, a);
              if (0 === i.length && 1 === t) return 56;
              let r = i[t],
                l =
                  null == s
                    ? void 0
                    : s.get(
                        null !== (n = null == r ? void 0 : r.id) && void 0 !== n
                          ? n
                          : "",
                      );
              return null == r || null == l ? 0 : 56;
            }),
            v(this, "renderRow", (e) => {
              var t;
              let { section: n, row: a } = e,
                {
                  bans: i,
                  streamerMode: r,
                  guild: l,
                  searchQuery: o,
                } = this.props;
              if (n > 0) return null;
              if (null == i && 0 === a)
                return (0, s.jsx)(
                  c.Spinner,
                  {
                    className: M.spinner,
                    type: c.Spinner.Type.SPINNING_CIRCLE,
                  },
                  "spinner",
                );
              let d = this.getSortedBans(i, o)[a],
                u =
                  null == i
                    ? void 0
                    : i.get(
                        null !== (t = null == d ? void 0 : d.id) && void 0 !== t
                          ? t
                          : "",
                      );
              if (null != d && null != u)
                return (0, s.jsx)(
                  Z,
                  { user: d, ban: u, hideDiscriminator: r, guild: l },
                  d.id,
                );
            }),
            v(this, "getSectionHeight", (e) => {
              if (e > 0) return 0;
              let { bans: t } = this.props;
              return null == t ? 462 : 120;
            }),
            v(this, "renderSection", () => {
              var e;
              let t;
              let { bans: a, theme: i, searchQuery: r } = this.props;
              null == a
                ? (t = null)
                : (null == a ? void 0 : a.size) === 0 &&
                  (t = (0, s.jsxs)(c.EmptyState, {
                    theme: i,
                    className: M.emptyState,
                    children: [
                      (0, s.jsx)(c.EmptyStateImage, {
                        darkSrc: n(532747),
                        lightSrc: n(433466),
                        width: 256,
                        height: 212,
                      }),
                      (0, s.jsx)(c.EmptyStateText, {
                        note: A.Z.Messages.BANS_NO_USERS_BANNED,
                        style: { maxWidth: 300 },
                        children: A.Z.Messages.NO_BANS,
                      }),
                    ],
                  }));
              let l =
                null !== (e = null == a ? void 0 : a.size) && void 0 !== e
                  ? e
                  : 0;
              return (0, s.jsxs)(
                c.FormSection,
                {
                  tag: c.FormTitleTags.H1,
                  title: A.Z.Messages.BANS_HEADER.format({ bans: l }),
                  children: [
                    (0, s.jsxs)("div", {
                      className: M.settingsHeader,
                      children: [
                        (0, s.jsx)(c.FormText, {
                          type: c.FormTextTypes.DESCRIPTION,
                          className: M.description,
                          children: A.Z.Messages.BANS_HINT.format({
                            onModerationClick: this.handleModerationClick,
                          }),
                        }),
                        null == t &&
                          (0, s.jsx)(c.SearchBar, {
                            className: M.searchBar,
                            query: null != r ? r : "",
                            placeholder: A.Z.Messages.BANS_SEARCH_PLACEHOLDER,
                            "aria-label": A.Z.Messages.BANS_SEARCH_PLACEHOLDER,
                            onChange: this.handleQueryChange,
                            onClear: this.handleQueryClear,
                          }),
                      ],
                    }),
                    (0, s.jsx)(c.FormDivider, { style: { marginBottom: -1 } }),
                    t,
                  ],
                },
                "bans-header",
              );
            });
        }
      }
      let U = o.ZP.connectStores([p.Z, T.Z, m.Z], () => {
        let { bans: e, guild: t, searchQuery: n } = p.Z.getProps();
        return {
          searchQuery: null != n ? n : "",
          bans: e,
          guild: t,
          theme: T.Z.theme,
          streamerMode: m.Z.hidePersonalInformation,
        };
      })(b);
      function G() {
        var e;
        let { guild: t } = (0, o.e7)(
            [p.Z],
            () => p.Z.getProps(),
            [],
            l.isEqual,
          ),
          { enabled: n } = x.T.useExperiment(
            {
              guildId:
                null !== (e = null == t ? void 0 : t.id) && void 0 !== e
                  ? e
                  : O.lds,
              location: "4d6318_1",
            },
            { autoTrackExposure: !0 },
          );
        return n ? (0, s.jsx)(f.Z, {}) : (0, s.jsx)(U, {});
      }
    },
    1080: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return B;
        },
      }),
        n(47120),
        n(653041);
      var s = n(735250),
        a = n(470079),
        i = n(120356),
        r = n.n(i),
        l = n(392711),
        o = n.n(l),
        c = n(399606),
        d = n(481060),
        u = n(239091),
        _ = n(749210),
        I = n(479531),
        E = n(110924),
        T = n(410030),
        m = n(367907),
        N = n(906732),
        S = n(112831),
        g = n(218867),
        h = n(733026),
        C = n(246946),
        x = n(594174),
        p = n(626135),
        R = n(136015),
        L = n(51144),
        f = n(434404),
        O = n(999382),
        A = n(84613),
        M = n(740903),
        D = n(981631),
        v = n(689938),
        j = n(264112);
      function Z(e, t, n) {
        return (
          t in e
            ? Object.defineProperty(e, t, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0,
              })
            : (e[t] = n),
          e
        );
      }
      function b(e) {
        var t;
        let {
            transitionState: n,
            guild: i,
            user: r,
            ban: l,
            hideDiscriminator: o,
            onClose: c,
          } = e,
          [u, E] = a.useState(!1),
          [T, g] = a.useState(null),
          { analyticsLocations: h } = (0, N.ZP)(),
          C =
            null !== (t = null == h ? void 0 : h[0]) && void 0 !== t ? t : null;
        async function x() {
          if (null != i) {
            g(null), E(!0);
            try {
              await _.Z.unbanUser(i.id, r.id),
                c(),
                p.default.track(D.rMx.GUILD_BAN_REMOVED, {
                  ...(0, m.hH)(i.id),
                  target_user_id: r.id,
                  reason: l.reason,
                  location: C,
                });
            } catch (e) {
              g(new I.Z(e)), E(!1);
            }
          }
        }
        return (0, s.jsxs)(d.ModalRoot, {
          className: j.bannedUserModal,
          transitionState: n,
          children: [
            (0, s.jsxs)(d.ModalHeader, {
              className: j.header,
              separator: !1,
              children: [
                (0, s.jsx)(S.Z, {
                  size: S.Z.Sizes.SIZE_24,
                  className: j.userUsername,
                  children: L.ZP.getUserTag(r, {
                    mode: "username",
                    identifiable: o ? "never" : "always",
                  }),
                }),
                o || r.isPomelo()
                  ? null
                  : (0, s.jsxs)(S.Z, {
                      size: S.Z.Sizes.SIZE_24,
                      className: j.userDiscrim,
                      children: ["#", r.discriminator],
                    }),
              ],
            }),
            (0, s.jsxs)(d.ModalContent, {
              className: j.content,
              children: [
                (0, s.jsx)(d.Text, {
                  className: j.reasonHeader,
                  variant: "text-xs/normal",
                  children: v.Z.Messages.BAN_REASON,
                }),
                (0, s.jsx)(d.Text, {
                  variant: "text-sm/normal",
                  children:
                    null != l.reason && "" !== l.reason
                      ? l.reason
                      : v.Z.Messages.NO_BAN_REASON,
                }),
                null != T
                  ? (0, s.jsx)(d.Text, {
                      className: j.error,
                      color: "text-danger",
                      variant: "text-sm/normal",
                      children: T.getAnyErrorMessage(),
                    })
                  : null,
              ],
            }),
            (0, s.jsxs)(d.ModalFooter, {
              className: j.footer,
              children: [
                (0, s.jsx)(d.Button, {
                  onClick: x,
                  look: d.Button.Looks.LINK,
                  color: d.Button.Colors.RED,
                  submitting: u,
                  children: v.Z.Messages.REVOKE_BAN,
                }),
                (0, s.jsx)(d.Button, {
                  onClick: c,
                  children: v.Z.Messages.DONE,
                }),
              ],
            }),
          ],
        });
      }
      class U extends a.PureComponent {
        render() {
          let { user: e, hideDiscriminator: t, guild: n } = this.props,
            a = L.ZP.getGlobalName(e);
          return (0, s.jsxs)(d.Clickable, {
            className: r()(j.bannedUser),
            onClick: this.handleShowModal,
            onContextMenu: this.handleContextMenu,
            children: [
              (0, s.jsx)(d.Avatar, {
                src: e.getAvatarURL(null == n ? void 0 : n.id, 40),
                "aria-label": e.username,
                size: d.AvatarSizes.SIZE_40,
                className: j.bannedUserAvatar,
              }),
              (0, s.jsxs)("div", {
                className: j.username,
                children: [
                  L.ZP.getUserTag(e, {
                    mode: "username",
                    identifiable: t ? "never" : "always",
                  }),
                  !t &&
                    !e.isPomelo() &&
                    (0, s.jsxs)("span", {
                      className: j.discrim,
                      children: ["#", e.discriminator],
                    }),
                  e.isPomelo() &&
                    (0, s.jsxs)("span", {
                      className: j.discrim,
                      children: ["(", a, ")"],
                    }),
                ],
              }),
            ],
          });
        }
        constructor(...e) {
          super(...e),
            Z(this, "handleShowModal", () => {
              let {
                guild: e,
                user: t,
                hideDiscriminator: n,
                ban: a,
              } = this.props;
              (0, d.openModal)((i) =>
                (0, s.jsx)(b, {
                  ...i,
                  guild: e,
                  user: t,
                  ban: a,
                  hideDiscriminator: n,
                }),
              );
            }),
            Z(this, "handleContextMenu", (e) => {
              (0, u.jW)(e, async () => {
                let { default: e } = await n.e("23835").then(n.bind(n, 768079));
                return (t) => (0, s.jsx)(e, { ...t, user: this.props.user });
              });
            });
        }
      }
      let G = a.forwardRef(function (e, t) {
        let { guild: n, sortedBans: i, bans: r } = e,
          l = (0, c.e7)([C.Z], () => C.Z.hidePersonalInformation, []),
          o = a.useCallback(
            (e) => {
              var t;
              if (null == r && 0 === e) return 60;
              let n = i[e],
                s =
                  null == r
                    ? void 0
                    : r.get(
                        null !== (t = null == n ? void 0 : n.id) && void 0 !== t
                          ? t
                          : "",
                      );
              return null == n || null == s ? 0 : 60;
            },
            [r, i],
          ),
          u = a.useCallback(
            (e) => {
              var t;
              if (null == r && 0 === e)
                return (0, s.jsx)(
                  d.Spinner,
                  {
                    className: j.spinner,
                    type: d.Spinner.Type.SPINNING_CIRCLE,
                  },
                  "spinner",
                );
              let a = i[e],
                o =
                  null == r
                    ? void 0
                    : r.get(
                        null !== (t = null == a ? void 0 : a.id) && void 0 !== t
                          ? t
                          : "",
                      );
              if (null != a && null != o)
                return (0, s.jsx)(
                  U,
                  { user: a, ban: o, hideDiscriminator: l, guild: n },
                  a.id,
                );
            },
            [r, n, i, l],
          );
        return (0, s.jsx)(g.Z, {
          role: "listbox",
          listPadding: [8, 8, 8, 8],
          rowCount: i.length,
          rowHeight: o,
          renderRow: u,
          ref: t,
        });
      });
      function P(e) {
        let { guildId: t, storedSearchQuery: n } = e,
          [i, r] = a.useState(null != n ? n : ""),
          [l, o] = a.useState(!1),
          c = a.useCallback(() => {
            f.Z.setSection(D.pNK.SAFETY), (0, A.K)(M.u.DM_AND_SPAM_PROTECTION);
          }, []),
          u = a.useCallback((e) => {
            r(e), 0 === e.trim().length && f.Z.setSearchQuery(e);
          }, []),
          I = a.useCallback(() => {
            r(""), f.Z.setSearchQuery("");
          }, []),
          E = a.useCallback(async () => {
            if (0 === i.trim().length) {
              f.Z.setSearchQuery(i), o(!1);
              return;
            }
            if (!l)
              try {
                o(!0);
                let [e, n] = (0, h.C)(i),
                  s = e[0];
                f.Z.setSearchQuery(i),
                  await _.Z.searchGuildBans(t, s, n),
                  o(!1);
              } catch (e) {
                o(!1);
              }
          }, [t, l, i]),
          T = a.useCallback(
            (e) => {
              "Enter" === e.key &&
                (e.preventDefault(), e.stopPropagation(), E());
            },
            [E],
          );
        return (0, s.jsxs)(
          d.FormSection,
          {
            tag: d.FormTitleTags.H1,
            title: v.Z.Messages.BANS_HEADER_NEW,
            children: [
              (0, s.jsx)("div", {
                className: j.settingsHeader,
                children: (0, s.jsx)(d.FormText, {
                  type: d.FormTextTypes.DESCRIPTION,
                  className: j.description,
                  children: v.Z.Messages.BANS_HINT.format({
                    onModerationClick: c,
                  }),
                }),
              }),
              (0, s.jsxs)("div", {
                className: j.bansSearchContainer,
                children: [
                  (0, s.jsx)(d.SearchBar, {
                    className: j.searchBar,
                    query: null != i ? i : "",
                    placeholder: v.Z.Messages.BANS_SEARCH_PLACEHOLDER_NEW,
                    "aria-label": v.Z.Messages.BANS_SEARCH_PLACEHOLDER_NEW,
                    onChange: u,
                    onKeyDown: T,
                    onClear: I,
                    size: d.SearchBar.Sizes.MEDIUM,
                    isLoading: l,
                  }),
                  (0, s.jsx)(d.Button, {
                    color: d.Button.Colors.BRAND,
                    onClick: E,
                    size: d.Button.Sizes.SMALL,
                    disabled: l,
                    submitting: l,
                    className: j.searchButton,
                    children: v.Z.Messages.SEARCH,
                  }),
                ],
              }),
            ],
          },
          "bans-header",
        );
      }
      function B() {
        var e, t;
        let { guild: i, searchQuery: u } = (0, c.e7)(
            [O.Z],
            () => O.Z.getProps(),
            [],
            l.isEqual,
          ),
          I = null != u && u.trim().length > 0,
          m = (0, E.Z)(I),
          N = I !== m,
          [S] = (0, c.e7)([O.Z], () => O.Z.getBans(), [], R.Q),
          g =
            null !== (e = null == S ? void 0 : S.size) && void 0 !== e ? e : 0,
          C = (0, T.ZP)(),
          p =
            null !== (t = null == i ? void 0 : i.id) && void 0 !== t
              ? t
              : D.lds,
          L = a.useRef(null),
          f = a.useCallback(
            (e) =>
              null == e || 0 === e.length
                ? (e) => null != e
                : (t) => {
                    if (null == t || 0 === e.trim().length) return !1;
                    let [[n], s] = (0, h.C)(e);
                    return (
                      !!s.includes(t.id) ||
                      (null != n &&
                        (!!(
                          t.username.toLowerCase().includes(n.toLowerCase()) ||
                          (null != t.globalName &&
                            t.globalName
                              .toLowerCase()
                              .includes(n.toLowerCase()))
                        ) ||
                          !1))
                    );
                  },
            [],
          ),
          A = a.useCallback(
            (e, t, n) => {
              if (null == e || 0 === n) return [];
              let s = [];
              for (let n of e.keys()) {
                let e = x.default.getUser(n);
                null != e && f(t)(e) && s.push(e);
              }
              return s;
            },
            [f],
          ),
          M = a.useMemo(() => A(S, u, g), [S, A, u, g]),
          Z = null != S,
          b = M.length % 1e3 == 0 && M.length > 0 && Z,
          U = 0 === M.length,
          [B, y] = a.useState({ currentPage: 1, pageSize: 100 });
        a.useEffect(() => {
          N && 1 !== B.currentPage && y((e) => ({ ...e, currentPage: 1 }));
        }, [N, B.currentPage]);
        let F = a.useCallback(
            (e) => {
              _.Z.fetchGuildBansBatch(p, 1e3, e);
            },
            [p],
          ),
          k = a.useMemo(() => o().chunk(M, B.pageSize), [B.pageSize, M]),
          w = a.useCallback(
            (e) => {
              var t, n, s;
              if (
                (null === (t = L.current) ||
                  void 0 === t ||
                  t.scrollToSectionTop(0),
                (e + 1) * B.pageSize > M.length &&
                  b &&
                  !I &&
                  ((H.current =
                    null !==
                      (s =
                        null === (n = M[M.length - 1]) || void 0 === n
                          ? void 0
                          : n.id) && void 0 !== s
                      ? s
                      : null),
                  F(H.current)),
                null != k[e - 1] || !!b)
              )
                y((t) => ({ ...t, currentPage: e }));
            },
            [B.pageSize, M, b, k, F, I],
          ),
          H = a.useRef(null);
        a.useEffect(() => {
          F(H.current);
        }, [F]);
        let V = a.useMemo(() => {
          var e;
          return null !== (e = k[B.currentPage - 1]) && void 0 !== e ? e : [];
        }, [k, B.currentPage]);
        return null == i
          ? null
          : (0, s.jsxs)("div", {
              className: r()(j.container),
              children: [
                (0, s.jsx)(P, { guildId: p, storedSearchQuery: u }),
                (0, s.jsxs)("div", {
                  className: r()(j.scrollerContainer),
                  children: [
                    !U &&
                      (0, s.jsx)(G, {
                        guild: i,
                        bans: S,
                        sortedBans: V,
                        ref: L,
                      }),
                    !b &&
                      U &&
                      (0, s.jsxs)(d.EmptyState, {
                        theme: C,
                        className: j.emptyState,
                        children: [
                          (0, s.jsx)(d.EmptyStateImage, {
                            darkSrc: n(532747),
                            lightSrc: n(433466),
                            width: 256,
                            height: 212,
                          }),
                          (0, s.jsx)(d.EmptyStateText, {
                            note: v.Z.Messages.BANS_NO_USERS_BANNED,
                            style: { maxWidth: 300 },
                            children: v.Z.Messages.NO_BANS,
                          }),
                        ],
                      }),
                  ],
                }),
                (0, s.jsx)("div", {
                  className: r()(j.__invalid_paginationContainer),
                  children: (0, s.jsx)(d.Paginator, {
                    className: r()(j.paginationInput),
                    totalCount: M.length + (b ? B.pageSize : 0),
                    pageSize: B.pageSize,
                    currentPage: B.currentPage,
                    onPageChange: w,
                    maxVisiblePages: 9,
                  }),
                }),
              ],
            });
      }
    },
    787561: function (e, t, n) {
      "use strict";
      n.d(t, {
        X: function () {
          return M;
        },
      }),
        n(47120),
        n(653041);
      var s = n(735250),
        a = n(470079),
        i = n(120356),
        r = n.n(i),
        l = n(442837),
        o = n(544891),
        c = n(433517),
        d = n(481060),
        u = n(852860),
        _ = n(933557),
        I = n(769654),
        E = n(984933),
        T = n(650774),
        m = n(430824),
        N = n(496675),
        S = n(699516),
        g = n(594174),
        h = n(434404),
        C = n(999382),
        x = n(54842),
        p = n(981631),
        R = n(731455),
        L = n(689938),
        f = n(105459),
        O = n(922905);
      let A = "dismissedCommunityFeaturesUpsell",
        M = () => {
          let e;
          let {
              guild: t,
              submitting: n,
              errors: a,
            } = (0, l.cj)([C.Z], () => ({
              submitting: C.Z.isSubmitting(),
              guild: C.Z.getGuild(),
              errors: C.Z.getErrors(),
            })),
            i = Object.keys(a),
            r = i.length > 0 ? i[0] : null;
          if ("rules_channel_id" === r)
            e = L.Z.Messages.GUILD_RULES_INVALID_CHANNEL;
          else e = null != r ? a[r] : void 0;
          return (0, s.jsx)(u.Z, {
            submitting: n,
            onReset: () => {
              if (null != t) h.Z.init(t.id);
            },
            onSave: () => {
              if (null != t)
                h.Z.saveGuild(t.id, {
                  rulesChannelId: t.rulesChannelId,
                  preferredLocale: t.preferredLocale,
                  safetyAlertsChannelId: t.safetyAlertsChannelId,
                  publicUpdatesChannelId: t.publicUpdatesChannelId,
                  description: t.description,
                  features: t.features,
                });
            },
            errorMessage: e,
          });
        },
        D = (e) => {
          let { discoveryEnabled: t, onboardingEnabled: n, guild: i } = e,
            [r, u] = a.useState(!0 === c.K.get(A)),
            _ = (0, l.e7)([T.Z], () => {
              var e;
              return null !== (e = T.Z.getMemberCount(i.id)) && void 0 !== e
                ? e
                : 0;
            }),
            [E, N] = a.useState(!1);
          a.useEffect(() => {
            o.tn
              .get(p.ANM.GUILD_ADMIN_SERVER_ELIGIBILITY(i.id))
              .then((e) => {
                N(e.body.eligible_for_admin_server);
              })
              .catch(() => N(!1));
          }, []);
          let S = (0, l.e7)([m.Z], () => m.Z.getGuild("942897714956472401")),
            g = i.isCommunity() && _ >= 1e3 && E && !(null != S);
          if (t && n && !g) return null;
          let C = async () => {
            try {
              let e = await o.tn.post({
                url: p.ANM.JOIN_ADMIN_SERVER(i.id),
                oldFormErrors: !0,
              });
              h.Z.close(), (0, I.X)(e.body.id);
            } catch {}
          };
          return r && !g
            ? null
            : (0, s.jsxs)("div", {
                className: f.upsellContainer,
                children: [
                  (0, s.jsxs)("div", {
                    className: f.upsellContent,
                    children: [
                      (0, s.jsx)("img", {
                        src: O,
                        alt: "",
                        width: 60,
                        className: f.upsellImage,
                      }),
                      (0, s.jsxs)("div", {
                        children: [
                          (0, s.jsx)(d.Heading, {
                            variant: "heading-md/semibold",
                            className: f.upsellHeader,
                            children:
                              L.Z.Messages
                                .GUILD_SETTINGS_COMMUNITY_UPSELL_HEADER,
                          }),
                          (0, s.jsx)(d.Text, {
                            variant: "text-sm/normal",
                            children:
                              L.Z.Messages.GUILD_SETTINGS_COMMUNITY_UPSELL_BODY,
                          }),
                        ],
                      }),
                    ],
                  }),
                  (0, s.jsx)(d.Button, {
                    "aria-label": L.Z.Messages.CLOSE,
                    look: d.Button.Looks.BLANK,
                    size: d.Button.Sizes.NONE,
                    className: f.upsellClose,
                    onClick: () => {
                      c.K.set(A, !0), u(!0);
                    },
                    children: (0, s.jsx)(d.XSmallIcon, {
                      size: "md",
                      color: "currentColor",
                    }),
                  }),
                  (0, s.jsxs)("div", {
                    className: f.upsellFooter,
                    children: [
                      g &&
                        (0, s.jsx)(d.Button, {
                          size: d.Button.Sizes.SMALL,
                          onClick: C,
                          className: f.upsellButton,
                          children:
                            L.Z.Messages
                              .GUILD_SETTINGS_COMMUNITY_UPSELL_BUTTON_ADMIN_SERVER,
                        }),
                      n
                        ? null
                        : (0, s.jsx)(d.Button, {
                            size: d.Button.Sizes.SMALL,
                            onClick: () => {
                              h.Z.setSection(p.pNK.ONBOARDING);
                            },
                            className: f.upsellButton,
                            children:
                              L.Z.Messages
                                .GUILD_SETTINGS_COMMUNITY_UPSELL_BUTTON_ONBOARDING,
                          }),
                      t
                        ? null
                        : (0, s.jsx)(d.Button, {
                            size: d.Button.Sizes.SMALL,
                            onClick: () => {
                              h.Z.setSection(p.pNK.DISCOVERY);
                            },
                            className: f.upsellButton,
                            color: d.Button.Colors.PRIMARY,
                            children:
                              L.Z.Messages
                                .GUILD_SETTINGS_COMMUNITY_UPSELL_BUTTON_DISCOVERY,
                          }),
                      (0, s.jsx)(d.Button, {
                        size: d.Button.Sizes.SMALL,
                        onClick: () => {
                          h.Z.setSection(p.pNK.ANALYTICS);
                        },
                        className: f.upsellButton,
                        color: d.Button.Colors.PRIMARY,
                        children:
                          L.Z.Messages
                            .GUILD_SETTINGS_COMMUNITY_UPSELL_BUTTON_ANALYTICS,
                      }),
                    ],
                  }),
                ],
              });
        },
        v = () => {
          let e = (0, l.e7)([C.Z], () => C.Z.getGuild()),
            { canManageGuild: t, isGuildAdmin: n } = (0, l.cj)([N.Z], () => ({
              canManageGuild: N.Z.can(p.Plq.MANAGE_GUILD, e),
              isGuildAdmin: N.Z.can(p.Plq.ADMINISTRATOR, e),
            })),
            i = (0, l.e7)([E.ZP], () =>
              null != e ? E.ZP.getChannels(e.id) : null,
            ),
            o = a.useMemo(R.jb, []),
            u = !0 !== c.K.get(A);
          if (null == e) return null;
          let I = [];
          null != i &&
            i[E.sH].forEach((e) => {
              let { channel: t } = e;
              t.type === p.d4z.GUILD_TEXT &&
                I.push({
                  value: t.id,
                  label: (0, _.F6)(t, g.default, S.Z, !0),
                });
            });
          let T = () => {
              h.Z.init(e.id), h.Z.open(e.id, p.pNK.MEMBER_VERIFICATION);
            },
            m = () => {
              if (null == e) return;
              let t = new Set(e.features);
              t.delete(p.oNc.COMMUNITY),
                t.delete(p.oNc.DISCOVERABLE),
                !e.hasFeature(p.oNc.CLAN) &&
                  t.delete(p.oNc.MEMBER_VERIFICATION_GATE_ENABLED),
                t.delete(p.oNc.PREVIEW_ENABLED),
                h.Z.updateGuild({
                  features: t,
                  rulesChannelId: null,
                  publicUpdatesChannelId: null,
                });
            },
            x = (e) => {
              h.Z.updateGuild({ rulesChannelId: e });
            },
            O = (e) => {
              h.Z.updateGuild({ safetyAlertsChannelId: e });
            },
            M = (e) => {
              h.Z.updateGuild({ publicUpdatesChannelId: e });
            },
            v = (e) => {
              h.Z.updateGuild({ preferredLocale: e });
            },
            j = (e) => {
              h.Z.updateGuild({ description: e });
            },
            Z = () => {
              e.features.has(p.oNc.DISCOVERABLE) &&
              e.features.has(p.oNc.PARTNERED)
                ? (0, d.openModal)((e) =>
                    (0, s.jsx)(d.ConfirmModal, {
                      ...e,
                      header:
                        L.Z.Messages
                          .GUILD_SETTINGS_COMMUNITY_DISABLE_PUBLIC_CONFIRM_DEFAULT_TITLE,
                      confirmText: L.Z.Messages.CONFIRM,
                      cancelText: L.Z.Messages.NEVERMIND,
                      onConfirm: m,
                      children: (0, s.jsx)(d.Text, {
                        variant: "text-sm/normal",
                        children:
                          L.Z.Messages
                            .GUILD_SETTINGS_PARTNER_AND_DISCOVERY_DISABLE_PUBLIC_CONFIRM_TEXT,
                      }),
                    }),
                  )
                : e.features.has(p.oNc.DISCOVERABLE)
                  ? (0, d.openModal)((e) =>
                      (0, s.jsx)(d.ConfirmModal, {
                        ...e,
                        header:
                          L.Z.Messages
                            .GUILD_SETTINGS_COMMUNITY_DISABLE_PUBLIC_CONFIRM_DEFAULT_TITLE,
                        confirmText: L.Z.Messages.CONFIRM,
                        cancelText: L.Z.Messages.NEVERMIND,
                        onConfirm: m,
                        children: (0, s.jsx)(d.Text, {
                          variant: "text-sm/normal",
                          children:
                            L.Z.Messages
                              .GUILD_SETTINGS_DISCOVERY_DISABLE_PUBLIC_CONFIRM_TEXT,
                        }),
                      }),
                    )
                  : e.features.has(p.oNc.PARTNERED)
                    ? (0, d.openModal)((e) =>
                        (0, s.jsx)(d.ConfirmModal, {
                          ...e,
                          header:
                            L.Z.Messages
                              .GUILD_SETTINGS_COMMUNITY_DISABLE_PUBLIC_CONFIRM_DEFAULT_TITLE,
                          confirmText: L.Z.Messages.CONFIRM,
                          cancelText: L.Z.Messages.NEVERMIND,
                          onConfirm: m,
                          children: (0, s.jsx)(d.Text, {
                            variant: "text-sm/normal",
                            children:
                              L.Z.Messages
                                .GUILD_SETTINGS_PARTNER_DISABLE_PUBLIC_CONFIRM_TEXT,
                          }),
                        }),
                      )
                    : e.features.has(p.oNc.MEMBER_VERIFICATION_GATE_ENABLED) &&
                        !e.features.has(p.oNc.CLAN)
                      ? (0, d.openModal)((e) =>
                          (0, s.jsx)(d.ConfirmModal, {
                            ...e,
                            header:
                              L.Z.Messages
                                .GUILD_SETTINGS_COMMUNITY_DISABLE_PUBLIC_CONFIRM_DEFAULT_TITLE,
                            confirmButtonColor: d.Button.Colors.BRAND,
                            confirmText:
                              L.Z.Messages
                                .GUILD_SETTINGS_COMMUNITY_DISABLE_MEMBER_VERIFICATION_CONFIRM,
                            cancelText: L.Z.Messages.NEVERMIND,
                            onConfirm: T,
                            children: (0, s.jsx)(d.Text, {
                              variant: "text-sm/normal",
                              children:
                                L.Z.Messages
                                  .GUILD_SETTINGS_COMMUNITY_DISABLE_MEMBER_VERIFICATION,
                            }),
                          }),
                        )
                      : m();
            };
          return (0, s.jsxs)(d.FormSection, {
            title: L.Z.Messages.GUILD_SETTINGS_COMMUNITY,
            tag: d.FormTitleTags.H1,
            children: [
              u
                ? (0, s.jsx)(D, {
                    discoveryEnabled: e.features.has(p.oNc.DISCOVERABLE),
                    onboardingEnabled: e.features.has(p.oNc.GUILD_ONBOARDING),
                    guild: e,
                  })
                : null,
              (0, s.jsxs)(d.FormSection, {
                className: r()(f.twoColumnFormSection, f.firstSection),
                children: [
                  (0, s.jsxs)("div", {
                    className: f.descriptionColumn,
                    children: [
                      (0, s.jsx)(d.FormTitle, {
                        className: f.formTitle,
                        children:
                          L.Z.Messages.FORM_LABEL_DISCOVERY_RULES_CHANNEL,
                      }),
                      (0, s.jsx)(d.FormText, {
                        type: d.FormTextTypes.DESCRIPTION,
                        className: f.__invalid_formDescription,
                        children:
                          L.Z.Messages
                            .GUILD_SETTINGS_COMMUNITY_RULES_CHANNEL_HELP,
                      }),
                    ],
                  }),
                  (0, s.jsx)("div", {
                    className: f.selectColumn,
                    children: (0, s.jsx)(d.SearchableSelect, {
                      value: e.rulesChannelId,
                      options: I,
                      onChange: x,
                      isDisabled: !t,
                    }),
                  }),
                ],
              }),
              (0, s.jsx)(d.FormDivider, { className: f.divider }),
              (0, s.jsxs)(d.FormSection, {
                className: r()(f.twoColumnFormSection, f.firstSection),
                children: [
                  (0, s.jsxs)("div", {
                    className: f.descriptionColumn,
                    children: [
                      (0, s.jsx)(d.FormTitle, {
                        className: f.formTitle,
                        children:
                          L.Z.Messages
                            .GUILD_SETTINGS_COMMUNITY_MOD_CHANNEL_TITLE,
                      }),
                      (0, s.jsx)(d.FormText, {
                        type: d.FormTextTypes.DESCRIPTION,
                        className: f.__invalid_formDescription,
                        children:
                          L.Z.Messages
                            .GUILD_SETTINGS_COMMUNITY_MOD_CHANNEL_HELP,
                      }),
                    ],
                  }),
                  (0, s.jsx)("div", {
                    className: f.selectColumn,
                    children: (0, s.jsx)(d.SearchableSelect, {
                      value: e.publicUpdatesChannelId,
                      options: I,
                      onChange: M,
                      isDisabled: !n,
                    }),
                  }),
                ],
              }),
              (0, s.jsx)(d.FormDivider, { className: f.divider }),
              (0, s.jsxs)(d.FormSection, {
                className: r()(f.twoColumnFormSection, f.firstSection),
                children: [
                  (0, s.jsxs)("div", {
                    className: f.descriptionColumn,
                    children: [
                      (0, s.jsx)(d.FormTitle, {
                        className: f.formTitle,
                        children:
                          L.Z.Messages.GUILD_ANTIRAID_SAFETY_CHANNEL_TITLE,
                      }),
                      (0, s.jsx)(d.FormText, {
                        type: d.FormTextTypes.DESCRIPTION,
                        className: f.__invalid_formDescription,
                        children:
                          L.Z.Messages
                            .GUILD_ANTIRAID_SAFETY_CHANNEL_DESCRIPTION,
                      }),
                    ],
                  }),
                  (0, s.jsx)("div", {
                    className: f.selectColumn,
                    children: (0, s.jsx)(d.SearchableSelect, {
                      value: e.safetyAlertsChannelId,
                      options: I,
                      onChange: O,
                      isDisabled: !t,
                    }),
                  }),
                ],
              }),
              (0, s.jsx)(d.FormDivider, { className: f.divider }),
              (0, s.jsxs)(d.FormSection, {
                className: f.twoColumnFormSection,
                children: [
                  (0, s.jsxs)("div", {
                    className: f.descriptionColumn,
                    children: [
                      (0, s.jsx)(d.FormTitle, {
                        className: f.formTitle,
                        children: L.Z.Messages.FORM_LABEL_SERVER_LANGUAGE,
                      }),
                      (0, s.jsx)(d.FormText, {
                        type: d.FormTextTypes.DESCRIPTION,
                        className: f.__invalid_formDescription,
                        children:
                          L.Z.Messages.GUILD_SETTINGS_COMMUNITY_LOCALE_HELP,
                      }),
                    ],
                  }),
                  (0, s.jsx)("div", {
                    className: f.selectColumn,
                    children: (0, s.jsx)(d.SearchableSelect, {
                      value: e.preferredLocale,
                      options: o,
                      onChange: v,
                      isDisabled: !t,
                    }),
                  }),
                ],
              }),
              (0, s.jsx)(d.FormDivider, { className: f.divider }),
              (() => {
                var n;
                if (null != e)
                  return (0, s.jsxs)(d.FormSection, {
                    children: [
                      (0, s.jsx)(d.FormTitle, {
                        className: f.formTitle,
                        children: L.Z.Messages.FORM_LABEL_SERVER_DESCRIPTION,
                      }),
                      (0, s.jsx)(d.FormText, {
                        className: f.description,
                        type: d.FormTextTypes.DESCRIPTION,
                        children: L.Z.Messages.FORM_HELP_SERVER_DESCRIPTION,
                      }),
                      (0, s.jsx)(d.TextArea, {
                        value:
                          null !== (n = e.description) && void 0 !== n ? n : "",
                        placeholder: L.Z.Messages.SERVER_DESCIPTION_EMPTY,
                        onChange: j,
                        maxLength: 120,
                        disabled: !t,
                      }),
                    ],
                  });
              })(),
              (0, s.jsx)(d.FormDivider, { className: f.divider }),
              (0, s.jsxs)(d.FormSection, {
                className: f.twoColumnFormSection,
                children: [
                  (0, s.jsxs)("div", {
                    className: f.descriptionColumn,
                    children: [
                      (0, s.jsx)(d.FormTitle, {
                        className: f.formTitle,
                        children:
                          L.Z.Messages
                            .GUILD_SETTINGS_COMMUNITY_DISABLE_COMMUNITY,
                      }),
                      (0, s.jsx)(d.FormText, {
                        type: d.FormTextTypes.DESCRIPTION,
                        className: f.__invalid_formDescription,
                        children:
                          L.Z.Messages
                            .GUILD_SETTINGS_COMMUNITY_DISABLE_COMMUNITY_DESCRIPTION,
                      }),
                    ],
                  }),
                  (0, s.jsx)(d.Tooltip, {
                    text: n
                      ? null
                      : L.Z.Messages
                          .GUILD_SETTINGS_COMMUNITY_ADMINISTRATOR_ONLY,
                    "aria-label": n
                      ? void 0
                      : L.Z.Messages
                          .GUILD_SETTINGS_COMMUNITY_ADMINISTRATOR_ONLY,
                    children: (e) =>
                      (0, s.jsx)(d.Button, {
                        size: d.Button.Sizes.SMALL,
                        onClick: Z,
                        color: d.Button.Colors.RED,
                        disabled: !n,
                        ...e,
                        children:
                          L.Z.Messages
                            .GUILD_SETTINGS_COMMUNITY_DISABLE_COMMUNITY,
                      }),
                  }),
                ],
              }),
            ],
          });
        };
      t.Z = () => {
        let e = (0, l.e7)([C.Z], () => C.Z.getGuild());
        return null == e
          ? null
          : e.features.has(p.oNc.COMMUNITY)
            ? (0, s.jsx)(v, {})
            : (0, s.jsx)(x.Z, { guild: e });
      };
    },
    54842: function (e, t, n) {
      "use strict";
      n(47120);
      var s = n(735250),
        a = n(470079),
        i = n(120356),
        r = n.n(i),
        l = n(442837),
        o = n(692547),
        c = n(481060),
        d = n(142497),
        u = n(338327),
        _ = n(496675),
        I = n(63063),
        E = n(981631),
        T = n(190378),
        m = n(689938),
        N = n(333913),
        S = n(438825),
        g = n(236140),
        h = n(37069),
        C = n(518513),
        x = n(168179),
        p = n(348986),
        R = n(930065),
        L = n(345669);
      let f = () => [
          {
            icon: c.AnalyticsIcon,
            color: o.Z.unsafe_rawColors.GREEN_360.css,
            header:
              m.Z.Messages
                .GUILD_SETTINGS_COMMUNITY_INTRO_UPSELL_DISCOVERY_HEADER,
            body: m.Z.Messages.GUILD_SETTINGS_COMMUNITY_INTRO_UPSELL_DISCOVERY_BODY.format(
              {
                featureHook: (e, t) =>
                  (0, s.jsx)(
                    "strong",
                    { className: N.featuredText, children: e },
                    t,
                  ),
              },
            ),
          },
          {
            icon: c.AnalyticsIcon,
            color: o.Z.unsafe_rawColors.PARTNER.css,
            header:
              m.Z.Messages
                .GUILD_SETTINGS_COMMUNITY_INTRO_UPSELL_ANALYTICS_HEADER,
            body: m.Z.Messages.GUILD_SETTINGS_COMMUNITY_INTRO_UPSELL_ANALYTICS_BODY.format(
              {
                infoHook: () =>
                  (0, s.jsx)(c.Tooltip, {
                    text: m.Z.Messages
                      .GUILD_SETTINGS_COMMUNITY_INTRO_UPSELL_ANALYTICS_TOOLTIP,
                    "aria-label":
                      m.Z.Messages
                        .GUILD_SETTINGS_COMMUNITY_INTRO_UPSELL_ANALYTICS_TOOLTIP,
                    children: (e) =>
                      (0, s.jsx)(c.CircleInformationIcon, {
                        size: "xs",
                        color: "currentColor",
                        className: N.infoIcon,
                        ...e,
                      }),
                  }),
                featureHook: (e, t) =>
                  (0, s.jsx)(
                    "strong",
                    { className: N.featuredText, children: e },
                    t,
                  ),
              },
            ),
          },
          {
            icon: c.CircleInformationIcon,
            color: o.Z.unsafe_rawColors.RED_360.css,
            header:
              m.Z.Messages
                .GUILD_SETTINGS_COMMUNITY_INTRO_UPSELL_STAY_INFORMED_HEADER,
            body: m.Z.Messages
              .GUILD_SETTINGS_COMMUNITY_INTRO_UPSELL_STAY_INFORMED_BODY,
          },
        ],
        O = [
          { iconSrc: p, name: "Pokemon GO Paris", position: [-230, -100] },
          {
            iconSrc: R,
            name: "Python",
            position: [-180, -100],
            faded: !0,
            rightAlign: !0,
          },
          { iconSrc: C, name: "Learn Latin", position: [-280, -30], faded: !0 },
          {
            iconSrc: x,
            name: "r/leagueoflegends",
            position: [-320, -30],
            rightAlign: !0,
          },
          { iconSrc: L, name: "Sneaker Fans", position: [-250, 40] },
          {
            iconSrc: h,
            name: "Hogwarts School",
            position: [-270, 40],
            faded: !0,
            rightAlign: !0,
          },
        ],
        A = (e) => {
          let { icon: t, color: n, size: a = 24, header: i, body: r } = e;
          return (0, s.jsxs)("div", {
            className: N.featureCard,
            children: [
              (0, s.jsx)("div", {
                className: N.featureIcon,
                children: (0, s.jsx)(t, {
                  color: null != n ? n : "currentColor",
                  width: a,
                  height: a,
                  size: "custom",
                }),
              }),
              (0, s.jsx)(c.Heading, {
                variant: "heading-md/semibold",
                className: N.featureHeader,
                children: i,
              }),
              (0, s.jsx)(c.Text, {
                color: "header-secondary",
                variant: "text-sm/normal",
                children: r,
              }),
            ],
          });
        },
        M = (e) => {
          let {
              iconSrc: t,
              name: n,
              position: a,
              faded: i,
              rightAlign: l,
              imageCoordinates: o,
            } = e,
            d = { [l ? "right" : "left"]: o[0] + a[0], top: o[1] + a[1] };
          return (0, s.jsxs)("div", {
            className: r()(N.guildDetails, { [N.faded]: i }),
            style: d,
            children: [
              (0, s.jsx)("div", {
                className: N.guildIcon,
                children: (0, s.jsx)("img", {
                  alt: "",
                  src: t,
                  width: 24,
                  height: 24,
                }),
              }),
              (0, s.jsx)(c.Heading, {
                variant: "heading-deprecated-12/semibold",
                children: n,
              }),
            ],
          });
        };
      t.Z = (e) => {
        let { guild: t } = e,
          [n, i] = a.useState(0),
          [r, o] = a.useState(0),
          [h, C] = a.useState(),
          x = (0, l.e7)([_.Z], () => _.Z.can(E.Plq.ADMINISTRATOR, t)),
          p = null == h ? void 0 : h.offsetWidth,
          R = null == h ? void 0 : h.offsetHeight;
        a.useEffect(() => {
          null != p && i(p / 2), null != R && o(R / 2);
        }, [p, R, i, o]),
          a.useEffect(() => {
            (0, d.Kw)(T.v.GUILD_SETTINGS_COMMUNITY_GUILD_UPSELL);
          }, []);
        let L = () => {
          u.Z.open();
        };
        return (0, s.jsxs)("div", {
          className: N.container,
          children: [
            (0, s.jsxs)("div", {
              className: N.banner,
              ref: (e) => C(e),
              children: [
                O.map((e) =>
                  (0, s.jsx)(M, { ...e, imageCoordinates: [n, r] }, e.name),
                ),
                (0, s.jsx)("img", {
                  alt: "",
                  src: S,
                  className: N.image,
                  width: 256,
                }),
                (0, s.jsx)("img", { alt: "", src: g, className: N.sparkles }),
              ],
            }),
            (0, s.jsx)(c.Heading, {
              variant: "heading-xl/semibold",
              children: m.Z.Messages.GUILD_SETTINGS_COMMUNITY_INTRO_HEADER,
            }),
            (0, s.jsx)(c.Text, {
              color: "header-secondary",
              variant: "text-md/normal",
              className: N.body,
              children:
                m.Z.Messages.GUILD_SETTINGS_COMMUNITY_INTRO_BODY_WITH_HELP_ARTICLE.format(
                  {
                    helpdeskArticle: I.Z.getArticleURL(
                      E.BhN.FRIEND_COMMUNITY_DISCOVERABLE_GUILD_TYPES,
                    ),
                  },
                ),
            }),
            (0, s.jsx)(c.Tooltip, {
              text: x
                ? null
                : m.Z.Messages.GUILD_SETTINGS_COMMUNITY_ADMINISTRATOR_ONLY,
              "aria-label": x
                ? void 0
                : m.Z.Messages.GUILD_SETTINGS_COMMUNITY_ADMINISTRATOR_ONLY,
              children: (e) =>
                (0, s.jsx)(c.Button, {
                  onClick: L,
                  className: N.button,
                  disabled: !x,
                  ...e,
                  children: m.Z.Messages.GET_STARTED,
                }),
            }),
            (0, s.jsx)("hr", { className: N.separator }),
            (0, s.jsx)(c.Text, {
              color: "header-secondary",
              variant: "text-sm/normal",
              children: m.Z.Messages.GUILD_SETTINGS_COMMUNITY_INTRO_DETAILS,
            }),
            (0, s.jsx)(c.Text, {
              color: "header-secondary",
              className: N.body,
              variant: "text-sm/normal",
              children:
                m.Z.Messages.GUILD_SETTINGS_COMMUNITY_INTRO_LEARN_MORE.format({
                  helpdeskArticle: I.Z.getArticleURL(
                    E.BhN.GUILD_COMMUNITY_FEATURE,
                  ),
                }),
            }),
            (0, s.jsx)("div", {
              className: N.features,
              children: f().map((e, t) => (0, s.jsx)(A, { ...e }, t)),
            }),
          ],
        });
      };
    },
    579648: function (e, t, n) {
      "use strict";
      n(47120);
      var s,
        a,
        i = n(735250),
        r = n(470079),
        l = n(442837),
        o = n(481060),
        c = n(570140),
        d = n(596454),
        u = n(524329),
        _ = n(823379),
        I = n(999382),
        E = n(413584),
        T = n(689938),
        m = n(469466),
        N = n(84011);
      ((a = s || (s = {}))[(a.LOADING = 0)] = "LOADING"),
        (a[(a.INTRO = 1)] = "INTRO"),
        (a[(a.SETTINGS = 2)] = "SETTINGS");
      let S = (e) => {
        let { setWelcomeView: t, setShowCreateModal: s } = e,
          a = [
            {
              emoji: "\uD83D\uDCAC",
              description:
                T.Z.Messages
                  .GUILD_SETTINGS_PUBLIC_WELCOME_EXAMPLE_CHANNEL_DESCRIPTION_1,
              name: T.Z.Messages
                .GUILD_SETTINGS_PUBLIC_WELCOME_EXAMPLE_CHANNEL_NAME_1,
            },
            {
              emoji: "\uD83C\uDFF9",
              description:
                T.Z.Messages
                  .GUILD_SETTINGS_PUBLIC_WELCOME_EXAMPLE_CHANNEL_DESCRIPTION_2,
              name: T.Z.Messages
                .GUILD_SETTINGS_PUBLIC_WELCOME_EXAMPLE_CHANNEL_NAME_2,
            },
            {
              emoji: "\uD83D\uDDDE",
              description:
                T.Z.Messages
                  .GUILD_SETTINGS_PUBLIC_WELCOME_EXAMPLE_CHANNEL_DESCRIPTION_3,
              name: T.Z.Messages
                .GUILD_SETTINGS_PUBLIC_WELCOME_EXAMPLE_CHANNEL_NAME_3,
            },
          ];
        return (0, i.jsxs)(o.FormSection, {
          title: T.Z.Messages.GUILD_SETTINGS_PUBLIC_WELCOME,
          tag: "h1",
          children: [
            (0, i.jsxs)("div", {
              className: m.welcomeDescription,
              children: [
                (0, i.jsx)(o.Text, {
                  variant: "text-sm/normal",
                  children:
                    T.Z.Messages.GUILD_SETTINGS_PUBLIC_WELCOME_INTRO_TEXT.format(),
                }),
                (0, i.jsx)(o.Button, {
                  onClick: () => {
                    s(!0), t(2);
                  },
                  children:
                    T.Z.Messages.GUILD_SETTINGS_PUBLIC_WELCOME_INTRO_BUTTON,
                }),
              ],
            }),
            (0, i.jsxs)("div", {
              className: m.exampleContainer,
              children: [
                (0, i.jsxs)("div", {
                  className: m.exampleWumpus,
                  children: [
                    (0, i.jsx)("img", {
                      className: m.wumpus,
                      alt: "",
                      src: n(663346),
                    }),
                    (0, i.jsx)("div", { className: m.tooltipPointer }),
                    (0, i.jsx)("div", {
                      className: m.tooltip,
                      children: T.Z.Messages.GUILD_SETTINGS_EXAMPLE_TOOLTIP,
                    }),
                  ],
                }),
                (0, i.jsxs)("div", {
                  className: m.exampleModal,
                  children: [
                    (0, i.jsx)("img", {
                      alt: "",
                      className: N.guildIcon,
                      src: n(691466),
                      width: 64,
                      height: 64,
                    }),
                    (0, i.jsx)(o.Heading, {
                      variant: "heading-xl/semibold",
                      className: m.header,
                      children:
                        T.Z.Messages.GUILD_SETTINGS_PUBLIC_WELCOME_EXAMPLE_TITLE.format(),
                    }),
                    (0, i.jsx)(o.Text, {
                      variant: "text-sm/normal",
                      color: "header-secondary",
                      className: N.guildDescription,
                      children:
                        T.Z.Messages
                          .GUILD_SETTINGS_PUBLIC_WELCOME_EXAMPLE_DESCRIPTION,
                    }),
                    (0, i.jsx)(o.FormTitle, {
                      className: N.choiceHeader,
                      children: T.Z.Messages.WELCOME_SCREEN_CHOICE_HEADER,
                    }),
                    (0, i.jsx)("div", {
                      className: N.options,
                      children: a.map((e) =>
                        (0, i.jsxs)(
                          "div",
                          {
                            className: m.optionContainer,
                            children: [
                              (0, i.jsx)(d.Z, {
                                emojiName: e.emoji,
                                className: N.optionEmoji,
                              }),
                              (0, i.jsxs)("div", {
                                className: N.optionTextContainer,
                                children: [
                                  (0, i.jsx)(o.Text, {
                                    variant: "text-md/semibold",
                                    className: N.channelDescription,
                                    children: e.description,
                                  }),
                                  (0, i.jsx)(o.Text, {
                                    variant: "text-xs/normal",
                                    color: "header-secondary",
                                    children: "#".concat(e.name),
                                  }),
                                ],
                              }),
                            ],
                          },
                          e.name,
                        ),
                      ),
                    }),
                  ],
                }),
              ],
            }),
          ],
        });
      };
      t.Z = () => {
        let { guild: e } = (0, l.e7)([I.Z], () => I.Z.getProps()),
          [t, n] = r.useState(0),
          [s, a] = r.useState(!1);
        switch (
          (r.useEffect(() => {
            null != e &&
              c.Z.wait(() => {
                (0, u.RM)(e.id).then((e) => {
                  n(null == e ? 1 : 2);
                });
              });
          }, [e]),
          t)
        ) {
          case 0:
            return (0, i.jsx)(o.Spinner, {
              type: o.Spinner.Type.SPINNING_CIRCLE,
            });
          case 1:
            return (0, i.jsx)(S, { setWelcomeView: n, setShowCreateModal: a });
          case 2:
            return (0, i.jsx)(E.Z, { guild: e, showCreateModal: s });
          default:
            return (0, _.vE)(t);
        }
      };
    },
    413584: function (e, t, n) {
      "use strict";
      n(47120), n(653041);
      var s = n(735250),
        a = n(470079),
        i = n(120356),
        r = n.n(i),
        l = n(348327),
        o = n.n(l),
        c = n(225857),
        d = n(290843),
        u = n(442837),
        _ = n(481060),
        I = n(239091),
        E = n(596454),
        T = n(607070),
        m = n(933557),
        N = n(471445),
        S = n(339085),
        g = n(565138),
        h = n(372769),
        C = n(621923),
        x = n(690221),
        p = n(524329),
        R = n(575258),
        L = n(514698),
        f = n(592125),
        O = n(4912),
        A = n(626135),
        M = n(700785),
        D = n(434404),
        v = n(92160),
        j = n(981631),
        Z = n(231338),
        b = n(689938),
        U = n(740380);
      let G = "WELCOME_CHANNEL",
        P = (e) => {
          var t;
          let i,
            {
              guildId: l,
              welcomeChannel: o,
              onEdit: T,
              onChannelReorder: g,
              isDropHovered: h,
              index: x,
            } = e,
            [p, R] = a.useState(!1),
            A = a.useRef(null),
            D = (0, u.e7)([f.Z], () => f.Z.getChannel(o.channel_id)),
            v = (0, u.e7)([S.ZP], () =>
              null != o.emoji_id
                ? S.ZP.getUsableCustomEmojiById(o.emoji_id)
                : null,
            ),
            P = null != D && M.Uu(j.Plq.VIEW_CHANNEL, D),
            B = null !== (t = (0, N.KS)(D)) && void 0 !== t ? t : _.TextIcon,
            y = (0, m.ZP)(D, !1),
            { homeSettingsEnabled: F } = (0, C.kZ)(l),
            [, k] = (0, c.c)({
              type: G,
              item: { channel: o, index: x },
              end: (e, t) => {
                null != e && !t.didDrop() && g(e.channel, null, !0);
              },
            }),
            [, w] = (0, d.L)({
              accept: G,
              hover: (e) => {
                g(e.channel, x, !1);
              },
              drop: (e) => {
                g(e.channel, x, !0);
              },
            });
          return (
            a.useLayoutEffect(
              () => (
                k(w(A)),
                () => {
                  k(null), w(null);
                }
              ),
              [k, w],
            ),
            (i = P
              ? null != v || null != o.emoji_name
                ? (0, s.jsx)(E.Z, {
                    emojiId: null == v ? void 0 : v.id,
                    emojiName: null != v ? v.name : o.emoji_name,
                    animated: !!(null == v ? void 0 : v.animated),
                  })
                : (0, s.jsx)(B, {
                    size: "md",
                    color: "currentColor",
                    className: U.channelIcon,
                  })
              : (0, s.jsx)(O.Z, {
                  width: 24,
                  height: 24,
                  className: U.warningIcon,
                })),
            (0, s.jsxs)("div", {
              className: r()(U.welcomeChannel, { [U.dragging]: h }),
              ref: A,
              "data-dnd-name": o.description,
              onContextMenu: (e) => {
                (0, I.jW)(e, async () => {
                  let { default: e } = await n
                    .e("68535")
                    .then(n.bind(n, 602320));
                  return (t) =>
                    (0, s.jsx)(e, {
                      ...t,
                      guildId: l,
                      welcomeChannel: o,
                      onChannelReorder: g,
                      setShowConfirmModal: R,
                      onEdit: T,
                      index: x,
                    });
                });
              },
              children: [
                i,
                (0, s.jsxs)("div", {
                  className: U.channelDescriptionWrapper,
                  children: [
                    (0, s.jsx)(_.Text, {
                      variant: "text-md/semibold",
                      color: "header-primary",
                      children: o.description,
                    }),
                    (0, s.jsxs)(_.Text, {
                      className: P ? void 0 : U.channelWarning,
                      variant: "text-xs/normal",
                      color: "header-secondary",
                      children: [
                        (0, s.jsx)(B, {
                          className: U.channelTitleIcon,
                          size: "xxs",
                          color: "currentColor",
                        }),
                        (0, s.jsx)("span", {
                          children: P
                            ? y
                            : b.Z.Messages
                                .GUILD_SETTINGS_PUBLIC_WELCOME_INVALID_CHANNEL,
                        }),
                      ],
                    }),
                  ],
                }),
                (0, s.jsx)(_.Button, {
                  color: _.Button.Colors.PRIMARY,
                  size: _.Button.Sizes.SMALL,
                  disabled: F,
                  onClick: () =>
                    (0, _.openModalLazy)(
                      async () => {
                        let { default: e } = await n
                          .e("39143")
                          .then(n.bind(n, 737868));
                        return (t) =>
                          (0, s.jsx)(e, {
                            ...t,
                            welcomeChannel: o,
                            guildId: l,
                            onSave: T,
                          });
                      },
                      { onCloseRequest: () => Z.Vq },
                    ),
                  children: b.Z.Messages.EDIT,
                }),
                p &&
                  (0, s.jsx)(L.Z, {
                    onConfirm: () => T(),
                    onCancel: () => R(!1),
                    channelId: o.channel_id,
                  }),
              ],
            })
          );
        };
      t.Z = (e) => {
        var t;
        let { guild: i, showCreateModal: r } = e,
          { welcomeSettings: l, originalWelcomeSettings: c } = (0, u.e7)(
            [R.Z],
            () => R.Z.getSettingsProps(),
          ),
          d = (0, u.e7)([T.Z], () => T.Z.useReducedMotion),
          [I, E] = a.useState(null),
          [m, N] = a.useState(!1),
          [S, L] = a.useState(!1),
          { description: f, channels: M, enabled: G } = l,
          { homeSettingsEnabled: B } = (0, C.kZ)(
            null !== (t = null == i ? void 0 : i.id) && void 0 !== t
              ? t
              : j.lds,
          ),
          y = () => {
            if (null != i)
              f !== c.description &&
                ((0, p.Es)(i.id, {
                  description: null == f ? void 0 : f.trim(),
                }),
                N(!0));
          },
          F = (e) => {
            if (null != i)
              !o()(e, c.channels) && ((0, p.Es)(i.id, { channels: e }), N(!0));
          },
          k = (e) => {
            if (null != i)
              e !== c.enabled &&
                ((0, p.Es)(i.id, { enabled: e }), L(!d), N(!0));
          },
          w = (e) => {
            if (null == e) return;
            let t = [...(null != M ? M : []), e];
            (0, p.VP)({ channels: t }), F(t);
          },
          H = (e) => (t) => {
            let n = [...(null != M ? M : [])];
            null == t ? n.splice(e, 1) : (n[e] = t),
              (0, p.VP)({ channels: n }),
              F(n),
              0 === n.length && G && ((0, p.VP)({ enabled: !1 }), k(!1));
          },
          V = (e, t, n) => {
            if (null == M) return;
            let s = M.indexOf(e),
              a = [...M];
            null != t &&
              t !== s &&
              (a.splice(s, 1), a.splice(t, 0, e), (0, p.VP)({ channels: a })),
              n ? (F(a), E(null)) : E(t);
          },
          Y = a.useRef(!1);
        a.useEffect(
          () => (
            null != i &&
              r &&
              (0, _.openModalLazy)(
                async () => {
                  let { default: e } = await n
                    .e("39143")
                    .then(n.bind(n, 737868));
                  return (t) =>
                    (0, s.jsx)(e, { ...t, guildId: i.id, onSave: w });
                },
                { onCloseRequest: () => Z.Vq },
              ),
            () => {
              Y.current = !0;
            }
          ),
          [],
        ),
          a.useEffect(
            () => () => {
              if (Y.current && m) {
                let e = [],
                  t = [],
                  n = !1;
                null == M ||
                  M.forEach((s) => {
                    e.push(s.description),
                      t.push(s.channel_id),
                      null != s.emoji_id && (n = !0);
                  }),
                  A.default.track(j.rMx.GUILD_WELCOME_SCREEN_SETTINGS_UPDATED, {
                    guild_id: null == i ? void 0 : i.id,
                    options: e,
                    options_channel_ids: t,
                    guild_description: f,
                    has_custom_emojis: n,
                    is_enabled: G,
                  });
              }
            },
            [m, M, f, G, i, Y],
          ),
          a.useEffect(() => () => (0, p.sm)(), []);
        let W = a.useCallback(() => {
          null != i && D.Z.open(i.id, j.pNK.ONBOARDING);
        }, [i]);
        return null == i
          ? null
          : (0, s.jsxs)(_.FormSection, {
              title: b.Z.Messages.GUILD_SETTINGS_PUBLIC_WELCOME,
              tag: _.FormTitleTags.H1,
              children: [
                B &&
                  (0, s.jsx)("div", {
                    className: U.notice,
                    children: (0, s.jsxs)(_.Text, {
                      variant: "text-md/normal",
                      children: [
                        (0, s.jsx)(O.Z, { className: U.noticeIcon }),
                        b.Z.Messages.WELCOME_SCREEN_DEPRECATED.format({
                          onboardingLink: (e) =>
                            (0, s.jsx)(x.Z, { onClick: W, children: e }),
                        }),
                      ],
                    }),
                  }),
                (0, s.jsx)(_.Text, {
                  className: U.__invalid_description,
                  variant: "text-sm/normal",
                  children:
                    b.Z.Messages.GUILD_SETTINGS_PUBLIC_WELCOME_SETTINGS_TEXT,
                }),
                (0, s.jsx)(v.Z, {
                  enabled: G,
                  onPreview:
                    (null == M ? void 0 : M.length) === 0
                      ? void 0
                      : () => {
                          null != i &&
                            (0, _.openModalLazy)(async () => {
                              let { default: e } = await n
                                .e("90542")
                                .then(n.bind(n, 184782));
                              return (t) =>
                                (0, s.jsx)(e, {
                                  ...t,
                                  guildId: i.id,
                                  isPreview: !0,
                                });
                            });
                        },
                  onToggle:
                    G || (null == M ? void 0 : M.length) !== 0
                      ? () => {
                          k(!G);
                        }
                      : void 0,
                  animateStatus: S,
                  firstLine: G
                    ? b.Z.Messages.GUILD_SETTINGS_PUBLIC_WELCOME_ENABLED
                    : b.Z.Messages
                        .GUILD_SETTINGS_PUBLIC_WELCOME_PROGRESS_WILL_SAVE,
                  secondLine: G
                    ? b.Z.Messages
                        .GUILD_SETTINGS_PUBLIC_WELCOME_ENABLED_SECOND_LINE
                    : b.Z.Messages
                        .GUILD_SETTINGS_PUBLIC_WELCOME_ENABLE_REMINDER,
                }),
                (0, s.jsxs)("div", {
                  className: U.previewContainer,
                  children: [
                    (0, s.jsxs)("div", {
                      className: U.welcomeHeader,
                      children: [
                        (0, s.jsx)(g.Z, {
                          size: g.Z.Sizes.LARGER,
                          className: U.icon,
                          guild: i,
                          animate: !0,
                          tabIndex: -1,
                        }),
                        (0, s.jsx)(_.Heading, {
                          className: U.welcomeTitle,
                          variant: "heading-xl/semibold",
                          children: b.Z.Messages.WELCOME_SCREEN_TITLE.format({
                            guildName: i.name,
                            guildNameHook: (e, t) =>
                              (0, s.jsxs)(
                                "span",
                                {
                                  children: [
                                    (0, s.jsx)(h.Z, {
                                      guild: i,
                                      className: U.headerGuildBadge,
                                      flowerStarClassName: U.flowerStar,
                                    }),
                                    (0, s.jsx)("strong", { children: e }),
                                  ],
                                },
                                t,
                              ),
                          }),
                        }),
                        (0, s.jsx)("div", {
                          className: U.descriptionWrapper,
                          children: (0, s.jsx)(_.TextArea, {
                            className: U.descriptionInput,
                            placeholder:
                              b.Z.Messages
                                .GUILD_SETTINGS_PUBLIC_WELCOME_DESCRIPTION_PLACEHOLDER,
                            onChange: (e) => {
                              (0, p.VP)({ description: e });
                            },
                            onBlur: () => {
                              y();
                            },
                            onKeyDown: (e) => {
                              e.keyCode === j.yXg.ENTER && e.preventDefault();
                            },
                            value: f,
                            maxLength: 140,
                            disabled: B,
                          }),
                        }),
                      ],
                    }),
                    (0, s.jsx)(_.FormDivider, { className: U.divider }),
                    (0, s.jsxs)("div", {
                      className: U.welcomeChannels,
                      children: [
                        (0, s.jsx)(_.FormTitle, {
                          children:
                            b.Z.Messages
                              .GUILD_SETTINGS_PUBLIC_WELCOME_RECOMMENDED_CHANNELS_TITLE,
                        }),
                        (0, s.jsx)(_.Text, {
                          variant: "text-sm/normal",
                          className: U.addChannelSubtext,
                          children:
                            b.Z.Messages
                              .GUILD_SETTINGS_PUBLIC_WELCOME_RECOMMENDED_CHANNELS_DESCRIPTION,
                        }),
                        null == M
                          ? void 0
                          : M.map((e, t) =>
                              (0, s.jsx)(
                                P,
                                {
                                  guildId: i.id,
                                  welcomeChannel: e,
                                  onEdit: H(t),
                                  onChannelReorder: V,
                                  isDropHovered: t === I,
                                  index: t,
                                },
                                t,
                              ),
                            ),
                        (null == M || M.length < 5) &&
                          (0, s.jsx)(_.Button, {
                            onClick: () =>
                              (0, _.openModalLazy)(
                                async () => {
                                  let { default: e } = await n
                                    .e("39143")
                                    .then(n.bind(n, 737868));
                                  return (t) =>
                                    (0, s.jsx)(e, {
                                      ...t,
                                      guildId: i.id,
                                      onSave: w,
                                    });
                                },
                                { onCloseRequest: () => Z.Vq },
                              ),
                            className: U.addChannelButton,
                            disabled: B,
                            color: _.Button.Colors.PRIMARY,
                            children:
                              b.Z.Messages
                                .GUILD_SETTINGS_PUBLIC_WELCOME_ADD_RECOMMENDED_CHANNEL,
                          }),
                      ],
                    }),
                  ],
                }),
              ],
            });
      };
    },
    511480: function (e, t, n) {
      "use strict";
      n.d(t, {
        s: function () {
          return H;
        },
      }),
        n(47120),
        n(653041);
      var s = n(735250),
        a = n(470079),
        i = n(772848),
        r = n(442837),
        l = n(481060),
        o = n(852860),
        c = n(558324),
        d = n(933557),
        u = n(719879),
        _ = n(59970),
        I = n(946314),
        E = n(938502),
        T = n(1259),
        m = n(296386),
        N = n(150192),
        S = n(816817),
        g = n(339085),
        h = n(231053),
        C = n(285888),
        x = n(134432),
        p = n(813197),
        R = n(208567),
        L = n(183023),
        f = n(984933),
        O = n(496675),
        A = n(699516),
        M = n(594174),
        D = n(768581),
        v = n(900849),
        j = n(434404),
        Z = n(999382),
        b = n(450474),
        U = n(354051),
        G = n(347604),
        P = n(203377),
        B = n(981631),
        y = n(731455),
        F = n(689938),
        k = n(606217);
      function w(e, t, n) {
        return (
          t in e
            ? Object.defineProperty(e, t, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0,
              })
            : (e[t] = n),
          e
        );
      }
      let H = r.ZP.connectStores([Z.Z], () => {
        let {
          guild: e,
          originalGuild: t,
          submitting: n,
          guildMetadata: s,
        } = Z.Z.getProps();
        return {
          guild: e,
          submitting: n,
          onReset() {
            if (null != e) j.Z.init(e.id);
          },
          onSave() {
            if (null != e)
              (0, E.UA)(e, t),
                j.Z.saveGuild(e.id, {
                  features: e.features,
                  discoverySplash: e.discoverySplash,
                  description: e.description,
                  safetyAlertsChannelId: e.safetyAlertsChannelId,
                  rulesChannelId: e.rulesChannelId,
                  preferredLocale: e.preferredLocale,
                }),
                m.Vv({
                  guildId: e.id,
                  primaryCategoryId: s.primaryCategoryId,
                  keywords: s.keywords,
                  emojiDiscoverabilityEnabled: s.emojiDiscoverabilityEnabled,
                  partnerActionedTimestamp: s.partnerActionedTimestamp,
                  partnerApplicationTimestamp: s.partnerApplicationTimestamp,
                  isPublished: s.isPublished,
                  reasonsToJoin: s.reasonsToJoin,
                  socialLinks: s.socialLinks,
                  about: s.about,
                });
          },
        };
      })(o.Z);
      class V extends a.PureComponent {
        async componentDidMount() {
          let { guild: e } = this.props;
          if (null != e) {
            (0, _.k)(e.id).then(() => {
              (0, u.VP)(e.id);
            }),
              m.le(),
              m.aC(e.id);
            let t = await (0, v.Eg)(e.id);
            null != t && this.setState({ discoverableGuild: t }),
              this.checkForLowerMemberCountReqEnabled(e) &&
                T.t.trackExposure({ guildId: e.id, location: "006266_1" });
          }
        }
        renderDiscoverableSection() {
          let { guild: e, isGuildAdmin: t } = this.props;
          if (null == e) return;
          let n = e.hasFeature(B.oNc.DISCOVERABLE);
          return (0, s.jsxs)(l.FormSection, {
            className: k.twoColumnFormSection,
            children: [
              (0, s.jsxs)("div", {
                children: [
                  (0, s.jsx)(l.FormTitle, {
                    className: k.formTitle,
                    children: F.Z.Messages.GUILD_SETTINGS_ENABLE_DISCOVERABLE,
                  }),
                  (0, s.jsx)(l.FormText, {
                    type: l.FormTextTypes.DESCRIPTION,
                    className: k.formDescription,
                    children: F.Z.Messages.FORM_HELP_ENABLE_DISCOVERABLE,
                  }),
                  (0, s.jsx)(l.FormText, {
                    type: l.FormTextTypes.DESCRIPTION,
                    className: k.formDescription,
                    children: F.Z.Messages.FORM_HELP_DISCOVERABLE_CHANGE_TIME,
                  }),
                  (0, s.jsx)(l.Tooltip, {
                    text: t
                      ? null
                      : F.Z.Messages.GUILD_SETTINGS_DISCOVERY_ADMIN_ONLY,
                    children: (e) =>
                      (0, s.jsx)(l.Button, {
                        size: l.Button.Sizes.SMALL,
                        onClick: this.handleToggleDiscovery,
                        color: n
                          ? l.Button.Colors.PRIMARY
                          : l.Button.Colors.GREEN,
                        disabled: !t,
                        ...e,
                        children: n
                          ? F.Z.Messages.GUILD_SETTINGS_DISABLE_DISCOVERABLE
                          : F.Z.Messages.GUILD_SETTINGS_ENABLE_DISCOVERABLE,
                      }),
                  }),
                ],
              }),
              (0, s.jsx)(S.Z, {
                className: k.guildCard,
                loading: null == e,
                guild: e,
              }),
            ],
          });
        }
        renderCoverImageSection() {
          let { guild: e, errors: t, canManageGuild: n } = this.props;
          if (null != e)
            return (0, s.jsxs)(s.Fragment, {
              children: [
                (0, s.jsxs)(l.FormSection, {
                  className: k.twoColumnFormSection,
                  children: [
                    (0, s.jsxs)("div", {
                      children: [
                        (0, s.jsx)(l.FormTitle, {
                          className: k.formTitle,
                          children:
                            F.Z.Messages.FORM_LABEL_DISCOVERY_COVER_IMAGE,
                        }),
                        (0, s.jsx)(l.FormText, {
                          type: l.FormTextTypes.DESCRIPTION,
                          className: k.formDescription,
                          children:
                            F.Z.Messages.FORM_HELP_DISCOVERY_COVER_IMAGE,
                        }),
                        (0, s.jsxs)(l.Button, {
                          size: l.Button.Sizes.SMALL,
                          color: l.Button.Colors.PRIMARY,
                          children: [
                            F.Z.Messages.UPLOAD_BACKGROUND,
                            (0, s.jsx)(p.ZP, {
                              disabled: !n,
                              onChange: this.handleSplashChange,
                            }),
                          ],
                        }),
                      ],
                    }),
                    (0, s.jsx)("div", {
                      className: k.imageUploaderWrapper,
                      children: (0, s.jsx)(R.Z, {
                        image: e.discoverySplash,
                        makeURL: (t) =>
                          D.ZP.getGuildDiscoverySplashURL({
                            id: e.id,
                            splash: t,
                            size: 512 * (0, x.x_)(),
                          }),
                        disabled: !n,
                        onChange: this.handleSplashChange,
                        hint: F.Z.Messages.CHANGE_SPLASH,
                        imageClassName: k.imageUploaderInnerSquare,
                        hideSize: !0,
                      }),
                    }),
                  ],
                }),
                (null == t ? void 0 : t.discovery_splash) != null
                  ? (0, s.jsx)(l.Text, {
                      color: "text-danger",
                      variant: "text-sm/normal",
                      children: t.discovery_splash,
                    })
                  : null,
              ],
            });
        }
        renderEmojiDiscoverabilitySection() {
          var e;
          let { canManageGuild: t, guildMetadata: n, guild: a } = this.props,
            { discoverableGuild: r } = this.state,
            { emojiDiscoverabilityEnabled: o } = n,
            c = r;
          if (null == c && null != a) {
            let e = g.ZP.getGuildEmoji(a.id);
            c = {
              ...a,
              premiumSubscriptionCount:
                null == a ? void 0 : a.premiumSubscriberCount,
              emojis: e,
              emojiCount: e.length,
              presenceCount: 1234,
              memberCount: 1234,
            };
          }
          let d = null != c ? h.JO.createFromDiscoverableGuild(c) : null,
            u =
              null == c
                ? void 0
                : null === (e = c.emojis) || void 0 === e
                  ? void 0
                  : e[0],
            _ =
              null != u
                ? {
                    name: u.require_colons ? ":".concat(u.name, ":") : u.name,
                    emojiId: u.id,
                    animated: u.animated,
                    jumboable: !0,
                  }
                : {};
          return (0, s.jsxs)(l.FormSection, {
            className: k.twoColumnFormSection,
            children: [
              (0, s.jsxs)("div", {
                className: k.formColumnLeft,
                children: [
                  (0, s.jsx)(l.FormTitle, {
                    className: k.formTitle,
                    children:
                      F.Z.Messages
                        .GUILD_SETTINGS_DISCOVERY_EMOJI_DISCOVERABILITY_TITLE,
                  }),
                  (0, s.jsx)(l.FormText, {
                    className: k.description,
                    type: l.FormTextTypes.DESCRIPTION,
                    children:
                      F.Z.Messages
                        .GUILD_SETTINGS_DISCOVERY_EMOJI_DISCOVERABILITY_DESCRIPTION,
                  }),
                  (0, s.jsx)(l.Button, {
                    size: l.Button.Sizes.SMALL,
                    color: o ? l.Button.Colors.PRIMARY : l.Button.Colors.GREEN,
                    disabled: !t,
                    onClick: this.handleToggleEmojiDiscoverability,
                    children: o
                      ? F.Z.Messages
                          .GUILD_SETTINGS_DISCOVERY_EMOJI_DISCOVERABILITY_DISABLE
                      : F.Z.Messages
                          .GUILD_SETTINGS_DISCOVERY_EMOJI_DISCOVERABILITY_ENABLE,
                  }),
                ],
              }),
              null != d &&
                d.isDiscoverable() &&
                (0, s.jsx)(L.UA, {
                  sourceType: h.w6.GUILD,
                  expressionSourceApplication: null,
                  expressionSourceGuild: d,
                  node: _,
                  closePopout: B.dG4,
                  nonce: (0, i.Z)(),
                  demoMode: !0,
                }),
            ],
          });
        }
        renderLocaleSelector() {
          let { guild: e, canManageGuild: t, localeOptions: n } = this.props;
          if (null != e)
            return (0, s.jsxs)(l.FormSection, {
              className: k.twoColumnFormSection,
              children: [
                (0, s.jsxs)("div", {
                  children: [
                    (0, s.jsx)(l.FormTitle, {
                      className: k.formTitle,
                      children: F.Z.Messages.FORM_LABEL_SERVER_LANGUAGE,
                    }),
                    (0, s.jsx)(l.FormText, {
                      type: l.FormTextTypes.DESCRIPTION,
                      className: k.formDescription,
                      children:
                        F.Z.Messages.GUILD_SETTINGS_DISCOVERY_LOCALE_HELP,
                    }),
                  ],
                }),
                (0, s.jsx)("div", {
                  className: k.formSelect,
                  children: (0, s.jsx)(l.SingleSelect, {
                    value: e.preferredLocale,
                    options: n,
                    onChange: this.handleLocaleChange,
                    isDisabled: !t,
                  }),
                }),
              ],
            });
        }
        renderCategoriesSection() {
          let {
            canManageGuild: e,
            guildMetadata: t,
            primaryCategoryOptions: n,
            errors: a,
            guild: i,
          } = this.props;
          if (null != i)
            return (0, s.jsxs)(s.Fragment, {
              children: [
                (0, s.jsxs)(l.FormSection, {
                  children: [
                    (0, s.jsx)(l.FormTitle, {
                      className: k.formTitle,
                      children:
                        F.Z.Messages
                          .GUILD_SETTINGS_DISCOVERY_PRIMARY_CATEGORY_TITLE,
                    }),
                    (0, s.jsx)(l.FormText, {
                      type: l.FormTextTypes.DESCRIPTION,
                      className: k.description,
                      children:
                        F.Z.Messages
                          .GUILD_SETTINGS_DISCOVERY_PRIMARY_CATEGORY_DESCRIPTION,
                    }),
                  ],
                }),
                (0, s.jsx)(C.Z, {
                  value:
                    t.primaryCategoryId === y.o3 ? null : t.primaryCategoryId,
                  placeholder: F.Z.Messages.SELECT,
                  options: n,
                  onChange: this.handlePrimaryCategoryChange,
                  disabled: !e,
                  searchable: !0,
                  clearable: !0,
                }),
                (0, s.jsxs)(l.FormSection, {
                  className: k.noDividerFormSection,
                  children: [
                    (0, s.jsx)(l.FormTitle, {
                      className: k.formTitle,
                      children:
                        F.Z.Messages.GUILD_SETTINGS_DISCOVERY_SUBCATEGORY_TITLE,
                    }),
                    (0, s.jsx)(b.Z, { guild: i, guildMetadata: t }),
                  ],
                }),
                (null == a ? void 0 : a.category) != null
                  ? (0, s.jsx)(l.Text, {
                      color: "text-danger",
                      className: k.error,
                      variant: "text-sm/normal",
                      children: a.category,
                    })
                  : null,
              ],
            });
        }
        renderKeywordsSection() {
          let { canManageGuild: e, guildMetadata: t, errors: n } = this.props;
          return (0, s.jsxs)(l.FormSection, {
            children: [
              (0, s.jsx)(l.FormTitle, {
                className: k.formTitle,
                children:
                  F.Z.Messages.GUILD_SETTINGS_DISCOVERY_SEARCH_KEYWORDS_TITLE,
              }),
              (0, s.jsx)(l.FormText, {
                className: k.description,
                type: l.FormTextTypes.DESCRIPTION,
                children:
                  F.Z.Messages.GUILD_SETTINGS_DISCOVERY_SEARCH_KEYWORDS_DESCRIPTION.format(),
              }),
              (0, s.jsx)(c.Z, {
                tags: t.keywords,
                onRemoveTag: this.handleRemoveKeyword,
                onAddTag: this.handleAddKeyword,
                maxTags: P.G7,
                maxTaxLength: P._0,
                disabled: !e,
              }),
              (null == n ? void 0 : n.keywords) != null
                ? (0, s.jsx)(l.Text, {
                    color: "text-danger",
                    className: k.error,
                    variant: "text-sm/normal",
                    children: n.keywords,
                  })
                : null,
            ],
          });
        }
        render() {
          let { guild: e, discoveryChecklist: t, isGuildAdmin: n } = this.props;
          if (null == e || null == t) return null;
          switch ((0, E.TJ)(e, t)) {
            case E.d5.INTRO:
              return (0, s.jsx)(G.Z, {
                guild: e,
                onEnableDiscovery: this.handleEnableDiscovery,
                isGuildAdmin: n,
              });
            case E.d5.DISQUALIFIED:
              return (0, s.jsx)(U.Z, { guild: e });
            case E.d5.SETTINGS:
              return (0, s.jsxs)(l.FormSection, {
                className: k.__invalid_discoverySettings,
                title: F.Z.Messages.DISCOVERY,
                tag: l.FormTitleTags.H1,
                children: [
                  this.renderDiscoverableSection(),
                  (0, s.jsx)(l.FormDivider, { className: k.divider }),
                  this.renderCoverImageSection(),
                  (0, s.jsx)(l.FormDivider, { className: k.divider }),
                  this.renderEmojiDiscoverabilitySection(),
                  (0, s.jsx)(l.FormDivider, { className: k.divider }),
                  this.renderCategoriesSection(),
                  (0, s.jsx)(l.FormDivider, { className: k.divider }),
                  this.renderKeywordsSection(),
                  (0, s.jsx)(l.FormDivider, { className: k.divider }),
                  this.renderLocaleSelector(),
                ],
              });
            default:
              return null;
          }
        }
        constructor(...e) {
          super(...e),
            w(this, "state", { discoverableGuild: null }),
            w(this, "checkForLowerMemberCountReqEnabled", (e) => {
              let { isGuildAdmin: t } = this.props,
                n = e.hasFeature(B.oNc.COMMUNITY),
                { enableLowerMemberCountReq: s } = T.t.getCurrentConfig(
                  { guildId: e.id, location: "006266_2" },
                  { disable: !(t && n), autoTrackExposure: !1 },
                );
              return s;
            }),
            w(this, "handleToggleDiscovery", () => {
              let { guild: e } = this.props;
              if (null == e) return;
              let t = new Set(e.features);
              e.hasFeature(B.oNc.DISCOVERABLE)
                ? t.delete(B.oNc.DISCOVERABLE)
                : t.add(B.oNc.DISCOVERABLE),
                j.Z.updateGuild({ features: t });
            }),
            w(this, "handleEnableDiscovery", async () => {
              let e = await (0, l.openModalLazy)(
                async () => {
                  let { default: e } = await n
                    .e("18634")
                    .then(n.bind(n, 993382));
                  return (t) => {
                    let { ...n } = t;
                    return (0, s.jsx)(e, { ...n });
                  };
                },
                {
                  onCloseRequest: () => {
                    null != e && (0, l.closeModal)(e);
                  },
                },
              );
            }),
            w(this, "handleSplashChange", (e) => {
              j.Z.updateGuild({ discoverySplash: e });
            }),
            w(this, "handleLocaleChange", (e) => {
              j.Z.updateGuild({ preferredLocale: e });
            }),
            w(this, "handlePrimaryCategoryChange", (e) => {
              var t;
              let { guild: n } = this.props;
              (null == n ? void 0 : n.id) != null &&
                m.TA(
                  null == n ? void 0 : n.id,
                  null !== (t = null == e ? void 0 : e.value) && void 0 !== t
                    ? t
                    : y.o3,
                );
            }),
            w(this, "handleRemoveKeyword", (e) => {
              let { guild: t, guildMetadata: n } = this.props;
              if ((null == t ? void 0 : t.id) == null) return;
              let s = [...n.keywords];
              s.splice(e, 1), m.zH(t.id, s);
            }),
            w(this, "handleAddKeyword", (e) => {
              let { guild: t, guildMetadata: n } = this.props,
                { keywords: s } = n;
              if ((null == t ? void 0 : t.id) != null)
                !(s.length >= P.G7) && m.zH(t.id, [...s, e]);
            }),
            w(this, "handleToggleEmojiDiscoverability", () => {
              let { guild: e, guildMetadata: t } = this.props,
                { emojiDiscoverabilityEnabled: n } = t;
              (null == e ? void 0 : e.id) != null && m.J9(e.id, !n);
            });
        }
      }
      t.Z = r.ZP.connectStores(
        [Z.Z, O.Z, I.ZP, f.ZP, N.Z, M.default, A.Z],
        () => {
          let {
              guild: e,
              errors: t,
              submitting: n,
              guildMetadata: s,
            } = Z.Z.getProps(),
            a = O.Z.can(B.Plq.MANAGE_GUILD, e),
            i = O.Z.can(B.Plq.ADMINISTRATOR, e),
            r = null != e ? I.ZP.getDiscoveryChecklist(e.id) : null,
            l = null != e ? f.ZP.getChannels(e.id) : null,
            o = [];
          null != l &&
            l[f.sH].forEach((e) => {
              let { channel: t } = e;
              t.type === B.d4z.GUILD_TEXT &&
                o.push({
                  value: t.id,
                  label: (0, d.F6)(t, M.default, A.Z, !0),
                });
            });
          let c = N.Z.getPrimaryCategories().map((e) => {
            let { categoryId: t, name: n } = e;
            return { value: t, label: n };
          });
          return {
            guild: e,
            errors: t,
            submitting: n,
            discoveryChecklist: r,
            selectableChannels: o,
            canManageGuild: a,
            isGuildAdmin: i,
            guildMetadata: s,
            primaryCategoryOptions: c,
            localeOptions: (0, y.jb)(),
          };
        },
      )(V);
    },
    460461: function (e, t, n) {
      "use strict";
      n.d(t, {
        J: function () {
          return v;
        },
      }),
        n(47120),
        n(315314),
        n(610138),
        n(216116),
        n(78328),
        n(815648),
        n(627494),
        n(757143);
      var s = n(735250),
        a = n(470079),
        i = n(442837),
        r = n(692547),
        l = n(481060),
        o = n(225433),
        c = n(484614),
        d = n(852860),
        u = n(296386),
        _ = n(150192),
        I = n(688465),
        E = n(970061),
        T = n(285888),
        m = n(134432),
        N = n(813197),
        S = n(208567),
        g = n(496675),
        h = n(768581),
        C = n(63063),
        x = n(434404),
        p = n(999382),
        R = n(450474),
        L = n(190287),
        f = n(981631),
        O = n(731455),
        A = n(689938),
        M = n(825267);
      let D = "https:" + window.GLOBAL_ENV.MARKETING_ENDPOINT + "/servers/",
        v = () => {
          let {
            guild: e,
            guildMetadata: t,
            submitting: n,
          } = (0, i.cj)([p.Z], () => ({
            submitting: p.Z.isSubmitting(),
            guild: p.Z.getGuild(),
            guildMetadata: p.Z.getMetadata(),
          }));
          return (0, s.jsx)(d.Z, {
            submitting: n,
            onReset: () => {
              if (null != e) x.Z.init(e.id);
            },
            onSave: () => {
              if (null != e)
                x.Z.saveGuild(e.id, {
                  discoverySplash: e.discoverySplash,
                  description: e.description,
                }),
                  u.Vv({
                    guildId: e.id,
                    primaryCategoryId: t.primaryCategoryId,
                    keywords: t.keywords,
                    emojiDiscoverabilityEnabled: t.emojiDiscoverabilityEnabled,
                    partnerActionedTimestamp: t.partnerActionedTimestamp,
                    partnerApplicationTimestamp: t.partnerApplicationTimestamp,
                    isPublished: t.isPublished,
                    reasonsToJoin: t.reasonsToJoin,
                    socialLinks: t.socialLinks.filter((e) => e),
                    about: t.about,
                  });
            },
          });
        },
        j = () => {
          var e;
          let t = a.useRef(null),
            n = (0, i.e7)([p.Z], () => p.Z.getGuild()),
            [d, v] = a.useState(!1);
          a.useEffect(() => {
            !d && null != n && (u.le(), u.aC(n.id), u.i3(n.id), v(!0));
          }, [n, d]);
          let { canManageGuild: j } = (0, i.cj)([g.Z], () => ({
              canManageGuild: g.Z.can(f.Plq.MANAGE_GUILD, n),
            })),
            Z = (0, i.e7)([p.Z], () => p.Z.isGuildMetadataLoaded()),
            b = (0, i.e7)([p.Z], () => (null != n ? p.Z.getMetadata() : null)),
            U = (0, i.e7)([p.Z], () =>
              null != n && (null == b ? void 0 : b.isPublished)
                ? p.Z.getSlug()
                : null,
            ),
            [G, P] = a.useState([!0]),
            [B, y] = a.useState(!0),
            [F, k] = a.useState([!1]),
            [w, H] = a.useState([""]),
            V = (e) => {
              let t = Object.entries(O.zo)
                .filter((e) => !w.includes(e[1].presentation))
                .map((e) => ({ label: e[1].presentation, value: e[0] }));
              return null == e || "" === e
                ? t
                : t.concat({ label: e, value: e });
            },
            Y = (e) => {
              try {
                var t, n, s, a;
                let i = new URL(e).hostname.split(".");
                if (3 === i.length && "bandcamp" === i[1].toLowerCase())
                  return O.zo.bandcamp.presentation;
                let r =
                  null !==
                    (n =
                      null === (t = i.shift()) || void 0 === t
                        ? void 0
                        : t.toLowerCase()) && void 0 !== n
                    ? n
                    : "";
                if (
                  ("www" === r &&
                    (r =
                      null !==
                        (a =
                          null === (s = i.shift()) || void 0 === s
                            ? void 0
                            : s.toLowerCase()) && void 0 !== a
                        ? a
                        : ""),
                  r in O.zo)
                )
                  return O.zo[r].presentation;
                return null;
              } catch {
                return null;
              }
            };
          a.useEffect(() => {
            if (null !== b) {
              let e = [],
                t = [];
              b.socialLinks.forEach((n, s) => {
                if ("" !== n) {
                  let a = Y(n);
                  null !== a ? ((t[s] = a), (e[s] = !0)) : (e[s] = !1);
                } else e[s] = !0;
              }),
                H(t),
                P(e),
                y(e.every((e) => !0 === e));
            }
          }, [b]);
          let W = (0, i.e7)([p.Z], () => (null != n ? p.Z.getErrors() : null)),
            z = (0, i.e7)([_.Z], () => _.Z.getPrimaryCategories(), [], _.j);
          if (null == n || null == b) return null;
          let K = (e) => {
              x.Z.updateGuild({ discoverySplash: e });
            },
            q = (e) => {
              var t;
              (null == n ? void 0 : n.id) != null &&
                u.TA(
                  null == n ? void 0 : n.id,
                  null !== (t = null == e ? void 0 : e.value) && void 0 !== t
                    ? t
                    : O.o3,
                );
            },
            X = (e) => {
              var t;
              x.Z.updateGuild({
                description:
                  null !== (t = null == e ? void 0 : e.replaceAll("\n", "")) &&
                  void 0 !== t
                    ? t
                    : "",
              });
            },
            Q = (e) => {
              u.mA(n.id, e);
            },
            J = (e) => {
              u.W1(n.id, e),
                e
                  ? u.Vv({
                      guildId: n.id,
                      primaryCategoryId: b.primaryCategoryId,
                      keywords: b.keywords,
                      emojiDiscoverabilityEnabled:
                        b.emojiDiscoverabilityEnabled,
                      partnerActionedTimestamp: b.partnerActionedTimestamp,
                      partnerApplicationTimestamp:
                        b.partnerApplicationTimestamp,
                      isPublished: !0,
                      reasonsToJoin: b.reasonsToJoin,
                      socialLinks: b.socialLinks,
                      about: b.about,
                    })
                  : u.Vv({
                      guildId: n.id,
                      primaryCategoryId: b.primaryCategoryId,
                      keywords: b.keywords,
                      emojiDiscoverabilityEnabled:
                        b.emojiDiscoverabilityEnabled,
                      partnerActionedTimestamp: b.partnerActionedTimestamp,
                      partnerApplicationTimestamp:
                        b.partnerApplicationTimestamp,
                      isPublished: !1,
                      reasonsToJoin: b.reasonsToJoin,
                      socialLinks: b.socialLinks,
                      about: b.about,
                    }),
                x.Z.saveGuild(n.id, {
                  discoverySplash: n.discoverySplash,
                  description: n.description,
                });
            },
            $ = () => {
              if (b.socialLinks.length < 9) {
                let e = [...b.socialLinks];
                u.t$(n.id, e.concat("")), H(w.concat(""));
              }
            },
            ee = (e, t) => {
              let s = [...b.socialLinks],
                a = [...w],
                i = [...G];
              (a[t] = e),
                (s[t] = O.zo[e].baseUrl),
                (i[t] = !0),
                P(i),
                H(a),
                y(i.every((e) => !0 === e)),
                u.t$(n.id, s);
            },
            et = (e, t) => {
              let s = [...b.socialLinks],
                a = s[t],
                i = e;
              0 === a.length &&
                i.length > 1 &&
                !1 === RegExp("^https?:").test(i) &&
                (i = "https://" + i),
                (s[t] = i),
                u.t$(n.id, s);
            },
            en = (e) => {
              let t = [...F];
              t.splice(e, 1), k(t);
              let s = [...G];
              s.splice(e, 1), P(s);
              let a = [...w];
              a.splice(e, 1), H(a);
              let i = [...b.socialLinks];
              i.splice(e, 1), u.t$(n.id, i);
            },
            es = (e) => {
              let { reason: t = "", emoji_name: n = "" } = e;
              return (
                null !== t && t.length >= 10 && t.length <= 128 && null !== n
              );
            },
            ea = (e) => {
              let { reason: t = "", emoji_name: n = "" } = e;
              return (null === t || "" === t) && null === n;
            },
            ei = [
              {
                title:
                  A.Z.Messages.DISCOVERY_LANDING_PAGE_CHECKLIST_REQUIREMENTS,
                items: [
                  {
                    description:
                      A.Z.Messages
                        .DISCOVERY_LANDING_PAGE_CHECKLIST_UPLOAD_COVER_IMAGE,
                    completed:
                      null !== n.discoverySplash && "" !== n.discoverySplash,
                  },
                  {
                    description:
                      A.Z.Messages
                        .DISCOVERY_LANDING_PAGE_CHECKLIST_SHORT_DESCRIPTION,
                    completed: null !== n.description && "" !== n.description,
                  },
                  {
                    description:
                      A.Z.Messages.DISCOVERY_LANDING_PAGE_CHECKLIST_ABOUT,
                    completed:
                      null !== b.about &&
                      b.about.length >= 300 &&
                      b.about.length <= 2400,
                  },
                  {
                    description:
                      A.Z.Messages.DISCOVERY_LANDING_PAGE_CHECKLIST_REASONS,
                    completed:
                      null !== b.reasonsToJoin &&
                      b.reasonsToJoin.every((e) => ea(e) || es(e)) &&
                      b.reasonsToJoin.filter(es).length >= 2,
                  },
                ],
              },
            ],
            er = z.map((e) => ({ label: e.name, value: e.categoryId })),
            el = (e, t) => {
              let n = [...F];
              (n[e] = t), k(n);
            };
          return (0, s.jsx)("div", {
            className: M.settingsColumn,
            children: (0, s.jsx)("div", {
              className: M.settingsContainer,
              children: (0, s.jsx)(l.ScrollerAuto, {
                className: M.settingsScroller,
                children: (0, s.jsx)("main", {
                  ref: t,
                  className: M.settingsContent,
                  children: (0, s.jsx)(l.FocusRingScope, {
                    containerRef: t,
                    children: (0, s.jsxs)("div", {
                      className: M.container,
                      children: [
                        (0, s.jsxs)(l.FormSection, {
                          className: M.mainContent,
                          title: (0, s.jsxs)("div", {
                            children: [
                              A.Z.Messages.DISCOVERY_LANDING_PAGE,
                              " ",
                              (0, s.jsx)(I.Z, { className: M.betaTag }),
                            ],
                          }),
                          tag: l.FormTitleTags.H1,
                          children: [
                            (0, s.jsxs)(l.FormText, {
                              className: M.tabMainDescription,
                              type: l.FormTextTypes.DESCRIPTION,
                              children: [
                                A.Z.Messages.DISCOVERY_LANDING_PAGE_DESCRIPTION.format(
                                  {
                                    discordURL:
                                      window.GLOBAL_ENV.MARKETING_ENDPOINT,
                                  },
                                ),
                                " ",
                                A.Z.Messages.DISCOVERY_LANDING_PAGE_LEARN_MORE.format(
                                  {
                                    learnMoreURL: C.Z.getArticleURL(
                                      f.BhN.SERVER_WEB_PAGES,
                                    ),
                                  },
                                ),
                              ],
                            }),
                            (() => {
                              if (!b.isPublished || null == U) return;
                              let e = D + U;
                              return (0, s.jsx)(s.Fragment, {
                                children: (0, s.jsxs)(l.FormSection, {
                                  className: M.noDividerFormSection,
                                  children: [
                                    (0, s.jsx)(l.FormTitle, {
                                      className: M.formTitle,
                                      children:
                                        A.Z.Messages
                                          .DISCOVERY_LANDING_PAGE_PUBLISHED_URL_TITLE,
                                    }),
                                    (0, s.jsx)(c.Z, { value: e }),
                                    (0, s.jsx)(l.Button, {
                                      className: M.viewPageButton,
                                      size: l.Button.Sizes.SMALL,
                                      color: l.Button.Colors.BRAND,
                                      onClick: () => window.open(e),
                                      children:
                                        A.Z.Messages
                                          .DISCOVERY_LANDING_PAGE_PUBLISHED_URL_VIEW_PAGE_BUTTON,
                                    }),
                                  ],
                                }),
                              });
                            })(),
                            (0, s.jsx)(l.FormDivider, { className: M.divider }),
                            (() => {
                              if (null != n)
                                return (0, s.jsxs)(s.Fragment, {
                                  children: [
                                    (0, s.jsxs)(l.FormSection, {
                                      children: [
                                        (0, s.jsx)(l.FormTitle, {
                                          className: M.formTitle,
                                          children:
                                            A.Z.Messages
                                              .DISCOVERY_LANDING_PAGE_CATEGORY_TITLE,
                                        }),
                                        (0, s.jsx)(l.FormText, {
                                          type: l.FormTextTypes.DESCRIPTION,
                                          className: M.description,
                                          children:
                                            A.Z.Messages
                                              .DISCOVERY_LANDING_PAGE_CATEGORY_DESCRIPTION,
                                        }),
                                      ],
                                    }),
                                    (0, s.jsx)(T.Z, {
                                      value:
                                        b.primaryCategoryId === O.o3
                                          ? null
                                          : null == b
                                            ? void 0
                                            : b.primaryCategoryId,
                                      placeholder: A.Z.Messages.SELECT,
                                      options: er,
                                      onChange: q,
                                      disabled: !j,
                                      searchable: !0,
                                      clearable: !0,
                                    }),
                                    (0, s.jsxs)(l.FormSection, {
                                      className: M.noDividerFormSection,
                                      children: [
                                        (0, s.jsx)(l.FormTitle, {
                                          className: M.formTitle,
                                          children:
                                            A.Z.Messages
                                              .GUILD_SETTINGS_DISCOVERY_SUBCATEGORY_TITLE,
                                        }),
                                        (0, s.jsx)(R.Z, {
                                          guild: n,
                                          guildMetadata: b,
                                          disabled: !j,
                                        }),
                                      ],
                                    }),
                                    (null == W ? void 0 : W.category) != null
                                      ? (0, s.jsx)(l.Text, {
                                          color: "text-danger",
                                          className: M.error,
                                          variant: "text-sm/normal",
                                          children: W.category,
                                        })
                                      : null,
                                  ],
                                });
                            })(),
                            (0, s.jsx)(l.FormDivider, { className: M.divider }),
                            (() => {
                              if (null != n)
                                return (0, s.jsxs)(s.Fragment, {
                                  children: [
                                    (0, s.jsxs)(l.FormSection, {
                                      className: M.twoColumnFormSection,
                                      children: [
                                        (0, s.jsxs)("div", {
                                          children: [
                                            (0, s.jsx)(l.FormTitle, {
                                              className: M.formTitle,
                                              children:
                                                A.Z.Messages
                                                  .FORM_LABEL_DISCOVERY_COVER_IMAGE,
                                            }),
                                            (0, s.jsx)(l.FormText, {
                                              type: l.FormTextTypes.DESCRIPTION,
                                              className: M.formDescription,
                                              children:
                                                A.Z.Messages
                                                  .DISCOVERY_LANDING_PAGE_COVER_IMAGE_DESCRIPTION,
                                            }),
                                            (0, s.jsxs)(l.Button, {
                                              size: l.Button.Sizes.SMALL,
                                              color: l.Button.Colors.PRIMARY,
                                              children: [
                                                A.Z.Messages.UPLOAD_BACKGROUND,
                                                (0, s.jsx)(N.ZP, {
                                                  disabled: !j,
                                                  onChange: K,
                                                }),
                                              ],
                                            }),
                                          ],
                                        }),
                                        (0, s.jsx)(S.Z, {
                                          image: n.discoverySplash,
                                          makeURL: (e) =>
                                            h.ZP.getGuildDiscoverySplashURL({
                                              id: n.id,
                                              splash: e,
                                              size: 512 * (0, m.x_)(),
                                            }),
                                          disabled: !j,
                                          onChange: K,
                                          hint: A.Z.Messages.CHANGE_SPLASH,
                                          imageClassName:
                                            M.imageUploaderInnerSquare,
                                          hideSize: !0,
                                        }),
                                      ],
                                    }),
                                    (null == W ? void 0 : W.discovery_splash) !=
                                    null
                                      ? (0, s.jsx)(l.Text, {
                                          color: "text-danger",
                                          variant: "text-sm/normal",
                                          children: W.discovery_splash,
                                        })
                                      : null,
                                  ],
                                });
                            })(),
                            (0, s.jsx)(l.FormDivider, { className: M.divider }),
                            (0, s.jsxs)(l.FormSection, {
                              children: [
                                (0, s.jsx)(l.FormTitle, {
                                  className: M.formTitle,
                                  children:
                                    A.Z.Messages.FORM_LABEL_SERVER_DESCRIPTION,
                                }),
                                (0, s.jsx)(l.FormText, {
                                  className: M.description,
                                  type: l.FormTextTypes.DESCRIPTION,
                                  children:
                                    A.Z.Messages
                                      .DISCOVERY_LANDING_PAGE_SERVER_DESCRIPTION,
                                }),
                                (0, s.jsx)(l.TextArea, {
                                  value:
                                    null !== n.description ? n.description : "",
                                  placeholder:
                                    A.Z.Messages
                                      .DISCOVERY_LANDING_PAGE_SERVER_DESCRIPTION_HINT,
                                  onChange: X,
                                  maxLength: 120,
                                  disabled: !j,
                                }),
                              ],
                            }),
                            (0, s.jsx)(l.FormDivider, { className: M.divider }),
                            (() => {
                              if (null == b) return null;
                              let e =
                                0 === b.reasonsToJoin.length
                                  ? [, , , ,].fill({
                                      reason: "",
                                      emoji_name: null,
                                    })
                                  : b.reasonsToJoin;
                              return (0, s.jsxs)(l.FormSection, {
                                children: [
                                  (0, s.jsx)(l.FormTitle, {
                                    className: M.formTitle,
                                    children:
                                      A.Z.Messages
                                        .DISCOVERY_LANDING_PAGE_REASONS_TO_JOIN_TITLE,
                                  }),
                                  (0, s.jsx)(l.FormText, {
                                    type: l.FormTextTypes.DESCRIPTION,
                                    className: M.description,
                                    children:
                                      A.Z.Messages
                                        .DISCOVERY_LANDING_PAGE_REASONS_TO_JOIN_DESCRIPTION,
                                  }),
                                  (0, s.jsx)("div", {
                                    className: M.reasonToJoin,
                                    children: (0, s.jsx)(L.Z, {
                                      reasonMinLength: 10,
                                      reasonMaxLength: 128,
                                      guildId: n.id,
                                      reasons: e,
                                    }),
                                  }),
                                  (null == W ? void 0 : W.reasons_to_join) !=
                                  null
                                    ? (0, s.jsx)(l.Text, {
                                        color: "text-danger",
                                        variant: "text-sm/normal",
                                        children: W.reasons_to_join,
                                      })
                                    : null,
                                ],
                              });
                            })(),
                            (0, s.jsx)(l.FormDivider, { className: M.divider }),
                            (0, s.jsxs)(s.Fragment, {
                              children: [
                                (0, s.jsxs)(l.FormSection, {
                                  children: [
                                    (0, s.jsx)(l.FormTitle, {
                                      className: M.formTitle,
                                      children:
                                        A.Z.Messages
                                          .DISCOVERY_LANDING_PAGE_ABOUT_TITLE,
                                    }),
                                    (0, s.jsx)(l.FormText, {
                                      className: M.description,
                                      type: l.FormTextTypes.DESCRIPTION,
                                      children:
                                        A.Z.Messages
                                          .DISCOVERY_LANDING_PAGE_ABOUT_DESCRIPTION,
                                    }),
                                    (0, s.jsx)(
                                      l.TextArea,
                                      {
                                        showCharacterCount: !0,
                                        className: M.textArea,
                                        value: b.about,
                                        placeholder:
                                          A.Z.Messages
                                            .DISCOVERY_LANDING_PAGE_ABOUT_HINT,
                                        onChange: Q,
                                        minLength: 300,
                                        maxLength: 2400,
                                        disabled: !j,
                                        defaultDirty:
                                          (null === (e = b.about) ||
                                          void 0 === e
                                            ? void 0
                                            : e.length) > 0,
                                      },
                                      "text-area-".concat(Z),
                                    ),
                                  ],
                                }),
                                (null == W ? void 0 : W.about) != null
                                  ? (0, s.jsx)(l.Text, {
                                      color: "text-danger",
                                      variant: "text-sm/normal",
                                      children: W.about,
                                    })
                                  : null,
                              ],
                            }),
                            (0, s.jsx)(l.FormDivider, { className: M.divider }),
                            (0, s.jsx)(s.Fragment, {
                              children: (0, s.jsxs)(l.FormSection, {
                                children: [
                                  (0, s.jsx)(l.FormTitle, {
                                    className: M.formTitle,
                                    children:
                                      A.Z.Messages
                                        .DISCOVERY_LANDING_PAGE_SOCIAL_LINKS_TITLE,
                                  }),
                                  (0, s.jsx)(l.FormText, {
                                    className: M.description,
                                    type: l.FormTextTypes.DESCRIPTION,
                                    children:
                                      A.Z.Messages
                                        .DISCOVERY_LANDING_PAGE_SOCIAL_LINKS_DESCRIPTION,
                                  }),
                                  b.socialLinks.map((e, t) =>
                                    (0, s.jsxs)(
                                      "div",
                                      {
                                        className: M.socialLinksContainer,
                                        onMouseOver: () => el(t, !0),
                                        onFocus: () => el(t, !0),
                                        onMouseOut: () => el(t, !1),
                                        onBlur: () => el(t, !1),
                                        children: [
                                          (0, s.jsx)(
                                            l.SingleSelect,
                                            {
                                              className: b.isPublished
                                                ? M.socialLinksDropdownMax
                                                : M.socialLinksDropdownMin,
                                              options: V(w[t]),
                                              placeholder:
                                                A.Z.Messages
                                                  .DISCOVERY_LANDING_PAGE_SOCIAL_LINKS_DROPDOWN_PLACEHOLDER,
                                              value: w[t],
                                              onChange: (e) => ee(e, t),
                                              isDisabled: !j,
                                            },
                                            "dropdown-" + t,
                                          ),
                                          (0, s.jsx)(
                                            l.TextInput,
                                            {
                                              value: e,
                                              className: b.isPublished
                                                ? M.socialLinksMax
                                                : M.socialLinksMin,
                                              onChange: (e) => et(e, t),
                                              placeholder:
                                                A.Z.Messages
                                                  .DISCOVERY_LANDING_PAGE_SOCIAL_LINKS_HINT,
                                              maxLength: 150,
                                              disabled: !j,
                                            },
                                            "link-" + t,
                                          ),
                                          G[t]
                                            ? (0, s.jsx)(
                                                l.CircleCheckIcon,
                                                {
                                                  size: "custom",
                                                  className: b.isPublished
                                                    ? M.validationButtonMax
                                                    : M.validationButtonMin,
                                                  color:
                                                    r.Z.unsafe_rawColors
                                                      .GREEN_230.css,
                                                  width: 20,
                                                  height: 20,
                                                },
                                                "validation-passed-" + t,
                                              )
                                            : (0, s.jsx)(
                                                l.CircleXIcon,
                                                {
                                                  size: "custom",
                                                  className: b.isPublished
                                                    ? M.validationButtonMax
                                                    : M.validationButtonMin,
                                                  color:
                                                    r.Z.unsafe_rawColors.RED_400
                                                      .css,
                                                  width: 20,
                                                  height: 20,
                                                },
                                                "validation-failed-" + t,
                                              ),
                                          j &&
                                            (0, s.jsx)(
                                              o.Z,
                                              {
                                                className: F[t]
                                                  ? b.isPublished
                                                    ? M.deleteButtonMax
                                                    : M.deleteButtonMin
                                                  : b.isPublished
                                                    ? M.deleteButtonHiddenMax
                                                    : M.deleteButtonHiddenMin,
                                                onClick: () => en(t),
                                              },
                                              "delete-button-" + t,
                                            ),
                                        ],
                                      },
                                      "social-container-" + t,
                                    ),
                                  ),
                                  (null == W ? void 0 : W.social_links) != null
                                    ? (0, s.jsx)(l.Text, {
                                        color: "text-danger",
                                        variant: "text-sm/normal",
                                        children: W.social_links,
                                      })
                                    : null,
                                  (0, s.jsx)(l.Button, {
                                    size: l.Button.Sizes.SMALL,
                                    color: l.Button.Colors.PRIMARY,
                                    onClick: $,
                                    disabled: !j || b.socialLinks.length >= 9,
                                    children:
                                      A.Z.Messages
                                        .DISCOVERY_LANDING_PAGE_SOCIAL_LINKS_BUTTON_ADD_ANOTHER,
                                  }),
                                ],
                              }),
                            }),
                            b.isPublished &&
                              (0, s.jsxs)(s.Fragment, {
                                children: [
                                  (0, s.jsx)(l.FormDivider, {
                                    className: M.divider,
                                  }),
                                  (0, s.jsxs)(l.FormSection, {
                                    children: [
                                      (0, s.jsx)(l.FormTitle, {
                                        className: M.formTitle,
                                        children:
                                          A.Z.Messages
                                            .DISCOVERY_LANDING_PAGE_DISABLE_TITLE,
                                      }),
                                      (0, s.jsx)(l.FormText, {
                                        className: M.description,
                                        type: l.FormTextTypes.DESCRIPTION,
                                        children:
                                          A.Z.Messages
                                            .DISCOVERY_LANDING_PAGE_DISABLE_DESCRIPTION,
                                      }),
                                      (0, s.jsx)(l.Button, {
                                        size: l.Button.Sizes.SMALL,
                                        color: l.Button.Colors.RED,
                                        onClick: () => J(!1),
                                        disabled: !j,
                                        children:
                                          A.Z.Messages
                                            .DISCOVERY_LANDING_PAGE_DISABLE_BUTTON,
                                      }),
                                    ],
                                  }),
                                ],
                              }),
                            (null == W ? void 0 : W.is_published) != null
                              ? (0, s.jsx)(l.Text, {
                                  color: "text-danger",
                                  variant: "text-sm/normal",
                                  children: W.is_published,
                                })
                              : null,
                          ],
                        }),
                        !b.isPublished &&
                          (0, s.jsx)("div", {
                            className: M.checklist,
                            children: (0, s.jsx)(E.Z, {
                              title:
                                A.Z.Messages
                                  .DISCOVERY_LANDING_PAGE_CHECKLIST_TITLE,
                              children: ei,
                              buttonLabel:
                                A.Z.Messages
                                  .DISCOVERY_LANDING_PAGE_CHECKLIST_PUBLISH,
                              buttonCallback: () => J(!0),
                              disabled: !j || !B,
                            }),
                          }),
                      ],
                    }),
                  }),
                }),
              }),
            }),
          });
        };
      t.Z = () =>
        null == (0, i.e7)([p.Z], () => p.Z.getGuild())
          ? null
          : (0, s.jsx)(j, {});
    },
    29605: function (e, t, n) {
      "use strict";
      n.d(t, {
        FT: function () {
          return H;
        },
        L3: function () {
          return w;
        },
      }),
        n(47120);
      var s = n(735250),
        a = n(470079),
        i = n(120356),
        r = n.n(i),
        l = n(512722),
        o = n.n(l),
        c = n(392711),
        d = n.n(c),
        u = n(772848),
        _ = n(442837),
        I = n(481060),
        E = n(668781),
        T = n(80932),
        m = n(225433),
        N = n(327802),
        S = n(110924),
        g = n(200876),
        h = n(730089),
        C = n(372444),
        x = n(889564),
        p = n(372129),
        R = n(357156),
        L = n(210887),
        f = n(626135),
        O = n(768581),
        A = n(176354),
        M = n(267642),
        D = n(434404),
        v = n(471613),
        j = n(999382),
        Z = n(981631),
        b = n(185923),
        U = n(689938),
        G = n(337225),
        P = n(869042);
      let B = d().throttle(T.OQ, 1e3),
        y = (e) => {
          let { currentTarget: t, which: n } = e;
          13 === n && t.blur();
        },
        F = (e) => {
          let { guildId: t, emoji: n, onEdit: i, editingDisabled: l = !1 } = e,
            [o, c] = a.useState(n.name),
            d = O.ZP.getEmojiURL({ id: n.id, animated: n.animated, size: 32 });
          return (0, s.jsxs)("div", {
            className: r()(G.emojiRow, P.card),
            children: [
              (0, s.jsx)("div", {
                className: G.emojiColumn,
                children: (0, s.jsx)(I.Tooltip, {
                  text: n.available
                    ? null
                    : U.Z.Messages.EMOJI_DISABLED_PREMIUM_TIER_LOST,
                  children: (e) =>
                    (0, s.jsx)("div", {
                      ...e,
                      className: r()(G.emojiImage, {
                        [G.emojiDisabled]: !n.available,
                      }),
                      style: { backgroundImage: "url(".concat(d, ")") },
                    }),
                }),
              }),
              (0, s.jsxs)("div", {
                className: G.column,
                children: [
                  (0, s.jsx)(I.TextInput, {
                    className: r()(G.emojiAliasInput, {
                      [G.emojiAliasInputDisabled]: l,
                    }),
                    inputClassName: G.emojiInput,
                    placeholder:
                      U.Z.Messages.GUILD_SETTINGS_EMOJI_ALIAS_PLACEHOLDER,
                    onKeyPress: y,
                    onChange: c,
                    onBlur: () => {
                      o !== n.name &&
                        (0, T.dv)({
                          guildId: t,
                          emojiId: n.id,
                          name: A.ZP.sanitizeEmojiName(o),
                        });
                    },
                    size: I.TextInput.Sizes.MINI,
                    value: o,
                    maxLength: b.Yc,
                    disabled: l,
                  }),
                  (0, s.jsx)("div", {
                    className: G.emojiAliasPlaceholder,
                    children: (0, s.jsx)("div", {
                      className: G.emojiAliasPlaceholderContent,
                      children:
                        o.length > 0
                          ? o
                          : U.Z.Messages.GUILD_SETTINGS_EMOJI_ALIAS_PLACEHOLDER,
                    }),
                  }),
                ],
              }),
              (0, s.jsxs)("div", {
                className: G.column,
                children: [
                  (0, s.jsx)(I.Avatar, {
                    src: n.user.getAvatarURL(t, 24),
                    "aria-label": n.user.username,
                    size: I.AvatarSizes.SIZE_24,
                    className: G.avatar,
                  }),
                  (0, s.jsx)(I.FormText, {
                    className: r()(G.emojiRowText),
                    children: n.user.username,
                  }),
                ],
              }),
              null != i &&
                !l &&
                (0, s.jsx)(I.Clickable, {
                  "aria-label": U.Z.Messages.EDIT,
                  className: G.editEmojiRolesButton,
                  onClick: () => i(n, t),
                  children: (0, s.jsx)(I.PencilIcon, {
                    size: "md",
                    color: "currentColor",
                    className: G.editEmojiRolesIcon,
                  }),
                }),
              !l &&
                (0, s.jsx)(m.Z, {
                  className: G.emojiRemove,
                  onClick: () => {
                    (0, T.RE)(t, n.id).catch((e) => {
                      let { status: t } = e;
                      429 === t &&
                        E.Z.show({
                          title: U.Z.Messages.GENERIC_ERROR_TITLE,
                          body: U.Z.Messages.RATE_LIMITED,
                        });
                    });
                  },
                }),
            ],
          });
        },
        k = (e) => {
          let {
            isLoading: t,
            staticEmojis: a,
            animatedEmojis: i,
            theme: r,
            guild: l,
          } = e;
          return t
            ? (0, s.jsx)(I.Spinner, {
                className: G.spinner,
                type: I.Spinner.Type.SPINNING_CIRCLE,
              })
            : 0 === a.length && 0 === i.length
              ? (0, s.jsxs)(I.EmptyState, {
                  theme: r,
                  className: G.empty,
                  children: [
                    (0, s.jsx)(I.EmptyStateImage, {
                      darkSrc: n(458601),
                      lightSrc: n(673557),
                      width: 272,
                      height: 212,
                    }),
                    (0, s.jsx)(I.EmptyStateText, {
                      note: U.Z.Messages.NO_EMOJI,
                      children: U.Z.Messages.NO_EMOJI_TITLE,
                    }),
                  ],
                })
              : (0, s.jsxs)("div", {
                  children: [
                    (0, s.jsx)(w, {
                      title: U.Z.Messages.EMOJI,
                      maxSlots: l.getMaxEmojiSlots(),
                      emojiCount: a.length,
                    }),
                    (0, s.jsx)(H, { emojis: a, guild: l }),
                    (0, s.jsx)(w, {
                      title: U.Z.Messages.ANIMATED_EMOJI,
                      maxSlots: l.getMaxEmojiSlots(),
                      emojiCount: i.length,
                    }),
                    (0, s.jsx)(H, { emojis: i, guild: l }),
                  ],
                });
        },
        w = (e) => {
          let { title: t, maxSlots: n, emojiCount: a } = e;
          return (0, s.jsxs)(I.FormTitle, {
            tag: I.FormTitleTags.H2,
            className: G.title,
            children: [
              t,
              (0, s.jsxs)("span", {
                children: [
                  " — ",
                  U.Z.Messages.EMOJI_SLOTS_AVAILABLE.format({ count: n - a }),
                ],
              }),
            ],
          });
        },
        H = (e) => {
          let { emojis: t, guild: n, onEdit: i, editingDisabled: r = !1 } = e,
            l = a.useMemo(() => [...t].reverse(), [t]),
            { canManageGuildExpression: o } = (0, R.Gw)(n);
          return 0 === t.length
            ? (0, s.jsx)(I.FormText, {
                type: I.FormTextTypes.DESCRIPTION,
                className: G.content,
                children: U.Z.Messages.NO_EMOJI_BODY,
              })
            : (0, s.jsxs)(I.FormSection, {
                className: G.content,
                children: [
                  (0, s.jsxs)("div", {
                    className: G.emojiTable,
                    children: [
                      (0, s.jsx)(I.FormText, {
                        type: I.FormTextTypes.DESCRIPTION,
                        className: G.emojiColumn,
                        children: U.Z.Messages.GUILD_SETTINGS_EMOJI_IMAGE,
                      }),
                      (0, s.jsx)(I.FormText, {
                        type: I.FormTextTypes.DESCRIPTION,
                        className: G.columnLabel,
                        children: U.Z.Messages.GUILD_SETTINGS_EMOJI_NAME,
                      }),
                      (0, s.jsx)(I.FormText, {
                        type: I.FormTextTypes.DESCRIPTION,
                        className: G.columnLabel,
                        children: U.Z.Messages.UPLOADED_BY,
                      }),
                    ],
                  }),
                  l.map((e) =>
                    (0, s.jsx)(
                      F,
                      {
                        guildId: n.id,
                        emoji: e,
                        onEdit: i,
                        editingDisabled: r || !o(e),
                      },
                      e.id,
                    ),
                  ),
                ],
              });
        },
        V = (e) => {
          let t,
            n,
            a,
            { staticEmojiCount: i, animatedEmojiCount: r, guild: l } = e,
            o = l.getMaxEmojiSlots(),
            c = Math.min(o - i, o - r),
            d = l.premiumTier,
            u = (0, M.FZ)(d, l.id);
          return null == u || d === Z.Eu4.TIER_3 || c > 0
            ? null
            : (c > o
                ? ((t =
                    U.Z.Messages.GUILD_SETTINGS_EMOJIS_UPSELL_BANNER_TOO_MANY_EMOJIS_HEADER.format(
                      { level: u },
                    )),
                  (n =
                    U.Z.Messages.GUILD_SETTINGS_EMOJIS_UPSELL_BANNER_TOO_MANY_EMOJIS_TEXT.format(
                      { level: u },
                    )),
                  (a = Z.qAy.BOOST_UPSELL_BANNER_LOST_LEVEL))
                : ((t =
                    U.Z.Messages
                      .PREMIUM_GUILD_SUBSCRIPTION_UPSELL_BANNER_HEADER),
                  (n =
                    U.Z.Messages.GUILD_SETTINGS_EMOJIS_UPSELL_BANNER_TEXT.format(
                      { level: u },
                    )),
                  (a = Z.qAy.BOOST_UPSELL_BANNER_SLOTS_FULL)),
              (0, s.jsx)(C.Z, {
                header: t,
                text: n,
                guild: l,
                analyticsLocation: {
                  page: Z.ZY5.GUILD_SETTINGS,
                  section: Z.jXE.GUILD_SETTINGS_STICKERS,
                  object: a,
                  objectType: (0, M.ge)(u),
                },
              }));
        };
      t.ZP = () => {
        let e = (0, _.e7)([j.Z], () => j.Z.getGuild()),
          [t, i] = a.useState("");
        o()(
          null != e,
          "ConnectedGuildSettingsEmoji must be rendered within a guild context",
        );
        let r = (0, _.e7)([L.Z], () => L.Z.theme),
          { canCreateExpressions: l } = (0, R.XJ)(e),
          { revision: c, emojis: E } = (0, _.cj)([v.Z], () => ({
            revision: v.Z.getEmojiRevision(e.id),
            emojis: v.Z.getEmojis(e.id),
          })),
          T = (0, S.Z)(c),
          [m, C] = a.useState(!1),
          [O, A] = a.useState(!1),
          M = a.useRef(null);
        a.useEffect(() => {
          m && W();
        }, [m]),
          a.useEffect(() => {
            B(e.id);
          }, [e.id]),
          a.useEffect(() => {
            null != T && T < c && B(e.id);
          }, [c, T, e.id]);
        let [P, y] = a.useMemo(() => {
            let t = null == E ? void 0 : E.filter((t) => !(0, x.Kt)(t, e.id)),
              [n, s] = d().partition(t, (e) => !e.animated);
            return [n, s];
          }, [E, e.id]),
          F = e.getMaxEmojiSlots(),
          w = Math.max(F - P.length, F - y.length),
          H = (n, s, a) =>
            (0, h.G)({
              data: n,
              file: s,
              image: a,
              guildId: e.id,
              uploadId: t,
              hideErrorModal: !0,
            }),
          Y = async (n) => {
            i((0, u.Z)()),
              f.default.track(Z.rMx.EMOJI_UPLOAD_STARTED, {
                guild_id: e.id,
                upload_id: t,
              }),
              await (0, p._)(n, H),
              C(!0);
          },
          W = () => {
            null !== M.current &&
              ((0, I.closeModal)(M.current), (M.current = null));
          },
          z = async (e) => {
            M.current = await (0, I.openModalLazy)(async () => {
              let { default: t } = await n.e("16169").then(n.bind(n, 935333));
              return (n) => (0, s.jsx)(t, { processFiles: () => Y(e), ...n });
            });
          },
          K = (0, g.l)(e);
        return (0, s.jsxs)("div", {
          className: G.emojiSettings,
          children: [
            0 === w
              ? null
              : (0, s.jsx)(N.Z, {
                  className: G.emojiUploadContainer,
                  onDrop: z,
                }),
            (0, s.jsxs)(I.FormSection, {
              tag: I.FormTitleTags.H1,
              title: U.Z.Messages.EMOJI,
              children: [
                (0, s.jsx)(V, {
                  guild: e,
                  staticEmojiCount: P.length,
                  animatedEmojiCount: y.length,
                }),
                (0, s.jsxs)(I.FormSection, {
                  className: G.uploader,
                  children: [
                    (0, s.jsx)(I.FormText, {
                      type: I.FormTextTypes.DESCRIPTION,
                      children:
                        U.Z.Messages.GUILD_SETTINGS_EMOJI_UPLOAD_TO_SERVER_DESCRIPTION.format(
                          { count: F },
                        ),
                    }),
                    K &&
                      (0, s.jsx)(I.FormText, {
                        type: I.FormTextTypes.DESCRIPTION,
                        children:
                          U.Z.Messages.GUILD_ROLE_SUBSCRIPTION_EMOJI_SETTINGS_MANAGE_PREMIUM_TEXT.format(
                            {
                              onClick: () =>
                                D.Z.open(
                                  e.id,
                                  Z.pNK.ROLE_SUBSCRIPTIONS,
                                  void 0,
                                  Z.KsC.ROLE_SUBSCRIPTION_EMOJI,
                                ),
                            },
                          ),
                      }),
                    (0, s.jsxs)("div", {
                      children: [
                        (0, s.jsx)(I.FormTitle, {
                          tag: I.FormTitleTags.H2,
                          className: G.emojiUploadUploadRequirementsHeading,
                          children:
                            U.Z.Messages.GUILD_SETTINGS_EMOJI_UPLOAD_HEADING,
                        }),
                        (0, s.jsxs)("ul", {
                          className: G.emojiUploadUploadRequirementsList,
                          children: [
                            (0, s.jsx)("li", {
                              children: (0, s.jsx)(I.FormText, {
                                type: I.FormTextTypes.DESCRIPTION,
                                children:
                                  U.Z.Messages
                                    .GUILD_SETTINGS_EMOJI_UPLOAD_REQUIREMENTS_1,
                              }),
                            }),
                            (0, s.jsx)("li", {
                              children: (0, s.jsx)(I.FormText, {
                                type: I.FormTextTypes.DESCRIPTION,
                                children:
                                  U.Z.Messages.GUILD_SETTINGS_EMOJI_UPLOAD_REQUIREMENTS_2.format(
                                    { maxSize: b.xG },
                                  ),
                              }),
                            }),
                            (0, s.jsx)("li", {
                              children: (0, s.jsx)(I.FormText, {
                                type: I.FormTextTypes.DESCRIPTION,
                                children:
                                  U.Z.Messages
                                    .GUILD_SETTINGS_EMOJI_UPLOAD_REQUIREMENTS_3,
                              }),
                            }),
                            (0, s.jsx)("li", {
                              children: (0, s.jsx)(I.FormText, {
                                type: I.FormTextTypes.DESCRIPTION,
                                children:
                                  U.Z.Messages
                                    .GUILD_SETTINGS_EMOJI_UPLOAD_REQUIREMENTS_4,
                              }),
                            }),
                          ],
                        }),
                      ],
                    }),
                    (0, s.jsxs)(I.Button, {
                      tabIndex: -1,
                      size: I.Button.Sizes.MEDIUM,
                      onClick: () => {
                        let t = (0, u.Z)();
                        i(t),
                          f.default.track(Z.rMx.EMOJI_UPLOAD_STARTED, {
                            guild_id: e.id,
                            upload_id: t,
                          });
                      },
                      disabled: O || 0 === w || !l,
                      submitting: O,
                      focusProps: { within: !0 },
                      children: [
                        U.Z.Messages.UPLOAD_EMOJI,
                        w > 0
                          ? (0, s.jsx)(p.Z, {
                              disabled: O || 0 === w || !l,
                              tabIndex: 0,
                              onChange: H,
                              setLoading: A,
                              multiple: !0,
                            })
                          : null,
                      ],
                    }),
                  ],
                }),
                (0, s.jsx)(k, {
                  isLoading: null == E,
                  staticEmojis: P,
                  animatedEmojis: y,
                  guild: e,
                  theme: r,
                }),
              ],
            }),
          ],
        });
      };
    },
    365307: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return I;
        },
        j: function () {
          return E;
        },
      });
      var s = n(735250);
      n(470079);
      var a = n(442837),
        i = n(139387),
        r = n(852860),
        l = n(490655),
        o = n(434404),
        c = n(360606),
        d = n(999382),
        u = n(821864),
        _ = n(905753);
      function I(e) {
        let { refToScroller: t } = e,
          n = (0, a.e7)([d.Z], () => d.Z.getGuild()),
          {
            section: i,
            sectionId: r,
            integrations: o,
            editedIntegration: u,
            webhooks: _,
            editedWebhook: I,
            isFetching: E,
            errors: T,
          } = (0, a.cj)([c.Z], () => ({
            editedIntegration: c.Z.editedIntegration,
            editedWebhook: c.Z.editedWebhook,
            errors: c.Z.getErrors(),
            integrations: c.Z.integrations,
            isFetching: c.Z.isFetching(),
            section: c.Z.getSection(),
            sectionId: c.Z.getSectionId(),
            webhooks: c.Z.webhooks,
          }));
        return null == n
          ? null
          : (0, s.jsx)(l.Z, {
              guild: n,
              section: i,
              sectionId: r,
              integrations: o,
              webhooks: _,
              editedIntegration: u,
              editedWebhook: I,
              isFetching: E,
              hasChanges: c.Z.hasChanges,
              errors: T,
              refToScroller: t,
            });
      }
      function E() {
        let { guild: e, submitting: t } = (0, a.cj)([d.Z], () => ({
          guild: d.Z.getGuild(),
          submitting: d.Z.isSubmitting(),
        }));
        return (0, s.jsx)(r.Z, {
          submitting: t,
          onReset: () => {
            i.Z.init(), u.Ui(), null != e && o.Z.init(e.id);
          },
          onSave: () => {
            if (null != e) {
              if (null != c.Z.editedIntegration)
                i.Z.saveIntegration(e.id, c.Z.editedIntegration);
              else if (null != c.Z.editedWebhook)
                i.Z.saveWebhook(e.id, c.Z.editedWebhook);
              else if (null != c.Z.editedCommandId) {
                let t = c.Z.getSectionId(),
                  n = _.Z.getEditedApplication();
                if (null == t || null == n) return;
                i.Z.saveApplicationPermissions(t, e.id, Object.values(n));
              }
              d.Z.hasChanges() && o.Z.saveGuild(e.id, { features: e.features });
            }
          },
        });
      }
    },
    497666: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return o;
        },
      });
      var s = n(735250);
      n(470079);
      var a = n(442837),
        i = n(246946),
        r = n(999382),
        l = n(270394);
      function o() {
        let e = (0, a.e7)([i.Z], () => i.Z.hideInstantInvites),
          { invites: t, guild: n } = (0, a.cj)([r.Z], () => r.Z.getProps(), []);
        return (0, s.jsx)(l.Z, {
          invites: t,
          guild: n,
          showChannel: !0,
          hide: e,
        });
      }
    },
    324330: function (e, t, n) {
      "use strict";
      n.d(t, {
        $: function () {
          return T;
        },
        Z: function () {
          return m;
        },
      });
      var s = n(735250);
      n(470079);
      var a = n(392711),
        i = n(442837),
        r = n(481060),
        l = n(241559),
        o = n(527379),
        c = n(313364),
        d = n(434404),
        u = n(999382),
        _ = n(981631),
        I = n(689938),
        E = n(535633);
      function T() {
        var e;
        let t = (0, i.e7)([u.Z], () => u.Z.getProps().guild, []),
          n =
            null !== (e = null == t ? void 0 : t.isCommunity()) &&
            void 0 !== e &&
            e;
        return (0, s.jsxs)(r.Clickable, {
          onClick: (e) => {
            if (null != t)
              n
                ? (e.preventDefault(), d.Z.close(), (0, o._X)(t.id))
                : d.Z.open(t.id, _.pNK.MEMBERS);
          },
          className: E.rowContainer,
          children: [
            (0, s.jsx)("div", { children: I.Z.Messages.MEMBERS }),
            n &&
              (0, s.jsx)(r.WindowLaunchIcon, {
                size: "custom",
                color: "currentColor",
                className: E.linkIcon,
                width: 16,
                height: 16,
              }),
          ],
        });
      }
      function m() {
        var e;
        let { guild: t } = (0, i.e7)(
            [u.Z],
            () => u.Z.getProps(),
            [],
            a.isEqual,
          ),
          n =
            null !== (e = null == t ? void 0 : t.id) && void 0 !== e
              ? e
              : _.lds;
        return (0, l.n2)(n) ? (0, s.jsx)(c.Z, { guildId: n }) : null;
      }
    },
    495300: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return M;
        },
      });
      var s = n(735250),
        a = n(470079),
        i = n(120356),
        r = n.n(i),
        l = n(442837),
        o = n(704215),
        c = n(481060),
        d = n(605236),
        u = n(621923),
        _ = n(768762),
        I = n(999382),
        E = n(743475),
        T = n(983135),
        m = n(570961),
        N = n(208665),
        S = n(359191),
        g = n(84658),
        h = n(142961),
        C = n(729311),
        x = n(850864),
        p = n(729995),
        R = n(966301),
        L = n(707076),
        f = n(213956),
        O = n(689938),
        A = n(930261);
      function M() {
        let e = (0, l.e7)([I.Z], () => I.Z.getGuildId());
        return null == e ? null : (0, s.jsx)(D, { guildId: e });
      }
      function D(e) {
        let t,
          { guildId: n } = e,
          i = (0, l.e7)([S.Z], () => S.Z.getCurrentPage()),
          I = (0, l.e7)([S.Z], () => {
            let e = (0, g.lg)(i);
            return null != e && !S.Z.isEducationUpsellDismissed(e);
          }),
          N = (0, h.Z)(n),
          M = !N && I,
          { homeSettingsEnabled: D } = (0, u.kZ)(n);
        switch (
          (a.useEffect(() => {
            (0, d.EW)(o.z.COMMUNITY_ONBOARDING_NEW_BADGE);
          }, []),
          i)
        ) {
          case g.PG.LANDING:
            t = N
              ? (0, s.jsx)(p.Z, { completed: !0, guildId: n })
              : (0, s.jsx)(L.Z, {});
            break;
          case g.PG.SAFETY_CHECK:
            t = (0, s.jsx)(f.Z, { hideChangelog: !0 });
            break;
          case g.PG.DEFAULT_CHANNELS:
            t = (0, s.jsx)(C.Z, { saveOnClose: !N });
            break;
          case g.PG.CUSTOMIZATION_QUESTIONS:
            t = (0, s.jsx)(R.ZP, { saveOnClose: !N });
            break;
          case g.PG.HOME_SETTINGS:
            t = (0, s.jsx)(x.Z, { saveOnClose: !N });
            break;
          case g.PG.REVIEW:
            t = (0, s.jsx)(p.Z, { completed: N, guildId: n });
        }
        return (0, s.jsxs)("div", {
          className: r()(A.onboardingContainer, { [A.upsellOnTop]: M }),
          children: [
            !N &&
              i !== g.PG.LANDING &&
              (0, s.jsx)(v, {
                setOnboardingStep: T.$K,
                page: i,
                homeSettingsEnabled: D,
              }),
            N &&
              i !== g.PG.LANDING &&
              (0, s.jsx)("div", {
                children: (0, s.jsxs)(c.Button, {
                  innerClassName: A.backButton,
                  look: c.Button.Looks.BLANK,
                  size: c.Button.Sizes.MIN,
                  onClick: () => {
                    (0, m.NB)(), (0, E.BG)(), (0, T.$K)(g.PG.LANDING);
                  },
                  children: [
                    (0, s.jsx)(_.Z, {
                      className: A.arrow,
                      direction: _.Z.Directions.LEFT,
                    }),
                    (0, s.jsx)(c.Text, {
                      variant: "text-sm/semibold",
                      color: "interactive-normal",
                      children: O.Z.Messages.BACK,
                    }),
                  ],
                }),
              }),
            (0, s.jsx)("div", { children: t }),
          ],
        });
      }
      function v(e) {
        let { page: t, setOnboardingStep: n, homeSettingsEnabled: a } = e,
          i = (0, l.e7)([S.Z], () => S.Z.hasErrors()),
          o = (e) => {
            if (!i) return () => n(e);
          },
          d = (0, l.e7)([N.Z], () => N.Z.advancedMode);
        return (0, s.jsxs)("div", {
          className: A.progressContainer,
          children: [
            (0, s.jsxs)(c.Clickable, {
              className: r()(A.progressBarContainer, A.clickableProgressBar),
              onClick: o(g.PG.SAFETY_CHECK),
              children: [
                (0, s.jsx)("div", {
                  className: r()(A.progressBar, {
                    [A.progressBarCurrent]: t === g.PG.SAFETY_CHECK,
                  }),
                }),
                (0, s.jsx)(c.Text, {
                  color: t === g.PG.SAFETY_CHECK ? "text-brand" : "text-muted",
                  variant: "text-xs/medium",
                  children:
                    O.Z.Messages.GUILD_ONBOARDING_SETUP_STEP_SAFETY.format({
                      stepNumber: 1,
                    }),
                }),
              ],
            }),
            (0, s.jsxs)(c.Clickable, {
              className: r()(A.progressBarContainer, A.clickableProgressBar),
              onClick: o(g.PG.DEFAULT_CHANNELS),
              children: [
                (0, s.jsx)("div", {
                  className: r()(A.progressBar, {
                    [A.progressBarCurrent]: t === g.PG.DEFAULT_CHANNELS,
                  }),
                }),
                (0, s.jsx)(c.Text, {
                  color:
                    t === g.PG.DEFAULT_CHANNELS ? "text-brand" : "text-muted",
                  variant: "text-xs/medium",
                  children: d
                    ? O.Z.Messages.GUILD_ONBOARDING_SETUP_STEP_CHANNELS_ADVANCED.format(
                        { stepNumber: 2 },
                      )
                    : O.Z.Messages.GUILD_ONBOARDING_SETUP_STEP_CHANNELS.format({
                        stepNumber: 2,
                      }),
                }),
              ],
            }),
            (0, s.jsxs)(c.Clickable, {
              className: r()(A.progressBarContainer, A.clickableProgressBar),
              onClick: o(g.PG.CUSTOMIZATION_QUESTIONS),
              children: [
                (0, s.jsx)("div", {
                  className: r()(A.progressBar, {
                    [A.progressBarCurrent]: t === g.PG.CUSTOMIZATION_QUESTIONS,
                  }),
                }),
                (0, s.jsx)(c.Text, {
                  color:
                    t === g.PG.CUSTOMIZATION_QUESTIONS
                      ? "text-brand"
                      : "text-muted",
                  variant: "text-xs/medium",
                  children: d
                    ? O.Z.Messages.GUILD_ONBOARDING_SETUP_STEP_PROMPTS_ADVANCED.format(
                        { stepNumber: 3 },
                      )
                    : O.Z.Messages.GUILD_ONBOARDING_SETUP_STEP_PROMPTS.format({
                        stepNumber: 3,
                      }),
                }),
              ],
            }),
            a &&
              (0, s.jsxs)(c.Clickable, {
                className: r()(A.progressBarContainer, A.clickableProgressBar),
                onClick: o(g.PG.HOME_SETTINGS),
                children: [
                  (0, s.jsx)("div", {
                    className: r()(A.progressBar, {
                      [A.progressBarCurrent]: t === g.PG.HOME_SETTINGS,
                    }),
                  }),
                  (0, s.jsx)(c.Text, {
                    color:
                      t === g.PG.HOME_SETTINGS ? "text-brand" : "text-muted",
                    variant: "text-xs/medium",
                    children:
                      O.Z.Messages.GUILD_ONBOARDING_SETUP_STEP_HOME.format({
                        stepNumber: 4,
                      }),
                  }),
                ],
              }),
            (0, s.jsxs)("div", {
              className: A.progressBarContainer,
              children: [
                (0, s.jsx)("div", {
                  className: r()(A.progressBar, {
                    [A.progressBarCurrent]: t === g.PG.REVIEW,
                  }),
                }),
                (0, s.jsx)(c.Text, {
                  color: t === g.PG.REVIEW ? "text-brand" : "text-muted",
                  variant: "text-xs/medium",
                  children:
                    O.Z.Messages.GUILD_ONBOARDING_SETUP_STEP_REVIEW.format({
                      stepNumber: 3 + (a ? 1 : 0) + 1,
                    }),
                }),
              ],
            }),
          ],
        });
      }
    },
    312397: function (e, t, n) {
      "use strict";
      n.d(t, {
        O: function () {
          return eN;
        },
        Z: function () {
          return eg;
        },
      }),
        n(47120),
        n(733860);
      var s = n(735250),
        a = n(470079),
        i = n(120356),
        r = n.n(i),
        l = n(512722),
        o = n.n(l),
        c = n(392711),
        d = n.n(c),
        u = n(442837),
        _ = n(692547),
        I = n(780384),
        E = n(481060),
        T = n(852860),
        m = n(902840),
        N = n(410030),
        S = n(100527),
        g = n(367907),
        h = n(906732),
        C = n(740504),
        x = n(933557),
        p = n(471445),
        R = n(890477),
        L = n(34586),
        f = n(600164),
        O = n(688465),
        A = n(807582),
        M = n(48217),
        D = n(26323),
        v = n(35125),
        j = n(536442),
        Z = n(142497),
        b = n(884858),
        U = n(516129),
        G = n(813197),
        P = n(208567),
        B = n(592125),
        y = n(324067),
        F = n(650774),
        k = n(496675),
        w = n(699516),
        H = n(594174),
        V = n(709586),
        Y = n(768581),
        W = n(630388),
        z = n(823379),
        K = n(63063),
        q = n(434404),
        X = n(999382),
        Q = n(203377),
        J = n(981631),
        $ = n(30513),
        ee = n(486324),
        et = n(200299),
        en = n(689938),
        es = n(990063),
        ea = n(935653),
        ei = n(449874);
      function er(e, t, n) {
        return (
          t in e
            ? Object.defineProperty(e, t, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0,
              })
            : (e[t] = n),
          e
        );
      }
      let el = "NO_AFK_CHANNEL",
        eo = "NO_SYSTEM_CHANNEL",
        ec = "".concat(60),
        ed = "".concat(300),
        eu = "".concat(900),
        e_ = "".concat(1800),
        eI = "".concat(3600);
      function eE(e) {
        return eT(e[0]);
      }
      function eT(e) {
        if (null == e) return;
        let { label: t, channel: n, category: a } = e,
          i = (0, p.KS)(n),
          r = null != a ? (0, x.F6)(a, H.default, w.Z) : null;
        return (0, s.jsx)(E.IconSelectOption, {
          title: t,
          icon: i,
          subtitle: r,
        });
      }
      function em(e) {
        return {
          value: e.id,
          label: (0, x.F6)(e, H.default, w.Z),
          channel: e,
          category: B.Z.getChannel(e.parent_id),
        };
      }
      let eN = () => {
        let {
            guild: e,
            originalGuild: t,
            submitting: n,
            errors: i,
          } = (0, u.cj)([X.Z], () => X.Z.getProps()),
          r = a.useMemo(() => (0, Q.LG)(i), [i]),
          l = a.useCallback(() => {
            if (null == e) return;
            let n = {
              name: e.name,
              icon: e.icon,
              splash: e.splash,
              afkChannelId: e.afkChannelId,
              afkTimeout: e.afkTimeout,
              systemChannelId: e.systemChannelId,
              safetyAlertsChannelId: e.safetyAlertsChannelId,
              verificationLevel: e.verificationLevel,
              defaultMessageNotifications: e.defaultMessageNotifications,
              explicitContentFilter: e.explicitContentFilter,
              description: e.description,
              banner: e.banner,
              systemChannelFlags: e.systemChannelFlags,
              publicUpdatesChannelId: e.publicUpdatesChannelId,
              premiumProgressBarEnabled: e.premiumProgressBarEnabled,
              homeHeader: e.homeHeader,
              clan: e.clan,
            };
            !(0, z.OL)(new Set(e.features), new Set(t.features)) &&
              (n.features = e.features),
              q.Z.saveGuild(e.id, n);
          }, [e, t]),
          o = a.useCallback(() => {
            if (null != e) q.Z.init(e.id);
          }, [e]);
        return (0, s.jsx)(T.Z, {
          submitting: n,
          errorMessage: r,
          onSave: l,
          onReset: o,
        });
      };
      class eS extends a.PureComponent {
        componentDidMount() {
          if (
            this.props.subsection === J.KsC.DISPLAY &&
            null != this._displaySectionRef.current
          ) {
            let e = this._displaySectionRef.current;
            setTimeout(() => e.scrollIntoView(), 0);
          } else if (
            this.props.subsection === J.KsC.INVITE &&
            null != this._inviteSectionRef.current
          ) {
            let e = this._inviteSectionRef.current;
            setTimeout(() => e.scrollIntoView(), 0);
          } else if (
            this.props.subsection === J.KsC.DEFAULT_NOTIFICATIONS &&
            null != this._notificationSectionRef.current
          ) {
            let e = this._notificationSectionRef.current;
            setTimeout(() => e.scrollIntoView(), 0);
          }
        }
        handleNameChange(e) {
          q.Z.updateGuild({ name: e });
        }
        handleAFKChannelChange(e) {
          e === el && (e = null), q.Z.updateGuild({ afkChannelId: e });
        }
        handleAFKTimeoutChange(e) {
          q.Z.updateGuild({ afkTimeout: parseInt(e, 10) });
        }
        handleSystemChannelChange(e) {
          e === eo && (e = null), q.Z.updateGuild({ systemChannelId: e });
        }
        handleDefaultMessageNotificationsChange(e) {
          let { value: t } = e;
          q.Z.updateGuild({ defaultMessageNotifications: t });
        }
        handleSplashChange(e) {
          q.Z.updateGuild({ splash: e });
        }
        handleSystemChannelFlagsChange(e, t) {
          let { guild: n } = this.props,
            s = (0, W.mB)(n.systemChannelFlags, e, t);
          q.Z.updateGuild({ systemChannelFlags: s });
        }
        handlePremiumProgressBarEnabledChange(e) {
          q.Z.updateGuild({ premiumProgressBarEnabled: e });
        }
        handleChangeDescription(e) {
          q.Z.updateGuild({ description: e });
        }
        renderBaseSettings() {
          let { guild: e, errors: t, canManageGuild: n } = this.props;
          return (0, s.jsxs)(f.Z, {
            className: r()(es.__invalid_baseSection),
            children: [
              (0, s.jsxs)(f.Z, {
                basis: "50%",
                justify: f.Z.Justify.BETWEEN,
                children: [
                  (0, s.jsxs)(f.Z.Child, {
                    wrap: !0,
                    children: [
                      (0, s.jsx)(P.Z, {
                        showIcon: !0,
                        name: e.name,
                        image: e.icon,
                        onChange: this.handleIconChange,
                        disabled: !n,
                        hint: en.Z.Messages.CHANGE_ICON,
                        makeURL: (t) =>
                          Y.ZP.getGuildIconURL({
                            id: e.id,
                            icon: t,
                            canAnimate: !0,
                            size: 100,
                          }),
                        className: r()({
                          [es.avatarUploader]: n,
                          [es.avatarUploaderDisabled]: !n,
                        }),
                        imageClassName: r()(es.avatarUploaderInner, {
                          [es.avatarUploaderInnerEmpty]: null == e.icon,
                        }),
                      }),
                      null != t.icon
                        ? (0, s.jsx)("div", {
                            className: es.iconError,
                            children: t.icon,
                          })
                        : null,
                    ],
                  }),
                  (0, s.jsxs)(f.Z, {
                    direction: f.Z.Direction.VERTICAL,
                    align: f.Z.Align.START,
                    style: { maxWidth: 180 },
                    children: [
                      (0, s.jsx)(E.FormText, {
                        type: E.FormTextTypes.DESCRIPTION,
                        className: es.marginBottom8,
                        children: en.Z.Messages.GUILD_SETTINGS_ICON_RECOMMEND,
                      }),
                      (0, s.jsxs)(E.Button, {
                        look: E.ButtonLooks.OUTLINED,
                        color: E.ButtonColors.PRIMARY,
                        disabled: !n,
                        className: es.marginTop8,
                        onClick: this.handleUploadImage,
                        children: [
                          en.Z.Messages.UPLOAD_IMAGE,
                          (0, s.jsx)(G.ZP, {
                            ref: this._imageInputRef,
                            onChange: this.handleOpenImageCroppingModal,
                            disabled: !n,
                          }),
                        ],
                      }),
                    ],
                  }),
                ],
              }),
              (0, s.jsx)(f.Z.Child, {
                basis: "50%",
                children: (0, s.jsx)(E.FormItem, {
                  title: en.Z.Messages.FORM_LABEL_SERVER_NAME,
                  className: es.marginBottom20,
                  children: (0, s.jsx)(E.TextInput, {
                    type: "text",
                    disabled: !n,
                    value: e.name,
                    maxLength: 100,
                    onChange: this.handleNameChange,
                    error: t.name,
                  }),
                }),
              }),
            ],
          });
        }
        renderAFKSection() {
          var e;
          let { guild: t, canManageGuild: n, channels: a } = this.props,
            i = null != t.afkTimeout ? "".concat(t.afkTimeout) : null,
            r = null !== (e = t.afkChannelId) && void 0 !== e ? e : el,
            l = [
              {
                value: ec,
                label: en.Z.Messages.DURATION_MINUTES.format({ minutes: 1 }),
              },
              {
                value: ed,
                label: en.Z.Messages.DURATION_MINUTES.format({ minutes: 5 }),
              },
              {
                value: eu,
                label: en.Z.Messages.DURATION_MINUTES.format({ minutes: 15 }),
              },
              {
                value: e_,
                label: en.Z.Messages.DURATION_MINUTES.format({ minutes: 30 }),
              },
              {
                value: eI,
                label: en.Z.Messages.DURATION_HOURS.format({ hours: 1 }),
              },
            ],
            o = d()(a)
              .filter((e) => {
                let { channel: t } = e;
                return t.type === J.d4z.GUILD_VOICE;
              })
              .map((e) => {
                let { channel: t } = e;
                return em(t);
              })
              .value();
          return (
            o.unshift({ value: el, label: en.Z.Messages.NO_AFK_CHANNEL }),
            (0, s.jsxs)(E.FormSection, {
              className: es.divider,
              children: [
                (0, s.jsxs)(f.Z, {
                  children: [
                    (0, s.jsx)(f.Z.Child, {
                      basis: "50%",
                      children: (0, s.jsx)(E.FormItem, {
                        title: en.Z.Messages.FORM_LABEL_AFK_CHANNEL,
                        children: (0, s.jsx)(E.SingleSelect, {
                          value: r,
                          options: o,
                          onChange: this.handleAFKChannelChange,
                          isDisabled: !n,
                          renderOptionLabel: eT,
                          renderOptionValue: eE,
                        }),
                      }),
                    }),
                    (0, s.jsx)(f.Z.Child, {
                      basis: "50%",
                      children: (0, s.jsx)(E.FormItem, {
                        title: en.Z.Messages.FORM_LABEL_AFK_TIMEOUT,
                        children: (0, s.jsx)(E.SingleSelect, {
                          value: i,
                          options: l,
                          isDisabled: r === el || !n,
                          onChange: this.handleAFKTimeoutChange,
                        }),
                      }),
                    }),
                  ],
                }),
                (0, s.jsx)(E.FormText, {
                  className: es.marginTop8,
                  type: E.FormTextTypes.DESCRIPTION,
                  children: en.Z.Messages.FORM_HELP_AFK_CHANNEL,
                }),
              ],
            })
          );
        }
        renderJoinNotificationSection() {
          var e;
          let {
              guild: t,
              channels: n,
              canManageGuild: a,
              eligibleForDeadchatPrompt: i,
            } = this.props,
            l = null !== (e = t.systemChannelId) && void 0 !== e ? e : eo,
            o = d()(n)
              .filter((e) => {
                let { channel: t } = e;
                return t.type === J.d4z.GUILD_TEXT;
              })
              .map((e) => {
                let { channel: t } = e;
                return em(t);
              })
              .value();
          o.unshift({ value: eo, label: en.Z.Messages.NO_SYSTEM_CHANNEL });
          let c = (0, v.eI)(t),
            u =
              c ||
              (0, W.yE)(
                t.systemChannelFlags,
                J.xmn.SUPPRESS_ROLE_SUBSCRIPTION_PURCHASE_NOTIFICATIONS,
              ),
            _ =
              c ||
              (0, W.yE)(
                t.systemChannelFlags,
                J.xmn.SUPPRESS_ROLE_SUBSCRIPTION_PURCHASE_NOTIFICATION_REPLIES,
              );
          return (0, s.jsxs)(E.FormSection, {
            className: es.divider,
            children: [
              (0, s.jsx)(E.FormTitle, {
                children: en.Z.Messages.FORM_LABEL_SYSTEM_CHANNEL,
              }),
              (0, s.jsx)(E.SingleSelect, {
                value: l,
                options: o,
                isDisabled: !a,
                onChange: this.handleSystemChannelChange,
                renderOptionLabel: eT,
                renderOptionValue: eE,
              }),
              (0, s.jsx)(E.FormText, {
                className: es.marginTop8,
                type: E.FormTextTypes.DESCRIPTION,
                children: en.Z.Messages.FORM_HELP_SYSTEM_CHANNEL,
              }),
              (0, s.jsx)(E.FormSwitch, {
                className: es.marginTop20,
                onChange: this.handleShowJoinsChange,
                value: !(0, W.yE)(
                  t.systemChannelFlags,
                  J.xmn.SUPPRESS_JOIN_NOTIFICATIONS,
                ),
                hideBorder: !0,
                disabled: !a || l === eo,
                children: en.Z.Messages.FORM_HELP_SYSTEM_CHANNEL_JOIN_MESSAGES,
              }),
              (0, s.jsx)(E.FormSwitch, {
                className: r()(es.__invalid_marginReset, es.marginTop20),
                onChange: this.handleShowJoinRepliesChange,
                value: !(0, W.yE)(
                  t.systemChannelFlags,
                  J.xmn.SUPPRESS_JOIN_NOTIFICATION_REPLIES,
                ),
                hideBorder: !0,
                disabled: !a || l === eo,
                children:
                  en.Z.Messages.FORM_HELP_SYSTEM_CHANNEL_JOIN_MESSAGE_REPLIES,
              }),
              (0, s.jsx)(E.FormSwitch, {
                className: r()(es.__invalid_marginReset, es.marginTop20),
                onChange: this.handleShowSubscriptionsChange,
                value: !(0, W.yE)(
                  t.systemChannelFlags,
                  J.xmn.SUPPRESS_PREMIUM_SUBSCRIPTIONS,
                ),
                hideBorder: !0,
                disabled: !a || l === eo,
                children:
                  en.Z.Messages
                    .FORM_HELP_SYSTEM_CHANNEL_PREMIUM_SUBSCRIPTION_MESSAGES,
              }),
              (0, s.jsx)(E.FormSwitch, {
                className: r()(es.__invalid_marginReset, es.marginTop20),
                onChange: this.handleShowGuildRemindersChange,
                value: !(0, W.yE)(
                  t.systemChannelFlags,
                  J.xmn.SUPPRESS_GUILD_REMINDER_NOTIFICATIONS,
                ),
                hideBorder: !0,
                disabled: !a || l === eo,
                children:
                  en.Z.Messages.FORM_HELP_SYSTEM_CHANNEL_GUILD_REMINDERS,
              }),
              u &&
                (0, s.jsx)(E.FormSwitch, {
                  className: r()(es.__invalid_marginReset, es.marginTop20),
                  onChange:
                    this.handleShowGuildRoleSubscriptionPurchaseMessages,
                  value: !(0, W.yE)(
                    t.systemChannelFlags,
                    J.xmn.SUPPRESS_ROLE_SUBSCRIPTION_PURCHASE_NOTIFICATIONS,
                  ),
                  hideBorder: !0,
                  disabled: !a || l === eo,
                  children:
                    en.Z.Messages
                      .FORM_HELP_SYSTEM_CHANNEL_ROLE_SUBSCRIPTION_PURCHASE_MESSAGES,
                }),
              _ &&
                (0, s.jsx)(E.FormSwitch, {
                  className: r()(es.__invalid_marginReset, es.marginTop20),
                  onChange:
                    this
                      .handleShowGuildRoleSubscriptionPurchaseMessageRepliesChange,
                  value: !(0, W.yE)(
                    t.systemChannelFlags,
                    J.xmn
                      .SUPPRESS_ROLE_SUBSCRIPTION_PURCHASE_NOTIFICATION_REPLIES,
                  ),
                  hideBorder: !0,
                  disabled: !a || l === eo,
                  children:
                    en.Z.Messages
                      .FORM_HELP_SYSTEM_CHANNEL_ROLE_SUBSCRIPTION_PURCHASE_MESSAGE_REPLIES,
                }),
              i &&
                (0, s.jsx)(E.FormSwitch, {
                  className: r()(es.__invalid_marginReset, es.marginTop20),
                  onChange: this.handleShowDeadchatPromptMessageChange,
                  value: !(0, W.yE)(
                    t.systemChannelFlags,
                    J.xmn.SUPPRESS_CHANNEL_PROMPT_DEADCHAT,
                  ),
                  hideBorder: !0,
                  disabled: !a || l === eo,
                  children: (0, s.jsxs)("div", {
                    className: es.flexRow,
                    children: [
                      en.Z.Messages
                        .FORM_HELP_SYSTEM_CHANNEL_DEADCHAT_PROMPT_MESSAGE,
                      (0, s.jsx)(O.Z, {}),
                    ],
                  }),
                }),
            ],
          });
        }
        renderNotificationSection() {
          let { guild: e, canManageGuild: t, guildMemberCount: n } = this.props,
            a = [
              {
                name: en.Z.Messages.FORM_LABEL_ALL_MESSAGES,
                value: J.bL.ALL_MESSAGES,
                desc:
                  null != n && n >= J.qWG
                    ? en.Z.Messages
                        .GUILD_SETTINGS_DEFAULT_NOTIFICATIONS_LARGE_GUILD_NOTIFY_ALL
                    : null,
              },
              {
                name: en.Z.Messages.FORM_LABEL_ONLY_MENTIONS.format(),
                value: J.bL.ONLY_MENTIONS,
              },
            ];
          return (0, s.jsx)("div", {
            ref: this._notificationSectionRef,
            children: (0, s.jsxs)(E.FormSection, {
              className: es.divider,
              children: [
                (0, s.jsx)(E.FormTitle, {
                  children:
                    en.Z.Messages.FORM_LABEL_DEFAULT_NOTIFICATION_SETTINGS,
                }),
                (0, s.jsx)(E.FormText, {
                  type: E.FormTextTypes.DESCRIPTION,
                  className: es.marginBottom20,
                  children:
                    en.Z.Messages
                      .GUILD_SETTINGS_DEFAULT_NOTIFICATION_SETTINGS_INTRO,
                }),
                (0, s.jsx)(E.FormText, {
                  type: E.FormTextTypes.DESCRIPTION,
                  className: es.marginBottom20,
                  children:
                    en.Z.Messages
                      .GUILD_SETTINGS_DEFAULT_NOTIFICATION_SETTINGS_TIP,
                }),
                (0, s.jsx)(E.RadioGroup, {
                  options: a,
                  value: e.defaultMessageNotifications,
                  disabled: !t,
                  onChange: this.handleDefaultMessageNotificationsChange,
                }),
              ],
            }),
          });
        }
        renderActivityFeedSection() {
          let { canManageGuild: e, isInventoryFeedEnabled: t } = this.props;
          return void 0 === t
            ? null
            : (0, s.jsx)("div", {
                ref: this._notificationSectionRef,
                children: (0, s.jsxs)(E.FormSection, {
                  className: es.divider,
                  children: [
                    (0, s.jsx)(E.FormTitle, {
                      children: en.Z.Messages.FORM_LABEL_ACTIVITY_FEED,
                    }),
                    (0, s.jsx)(E.FormSwitch, {
                      className: es.marginBottom0,
                      onChange: this.handleShowActivityFeedToggle,
                      value: t,
                      hideBorder: !0,
                      note: en.Z.Messages.FORM_HELP_ACTIVITY_FEED,
                      disabled: !e,
                      children: en.Z.Messages.FORM_ACTIVITY_FEED_TOGGLE,
                    }),
                  ],
                }),
              });
        }
        renderSummariesSection() {
          let { guild: e, canManageGuild: t } = this.props;
          return (0, m.Jc)(e, !1)
            ? (0, s.jsx)("div", {
                children: (0, s.jsx)(E.FormSection, {
                  className: es.divider,
                  children: (0, s.jsx)(E.FormSwitch, {
                    className: r()(es.marginTop8, es.marginBottom8),
                    onChange: this.handleConversationSummariesToggle,
                    value: e.hasFeature(J.oNc.SUMMARIES_ENABLED_BY_USER),
                    hideBorder: !0,
                    note: en.Z.Messages.GUILD_SETTINGS_SUMMARIES_TOGGLE_DESCRIPTION.format(
                      {
                        helpdeskArticle: K.Z.getArticleURL(
                          J.BhN.CONVERSATION_SUMMARIES,
                        ),
                      },
                    ),
                    disabled: !t,
                    children: (0, s.jsxs)("div", {
                      className: es.badgedItem,
                      children: [
                        en.Z.Messages.GUILD_SETTINGS_SUMMARIES_TOGGLE,
                        (0, s.jsx)(E.TextBadge, {
                          text: en.Z.Messages.BETA,
                          color: _.Z.unsafe_rawColors.BRAND_500.css,
                          className: es.__invalid_betaTag,
                        }),
                      ],
                    }),
                  }),
                }),
              })
            : null;
        }
        renderServerInviteBGSection() {
          let { guild: e, canManageGuild: t } = this.props,
            n = e.hasFeature(J.oNc.INVITE_SPLASH),
            a = t && n,
            i = (0, s.jsx)(U.Z, {
              image: e.splash,
              makeURL: (t) =>
                null != t
                  ? Y.ZP.getGuildSplashURL({ id: e.id, splash: t })
                  : null,
              disabled: !a,
              onChange: this.handleSplashChange,
              hint: en.Z.Messages.CHANGE_SPLASH,
              enabled: a,
              maxFileSizeBytes: et.B,
              onFileSizeError: () => (0, b.Z)(et.B),
            });
          return (0, s.jsx)("div", {
            ref: this._inviteSectionRef,
            children: (0, s.jsx)(E.FormSection, {
              className: es.divider,
              children: (0, s.jsxs)(f.Z, {
                basis: "50%",
                direction: f.Z.Direction.HORIZONTAL,
                align: f.Z.Justify.START,
                children: [
                  (0, s.jsxs)(f.Z.Child, {
                    wrap: !0,
                    basis: "50%",
                    children: [
                      (0, s.jsxs)(E.FormTitle, {
                        className: es.flexFormTitle,
                        children: [
                          (0, s.jsx)("div", {
                            children:
                              en.Z.Messages
                                .GUILD_SETTINGS_SERVER_INVITE_BACKGROUND,
                          }),
                          (0, s.jsx)(A.Z, {
                            guild: e,
                            guildFeature: J.oNc.INVITE_SPLASH,
                            className: es.guildFeatureAvailabilityIndicator,
                            onClick: this.handleInviteSplashUpsellIndicator,
                          }),
                        ],
                      }),
                      (0, s.jsx)(E.FormText, {
                        type: E.FormTextTypes.DESCRIPTION,
                        className: es.marginBottom8,
                        children:
                          en.Z.Messages.GUILD_SETTINGS_SPLASH_DESCRIPTION,
                      }),
                      (0, s.jsx)(E.FormText, {
                        type: E.FormTextTypes.DESCRIPTION,
                        children:
                          en.Z.Messages.GUILD_SETTINGS_SPLASH_RECOMMEND.format({
                            articleURL: K.Z.getArticleURL(
                              J.BhN.GUILD_INVITE_SPLASH,
                            ),
                          }),
                      }),
                      n
                        ? (0, s.jsxs)(E.Button, {
                            disabled: !a,
                            color: E.ButtonColors.BRAND,
                            className: es.marginTop16,
                            children: [
                              en.Z.Messages.UPLOAD_BACKGROUND,
                              (0, s.jsx)(G.ZP, {
                                disabled: !a,
                                onChange: this.handleSplashChange,
                                maxFileSizeBytes: et.B,
                                onFileSizeError: () => (0, b.Z)(et.B),
                              }),
                            ],
                          })
                        : this.uploadBGUpsellButton(
                            this.handleInviteSplashUpsellButton,
                          ),
                    ],
                  }),
                  (0, s.jsx)(f.Z.Child, {
                    wrap: !0,
                    basis: "50%",
                    children: n
                      ? i
                      : (0, s.jsx)(E.Clickable, {
                          "aria-hidden": !0,
                          tabIndex: -1,
                          className: es.upsell,
                          onClick: this.handleInviteSplashUpsellUpload,
                          children: i,
                        }),
                  }),
                ],
              }),
            }),
          });
        }
        renderBanner() {
          let {
              guild: e,
              canManageGuild: t,
              analyticsLocations: n,
            } = this.props,
            a = e.hasFeature(J.oNc.BANNER),
            i = e.hasFeature(J.oNc.ANIMATED_BANNER),
            r = a && t,
            l = (0, s.jsx)(U.Z, {
              image: e.banner,
              makeURL: (t) =>
                null != t
                  ? Y.ZP.getGuildBannerURL({ id: e.id, banner: t }, i)
                  : null,
              disabled: !r,
              onChange: this.handleBannerChange,
              hint: en.Z.Messages.CHANGE_SPLASH,
              onOpenImageSelectModal: () =>
                eh(
                  ee.pC.GUILD_BANNER,
                  et.B,
                  this.handleBannerChange,
                  !0,
                  { page: J.ZY5.GUILD_SETTINGS, section: J.jXE.GUILD_BANNER },
                  n,
                ),
              enabled: r,
            }),
            o = (0, s.jsx)(E.Button, {
              disabled: !r,
              color: E.Button.Colors.BRAND,
              className: es.marginTop16,
              onClick: () =>
                eh(
                  ee.pC.GUILD_BANNER,
                  et.B,
                  this.handleBannerChange,
                  !0,
                  { page: J.ZY5.GUILD_SETTINGS, section: J.jXE.GUILD_BANNER },
                  n,
                ),
              children: en.Z.Messages.UPLOAD_BACKGROUND,
            });
          return (0, s.jsx)(E.FormSection, {
            className: es.divider,
            children: (0, s.jsxs)(f.Z, {
              basis: "50%",
              direction: f.Z.Direction.HORIZONTAL,
              align: f.Z.Justify.START,
              children: [
                (0, s.jsxs)(f.Z.Child, {
                  wrap: !0,
                  basis: "50%",
                  children: [
                    (0, s.jsxs)(E.FormTitle, {
                      className: es.flexFormTitle,
                      children: [
                        (0, s.jsx)("div", {
                          children: en.Z.Messages.FORM_LABEL_SERVER_BANNER,
                        }),
                        (0, s.jsx)(A.Z, {
                          guild: e,
                          guildFeature: J.oNc.BANNER,
                          className: es.guildFeatureAvailabilityIndicator,
                          onClick: this.handleBannerUpsellIndicator,
                        }),
                      ],
                    }),
                    (0, s.jsx)(E.FormText, {
                      type: E.FormTextTypes.DESCRIPTION,
                      className: es.marginBottom8,
                      children: en.Z.Messages.FORM_HELP_SERVER_BANNER,
                    }),
                    (0, s.jsx)(E.FormText, {
                      type: E.FormTextTypes.DESCRIPTION,
                      children:
                        en.Z.Messages.GUILD_SETTINGS_BANNER_RECOMMEND.format({
                          articleURL: K.Z.getArticleURL(
                            J.BhN.GUILD_BANNER_SPLASH,
                          ),
                        }),
                    }),
                    a
                      ? o
                      : this.uploadBGUpsellButton(
                          this.handleBannerUpsellButton,
                        ),
                  ],
                }),
                (0, s.jsx)(f.Z.Child, {
                  wrap: !0,
                  basis: "50%",
                  children: a
                    ? l
                    : (0, s.jsx)(E.Clickable, {
                        "aria-hidden": !0,
                        tabIndex: -1,
                        className: es.upsell,
                        onClick: this.handleBannerUpsellUpload,
                        children: l,
                      }),
                }),
              ],
            }),
          });
        }
        renderProgressBar() {
          let { guild: e, canManageGuild: t, theme: n } = this.props;
          return (0, s.jsx)(E.FormSection, {
            children: (0, s.jsxs)(f.Z, {
              align: f.Z.Align.START,
              children: [
                (0, s.jsxs)(f.Z, {
                  basis: "50%",
                  direction: f.Z.Direction.VERTICAL,
                  align: f.Z.Align.STRETCH,
                  children: [
                    (0, s.jsx)(E.FormSwitch, {
                      className: r()(es.marginTop8, es.marginBottom8),
                      onChange: this.handlePremiumProgressBarEnabledChange,
                      value: e.premiumProgressBarEnabled,
                      hideBorder: !0,
                      disabled: !t,
                      children:
                        en.Z.Messages.GUILD_SETTINGS_PREMIUM_PROGRESS_BAR_TITLE,
                    }),
                    (0, s.jsx)(E.FormText, {
                      type: E.FormTextTypes.DESCRIPTION,
                      className: es.marginBottom8,
                      children:
                        en.Z.Messages
                          .GUILD_SETTINGS_PREMIUM_PROGRESS_BAR_DESCRIPTION,
                    }),
                  ],
                }),
                (0, s.jsx)(f.Z.Child, {
                  wrap: !0,
                  basis: "50%",
                  children: (0, s.jsx)("img", {
                    alt: en.Z.Messages
                      .GUILD_SETTINGS_PREMIUM_PROGRESS_BAR_IMG_ALT,
                    src: (0, I.ap)(n) ? ei : ea,
                    className: es.progressBarImage,
                  }),
                }),
              ],
            }),
          });
        }
        renderDisplaySection() {
          return (0, s.jsx)("div", {
            ref: this._displaySectionRef,
            children: (0, s.jsxs)(E.FormSection, {
              title: en.Z.Messages.DISPLAY,
              tag: E.FormTitleTags.H1,
              className: es.divider,
              children: [
                this.renderProgressBar(),
                this.renderBanner(),
                this.renderServerInviteBGSection(),
              ],
            }),
          });
        }
        render() {
          return (0, s.jsxs)(E.FormSection, {
            title: en.Z.Messages.SERVER_OVERVIEW,
            tag: E.FormTitleTags.H1,
            children: [
              this.renderBaseSettings(),
              this.renderSummariesSection(),
              this.renderAFKSection(),
              this.renderJoinNotificationSection(),
              this.renderActivityFeedSection(),
              this.renderNotificationSection(),
              this.renderDisplaySection(),
            ],
          });
        }
        constructor(...e) {
          super(...e),
            er(this, "_imageInputRef", a.createRef()),
            er(this, "_displaySectionRef", a.createRef()),
            er(this, "_inviteSectionRef", a.createRef()),
            er(this, "_notificationSectionRef", a.createRef()),
            er(this, "handleIconChange", (e) => {
              q.Z.updateGuild({ icon: e });
            }),
            er(this, "handleOpenImageCroppingModal", (e, t) => {
              (0, E.openModalLazy)(async () => {
                let { default: a } = await Promise.all([
                  n.e("70687"),
                  n.e("48017"),
                  n.e("299"),
                ]).then(n.bind(n, 850085));
                return (n) =>
                  (0, s.jsx)(a, {
                    onCrop: this.handleIconChange,
                    imgURI: e,
                    file: t,
                    ...n,
                  });
              });
            }),
            er(this, "handleUploadImage", (e) => {
              var t;
              e.target === e.currentTarget &&
                (null === (t = this._imageInputRef.current) ||
                  void 0 === t ||
                  t.activateUploadDialogue());
            }),
            er(this, "handleShowJoinsChange", (e) =>
              this.handleSystemChannelFlagsChange(
                J.xmn.SUPPRESS_JOIN_NOTIFICATIONS,
                !e,
              ),
            ),
            er(this, "handleShowSubscriptionsChange", (e) =>
              this.handleSystemChannelFlagsChange(
                J.xmn.SUPPRESS_PREMIUM_SUBSCRIPTIONS,
                !e,
              ),
            ),
            er(this, "handleShowGuildRemindersChange", (e) => {
              this.handleSystemChannelFlagsChange(
                J.xmn.SUPPRESS_GUILD_REMINDER_NOTIFICATIONS,
                !e,
              );
            }),
            er(this, "handleShowJoinRepliesChange", (e) =>
              this.handleSystemChannelFlagsChange(
                J.xmn.SUPPRESS_JOIN_NOTIFICATION_REPLIES,
                !e,
              ),
            ),
            er(this, "handleShowGuildRoleSubscriptionPurchaseMessages", (e) => {
              this.handleSystemChannelFlagsChange(
                J.xmn.SUPPRESS_ROLE_SUBSCRIPTION_PURCHASE_NOTIFICATIONS,
                !e,
              );
            }),
            er(this, "handleShowDeadchatPromptMessageChange", (e) => {
              this.handleSystemChannelFlagsChange(
                J.xmn.SUPPRESS_CHANNEL_PROMPT_DEADCHAT,
                !e,
              );
            }),
            er(
              this,
              "handleShowGuildRoleSubscriptionPurchaseMessageRepliesChange",
              (e) => {
                this.handleSystemChannelFlagsChange(
                  J.xmn
                    .SUPPRESS_ROLE_SUBSCRIPTION_PURCHASE_NOTIFICATION_REPLIES,
                  !e,
                );
              },
            ),
            er(this, "handleHomeHeaderChange", (e, t) => {
              if (null == e || void 0 === t) {
                q.Z.updateGuild({ homeHeader: null });
                return;
              }
              (0, E.openModalLazy)(async () => {
                let { default: a } = await Promise.all([
                  n.e("70687"),
                  n.e("48017"),
                  n.e("299"),
                ]).then(n.bind(n, 850085));
                return (n) =>
                  (0, s.jsx)(a, {
                    imgURI: e,
                    file: t,
                    onCrop: (e) => q.Z.updateGuild({ homeHeader: e }),
                    uploadType: ee.pC.HOME_HEADER,
                    ...n,
                  });
              });
            }),
            er(this, "handleBannerChange", (e, t) => {
              let { guild: n, analyticsLocations: s } = this.props,
                a = null == t ? void 0 : t.type,
                i = {
                  page: J.ZY5.GUILD_SETTINGS,
                  section: J.jXE.ANIMATED_GUILD_BANNER_UPSELL,
                  object: "temp",
                };
              if (null != a && null != e) {
                if ("image/gif" !== a || n.hasFeature(J.oNc.ANIMATED_BANNER)) {
                  if (!n.hasFeature(J.oNc.BANNER)) {
                    (i.object = J.qAy.IMAGE_CROPPING_MODAL),
                      (0, M.c)({
                        guild: n,
                        analyticsLocations: s,
                        analyticsLocation: i,
                        banner: e,
                        isGIF: !1,
                      });
                    return;
                  }
                } else {
                  (i.object = J.qAy.GIF_CROPPING_MODAL),
                    (0, M.c)({
                      guild: n,
                      analyticsLocations: s,
                      analyticsLocation: i,
                      banner: e,
                      isGIF: !0,
                    });
                  return;
                }
              }
              q.Z.updateGuild({ banner: e });
            }),
            er(this, "handleShowModalUpsell", (e, t, n, s) => {
              e.preventDefault(), e.stopPropagation();
              let { guild: a, analyticsLocations: i } = this.props;
              (0, g.yw)(J.rMx.PREMIUM_GUILD_PROMOTION_OPENED, {
                location: { section: t, object: J.qAy.LEARN_MORE },
                guild_id: null == a ? void 0 : a.id,
                location_stack: i,
              }),
                (0, D.Z)({
                  analyticsLocations: i,
                  analyticsSourceLocation: {
                    section: t,
                    object: n,
                    page: J.ZY5.GUILD_SETTINGS,
                  },
                  guild: a,
                  perks: s,
                });
            }),
            er(this, "handleInviteSplashUpsellIndicator", (e) => {
              this.handleShowModalUpsell(
                e,
                J.jXE.GUILD_INVITE_BACKGROUND,
                J.qAy.BADGE,
                (0, $.o9)(),
              );
            }),
            er(this, "handleInviteSplashUpsellButton", (e) => {
              this.handleShowModalUpsell(
                e,
                J.jXE.GUILD_INVITE_BACKGROUND,
                J.qAy.BUTTON_CTA,
                (0, $.o9)(),
              );
            }),
            er(this, "handleInviteSplashUpsellUpload", (e) => {
              this.handleShowModalUpsell(
                e,
                J.jXE.GUILD_INVITE_BACKGROUND,
                J.qAy.UPLOAD_IMAGE,
                (0, $.o9)(),
              );
            }),
            er(this, "handleBannerUpsellIndicator", (e) => {
              this.handleShowModalUpsell(
                e,
                J.jXE.GUILD_BANNER,
                J.qAy.BADGE,
                (0, $.XO)(),
              );
            }),
            er(this, "handleBannerUpsellButton", (e) => {
              this.handleShowModalUpsell(
                e,
                J.jXE.GUILD_BANNER,
                J.qAy.BUTTON_CTA,
                (0, $.XO)(),
              );
            }),
            er(this, "handleBannerUpsellUpload", (e) => {
              this.handleShowModalUpsell(
                e,
                J.jXE.GUILD_BANNER,
                J.qAy.UPLOAD_IMAGE,
                (0, $.XO)(),
              );
            }),
            er(this, "handleConversationSummariesToggle", (e) => {
              let { guild: t } = this.props,
                n = new Set(t.features);
              e
                ? n.add(J.oNc.SUMMARIES_ENABLED_BY_USER)
                : n.delete(J.oNc.SUMMARIES_ENABLED_BY_USER),
                q.Z.updateGuild({ features: n });
            }),
            er(this, "handleShowActivityFeedToggle", (e) => {
              let { guild: t } = this.props,
                n = new Set(t.features);
              e
                ? (n.add(J.oNc.ACTIVITY_FEED_ENABLED_BY_USER),
                  n.delete(J.oNc.ACTIVITY_FEED_DISABLED_BY_USER))
                : (n.add(J.oNc.ACTIVITY_FEED_DISABLED_BY_USER),
                  n.delete(J.oNc.ACTIVITY_FEED_ENABLED_BY_USER)),
                q.Z.updateGuild({ features: n });
            }),
            er(this, "uploadBGUpsellButton", (e) =>
              (0, s.jsxs)(E.ShinyButton, {
                color: E.Button.Colors.GREEN,
                className: r()(es.marginTop16),
                innerClassName: es.upsellButton,
                onClick: e,
                children: [
                  (0, s.jsx)(V.Z, {
                    height: 16,
                    width: 16,
                    className: es.premiumUpsellBadge,
                  }),
                  " ",
                  en.Z.Messages.PREMIUM_GUILD_UNLOCK_WTH_BOOSTING_CTA,
                ],
              }),
            );
        }
      }
      function eg() {
        var e;
        let {
            guild: t,
            errors: n,
            submitting: i,
            subsection: r,
          } = (0, u.cj)([X.Z], () => X.Z.getProps()),
          l = (0, N.ZP)(),
          { analyticsLocations: c } = (0, h.ZP)(S.Z.OVERVIEW);
        a.useEffect(() => {
          (0, Z.Kw)(j.v6.ANIMATED_GUILD_BANNER_SETTINGS_NEW_PILL);
        }, []);
        let d = (0, u.e7)([y.Z], () =>
            y.Z.getCategories(null == t ? void 0 : t.id),
          ),
          _ = a.useMemo(() => (0, C.Z)(d._categories, d), [d]),
          { canManageGuild: I, isGuildAdmin: E } = (0, u.cj)([k.Z], () => ({
            canManageGuild: k.Z.can(J.Plq.MANAGE_GUILD, t),
            isGuildAdmin: k.Z.can(J.Plq.ADMINISTRATOR, t),
          })),
          T = (0, u.e7)([F.Z], () =>
            F.Z.getMemberCount(null == t ? void 0 : t.id),
          ),
          m = (0, L.E)(t),
          g = (0, u.e7)([H.default], () => H.default.getCurrentUser());
        o()(
          null != g,
          "GuildSettingsOverview: currentUser cannot be undefined",
        );
        let { enableDeadchat: x } = R.Z.useExperiment(
          {
            guildId:
              null !== (e = null == t ? void 0 : t.id) && void 0 !== e
                ? e
                : J.lds,
            location: "guild_settings",
          },
          { disable: null == t, autoTrackExposure: !0 },
        );
        return null == t
          ? null
          : (0, s.jsx)(h.Gt, {
              value: c,
              children: (0, s.jsx)(eS, {
                channels: _,
                canManageGuild: I,
                isGuildAdmin: E,
                subsection: r,
                guild: t,
                errors: n,
                submitting: i,
                currentUser: g,
                guildMemberCount: T,
                isInventoryFeedEnabled: m,
                theme: l,
                analyticsLocations: c,
                eligibleForDeadchatPrompt: x,
              }),
            });
      }
      function eh(e, t, a) {
        let i =
            !(arguments.length > 3) || void 0 === arguments[3] || arguments[3],
          r = arguments.length > 4 ? arguments[4] : void 0,
          l = arguments.length > 5 ? arguments[5] : void 0;
        (0, E.openModalLazy)(async () => {
          let { default: o } = await Promise.all([
            n.e("70687"),
            n.e("18763"),
          ]).then(n.bind(n, 28130));
          return (n) =>
            (0, s.jsx)(o, {
              maxFileSizeBytes: t,
              onComplete: a,
              uploadType: e,
              showUpsellHeader: i,
              analyticsLocation: r,
              analyticsLocations: l,
              ...n,
            });
        });
      }
    },
    651780: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return O;
        },
      });
      var s = n(735250),
        a = n(470079),
        i = n(442837),
        r = n(481060),
        l = n(570140),
        o = n(355467),
        c = n(821849),
        d = n(774078),
        u = n(15640),
        _ = n(774380),
        I = n(404270),
        E = n(386937),
        T = n(316350),
        m = n(899667),
        N = n(626135),
        S = n(267642),
        g = n(63063),
        h = n(999382),
        C = n(981631),
        x = n(689938),
        p = n(720898);
      function R(e) {
        let { endsAt: t, appliedGuildBoostsToMaintain: n, tierName: a } = e,
          { days: i, hours: r } = (0, d.Z)(t);
        return n <= 0
          ? null
          : (0, s.jsx)(s.Fragment, {
              children:
                0 === i && 0 === r
                  ? x.Z.Messages.PREMIUM_GUILD_GRACE_PERIOD_COOLDOWN_SOON.format(
                      { tierName: a, numPremiumSubscriptions: n },
                    )
                  : x.Z.Messages.PREMIUM_GUILD_GRACE_PERIOD_COOLDOWN.format({
                      days: i,
                      hours: r,
                      tierName: a,
                      numPremiumSubscriptions: n,
                    }),
            });
      }
      function L(e) {
        let { appliedGuildBoosts: t, guildId: n } = e,
          a = (0, S.gZ)(t, n),
          i = (0, S.nW)((0, S.rF)(t.length, n));
        if (null == a || null == i) return null;
        let l = (0, S._k)(t, n);
        return (0, s.jsxs)(r.HelpMessage, {
          messageType: r.HelpMessageTypes.WARNING,
          children: [
            (0, s.jsx)("div", {
              className: p.guildBoostingGracePeriodTitle,
              children: x.Z.Messages.PREMIUM_GUILD_GRACE_PERIOD_TITLE.format(),
            }),
            (0, s.jsx)(R, {
              endsAt: a,
              appliedGuildBoostsToMaintain: l,
              tierName: i,
            }),
          ],
        });
      }
      let f = (e) => {
        let {
          isAnimatedTo: t,
          onSetRef: n,
          subscriptionCount: a,
          tier: i,
          tiers: r,
          tierIndex: l,
          guildId: o,
        } = e;
        return (0, s.jsx)(
          T.Z,
          {
            subscriptionCount: a,
            tier: i,
            onSetRef: n,
            isAnimatedTo: t,
            hasBottomMargin: l !== r.length - 1,
            guildId: o,
          },
          i.tier,
        );
      };
      function O() {
        a.useEffect(() => {
          l.Z.wait(() => {
            (0, o.tZ)(), (0, c.Y2)();
          });
        }, []);
        let e = (0, i.e7)([h.Z], () => h.Z.getGuild()),
          t = (0, i.e7)([m.Z], () =>
            null != e ? m.Z.getAppliedGuildBoostsForGuild(e.id) : null,
          ),
          n = (0, u.V)();
        return (0, s.jsxs)(s.Fragment, {
          children: [
            (0, s.jsxs)(a.Fragment, {
              children: [
                (0, s.jsx)(r.FormTitle, {
                  tag: r.FormTitleTags.H1,
                  children: x.Z.Messages.GUILD_SETTINGS_PREMIUM_GUILD_TITLE,
                }),
                null != t && null != e
                  ? (0, s.jsx)(L, { appliedGuildBoosts: t, guildId: e.id })
                  : null,
                (0, s.jsx)(r.FormText, {
                  type: r.FormText.Types.DESCRIPTION,
                  className: p.titleBlurb,
                  children:
                    x.Z.Messages.GUILD_SETTINGS_PREMIUM_GUILD_BLURB.format({
                      helpdeskArticle: g.Z.getArticleURL(
                        C.BhN.GUILD_SUBSCRIPTIONS,
                      ),
                    }),
                }),
              ],
            }),
            (0, s.jsx)(E.Z, {
              tiers: (0, S.cP)(
                null != e &&
                  e.hasFeature(C.oNc.COMMUNITY) &&
                  e.maxStageVideoChannelUsers >= C.B9o,
              ),
              renderTier: f,
            }),
            (0, s.jsx)("div", { className: p.divider }),
            n ? (0, s.jsx)(I.Z, {}) : null,
            n
              ? (0, s.jsx)(_.Z, {
                  onOpenPremiumClick: () =>
                    void N.default.track(C.rMx.PREMIUM_PROMOTION_OPENED, {
                      location: {
                        page: C.ZY5.GUILD_SETTINGS,
                        section: C.jXE.NITRO_CROSS_PROMO_FROM_BOOSTING,
                        object: C.qAy.BUTTON_CTA,
                      },
                    }),
                })
              : null,
          ],
        });
      }
    },
    279542: function (e, t, n) {
      "use strict";
      n.d(t, {
        ZP: function () {
          return v;
        },
        fp: function () {
          return A;
        },
        k0: function () {
          return O;
        },
      }),
        n(47120);
      var s = n(735250),
        a = n(470079),
        i = n(120356),
        r = n.n(i),
        l = n(392711),
        o = n(442837),
        c = n(481060),
        d = n(230711),
        u = n(497321),
        _ = n(688465),
        I = n(241559),
        E = n(496675),
        T = n(246946),
        m = n(594174),
        N = n(63063),
        S = n(78451),
        g = n(434404),
        h = n(999382),
        C = n(181339),
        x = n(193544),
        p = n(981631),
        R = n(689938),
        L = n(10105);
      function f(e) {
        let { guild: t } = e,
          n = (0, o.e7)(
            [E.Z],
            () => null != t && E.Z.can(p.Plq.MANAGE_GUILD, t),
            [t],
          ),
          i = a.useCallback(
            async (e) => {
              let { value: n } = e;
              try {
                await g.Z.saveGuild(t.id, { verificationLevel: n }),
                  g.Z.updateGuild({ verificationLevel: n });
              } catch (e) {
                (0, c.showToast)(
                  (0, c.createToast)(
                    R.Z.Messages.GUILD_ANTIRAID_SAFETY_SETUP_ERROR,
                    c.ToastType.FAILURE,
                  ),
                );
              }
            },
            [t],
          ),
          r = a.useMemo(() => {
            let e = (0, S.IF)(
              null == t ? void 0 : t.hasFeature(p.oNc.COMMUNITY),
            ).map((e) => ({ ...e, tooltipPosition: "left" }));
            return (0, S.LJ)(e);
          }, [t]),
          l = a.useMemo(
            () =>
              r.find(
                (e) => e.value === (null == t ? void 0 : t.verificationLevel),
              ),
            [t, r],
          );
        return (0, s.jsxs)("div", {
          className: L.setupContainer,
          children: [
            (0, s.jsxs)("div", {
              className: L.switchItemTextContent,
              children: [
                (0, s.jsx)(c.Text, {
                  color: "header-primary",
                  variant: "text-md/semibold",
                  children: R.Z.Messages.FORM_LABEL_VERIFICATION_LEVEL,
                }),
                (0, s.jsx)(c.Text, {
                  color: "header-secondary",
                  variant: "text-sm/normal",
                  children: R.Z.Messages.FORM_HELP_VERIFICATION_LEVEL.format(),
                }),
              ],
            }),
            (0, s.jsx)(x.Z, {
              changeTitle: R.Z.Messages.FORM_LABEL_VERIFICATION_LEVEL_CHANGE,
              value: null == l ? void 0 : l.value,
              options: r,
              disabled: !n,
              onChange: i,
            }),
          ],
        });
      }
      function O(e) {
        let { guild: t, className: n, withDivider: i = !0 } = e,
          l = (0, o.e7)(
            [E.Z],
            () => null != t && E.Z.can(p.Plq.MANAGE_GUILD, t),
            [t],
          ),
          d = a.useCallback(
            async (e) => {
              let { value: n } = e;
              try {
                await g.Z.saveGuild(t.id, { explicitContentFilter: n }),
                  g.Z.updateGuild({ explicitContentFilter: n });
              } catch (e) {
                (0, c.showToast)(
                  (0, c.createToast)(
                    R.Z.Messages.GUILD_ANTIRAID_SAFETY_SETUP_ERROR,
                    c.ToastType.FAILURE,
                  ),
                );
              }
            },
            [t.id],
          ),
          u = a.useMemo(() => {
            let e = (0, S.MF)(
              null == t ? void 0 : t.hasFeature(p.oNc.COMMUNITY),
            ).map((e) => ({ ...e, tooltipPosition: "left" }));
            return (0, S.LJ)(e);
          }, [t]),
          _ = a.useMemo(
            () =>
              u.find(
                (e) =>
                  e.value === (null == t ? void 0 : t.explicitContentFilter),
              ),
            [t, u],
          );
        return (0, s.jsxs)(s.Fragment, {
          children: [
            i && (0, s.jsx)(c.FormDivider, { className: L.divider }),
            (0, s.jsxs)("div", {
              className: r()(L.setupContainer, n),
              children: [
                (0, s.jsxs)("div", {
                  className: L.switchItemTextContent,
                  children: [
                    (0, s.jsx)(c.Text, {
                      color: "header-primary",
                      variant: "text-md/semibold",
                      children:
                        R.Z.Messages.FORM_LABEL_EXPLICIT_CONTENT_FILTER_V2,
                    }),
                    (0, s.jsx)(c.Text, {
                      color: "header-secondary",
                      variant: "text-sm/normal",
                      children:
                        R.Z.Messages.FORM_HELP_EXPLICIT_CONTENT_FILTER_V2.format(
                          {
                            helpdeskArticle: N.Z.getArticleURL(
                              p.BhN.SAFE_DIRECT_MESSAGING,
                            ),
                          },
                        ),
                    }),
                  ],
                }),
                (0, s.jsx)(x.Z, {
                  changeTitle:
                    R.Z.Messages.FORM_LABEL_EXPLICIT_CONTENT_FILTER_CHANGE,
                  value: null == _ ? void 0 : _.value,
                  options: u,
                  disabled: !l,
                  onChange: d,
                }),
              ],
            }),
          ],
        });
      }
      async function A(e, t) {
        if (
          e.hasFeature(
            p.oNc.ENABLED_MODERATION_EXPERIENCE_FOR_NON_COMMUNITY,
          ) === t
        )
          return;
        let n = e.features;
        return (
          t
            ? n.add(p.oNc.ENABLED_MODERATION_EXPERIENCE_FOR_NON_COMMUNITY)
            : n.delete(p.oNc.ENABLED_MODERATION_EXPERIENCE_FOR_NON_COMMUNITY),
          await g.Z.saveGuild(e.id, { features: n })
        );
      }
      function M(e) {
        let { guild: t } = e,
          n = (0, o.e7)(
            [E.Z],
            () => null != t && E.Z.can(p.Plq.MANAGE_GUILD, t),
            [t],
          ),
          i = t.hasFeature(p.oNc.COMMUNITY),
          r = (0, I.n2)(t.id),
          [l, d] = a.useState(
            t.hasFeature(p.oNc.ENABLED_MODERATION_EXPERIENCE_FOR_NON_COMMUNITY),
          ),
          u = a.useCallback(
            async (e) => {
              d(e), await A(t, e);
            },
            [t],
          );
        return i || !r
          ? null
          : (0, s.jsxs)(s.Fragment, {
              children: [
                (0, s.jsxs)("div", {
                  className: L.setupContainer,
                  children: [
                    (0, s.jsx)(c.FormSwitch, {
                      value: l,
                      onChange: u,
                      className: L.switchItem,
                      disabled: !n,
                      hideBorder: !0,
                      children: (0, s.jsxs)("div", {
                        className: L.switchItemTextContent,
                        children: [
                          (0, s.jsxs)(c.Text, {
                            color: "header-primary",
                            variant: "text-md/semibold",
                            children: [
                              R.Z.Messages
                                .GUILD_SETTINGS_SAFETY_ENABLE_MODERATION_EXPERIENCE,
                              (0, s.jsx)(_.Z, { className: L.betaTag }),
                            ],
                          }),
                          (0, s.jsx)(c.Text, {
                            color: "header-secondary",
                            variant: "text-sm/normal",
                            children:
                              R.Z.Messages
                                .GUILD_SETTINGS_SAFETY_ENABLE_MODERATION_EXPERIENCE_DESCRIPTION,
                          }),
                        ],
                      }),
                    }),
                    (0, s.jsx)(c.HelpMessage, {
                      messageType: c.HelpMessageTypes.INFO,
                      textVariant: "text-xs/normal",
                      children:
                        R.Z.Messages
                          .GUILD_SETTINGS_SAFETY_MODERATION_EXPERIENCE_IN_COMMUNITY,
                    }),
                  ],
                }),
                (0, s.jsx)(c.FormDivider, { className: L.divider }),
              ],
            });
      }
      function D(e) {
        let { guild: t, mfaLevel: n } = e,
          i = (0, o.e7)(
            [E.Z],
            () => null != t && E.Z.can(p.Plq.MANAGE_GUILD, t),
            [t],
          ),
          r = (0, o.e7)([m.default], () => m.default.getCurrentUser()),
          { isGuildOwnerWithMFA: u, showMFAUserTooltip: _ } = a.useMemo(
            () =>
              null == r
                ? { canChangeMFALevel: !1, showMFAUserTooltip: !1 }
                : {
                    isGuildOwnerWithMFA: t.isOwnerWithRequiredMfaLevel(r),
                    showMFAUserTooltip: !r.mfaEnabled && t.isOwner(r),
                  },
            [r, t],
          ),
          I = n === p.BpS.ELEVATED,
          T = (0, l.throttle)(async (e) => {
            if (!!u && !_)
              await g.Z.updateMFALevel({
                guildId: t.id,
                level: e ? p.BpS.ELEVATED : p.BpS.NONE,
                isEnabled: !e,
              });
          }, 1e3);
        return i
          ? (0, s.jsxs)(s.Fragment, {
              children: [
                (0, s.jsx)(c.FormDivider, { className: L.divider }),
                (0, s.jsxs)("div", {
                  className: L.setupContainer,
                  children: [
                    (0, s.jsx)(c.FormSwitch, {
                      value: I,
                      onChange: T,
                      className: L.switchItem,
                      disabled: !u,
                      hideBorder: !0,
                      children: (0, s.jsxs)("div", {
                        className: L.switchItemTextContent,
                        children: [
                          (0, s.jsx)(c.Text, {
                            color: "header-primary",
                            variant: "text-md/semibold",
                            children: R.Z.Messages.GUILD_SETTINGS_REQ_MFA_LABEL,
                          }),
                          (0, s.jsx)(c.Text, {
                            color: "header-secondary",
                            variant: "text-sm/normal",
                            children: R.Z.Messages.GUILD_SETTINGS_REQ_MFA_BODY,
                          }),
                        ],
                      }),
                    }),
                    _ &&
                      (0, s.jsx)(c.HelpMessage, {
                        messageType: c.HelpMessageTypes.INFO,
                        textVariant: "text-xs/normal",
                        children:
                          R.Z.Messages.GUILD_SETTINGS_REQ_MFA_TOOLTIP.format({
                            onClick: function () {
                              d.Z.open(p.oAB.ACCOUNT);
                            },
                          }),
                      }),
                  ],
                }),
              ],
            })
          : null;
      }
      function v() {
        let { guild: e, mfaLevel: t } = (0, o.cj)(
            [h.Z],
            () => h.Z.getProps(),
            [],
          ),
          n = (0, o.e7)([T.Z], () => T.Z.enabled, []);
        return null == e
          ? null
          : n
            ? (0, s.jsx)(u.Z, {})
            : (0, s.jsxs)(c.FormSection, {
                title: R.Z.Messages.SAFETY_SETUP,
                tag: c.FormTitleTags.H1,
                titleClassName: L.headerContainer,
                children: [
                  (0, s.jsx)(M, { guild: e }),
                  (0, s.jsx)(f, { guild: e }),
                  (0, s.jsx)(D, { guild: e, mfaLevel: t }),
                  (0, s.jsx)(O, { guild: e }),
                  (0, s.jsx)(c.FormDivider, { className: L.divider }),
                  (0, s.jsx)("div", {
                    className: r()(L.setupContainer),
                    children: (0, s.jsx)(C.w, { guild: e }),
                  }),
                ],
              });
      }
    },
    413335: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return a;
        },
      });
      var s = n(735250);
      function a(e) {
        return (0, s.jsxs)("svg", {
          ...e,
          width: "10",
          height: "16",
          viewBox: "0 0 10 16",
          fill: "#FF73FA",
          xmlns: "http://www.w3.org/2000/svg",
          children: [
            (0, s.jsx)("path", {
              d: "M5 0.5L0 5.5V10.5L5 15.5L10 10.5V5.5L5 0.5ZM8.75 9.9875L5 13.7375L1.25 9.9875V6.0125L5 2.2625L8.75 6.0125V9.9875Z",
            }),
            (0, s.jsx)("path", {
              d: "M2.5 6.53751V9.46251L5 11.9625L7.5 9.46251V6.53751L5 4.03751L2.5 6.53751Z",
            }),
          ],
        });
      }
      n(470079);
    },
    665324: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return G;
        },
      }),
        n(47120),
        n(724458);
      var s = n(735250),
        a = n(470079),
        i = n(120356),
        r = n.n(i),
        l = n(525654),
        o = n.n(l),
        c = n(442837),
        d = n(846519),
        u = n(481060),
        _ = n(232567),
        I = n(596454),
        E = n(410030),
        T = n(623624),
        m = n(357156),
        N = n(208049),
        S = n(763296),
        g = n(22382),
        h = n(747071),
        C = n(286654),
        x = n(171368),
        p = n(430824),
        R = n(594174),
        L = n(15385),
        f = n(768581),
        O = n(267642),
        A = n(358085),
        M = n(999382),
        D = n(70409),
        v = n(981631),
        j = n(710111),
        Z = n(689938),
        b = n(275715);
      let U =
        A.isPlatformEmbedded ||
        ("Safari" !== o().name && "Firefox" !== o().name);
      function G() {
        let e = (0, c.e7)([M.Z], () => M.Z.getProps().guild);
        return null == e
          ? null
          : (0, s.jsx)(u.FormSection, {
              tag: u.FormTitleTags.H1,
              title: Z.Z.Messages.GUILD_SETTINGS_SOUNDBOARD,
              children: (0, s.jsx)(k, { guild: e }),
            });
      }
      function P(e) {
        let { children: t } = e;
        return (0, s.jsx)(u.Heading, {
          className: b.tableHeader,
          variant: "heading-sm/semibold",
          color: "header-secondary",
          children: t,
        });
      }
      function B(e) {
        let { currentTier: t, availableSounds: n, guildId: a } = e,
          i = p.Z.getGuild(a),
          r = (0, O.U2)(t, i);
        return 0 === t
          ? (0, s.jsx)(s.Fragment, {
              children:
                Z.Z.Messages.GUILD_SETTINGS_SOUND_LIST_SOUNDS_AVAILABLE.format({
                  slots: n,
                  totalSlots: r,
                }),
            })
          : (0, s.jsxs)(s.Fragment, {
              children: [
                (0, s.jsx)(u.Tooltip, {
                  text: Z.Z.Messages.GUILD_SETTINGS_SOUNDBOARD_BOOST_LEVEL.format(
                    { currentBoostLevel: t },
                  ),
                  children: (e) =>
                    (0, s.jsx)(u.Clickable, {
                      className: b.boostingIconWrapper,
                      onClick: () => {
                        var e;
                        return (
                          (e = a),
                          void (0, T.f)({
                            guildId: e,
                            location: {
                              section: v.jXE.GUILD_SETTINGS_SOUNDBOARD,
                              object: v.qAy.BOOST_GEM_ICON,
                            },
                          })
                        );
                      },
                      tabIndex: -1,
                      children: (0, s.jsx)(L.Z, { ...e }),
                    }),
                }),
                Z.Z.Messages.GUILD_SETTINGS_SOUND_LIST_SOUNDS_AVAILABLE_BOOST_LEVEL.format(
                  { slots: n, totalSlots: r, boostLevel: t },
                ),
              ],
            });
      }
      let y = (e) => {
          let { renderPopoutBody: t, renderPopoutChildren: n, ...i } = e,
            [r, l] = a.useState(!1),
            o = a.useMemo(() => new d.V7(), []),
            c = a.useCallback(() => {
              o.stop(), l(!0);
            }, [o]),
            _ = a.useCallback(() => {
              o.start(200, () => l(!1));
            }, [o]);
          return (0, s.jsx)(u.Popout, {
            shouldShow: r,
            renderPopout: (e) =>
              (0, s.jsx)(u.Dialog, {
                className: b.browserUnsupportedDialog,
                onMouseEnter: c,
                onMouseLeave: _,
                children: t(e),
              }),
            ...i,
            children: (e) => n(e),
          });
        },
        F = () =>
          (0, s.jsx)(y, {
            renderPopoutBody: () =>
              (0, s.jsx)(u.Text, {
                variant: "text-sm/normal",
                color: "header-secondary",
                children:
                  Z.Z.Messages.GUILD_SETTINGS_SOUNDBOARD_UPLOAD_SOUND_NOT_SUPPORTED.format(),
              }),
            renderPopoutChildren: (e) =>
              (0, s.jsx)(u.Button, {
                ...e,
                disabled: !0,
                children: Z.Z.Messages.GUILD_SETTINGS_SOUNDBOARD_UPLOAD_SOUND,
              }),
          });
      function k(e) {
        let { guild: t } = e,
          [i, r] = (0, c.Wu)([S.Z], () => {
            var e;
            return [
              null !== (e = S.Z.getSoundsForGuild(t.id)) && void 0 !== e
                ? e
                : j.Hy,
              S.Z.isFetchingSounds() || S.Z.isFetchingDefaultSounds(),
            ];
          }),
          { canCreateExpressions: l } = (0, m.XJ)(t),
          o = a.useRef(null),
          d = (0, E.ZP)(),
          _ = t.premiumTier,
          I = (0, O.yw)(t, i, _);
        a.useEffect(() => {
          (0, N.w)();
        }, []);
        let T = a.useMemo(
            () =>
              i.reduce(
                (e, t) => ((e[t.soundId] = new Audio((0, g.Z)(t.soundId))), e),
                {},
              ),
            [i],
          ),
          C = 0 === i.length && !r;
        function x(e) {
          var t;
          null === (t = o.current) || void 0 === t || t.pause();
          let n = T[e.soundId];
          null != n &&
            ((o.current = n),
            (n.currentTime = 0),
            (n.volume = (0, h.Z)(e.volume)),
            n.play());
        }
        a.useEffect(
          () => () => {
            var e;
            null === (e = o.current) || void 0 === e || e.pause();
          },
          [],
        );
        if (r) return (0, s.jsx)(u.Spinner, {});
        let p = U
          ? (0, s.jsx)(u.Button, {
              onClick: function () {
                (0, u.openModalLazy)(async () => {
                  let { default: e } = await Promise.all([
                    n.e("56035"),
                    n.e("56184"),
                  ]).then(n.bind(n, 758961));
                  return (n) => (0, s.jsx)(e, { ...n, guildId: t.id });
                });
              },
              disabled: I <= 0 || !l,
              children: Z.Z.Messages.GUILD_SETTINGS_SOUNDBOARD_UPLOAD_SOUND,
            })
          : (0, s.jsx)(F, {});
        return (0, s.jsxs)(s.Fragment, {
          children: [
            (0, s.jsxs)("div", {
              children: [
                (0, s.jsx)(u.Text, {
                  className: b.helpText,
                  variant: "text-sm/normal",
                  color: "header-secondary",
                  children: Z.Z.Messages.GUILD_SETTINGS_SOUNDBOARD_DESCRIPTION,
                }),
                (0, s.jsx)("div", { className: b.buttons, children: !C && p }),
              ],
            }),
            C
              ? (0, s.jsxs)(u.EmptyState, {
                  theme: d,
                  className: b.empty,
                  children: [
                    (0, s.jsx)(u.EmptyStateImage, {
                      darkSrc: n(458601),
                      lightSrc: n(673557),
                      width: 272,
                      height: 212,
                    }),
                    (0, s.jsx)(u.EmptyStateText, {
                      note: Z.Z.Messages.NO_SOUNDS,
                      noteClassName: b.emptyText,
                      children: Z.Z.Messages.NO_SOUNDS_TITLE,
                    }),
                    p,
                  ],
                })
              : (0, s.jsxs)(s.Fragment, {
                  children: [
                    (0, s.jsx)(u.FormDivider, { className: b.divider }),
                    (0, s.jsx)(u.Heading, {
                      className: b.tableTitle,
                      variant: "heading-md/bold",
                      color: "header-primary",
                      children: (0, s.jsx)(B, {
                        guildId: t.id,
                        currentTier: _,
                        availableSounds: I,
                      }),
                    }),
                    (0, s.jsx)(D.Z, {
                      guild: t,
                      numSounds: i.length,
                      isOutOfSlots: 0 === I,
                    }),
                    (0, s.jsxs)("div", {
                      className: b.soundTable,
                      children: [
                        (0, s.jsxs)("div", {
                          className: b.tableHeaders,
                          children: [
                            (0, s.jsx)(P, { children: Z.Z.Messages.EMOJI }),
                            (0, s.jsx)(P, {
                              children:
                                Z.Z.Messages.GUILD_SETTINGS_SOUND_NAME_COLUMN,
                            }),
                            (0, s.jsx)(P, {
                              children:
                                Z.Z.Messages
                                  .GUILD_SETTINGS_SOUND_UPLOADER_COLUMN,
                            }),
                          ],
                        }),
                        i.map((e) =>
                          (0, s.jsx)(
                            w,
                            {
                              sound: e,
                              isPlaying: !1,
                              guild: t,
                              onPlaySound: x,
                            },
                            e.soundId,
                          ),
                        ),
                      ],
                    }),
                  ],
                }),
          ],
        });
      }
      function w(e) {
        let { sound: t, isPlaying: i, onPlaySound: l, guild: o } = e,
          {
            soundId: d,
            name: E,
            user: T,
            userId: S,
            emojiId: g,
            emojiName: h,
          } = t,
          p = (0, c.e7)(
            [R.default],
            () => (null != T ? T : R.default.getUser(S)),
            [S, T],
          ),
          { canManageGuildExpression: L } = (0, m.XJ)(o),
          O = a.useMemo(() => L(t), [t, L]),
          A = null != g || null != h,
          [M, D] = a.useState(!1),
          j = (0, C.z)(t, o.id);
        async function U() {
          if (!M) {
            D(!0);
            try {
              await (0, N.AA)(o.id, d);
            } catch {
              D(!1);
            }
          }
        }
        a.useEffect(() => {
          null == p && e();
          async function e() {
            await (0, _.PR)(S);
          }
        }, [p, S]);
        let G = a.useCallback(() => {
          null != p &&
            (0, x.openUserProfileModal)({
              userId: p.id,
              guildId: o.id,
              analyticsLocation: { section: v.jXE.GUILD_SETTINGS_SOUNDBOARD },
            });
        }, [p, o.id]);
        return (0, s.jsxs)("div", {
          className: r()(b.row, { [b.active]: i }),
          children: [
            A
              ? (0, s.jsx)(I.Z, {
                  emojiId: g,
                  emojiName: h,
                  className: b.emoji,
                })
              : (0, s.jsx)(u.ImageIcon, {
                  size: "md",
                  color: "currentColor",
                  className: b.emoji,
                }),
            (0, s.jsx)(u.Clickable, {
              onClick: () => {
                !M && l(t);
              },
              onContextMenu: j,
              className: b.soundName,
              children: (0, s.jsxs)(u.Text, {
                variant: "text-sm/normal",
                className: b.soundName,
                children: [
                  E,
                  " ",
                  (0, s.jsx)(u.VoiceNormalIcon, {
                    size: "md",
                    color: "currentColor",
                    className: b.soundPreviewIcon,
                  }),
                ],
              }),
            }),
            null != p &&
              (0, s.jsxs)(u.Clickable, {
                className: b.uploader,
                onClick: G,
                children: [
                  (0, s.jsx)(u.Avatar, {
                    "aria-label": null == p ? void 0 : p.username,
                    size: u.AvatarSizes.SIZE_24,
                    className: b.uploaderAvatar,
                    src: (0, f.ov)(p, !1, 24),
                  }),
                  (0, s.jsx)(u.Text, {
                    variant: "text-sm/normal",
                    lineClamp: 1,
                    children: null == p ? void 0 : p.username,
                  }),
                ],
              }),
            O
              ? (0, s.jsxs)("div", {
                  className: b.soundEditContainer,
                  children: [
                    (0, s.jsx)(u.Clickable, {
                      className: b.soundUpdate,
                      onClick: function (e) {
                        e.stopPropagation(),
                          (0, u.openModalLazy)(async () => {
                            let { default: e } = await Promise.all([
                              n.e("56035"),
                              n.e("56184"),
                            ]).then(n.bind(n, 758961));
                            return (n) =>
                              (0, s.jsx)(e, {
                                ...n,
                                guildId: o.id,
                                existingSound: t,
                              });
                          });
                      },
                      "aria-label": Z.Z.Messages.EDIT,
                      children: (0, s.jsx)(u.PencilIcon, {
                        size: "xs",
                        color: "currentColor",
                        className: b.soundEditIcon,
                      }),
                    }),
                    (0, s.jsx)(u.Clickable, {
                      className: b.soundRemove,
                      onClick: function (e) {
                        e.stopPropagation(),
                          (0, u.openModal)((e) =>
                            (0, s.jsx)(u.ConfirmModal, {
                              header:
                                Z.Z.Messages.GUILD_SETTINGS_SOUNDBOARD_DELETE_SOUND_TITLE.format(
                                  { soundName: E },
                                ),
                              confirmText: Z.Z.Messages.DELETE,
                              cancelText: Z.Z.Messages.CANCEL,
                              onConfirm: U,
                              ...e,
                              children: (0, s.jsx)(u.Text, {
                                variant: "text-md/normal",
                                children:
                                  Z.Z.Messages.GUILD_SETTINGS_SOUNDBOARD_DELETE_SOUND_BODY.format(
                                    { soundName: E },
                                  ),
                              }),
                            }),
                          );
                      },
                      "aria-label": Z.Z.Messages.REMOVE,
                      children: (0, s.jsx)(u.XSmallIcon, {
                        size: "md",
                        color: "currentColor",
                        className: b.soundEditIcon,
                      }),
                    }),
                  ],
                })
              : null,
          ],
        });
      }
    },
    208150: function (e, t, n) {
      "use strict";
      var s = n(735250);
      n(470079);
      var a = n(442837),
        i = n(481060),
        r = n(100527),
        l = n(906732),
        o = n(623624),
        c = n(372444),
        d = n(852679),
        u = n(926491),
        _ = n(145499),
        I = n(424218),
        E = n(267642),
        T = n(63063),
        m = n(999382),
        N = n(981631),
        S = n(611480),
        g = n(689938),
        h = n(580765);
      let C = {
          page: N.ZY5.GUILD_SETTINGS,
          section: N.jXE.GUILD_SETTINGS_STICKERS,
          object: N.qAy.BOOSTING_BANNER,
        },
        x = (e) => {
          let { guild: t } = e,
            { analyticsLocations: n } = (0, l.ZP)(),
            a = (0, E.vn)(t.id)[N.Eu4.TIER_1] - t.premiumSubscriberCount;
          return (0, s.jsxs)("div", {
            className: h.upsellContainer,
            children: [
              (0, s.jsx)(i.Heading, {
                className: h.upsellHeader,
                variant: "heading-xl/semibold",
                children: g.Z.Messages.GUILD_SETTINGS_STICKERS_UPSELL_TITLE,
              }),
              (0, s.jsx)(i.Text, {
                className: h.upsellDescription,
                variant: "text-md/normal",
                children:
                  g.Z.Messages
                    .GUILD_SETTINGS_STICKERS_UPSELL_DESCRIPTION_FREE_SLOTS,
              }),
              (0, s.jsxs)("div", {
                className: h.upsellButtons,
                children: [
                  (0, s.jsx)(i.Button, {
                    className: h.upsellButtonPrimary,
                    innerClassName: h.upsellButton,
                    color: i.Button.Colors.WHITE,
                    onClick: () =>
                      (0, d.Z)({
                        analyticsLocations: n,
                        analyticsLocation: C,
                        guildId: t.id,
                        totalNumberOfSlotsToAssign: a,
                      }),
                    children: g.Z.Messages.GUILD_SETTINGS_STICKERS_BOOST_SERVER,
                  }),
                  (0, s.jsx)(i.Button, {
                    innerClassName: h.upsellButton,
                    color: i.Button.Colors.WHITE,
                    onClick: () =>
                      (0, o.f)({
                        guildId: t.id,
                        location: { section: N.jXE.GUILD_SETTINGS_STICKERS },
                      }),
                    children: g.Z.Messages.LEARN_MORE,
                  }),
                ],
              }),
            ],
          });
        },
        p = () =>
          (0, s.jsxs)(i.FormSection, {
            title:
              g.Z.Messages.GUILD_SETTINGS_STICKERS_UPLOAD_AUTO_RESIZE_HEADING,
            children: [
              (0, s.jsx)(i.FormText, {
                type: i.FormTextTypes.DESCRIPTION,
                children:
                  g.Z.Messages.GUILD_SETTINGS_STICKERS_UPLOAD_AUTO_RESIZE_INSTRUCTIONS.format(
                    { fileSize: (0, I.IC)(S.Ht, { useKibibytes: !0 }) },
                  ),
              }),
              (0, s.jsx)(i.FormText, {
                type: i.FormTextTypes.DESCRIPTION,
                children:
                  g.Z.Messages.GUILD_SETTINGS_STICKERS_UPLOAD_AUTO_RESIZE_HELP.format(
                    { articleUrl: T.Z.getArticleURL(N.BhN.STICKERS_UPLOAD) },
                  ),
              }),
            ],
          }),
        R = (e) => {
          let t,
            n,
            a,
            { guild: i, guildStickers: r } = e,
            l = i.premiumTier,
            o = (0, E.Qi)(r, l),
            d = (0, E.FZ)(l, i.id),
            u = (0, E.A3)(l),
            _ = r.length;
          return null == d || l === N.Eu4.TIER_3 || o > 0
            ? (0, s.jsx)(s.Fragment, {})
            : (_ > u
                ? ((t =
                    g.Z.Messages.GUILD_SETTINGS_STICKERS_UPSELL_BANNER_TOO_MANY_STICKERS_HEADER.format(
                      { level: d },
                    )),
                  (n =
                    g.Z.Messages.GUILD_SETTINGS_STICKERS_UPSELL_BANNER_TOO_MANY_STICKERS_TEXT.format(
                      { level: d },
                    )),
                  (a = N.qAy.BOOST_UPSELL_BANNER_LOST_LEVEL))
                : ((t =
                    g.Z.Messages
                      .PREMIUM_GUILD_SUBSCRIPTION_UPSELL_BANNER_HEADER),
                  (n =
                    g.Z.Messages.GUILD_SETTINGS_STICKERS_UPSELL_BANNER_TEXT.format(
                      { level: d, numAdditional: (0, E.ig)(d) },
                    )),
                  (a = N.qAy.BOOST_UPSELL_BANNER_SLOTS_FULL)),
              (0, s.jsx)(c.Z, {
                header: t,
                text: n,
                guild: i,
                analyticsLocation: {
                  page: N.ZY5.GUILD_SETTINGS,
                  section: N.jXE.GUILD_SETTINGS_STICKERS,
                  object: a,
                  objectType: (0, E.ge)(d),
                },
              }));
        };
      t.Z = () => {
        let e = (0, a.e7)([m.Z], () => m.Z.getGuild()),
          t = (0, a.e7)(
            [u.Z],
            () => {
              var t;
              return null != e &&
                null !== (t = u.Z.getStickersByGuildId(e.id)) &&
                void 0 !== t
                ? t
                : [];
            },
            [e],
          ),
          { analyticsLocations: n } = (0, l.ZP)(r.Z.STICKERS);
        if (null == e) return null;
        let o = e.premiumTier !== N.Eu4.NONE || t.length > 0;
        return (0, s.jsx)(l.Gt, {
          value: n,
          children: (0, s.jsxs)(i.FormSection, {
            title: g.Z.Messages.GUILD_SETTINGS_STICKERS,
            tag: i.FormTitleTags.H1,
            children: [
              o
                ? (0, s.jsxs)("div", {
                    children: [
                      (0, s.jsx)(R, { guild: e, guildStickers: t }),
                      (0, s.jsx)(p, {}),
                    ],
                  })
                : (0, s.jsx)(x, { guild: e }),
              (0, s.jsx)(i.FormDivider, { className: h.divider }),
              (0, s.jsx)(_.Z, { guild: e }),
            ],
          }),
        });
      };
    },
    353398: function (e, t, n) {
      "use strict";
      n.d(t, {
        Q5: function () {
          return A;
        },
        Sf: function () {
          return O;
        },
        ZP: function () {
          return M;
        },
      }),
        n(47120);
      var s,
        a = n(735250),
        i = n(470079),
        r = n(120356),
        l = n.n(r),
        o = n(512722),
        c = n.n(o),
        d = n(442837),
        u = n(692547),
        _ = n(481060),
        I = n(570140),
        E = n(484614),
        T = n(852860),
        m = n(881052),
        N = n(751189),
        S = n(409059),
        g = n(518936),
        h = n(999382),
        C = n(58346),
        x = n(689938),
        p = n(759985),
        R = n(113207);
      function L(e, t, n) {
        return (
          t in e
            ? Object.defineProperty(e, t, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0,
              })
            : (e[t] = n),
          e
        );
      }
      class f extends (s = d.ZP.Store) {
        getTemplate() {
          let e = h.Z.getProps().guild;
          if (null == e) return null;
          let t = S.Z.getForGuild(e.id);
          return null != t && t.state !== C.Rj.RESOLVING ? t : null;
        }
        showNotice() {
          let e = this.getTemplate();
          return (
            null != e &&
            null != this.name &&
            "" !== this.name &&
            (this.name.trim() !== e.name ||
              this.description.trim() !== e.description)
          );
        }
        constructor(...e) {
          super(...e),
            L(this, "name", ""),
            L(this, "description", ""),
            L(this, "error", null),
            L(this, "reset", () => {
              let e = this.getTemplate();
              if (null != e) {
                var t, n;
                (this.name =
                  null !== (t = e.name) && void 0 !== t ? t : this.name),
                  (this.description =
                    null !== (n = e.description) && void 0 !== n
                      ? n
                      : this.description);
              } else (this.name = ""), (this.description = "");
              this.emitChange();
            }),
            L(this, "setName", (e) => {
              (this.name = e), this.emitChange();
            }),
            L(this, "setDescription", (e) => {
              (this.description = e), this.emitChange();
            }),
            L(this, "setError", (e) => {
              (this.error = e), this.emitChange();
            }),
            L(this, "save", async () => {
              await N.Z.updateGuildTemplate(
                h.Z.getProps().guild.id,
                this.getTemplate().code,
                this.name,
                this.description,
              ),
                this.emitChange();
            });
        }
      }
      L(f, "displayName", "GuildSettingsTemplateMetadataStore_");
      let O = new f(I.Z);
      function A() {
        let [e, t] = i.useState(!1),
          n = async () => {
            t(!0), await O.save(), t(!1);
          };
        return (0, a.jsx)(T.Z, { submitting: e, onReset: O.reset, onSave: n });
      }
      function M() {
        return (0, a.jsx)(_.FormSection, {
          className: R.marginBottom4,
          children: (0, a.jsxs)(_.HeadingLevel, {
            component: (0, a.jsx)(_.FormTitle, {
              tag: _.FormTitleTags.H1,
              children: x.Z.Messages.GUILD_TEMPLATES,
            }),
            children: [
              (0, a.jsx)(_.FormText, {
                className: R.marginBottom20,
                type: _.FormTextTypes.DESCRIPTION,
                children:
                  x.Z.Messages.GUILD_TEMPLATE_SETTINGS_DESCRIPTION.format(),
              }),
              (0, a.jsx)(v, {}),
              (0, a.jsx)(_.FormDivider, { className: p.divider }),
              (0, a.jsx)(D, {}),
            ],
          }),
        });
      }
      function D() {
        let { guild: e } = h.Z.getProps();
        c()(null != e, "guild cannot be null");
        let t = (0, d.e7)([O], () => O.error),
          [n, s] = i.useState(!0),
          { loading: r, guildTemplate: l } = (function (e) {
            let [t, n] = i.useState(!0);
            return (
              i.useEffect(() => {
                (async function t() {
                  n(!0);
                  try {
                    await N.Z.loadTemplatesForGuild(e), n(!1);
                  } catch (e) {
                    O.setError(new m.Hx(e));
                  }
                })();
              }, [e]),
              {
                loading: t,
                guildTemplate: (0, d.e7)([S.Z], () => S.Z.getForGuild(e), [e]),
              }
            );
          })(e.id);
        if (
          (i.useEffect(() => {
            if (!!n && !r) {
              if (null != l) {
                var e, t;
                O.setName(null !== (e = l.name) && void 0 !== e ? e : ""),
                  O.setDescription(
                    null !== (t = l.description) && void 0 !== t ? t : "",
                  );
              }
              s(!1);
            }
          }, [n, l, r]),
          i.useEffect(
            () => () => {
              O.reset(), O.setError(null);
            },
            [],
          ),
          n)
        )
          return null != t
            ? (0, a.jsx)(_.Text, {
                color: "text-danger",
                variant: "text-sm/normal",
                children: t.message,
              })
            : (0, a.jsx)(_.Spinner, { className: R.marginTop40 });
        let o =
          null != t &&
          null == t.getFirstFieldErrorMessage("name") &&
          null == t.getFirstFieldErrorMessage("description");
        return (0, a.jsxs)(a.Fragment, {
          children: [
            (0, a.jsx)(Z, {}),
            (0, a.jsx)(b, { guild: e, guildTemplate: l }),
            o
              ? (0, a.jsx)(_.Text, {
                  className: R.marginTop8,
                  color: "text-danger",
                  variant: "text-sm/normal",
                  children: t.getAnyErrorMessage(),
                })
              : null,
          ],
        });
      }
      function v() {
        return (0, a.jsxs)("div", {
          className: p.descriptionBox,
          children: [
            (0, a.jsxs)("div", {
              className: p.descriptionSection,
              children: [
                (0, a.jsx)(_.Heading, {
                  variant: "eyebrow",
                  children:
                    x.Z.Messages.GUILD_TEMPLATES_FORM_DESCRIPTION_WILL_COPY,
                }),
                (0, a.jsxs)("div", {
                  className: p.descriptionRow,
                  children: [
                    (0, a.jsx)(_.CircleCheckIcon, {
                      size: "md",
                      className: p.descriptionIcon,
                      color: u.Z.unsafe_rawColors.GREEN_360.css,
                      secondaryColor: u.Z.unsafe_rawColors.WHITE_500.css,
                    }),
                    x.Z.Messages.GUILD_TEMPLATES_FORM_DESCRIPTION_CHANNELS,
                  ],
                }),
                (0, a.jsxs)("div", {
                  className: p.descriptionRow,
                  children: [
                    (0, a.jsx)(_.CircleCheckIcon, {
                      size: "md",
                      className: p.descriptionIcon,
                      color: u.Z.unsafe_rawColors.GREEN_360.css,
                      secondaryColor: u.Z.unsafe_rawColors.WHITE_500.css,
                    }),
                    x.Z.Messages.GUILD_TEMPLATES_FORM_DESCRIPTION_ROLES,
                  ],
                }),
                (0, a.jsxs)("div", {
                  className: p.descriptionRow,
                  children: [
                    (0, a.jsx)(_.CircleCheckIcon, {
                      size: "md",
                      className: p.descriptionIcon,
                      color: u.Z.unsafe_rawColors.GREEN_360.css,
                      secondaryColor: u.Z.unsafe_rawColors.WHITE_500.css,
                    }),
                    x.Z.Messages.GUILD_TEMPLATES_FORM_DESCRIPTION_SETTINGS,
                  ],
                }),
              ],
            }),
            (0, a.jsxs)("div", {
              className: p.descriptionSection,
              children: [
                (0, a.jsx)(_.Heading, {
                  variant: "eyebrow",
                  children:
                    x.Z.Messages.GUILD_TEMPLATES_FORM_DESCRIPTION_WONT_COPY,
                }),
                (0, a.jsxs)("div", {
                  className: p.descriptionRow,
                  children: [
                    (0, a.jsx)(_.CircleXIcon, {
                      size: "md",
                      className: p.descriptionIcon,
                      color: u.Z.unsafe_rawColors.RED_400.css,
                      secondaryColor: u.Z.unsafe_rawColors.WHITE_500.css,
                    }),
                    x.Z.Messages.GUILD_TEMPLATES_FORM_DESCRIPTION_MESSAGES,
                  ],
                }),
                (0, a.jsxs)("div", {
                  className: p.descriptionRow,
                  children: [
                    (0, a.jsx)(_.CircleXIcon, {
                      size: "md",
                      className: p.descriptionIcon,
                      color: u.Z.unsafe_rawColors.RED_400.css,
                      secondaryColor: u.Z.unsafe_rawColors.WHITE_500.css,
                    }),
                    x.Z.Messages.GUILD_TEMPLATES_FORM_DESCRIPTION_MEMBERS,
                  ],
                }),
                (0, a.jsxs)("div", {
                  className: p.descriptionRow,
                  children: [
                    (0, a.jsx)(_.CircleXIcon, {
                      size: "md",
                      className: p.descriptionIcon,
                      color: u.Z.unsafe_rawColors.RED_400.css,
                      secondaryColor: u.Z.unsafe_rawColors.WHITE_500.css,
                    }),
                    x.Z.Messages.GUILD_TEMPLATES_FORM_DESCRIPTION_PERKS,
                  ],
                }),
              ],
            }),
          ],
        });
      }
      function j(e) {
        let { cancel: t, confirm: n } = e;
        return (0, a.jsx)(_.DeclarativeConfirmModal, {
          dismissable: !0,
          header: x.Z.Messages.GUILD_TEMPLATES_DELETE_TEMPLATE,
          confirmText: x.Z.Messages.GUILD_TEMPLATES_DELETE_TEMPLATE,
          cancelText: x.Z.Messages.CANCEL,
          onCancel: t,
          onConfirm: n,
          children: (0, a.jsx)(_.Text, {
            variant: "text-md/normal",
            color: "text-normal",
            children: x.Z.Messages.GUILD_TEMPLATES_DELETE_DESCRIPTION,
          }),
        });
      }
      function Z() {
        let e = (0, d.e7)([O], () => O.name),
          t = (0, d.e7)([O], () => O.description),
          n = (0, d.e7)([O], () => O.error);
        return (0, a.jsxs)(a.Fragment, {
          children: [
            (0, a.jsx)(_.FormItem, {
              className: R.marginBottom20,
              title: x.Z.Messages.GUILD_TEMPLATES_FORM_LABEL_NAME,
              error: null == n ? void 0 : n.getFirstFieldErrorMessage("name"),
              children: (0, a.jsx)(_.TextInput, {
                value: e,
                onChange: (e) => O.setName(e),
                placeholder: x.Z.Messages.GUILD_TEMPLATES_FORM_PLACEHOLDER_NAME,
                maxLength: 100,
              }),
            }),
            (0, a.jsx)(_.FormItem, {
              className: R.marginBottom20,
              title: x.Z.Messages.GUILD_TEMPLATES_FORM_LABEL_DESCRIPTION,
              error:
                null == n ? void 0 : n.getFirstFieldErrorMessage("description"),
              children: (0, a.jsx)(_.TextArea, {
                value: t,
                onChange: (e) => O.setDescription(e),
                placeholder:
                  x.Z.Messages.GUILD_TEMPLATES_FORM_PLACEHOLDER_DESCRIPTION,
                maxLength: 120,
              }),
            }),
          ],
        });
      }
      function b(e) {
        let { guild: t, guildTemplate: n } = e;
        return null == n
          ? (0, a.jsx)(U, { guild: t })
          : (0, a.jsxs)(a.Fragment, {
              children: [
                (0, a.jsx)(_.FormItem, {
                  title: x.Z.Messages.GUILD_TEMPLATES_FORM_LABEL_LINK,
                  children: (0, a.jsx)(E.Z, {
                    buttonLook: _.Button.Looks.FILLED,
                    buttonColor: _.Button.Colors.BRAND,
                    value: (0, g.Z)(n.code),
                  }),
                }),
                n.isDirty &&
                  (0, a.jsx)(_.Text, {
                    color: "text-warning",
                    className: R.marginTop8,
                    variant: "text-sm/normal",
                    children: x.Z.Messages.GUILD_TEMPLATES_UNSYNCED_WARNING,
                  }),
                (0, a.jsxs)("div", {
                  className: l()(R.marginTop20, p.buttonContainer),
                  children: [
                    n.isDirty && (0, a.jsx)(G, { guild: t, guildTemplate: n }),
                    (0, a.jsxs)("div", {
                      className: p.rightButtonContainer,
                      children: [
                        (0, a.jsx)(P, { guild: t, guildTemplate: n }),
                        (0, a.jsx)(B, { guildTemplate: n }),
                      ],
                    }),
                  ],
                }),
                n.isDirty &&
                  (0, a.jsx)("div", {
                    className: p.lastSync,
                    children: x.Z.Messages.GUILD_TEMPLATES_LAST_SYNC.format({
                      timestamp: new Date(n.updatedAt),
                    }),
                  }),
              ],
            });
      }
      function U(e) {
        var t;
        let { guild: n } = e,
          s = (0, d.e7)([O], () => O.name),
          [r, l] = i.useState(!1),
          o = async () => {
            O.setError(null), l(!0);
            try {
              await N.Z.createGuildTemplate(n.id, O.name, O.description);
            } catch (e) {
              O.setError(new m.Hx(e));
            }
            l(!1);
          };
        return (0, a.jsx)(_.Button, {
          submitting: r,
          disabled: !(null != (t = s) && t.trim().length >= 2),
          color: _.Button.Colors.BRAND,
          onClick: o,
          children: x.Z.Messages.GUILD_TEMPLATES_CREATE_LINK,
        });
      }
      function G(e) {
        let { guild: t, guildTemplate: n } = e,
          [s, r] = i.useState(!1),
          l = async () => {
            O.setError(null), r(!0);
            try {
              await N.Z.syncGuildTemplate(t.id, n.code);
            } catch (e) {
              O.setError(new m.Hx(e));
            }
            r(!1);
          };
        return (0, a.jsx)(_.Button, {
          submitting: s,
          className: p.button,
          onClick: l,
          children: x.Z.Messages.GUILD_TEMPLATES_SYNC_TEMPLATE,
        });
      }
      function P(e) {
        let { guild: t, guildTemplate: n } = e,
          [s, r] = i.useState(!1),
          l = async () => {
            O.setError(null);
            try {
              await N.Z.deleteGuildTemplate(t.id, n.code),
                O.setName(""),
                O.setDescription("");
            } catch (e) {
              O.setError(new m.Hx(e));
            }
            r(!1);
          };
        return (0, a.jsxs)(a.Fragment, {
          children: [
            (0, a.jsx)(_.Button, {
              look: _.Button.Looks.OUTLINED,
              className: p.button,
              color: _.Button.Colors.RED,
              onClick: () => r(!0),
              children: x.Z.Messages.GUILD_TEMPLATES_DELETE_TEMPLATE,
            }),
            s ? (0, a.jsx)(j, { confirm: l, cancel: () => r(!1) }) : null,
          ],
        });
      }
      function B(e) {
        let { guildTemplate: t } = e;
        return (0, a.jsx)(_.Button, {
          color: _.Button.Colors.PRIMARY,
          className: p.button,
          onClick: () =>
            (0, _.openModalLazy)(async () => {
              let { default: e } = await Promise.all([
                n.e("10778"),
                n.e("27815"),
              ]).then(n.bind(n, 766775));
              return (n) => (0, a.jsx)(e, { ...n, guildTemplate: t });
            }),
          children: x.Z.Messages.GUILD_TEMPLATES_PREVIEW_TEMPLATE,
        });
      }
    },
    365774: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return r;
        },
      });
      var s = n(735250);
      n(470079);
      var a = n(689938),
        i = n(70683);
      function r(e) {
        let { showDirtyIndicator: t } = e;
        return t
          ? (0, s.jsxs)("div", {
              className: i.container,
              children: [
                a.Z.Messages.GUILD_TEMPLATES,
                (0, s.jsx)("div", { className: i.dot }),
              ],
            })
          : (0, s.jsx)(s.Fragment, { children: a.Z.Messages.GUILD_TEMPLATES });
      }
    },
    803288: function (e, t, n) {
      "use strict";
      n.d(t, {
        T: function () {
          return D;
        },
        Z: function () {
          return j;
        },
      }),
        n(757143),
        n(47120);
      var s = n(735250),
        a = n(470079),
        i = n(120356),
        r = n.n(i),
        l = n(442837),
        o = n(481060),
        c = n(497321),
        d = n(852860),
        u = n(100527),
        _ = n(367907),
        I = n(906732),
        E = n(263145),
        T = n(807582),
        m = n(26323),
        N = n(366980),
        S = n(246946),
        g = n(709586),
        h = n(267642),
        C = n(999382),
        x = n(621319),
        p = n(44550),
        R = n(770270),
        L = n(981631),
        f = n(30513),
        O = n(689938),
        A = n(279404);
      function M(e, t, n) {
        return (
          t in e
            ? Object.defineProperty(e, t, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0,
              })
            : (e[t] = n),
          e
        );
      }
      let D = l.ZP.connectStores([C.Z, p.Z], () => {
        let e = p.Z.vanityURLCode,
          t = C.Z.getGuildId();
        return {
          vanityURLCode: e,
          guildId: t,
          onReset() {
            (0, x.H7)();
          },
          onSave() {
            null != t && (0, x.en)(t, e);
          },
        };
      })(d.Z);
      class v extends a.PureComponent {
        componentWillUnmount() {
          (0, x.xv)();
        }
        renderEditCard() {
          let { isRemoving: e } = this.state,
            {
              hasError: t,
              originalVanityURLCode: n,
              vanityURLCode: a,
              vanityURLUses: i,
              guild: r,
            } = this.props;
          if (null == a) return (0, s.jsx)(o.Spinner, {});
          let l = (null == r ? void 0 : r.hasFeature(L.oNc.VANITY_URL)) === !0;
          return (0, s.jsxs)(o.Card, {
            editable: !0,
            className: A.editVanityUrlCard,
            children: [
              (0, s.jsxs)(o.FormTitle, {
                className: A.__invalid_formTitle,
                children: [
                  (0, s.jsx)("div", {
                    className: A.formTitleField,
                    children: O.Z.Messages.INVITE_URL,
                  }),
                  a.length > 0
                    ? (0, s.jsx)("div", {
                        children: O.Z.Messages.VANITY_URL_USES.format({
                          uses: i,
                        }),
                      })
                    : null,
                ],
              }),
              (0, s.jsx)(E.Z, {
                prefix: "".concat("https://discord.gg", "/"),
                value: a,
                onChange: this.handleInviteCodeChange,
                maxLength: 25,
                autoFocus: !0,
                error: t,
                disabled: !l,
              }),
              null != n && n.length > 0
                ? (0, s.jsx)(o.Button, {
                    className: A.removeVanityUrlButton,
                    onClick: this.handleRemoveVanityURL,
                    submitting: e,
                    look: o.Button.Looks.LINK,
                    size: o.Button.Sizes.MIN,
                    color: o.Button.Colors.RED,
                    children: O.Z.Messages.REMOVE_VANITY_URL,
                  })
                : null,
            ],
          });
        }
        renderUpsellButton() {
          return (0, s.jsxs)(o.ShinyButton, {
            color: o.Button.Colors.GREEN,
            className: r()(A.marginTop16),
            innerClassName: A.upsellButton,
            onClick: this.handleVanityUrlUpsellButton,
            children: [
              (0, s.jsx)(g.Z, {
                height: 16,
                width: 16,
                className: A.premiumUpsellBadge,
              }),
              " ",
              O.Z.Messages.PREMIUM_GUILD_UNLOCK_WTH_BOOSTING_CTA,
            ],
          });
        }
        renderInfo() {
          let {
            hasError: e,
            errorDetails: t,
            originalVanityURLCode: n,
          } = this.props;
          if (e)
            return (0, s.jsx)(o.Text, {
              variant: "text-md/normal",
              color: "text-danger",
              className: A.__invalid_marginTop20,
              children: (0, R.i)(null == t ? void 0 : t.code),
            });
          if (null != n && n.length > 0) {
            let e = (0, N.Z)(n);
            return (0, s.jsx)(o.FormText, {
              className: A.__invalid_marginTop20,
              type: o.FormTextTypes.LABEL_DESCRIPTOR,
              children: O.Z.Messages.VANITY_URL_HELP_EXTENDED_LINK.format({
                urlText: e,
                urlValue: e,
              }),
            });
          }
        }
        handleRemoveVanityURL() {
          (0, x.Gy)("");
        }
        handleInviteCodeChange(e) {
          (0, x.Gy)(e.replace(/ /g, "-"));
        }
        render() {
          let { hide: e, guild: t } = this.props;
          return null == t
            ? null
            : e
              ? (0, s.jsx)(c.Z, {})
              : (0, s.jsxs)(o.FormSection, {
                  children: [
                    (0, s.jsxs)(o.FormTitle, {
                      tag: o.FormTitleTags.H1,
                      className: A.flexFormTitle,
                      children: [
                        (0, s.jsx)("div", {
                          children: O.Z.Messages.VANITY_URL,
                        }),
                        (0, s.jsx)(T.Z, {
                          guild: t,
                          guildFeature: L.oNc.VANITY_URL,
                          className: A.guildFeatureAvailabilityIndicator,
                          onClick: this.handleVanityUrlUpsellIndicator,
                        }),
                      ],
                    }),
                    (0, s.jsx)(o.FormText, {
                      type: o.FormTextTypes.DESCRIPTION,
                      className: A.__invalid_marginBottom8,
                      children: O.Z.Messages.VANITY_URL_HELP,
                    }),
                    (0, s.jsx)(o.FormText, {
                      type: o.FormTextTypes.DESCRIPTION,
                      className: A.__invalid_marginBottom20,
                      children: O.Z.Messages.VANITY_URL_HELP_CONFLICT,
                    }),
                    (0, s.jsx)(o.FormText, {
                      type: o.FormTextTypes.DESCRIPTION,
                      className: A.__invalid_marginBottom20,
                      children: O.Z.Messages.VANITY_URL_DEFAULT_CHANNEL,
                    }),
                    (0, R.p)(t)
                      ? this.renderEditCard()
                      : this.renderUpsellButton(),
                    this.renderInfo(),
                  ],
                });
        }
        constructor(...e) {
          super(...e),
            M(this, "state", { isRemoving: !1 }),
            M(this, "handleShowModalUpsell", (e, t, n, s, a) => {
              e.preventDefault(), e.stopPropagation();
              let { guild: i, analyticsLocations: r } = this.props;
              null != i &&
                ((0, _.yw)(L.rMx.PREMIUM_GUILD_PROMOTION_OPENED, {
                  location: {
                    section: n,
                    object: L.qAy.LEARN_MORE,
                    objectType: (0, h.ge)(t),
                    location_stack: r,
                  },
                  guild_id: null == i ? void 0 : i.id,
                }),
                (0, m.Z)({
                  analyticsLocations: r,
                  analyticsSourceLocation: {
                    section: n,
                    object: s,
                    page: L.ZY5.GUILD_SETTINGS,
                  },
                  guild: i,
                  perks: a,
                }));
            }),
            M(this, "handleVanityUrlUpsellIndicator", (e) => {
              this.handleShowModalUpsell(
                e,
                L.Eu4.TIER_3,
                L.jXE.GUILD_SETTINGS_VANITY_URL,
                L.qAy.BADGE,
                (0, f.WW)(),
              );
            }),
            M(this, "handleVanityUrlUpsellButton", (e) => {
              this.handleShowModalUpsell(
                e,
                L.Eu4.TIER_3,
                L.jXE.GUILD_SETTINGS_VANITY_URL,
                L.qAy.BUTTON_CTA,
                (0, f.WW)(),
              );
            });
        }
      }
      function j() {
        let e = (0, l.e7)([C.Z], () => C.Z.getGuild()),
          t = (0, l.cj)([p.Z], () => ({
            vanityURLCode: p.Z.vanityURLCode,
            vanityURLUses: p.Z.vanityURLUses,
            originalVanityURLCode: p.Z.originalVanityURLCode,
            hasError: p.Z.hasError(),
            errorDetails: p.Z.errorDetails,
          })),
          n = (0, l.e7)([S.Z], () => S.Z.hideInstantInvites),
          { analyticsLocations: a } = (0, I.ZP)(u.Z.VANITY_URL);
        return (0, s.jsx)(I.Gt, {
          value: a,
          children: (0, s.jsx)(v, {
            guild: e,
            ...t,
            hide: n,
            analyticsLocations: a,
          }),
        });
      }
    },
    804153: function (e, t, n) {
      "use strict";
      n(47120), n(733860);
      var s = n(735250),
        a = n(470079),
        i = n(392711),
        r = n.n(i),
        l = n(149765),
        o = n(442837),
        c = n(481060),
        d = n(497321),
        u = n(484614),
        _ = n(933557),
        I = n(984933),
        E = n(496675),
        T = n(699516),
        m = n(246946),
        N = n(594174),
        S = n(434404),
        g = n(999382),
        h = n(981631),
        C = n(689938),
        x = n(991680);
      function p(e, t, n) {
        return (
          t in e
            ? Object.defineProperty(e, t, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0,
              })
            : (e[t] = n),
          e
        );
      }
      let R = "NO_INSTANT_INVITE",
        L = l.$e(h.Plq.VIEW_CHANNEL, h.Plq.CREATE_INSTANT_INVITE);
      class f extends a.PureComponent {
        static getDerivedStateFromProps(e, t) {
          let { widgetEnabled: n } = e,
            { widgetEnabledProp: s } = t;
          return n !== s ? { internalEnabled: n, widgetEnabledProp: n } : null;
        }
        renderChannelSelect(e) {
          let { widgetChannelId: t } = this.props,
            n = I.ZP.getChannels(e.id),
            a = r()([...n[I.sH], ...n[I.Zb]])
              .filter((t) => {
                let { channel: n } = t;
                return n.guild_id === e.id;
              })
              .filter((e) => {
                let { channel: n } = e;
                return n.id === t || E.Z.can(L, n);
              })
              .map((e) => {
                let { channel: t } = e;
                return { value: t.id, label: (0, _.F6)(t, N.default, T.Z, !0) };
              })
              .value();
          return (
            a.unshift({ value: R, label: C.Z.Messages.NO_INSTANT_INVITE }),
            (0, s.jsxs)(c.FormItem, {
              title: C.Z.Messages.FORM_LABEL_INSTANT_INVITE_CHANNEL,
              children: [
                (0, s.jsx)(c.SingleSelect, {
                  className: x.spacing,
                  options: a,
                  value: t,
                  onChange: this.handleChannelSelect,
                }),
                (0, s.jsx)(c.FormText, {
                  type: c.FormTextTypes.DESCRIPTION,
                  children: C.Z.Messages.FORM_HELP_INSTANT_INVITE_CHANNEL,
                }),
              ],
            })
          );
        }
        renderAPIInfo(e) {
          let t = ""
            .concat(location.protocol)
            .concat(window.GLOBAL_ENV.API_ENDPOINT, "/guilds/")
            .concat(e.id, "/widget.json");
          return (0, s.jsxs)("div", {
            className: x.infoWrapper,
            children: [
              (0, s.jsx)(c.FormItem, {
                title: C.Z.Messages.FORM_LABEL_SERVER_ID,
                className: x.infoItem,
                children: (0, s.jsx)(u.Z, { value: e.id }),
              }),
              (0, s.jsx)(c.FormItem, {
                title: C.Z.Messages.FORM_LABEL_JSON_API,
                className: x.infoItem,
                children: (0, s.jsx)(u.Z, { value: t }),
              }),
            ],
          });
        }
        renderWidget(e) {
          let t = ""
            .concat(location.protocol)
            .concat(window.GLOBAL_ENV.WIDGET_ENDPOINT, "?id=")
            .concat(e.id, "&theme=dark");
          return (0, s.jsx)("div", {
            children: (0, s.jsxs)("div", {
              className: x.infoWrapper,
              children: [
                (0, s.jsxs)(c.FormItem, {
                  className: x.infoItem,
                  title: C.Z.Messages.FORM_LABEL_PREMADE_WIDGET,
                  children: [
                    (0, s.jsx)(u.Z, {
                      value: '<iframe src="'.concat(
                        t,
                        '" width="350" height="500" allowtransparency="true" frameborder="0" sandbox="allow-popups allow-popups-to-escape-sandbox allow-same-origin allow-scripts"></iframe>',
                      ),
                    }),
                    (0, s.jsx)(c.FormText, {
                      type: c.FormTextTypes.DESCRIPTION,
                      children:
                        C.Z.Messages.GUILD_SETTINGS_WIDGET_EMBED_HELP.format(),
                    }),
                  ],
                }),
                (0, s.jsx)("img", {
                  className: x.infoItem,
                  "data-accessibility": "desaturate",
                  alt: "",
                  src: n(329488),
                }),
              ],
            }),
          });
        }
        render() {
          let { guild: e } = this.props;
          return null == e
            ? null
            : this.props.hide
              ? (0, s.jsx)(d.Z, {})
              : (0, s.jsxs)(c.FormSection, {
                  tag: c.FormTitleTags.H1,
                  title: C.Z.Messages.GUILD_SETTINGS_TITLE_SERVER_WIDGET,
                  children: [
                    this.renderToggle(),
                    this.renderChannelSelect(e),
                    (0, s.jsx)(c.FormDivider, { className: x.divider }),
                    this.renderAPIInfo(e),
                    (0, s.jsx)(c.FormDivider, { className: x.divider }),
                    this.renderWidget(e),
                  ],
                });
        }
        constructor(...e) {
          super(...e),
            p(this, "state", {
              internalEnabled: this.props.widgetEnabled,
              widgetEnabledProp: this.props.widgetEnabled,
            }),
            p(this, "renderToggle", () =>
              (0, s.jsx)(c.FormSwitch, {
                className: x.spacing,
                value: this.state.internalEnabled,
                onChange: this.handleToggleWidget,
                children: C.Z.Messages.GUILD_SETTINGS_WIDGET_ENABLE_WIDGET,
              }),
            ),
            p(this, "handleToggleWidget", (e) => {
              let { guild: t, widgetChannelId: n } = this.props;
              if (null != t)
                this.setState({ internalEnabled: e }),
                  S.Z.updateEmbed(t.id, e, n);
            }),
            p(this, "handleChannelSelect", (e) => {
              let { guild: t, widgetEnabled: n } = this.props;
              if (null != t) S.Z.updateEmbed(t.id, n, e !== R ? e : null);
            });
        }
      }
      t.Z = o.ZP.connectStores([g.Z, m.Z], () => {
        let { guild: e, embedChannelId: t, embedEnabled: n } = g.Z.getProps();
        return {
          guild: e,
          widgetChannelId: t,
          widgetEnabled: n,
          hide: m.Z.enabled,
        };
      })(f);
    },
    992249: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return d;
        },
      }),
        n(47120);
      var s = n(735250),
        a = n(470079),
        i = n(120356),
        r = n.n(i),
        l = n(481060),
        o = n(717251),
        c = n(446716);
      function d(e) {
        let {
            action: t,
            children: n,
            className: i,
            onExpandChange: d,
            loading: u,
            ..._
          } = e,
          [I, E] = a.useState(!1),
          T = (e) => {
            E(e), null == d || d(e);
          };
        return (0, s.jsx)(l.Collapsible, {
          className: r()(c.groupContainer, i),
          isExpanded: I,
          collapsibleContent: (0, s.jsxs)("div", {
            className: c.groupCollapsedContainer,
            children: [I && (0, s.jsx)("div", { className: c.pointer }), n],
          }),
          children: (e) => {
            let { onClick: n } = e;
            return (0, s.jsx)(o.Z, {
              ..._,
              className: c.groupHeaderRow,
              action: u
                ? (0, s.jsx)(l.Spinner, {
                    type: l.Spinner.Type.PULSING_ELLIPSIS,
                  })
                : t,
              onClick: (e) => {
                T(!I), n(e);
              },
            });
          },
        });
      }
    },
    193544: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return T;
        },
      }),
        n(47120);
      var s = n(735250),
        a = n(470079),
        i = n(120356),
        r = n.n(i),
        l = n(481060),
        o = n(186523),
        c = n(553826),
        d = n(2150),
        u = n(992249),
        _ = n(717251),
        I = n(689938),
        E = n(441519);
      function T(e) {
        var t, n, i;
        let {
            changeTitle: T,
            value: m,
            options: N,
            className: S,
            onChange: g,
          } = e,
          [h, C] = a.useState(m),
          [x, p] = a.useState(!1),
          [R, L] = a.useState(!1),
          f = a.useRef(null);
        a.useEffect(() => {
          C(m);
        }, [m]),
          a.useEffect(
            () => () => {
              clearTimeout(f.current);
            },
            [],
          );
        let O = N.find((e) => e.value === h),
          A = (e) => {
            if (!e.disabled && e.value !== h)
              L(!0),
                null == g || g(e),
                C(e.value),
                (f.current = setTimeout(() => {
                  L(!1), p(!1);
                }, 1e3));
          };
        return (0, s.jsx)(u.Z, {
          title: x
            ? T
            : null !== (t = null == O ? void 0 : O.title) && void 0 !== t
              ? t
              : T,
          description: x
            ? "(".concat(
                null !== (n = null == O ? void 0 : O.title) && void 0 !== n
                  ? n
                  : I.Z.Messages.NONE,
                ")",
              )
            : null !== (i = null == O ? void 0 : O.description) && void 0 !== i
              ? i
              : "",
          highlightColor: x ? d.q.NONE : null == O ? void 0 : O.highlightColor,
          action: (0, s.jsx)(l.Button, {
            look: l.Button.Looks.LINK,
            size: l.Button.Sizes.MIN,
            color: l.Button.Colors.LINK,
            children: I.Z.Messages.CHANGE,
          }),
          loading: R,
          className: S,
          children: N.map((e, t) =>
            (0, s.jsx)(
              _.Z,
              {
                title: e.title,
                description: e.description,
                highlightColor: e.highlightColor,
                className: r()(
                  E.groupCollapsedRow,
                  h === e.value && E.selected,
                ),
                selected: h === e.value,
                action:
                  h === e.value
                    ? (0, s.jsx)(c.Z, { className: E.radioItem })
                    : (0, s.jsx)(o.Z, { className: E.radioItem }),
                onClick: () => A(e),
                disabled: e.disabled,
              },
              "".concat(e.title, "-").concat(t),
            ),
          ),
        });
      }
    },
    717251: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return c;
        },
      });
      var s = n(735250);
      n(470079);
      var a = n(120356),
        i = n.n(a),
        r = n(481060),
        l = n(2150),
        o = n(96956);
      function c(e) {
        let {
          title: t,
          description: n,
          action: a,
          highlightColor: c = l.q.NONE,
          selected: d = !1,
          subsection: u = null,
          onClick: _,
          className: I,
          disabled: E,
        } = e;
        return (0, s.jsxs)("div", {
          className: i()(o.container, I),
          children: [
            (0, s.jsx)(r.Clickable, {
              className: i()(
                o.clickableContainer,
                { [o.noAction]: null == _, [o.disabled]: E },
                I,
              ),
              onClick: E ? void 0 : _,
              children: (0, s.jsxs)("div", {
                className: i()(o.backgroundModifierContainer, o[c], {
                  [o.selected]: d,
                  [o.disabled]: E,
                  [o.noAction]: null == _,
                }),
                children: [
                  (0, s.jsxs)("div", {
                    className: o.settingsDescriptionContainer,
                    children: [
                      (0, s.jsx)(r.Text, {
                        variant: "text-sm/medium",
                        color: "interactive-active",
                        children: t,
                      }),
                      (0, s.jsx)(r.Text, {
                        variant: "text-sm/normal",
                        color: "interactive-normal",
                        className: o.description,
                        children: n,
                      }),
                    ],
                  }),
                  (0, s.jsx)("div", {
                    className: o.__invalid_action,
                    children: a,
                  }),
                ],
              }),
            }),
            null != u &&
              (0, s.jsx)("div", {
                className: o.subsectionContainer,
                children: u,
              }),
          ],
        });
      }
    },
    450474: function (e, t, n) {
      "use strict";
      var s = n(735250);
      n(470079);
      var a = n(481060),
        i = n(296386),
        r = n(150192),
        l = n(285888),
        o = n(203377),
        c = n(930871);
      t.Z = (e) => {
        let { guild: t, guildMetadata: n, menuPlacement: d, disabled: u } = e,
          _ = (e) => {
            let { secondaryCategoryIds: s } = n,
              a = e.map((e) => e.value);
            if (e.length < s.length)
              s.filter((e) => !a.includes(e)).forEach((e) =>
                (0, i.K0)(t.id, e),
              );
            else {
              if (s.length >= o.Pg) return;
              a.filter((e) => !s.includes(e)).forEach((e) =>
                (0, i.Kq)(t.id, e),
              );
            }
          },
          I = (e) => {
            (0, i.K0)(t.id, e);
          },
          E = (e) => {
            e.preventDefault(), e.stopPropagation();
          },
          T = r.Z.getAllCategories().map((e) => {
            let { categoryId: t, name: n } = e;
            return { value: t, label: n };
          });
        return (0, s.jsx)(l.Z, {
          value: n.secondaryCategoryIds,
          searchable: !0,
          clearable: !1,
          options: T,
          onChange: (e) => _(e),
          multiValueRenderer: (e) => {
            let { label: t, value: n } = e;
            return (0, s.jsxs)("span", {
              className: c.subcategory,
              onMouseDown: E,
              children: [
                t,
                (0, s.jsx)(a.Clickable, {
                  className: c.closeWrapper,
                  onClick: () => I(n),
                  children: (0, s.jsx)(a.XSmallIcon, {
                    size: "xs",
                    color: "currentColor",
                    className: c.close,
                  }),
                }),
              ],
            });
          },
          menuPlacement: d,
          disabled: u,
          isMulti: !0,
        });
      };
    },
    845377: function (e, t, n) {
      "use strict";
      n(47120), n(724458);
      var s = n(735250),
        a = n(470079),
        i = n(120356),
        r = n.n(i),
        l = n(498607),
        o = n.n(l),
        c = n(913527),
        d = n.n(c),
        u = n(442837),
        _ = n(692547),
        I = n(481060),
        E = n(946314),
        T = n(984933),
        m = n(63063),
        N = n(709054),
        S = n(434404),
        g = n(981631),
        h = n(689938),
        C = n(23387);
      let x = (e) => {
        let {
            name: t,
            failingName: n,
            description: a,
            checked: i,
            pending: r,
            pendingDescription: l,
            failingDescription: o,
          } = e,
          c = t,
          d = null,
          u = null;
        return (
          r
            ? ((d = (0, s.jsx)(I.CircleWarningIcon, {
                size: "custom",
                color: _.Z.unsafe_rawColors.YELLOW_300.css,
                width: 20,
                height: 20,
              })),
              (u = null != l ? l : a))
            : i
              ? ((d = (0, s.jsx)(I.Checkbox, {
                  readOnly: !0,
                  shape: I.Checkbox.Shapes.ROUND,
                  size: 20,
                  type: I.Checkbox.Types.INVERTED,
                  value: !0,
                })),
                (u = a))
              : ((d = (0, s.jsx)(I.CircleXIcon, {
                  size: "custom",
                  color: _.Z.unsafe_rawColors.RED_400.css,
                  width: 20,
                  height: 20,
                })),
                (c = null != n ? n : t),
                (u = null != o ? o : a)),
          (0, s.jsxs)("div", {
            className: C.checklistItem,
            children: [
              (0, s.jsx)("div", { className: C.checklistIcon, children: d }),
              (0, s.jsxs)("div", {
                className: C.checklistText,
                children: [
                  (0, s.jsx)(I.Heading, {
                    variant: "heading-md/semibold",
                    children: c,
                  }),
                  (0, s.jsx)(I.Text, {
                    color: "text-muted",
                    variant: "text-sm/normal",
                    children: u,
                  }),
                ],
              }),
            ],
          })
        );
      };
      function p(e, t) {
        return o()(
          null == e
            ? void 0
            : e.map((e) => {
                let [t, n] = e;
                return null == t ? void 0 : t.id;
              }),
          null == t
            ? void 0
            : t.map((e) => {
                let [t, n] = e;
                return null == t ? void 0 : t.id;
              }),
        );
      }
      t.Z = (e) => {
        let {
            guild: t,
            guildId: i,
            className: l,
            noHeader: o = !1,
            failedItemsOnly: c = !1,
          } = e,
          [_, R] = (0, u.Wu)(
            [E.ZP],
            () => [E.ZP.getDiscoveryChecklist(i), E.ZP.isLoading()],
            [i],
          ),
          { nsfwProperties: L } = null != _ ? _ : {},
          f = null == t ? void 0 : t.hasFeature(g.oNc.PARTNERED),
          O = null == L ? void 0 : L.channels_banned_keywords,
          A = (0, u.e7)(
            [T.ZP],
            () => {
              var e, n, s;
              if (null == O) return [];
              let a =
                  null !==
                    (n = (
                      null !== (e = T.ZP.getChannels(t.id)) && void 0 !== e
                        ? e
                        : {}
                    )[T.sH]) && void 0 !== n
                    ? n
                    : [],
                i =
                  null !==
                    (s =
                      null == a
                        ? void 0
                        : a
                            .map((e) => e.channel)
                            .reduce((e, t) => ({ ...e, [t.id]: t }), {})) &&
                  void 0 !== s
                    ? s
                    : {};
              return null == O
                ? []
                : Object.entries(O).map((e) => {
                    let [t, n] = e;
                    return [i[t], n];
                  });
            },
            [t.id, O],
            p,
          );
        if (R || null == _)
          return (0, s.jsxs)("div", {
            className: r()(C.container, C.loaderContainer, l),
            children: [
              (0, s.jsx)(I.Heading, {
                className: C.loadingText,
                variant: "heading-md/semibold",
                color: "header-secondary",
                children:
                  h.Z.Messages.GUILD_SETTINGS_DISCOVERY_CHECKLIST_LOADING,
              }),
              (0, s.jsx)(I.Spinner, { className: C.__invalid_spinner }),
            ],
          });
        let M = f
            ? h.Z.Messages
                .GUILD_SETTINGS_DISCOVERY_CHECKLIST_SIZE_DESCRIPTION_FAILING_PARTNERS
            : h.Z.Messages
                .GUILD_SETTINGS_DISCOVERY_CHECKLIST_SIZE_DESCRIPTION_FAIL,
          D = [
            {
              name: h.Z.Messages.GUILD_SETTINGS_DISCOVERY_CHECKLIST_SAFE,
              failingName:
                h.Z.Messages.GUILD_SETTINGS_DISCOVERY_CHECKLIST_SAFE_FAILING,
              description:
                h.Z.Messages
                  .GUILD_SETTINGS_DISCOVERY_CHECKLIST_SAFE_DESCRIPTION,
              failingDescription:
                h.Z.Messages.GUILD_SETTINGS_DISCOVERY_CHECKLIST_SAFE_DESCRIPTION_FAILING_GUIDELINES.format(
                  {
                    termsURL: g.EYA.TERMS,
                    guidelinesURL: m.Z.getArticleURL(
                      g.BhN.PUBLIC_GUILD_GUILDLINES,
                    ),
                  },
                ),
              checked: null == _ ? void 0 : _.safeEnvironment,
            },
            {
              name: h.Z.Messages.GUILD_SETTINGS_DISCOVERY_CHECKLIST_SIZE.format(
                { minMembers: _.minimumGuildSize },
              ),
              failingName:
                h.Z.Messages.GUILD_SETTINGS_DISCOVERY_CHECKLIST_SIZE_FAIL.format(
                  { minMembers: _.minimumGuildSize.toLocaleString() },
                ),
              description: null,
              failingDescription: M.format({
                minMembers: _.minimumGuildSize.toLocaleString(),
              }),
              checked: null == _ ? void 0 : _.size,
            },
            {
              name: h.Z.Messages.GUILD_SETTINGS_DISCOVERY_CHECKLIST_AGE,
              failingName:
                h.Z.Messages.GUILD_SETTINGS_DISCOVERY_CHECKLIST_AGE_FAILING,
              description:
                h.Z.Messages.GUILD_SETTINGS_DISCOVERY_CHECKLIST_AGE_DESCRIPTION.format(
                  { minimumGuildAge: Math.ceil(_.minimumGuildAge / 7) },
                ),
              failingDescription:
                h.Z.Messages.GUILD_SETTINGS_DISCOVERY_CHECKLIST_AGE_DESCRIPTION_FAILING.format(
                  {
                    minimumGuildAge: Math.ceil(_.minimumGuildAge / 7),
                    passDate: d()(N.default.extractTimestamp(i))
                      .add(_.minimumGuildAge, "days")
                      .format("LL"),
                  },
                ),
              checked: null == _ ? void 0 : _.age,
            },
            {
              name: (null == _ ? void 0 : _.healthScorePending)
                ? h.Z.Messages
                    .GUILD_SETTINGS_DISCOVERY_CHECKLIST_HEALTHY_PENDING
                : h.Z.Messages.GUILD_SETTINGS_DISCOVERY_CHECKLIST_HEALTHY,
              failingName:
                h.Z.Messages.GUILD_SETTINGS_DISCOVERY_CHECKLIST_HEALTHY_FAILING,
              description:
                h.Z.Messages
                  .GUILD_SETTINGS_DISCOVERY_CHECKLIST_HEALTHY_DESCRIPTION,
              failingDescription: (0, s.jsxs)(s.Fragment, {
                children: [
                  (0, s.jsx)(I.Text, {
                    color: "text-muted",
                    className: C.healthFailingDescription,
                    variant: "text-sm/normal",
                    children:
                      h.Z.Messages
                        .GUILD_SETTINGS_DISCOVERY_CHECKLIST_HEALTHY_DESCRIPTION_FAILING,
                  }),
                  (null == _ ? void 0 : _.engagementHealthy)
                    ? null
                    : (0, s.jsx)(I.Text, {
                        color: "text-danger",
                        variant: "text-sm/normal",
                        children:
                          h.Z.Messages
                            .GUILD_SETTINGS_DISCOVERY_CHECKLIST_ENGAGEMENT_FAILING,
                      }),
                  (null == _ ? void 0 : _.retentionHealthy)
                    ? null
                    : (0, s.jsx)(I.Text, {
                        color: "text-danger",
                        variant: "text-sm/normal",
                        children:
                          h.Z.Messages
                            .GUILD_SETTINGS_DISCOVERY_CHECKLIST_RETENTION_FAILING,
                      }),
                  (() => {
                    if (null == _ || null == _.healthScore) return !1;
                    let {
                        retentionHealthy: e,
                        engagementHealthy: t,
                        healthScore: n,
                      } = _,
                      {
                        avg_nonnew_participators: s,
                        avg_nonnew_communicators: a,
                        perc_ret_w1_intentful: i,
                      } = n;
                    return (!e && null != i) || (!t && null != s && null != a);
                  })() &&
                    (0, s.jsx)(I.Button, {
                      className: C.detailsButton,
                      look: I.Button.Looks.LINK,
                      size: I.Button.Sizes.NONE,
                      color: I.Button.Colors.LINK,
                      onClick: () =>
                        (0, I.openModalLazy)(async () => {
                          let { default: e } = await n
                            .e("23401")
                            .then(n.bind(n, 666599));
                          return (t) =>
                            (0, s.jsx)(e, { ...t, guildChecklist: _ });
                        }),
                      children:
                        h.Z.Messages
                          .GUILD_SETTINGS_DISCOVERY_CHECKLIST_HEALTH_VIEW_DETAILS,
                    }),
                ],
              }),
              pendingDescription: (null == _ ? void 0 : _.size)
                ? h.Z.Messages.GUILD_SETTINGS_DISCOVERY_CHECKLIST_HEALTHY_DESCRIPTION_PENDING.format(
                    {
                      checkBackHook: (e, t) =>
                        (0, s.jsx)(
                          "strong",
                          { className: C.healthPending, children: e },
                          t,
                        ),
                    },
                  )
                : h.Z.Messages.GUILD_SETTINGS_DISCOVERY_CHECKLIST_HEALTHY_DESCRIPTION_PENDING_SIZE.format(
                    { minMembers: 200 },
                  ),
              checked: null == _ ? void 0 : _.healthy,
              pending: null == _ ? void 0 : _.healthScorePending,
            },
            {
              name: h.Z.Messages.GUILD_SETTINGS_DISCOVERY_CHECKLIST_NSFW,
              failingName:
                h.Z.Messages.GUILD_SETTINGS_DISCOVERY_CHECKLIST_NSFW_FAILING,
              description:
                h.Z.Messages
                  .GUILD_SETTINGS_DISCOVERY_CHECKLIST_NSFW_DESCRIPTION,
              failingDescription: (0, s.jsxs)(s.Fragment, {
                children: [
                  (null == L ? void 0 : L.channels) != null
                    ? (0, s.jsx)(I.Text, {
                        color: "text-muted",
                        variant: "text-sm/normal",
                        children:
                          h.Z.Messages.GUILD_SETTINGS_DISCOVERY_CHECKLIST_CHANGE_CHANNEL_NAMES_2.format(
                            {
                              channelHook: (e, t) =>
                                (0, s.jsx)(
                                  "span",
                                  { className: C.doesNot, children: e },
                                  t,
                                ),
                            },
                          ),
                      })
                    : null,
                  A.length > 0
                    ? (0, s.jsx)("div", {
                        className: C.indent,
                        children: A.map((e) => {
                          let [t, n] = e;
                          return null != t
                            ? (0, s.jsxs)(
                                I.Text,
                                {
                                  color: "text-muted",
                                  variant: "text-sm/normal",
                                  children: ["#", t.name, ": ", n.join(", ")],
                                },
                                t.id,
                              )
                            : null;
                        }),
                      })
                    : null,
                  (null == L ? void 0 : L.name) != null
                    ? (0, s.jsx)(I.Text, {
                        color: "text-muted",
                        variant: "text-sm/normal",
                        children:
                          h.Z.Messages.GUILD_SETTINGS_DISCOVERY_CHECKLIST_CHANGE_NAME.format(
                            {
                              nameHook: (e, t) =>
                                (0, s.jsx)(
                                  "span",
                                  { className: C.doesNot, children: e },
                                  t,
                                ),
                            },
                          ),
                      })
                    : null,
                  (null == L ? void 0 : L.description) != null
                    ? (0, s.jsx)(I.Text, {
                        color: "text-muted",
                        variant: "text-sm/normal",
                        children:
                          h.Z.Messages.GUILD_SETTINGS_DISCOVERY_CHECKLIST_CHANGE_DESCRIPTION.format(
                            {
                              descriptionHook: (e, t) =>
                                (0, s.jsx)(
                                  "span",
                                  { className: C.doesNot, children: e },
                                  t,
                                ),
                            },
                          ),
                      })
                    : null,
                ],
              }),
              checked: null == L || 0 === Object.keys(L).length,
            },
            {
              name: h.Z.Messages.GUILD_SETTINGS_DISCOVERY_CHECKLIST_2FA,
              failingName:
                h.Z.Messages.GUILD_SETTINGS_DISCOVERY_CHECKLIST_2FA_FAILING,
              description:
                h.Z.Messages.GUILD_SETTINGS_DISCOVERY_CHECKLIST_2FA_DESCRIPTION,
              failingDescription:
                h.Z.Messages.GUILD_SETTINGS_DISCOVERY_CHECKLIST_2FA_DESCRIPTION_FAILING.format(
                  {
                    onClick: () =>
                      S.Z.setSection(g.pNK.SAFETY, g.KsC.SAFETY_PERMISSIONS),
                  },
                ),
              checked: null == _ ? void 0 : _.protected,
            },
          ];
        return (0, s.jsxs)("div", {
          className: r()(C.container, l),
          children: [
            (() => {
              let e =
                  h.Z.Messages.GUILD_SETTINGS_DISCOVERY_CHECKLIST_DOES_NOT_PASS,
                t = (null == _ ? void 0 : _.sufficient) ? n(909425) : n(177266);
              return o
                ? null
                : (0, s.jsxs)("div", {
                    className: C.header,
                    children: [
                      (0, s.jsx)("img", {
                        alt: "",
                        src: t,
                        className: C.headerIcon,
                        width: 40,
                      }),
                      (0, s.jsx)(I.Heading, {
                        variant: "heading-md/semibold",
                        children: (null == _ ? void 0 : _.sufficient)
                          ? h.Z.Messages
                              .GUILD_SETTINGS_DISCOVERY_CHECKLIST_GOOD_STANDING
                          : e.format({
                              doesNotHook: (e, t) =>
                                (0, s.jsx)(
                                  "strong",
                                  { className: C.doesNot, children: e },
                                  t,
                                ),
                            }),
                      }),
                    ],
                  });
            })(),
            D.filter((e) => !c || null == e.checked || !e.checked).map((e, t) =>
              (0, s.jsxs)(
                a.Fragment,
                {
                  children: [
                    (0, s.jsx)(x, { ...e }),
                    t < D.length - 1
                      ? (0, s.jsx)("hr", { className: C.separator })
                      : null,
                  ],
                },
                "".concat(e.name),
              ),
            ),
          ],
        });
      };
    },
    354051: function (e, t, n) {
      "use strict";
      n(47120);
      var s = n(735250);
      n(470079);
      var a = n(442837),
        i = n(481060),
        r = n(496675),
        l = n(434404),
        o = n(845377),
        c = n(981631),
        d = n(689938),
        u = n(495994);
      t.Z = (e) => {
        let { guild: t } = e,
          n = (0, a.e7)([r.Z], () => r.Z.can(c.Plq.ADMINISTRATOR, t), [t]),
          _ = t.hasFeature(c.oNc.DISCOVERABLE),
          I = () => {
            let e = new Set(t.features);
            t.hasFeature(c.oNc.DISCOVERABLE) && e.delete(c.oNc.DISCOVERABLE),
              l.Z.updateGuild({ features: e });
          };
        return (0, s.jsxs)(i.FormSection, {
          title: d.Z.Messages.DISCOVERY,
          tag: "h2",
          children: [
            (0, s.jsx)("div", { className: u.background }),
            (0, s.jsxs)("div", {
              className: u.discoverySettings,
              children: [
                (0, s.jsx)("div", { className: u.image }),
                (0, s.jsx)(i.Heading, {
                  className: u.header,
                  variant: "heading-xl/semibold",
                  children: d.Z.Messages.GUILD_SETTINGS_DISCOVERY_DISQUALIFIED,
                }),
                (0, s.jsx)(i.Text, {
                  className: u.description,
                  variant: "text-md/normal",
                  children:
                    d.Z.Messages.GUILD_SETTINGS_DISCOVERY_DISQUALIFIED_DESCRIPTION.format(),
                }),
                (0, s.jsx)(o.Z, {
                  className: u.checklist,
                  guild: t,
                  guildId: t.id,
                  noHeader: !0,
                  failedItemsOnly: !0,
                }),
                _ &&
                  (0, s.jsx)(i.Tooltip, {
                    text: n
                      ? null
                      : d.Z.Messages.GUILD_SETTINGS_DISCOVERY_ADMIN_ONLY,
                    children: (e) =>
                      (0, s.jsx)(i.Button, {
                        size: i.Button.Sizes.SMALL,
                        onClick: I,
                        color: i.Button.Colors.PRIMARY,
                        className: u.disableDiscoveryButton,
                        disabled: !n,
                        ...e,
                        children:
                          d.Z.Messages
                            .GUILD_SETTINGS_DISABLE_DISCOVERABLE_PERMINENTLY,
                      }),
                  }),
              ],
            }),
          ],
        });
      };
    },
    347604: function (e, t, n) {
      "use strict";
      n(47120);
      var s = n(735250),
        a = n(470079),
        i = n(392711),
        r = n.n(i),
        l = n(792986),
        o = n(442837),
        c = n(481060),
        d = n(946314),
        u = n(938502),
        _ = n(967916),
        I = n(68638),
        E = n(816817),
        T = n(219369),
        m = n(650774),
        N = n(845377),
        S = n(981631),
        g = n(689938),
        h = n(445314),
        C = n(716455);
      let x = [
          "322850917248663552",
          "172018499005317120",
          "414234792121597953",
          "228406572756369408",
        ],
        p = [
          "620723483965653003",
          "662246299369734154",
          "181970867549503489",
          "102860784329052160",
        ];
      t.Z = (e) => {
        let { guild: t, onEnableDiscovery: n, isGuildAdmin: i } = e,
          [R, L] = (0, l.Z)(() => [r().sample(x), r().sample(p)], []);
        a.useEffect(() => {
          _.z([R, L]);
        }, [R, L]);
        let [f, O] = (0, o.Wu)(
            [I.Z],
            () => [I.Z.getGuild(R), I.Z.getGuild(L)],
            [R, L],
          ),
          { canEnableDiscovery: A, isPendingSuccess: M } = (0, o.cj)(
            [d.ZP],
            () => ({
              canEnableDiscovery: d.ZP.passesChecklist(t.id),
              isPendingSuccess: d.ZP.isPendingSuccess(t.id),
            }),
            [t.id],
          ),
          [D, v] = (0, o.Wu)([m.Z], () => [null, m.Z.getMemberCount(t.id)], [
            t.id,
          ]),
          j = a.useCallback(() => {
            null != n && n();
          }, [n]),
          Z = null;
        return (
          i
            ? M
              ? (Z = g.Z.Messages.GUILD_SETTINGS_DISCOVERY_PENDING_HEALTHY)
              : !A &&
                (Z = g.Z.Messages.GUILD_SETTINGS_DISCOVERY_REQUIREMENTS_NOT_MET)
            : (Z = g.Z.Messages.GUILD_SETTINGS_DISCOVERY_ADMIN_ONLY),
          (0, s.jsxs)("div", {
            className: h.container,
            children: [
              (0, s.jsx)("img", { alt: "", src: C, className: h.sparkles }),
              (0, s.jsxs)("div", {
                className: h.discoverPreview,
                children: [
                  (0, s.jsx)(E.Z, {
                    className: h.placeholderCard,
                    disabled: !0,
                    small: !0,
                    loading: null == f,
                    guild: f,
                  }),
                  (0, s.jsx)(E.Z, {
                    className: h.previewCard,
                    guild: t,
                    description:
                      g.Z.Messages.GUILD_SETTINGS_DISCOVERY_PREVIEW_DESCRIPTION,
                    presenceCount: D,
                    memberCount: v,
                  }),
                  (0, s.jsx)(E.Z, {
                    className: h.placeholderCard,
                    disabled: !0,
                    small: !0,
                    loading: null == O,
                    guild: O,
                  }),
                ],
              }),
              (0, s.jsx)(c.Heading, {
                className: h.header,
                variant: "heading-xl/semibold",
                children: g.Z.Messages.GUILD_SETTINGS_DISCOVERY_HEADER,
              }),
              (0, s.jsx)(c.Text, {
                variant: "text-md/normal",
                className: h.valueProp,
                color: "header-secondary",
                children:
                  g.Z.Messages.GUILD_SETTINGS_DISCOVERY_PAGE_DESCRIPTION.format(
                    {
                      onLinkClick: () =>
                        (0, T.lW)({
                          articleId: S.BhN.SERVER_DISCOVERY,
                          guildId: t.id,
                          pageView: u.d5.INTRO,
                        }),
                    },
                  ),
              }),
              (0, s.jsx)(c.Text, {
                variant: "text-md/normal",
                className: h.byline,
                color: "header-secondary",
                children:
                  g.Z.Messages.GUILD_SETTINGS_DISCOVERY_PAGE_DESCRIPTION_SUBHEADING.format(
                    {
                      onGuidelinesClick: () =>
                        (0, T.lW)({
                          articleId: S.BhN.SERVER_DISCOVERY_GUIDELINES,
                          guildId: t.id,
                          pageView: u.d5.INTRO,
                        }),
                    },
                  ),
              }),
              (0, s.jsx)(c.Tooltip, {
                text: Z,
                children: (e) =>
                  (0, s.jsx)(c.Button, {
                    ...e,
                    className: h.enableButton,
                    color: c.Button.Colors.BRAND,
                    size: c.Button.Sizes.LARGE,
                    disabled: !A || !i,
                    onClick: j,
                    children: g.Z.Messages.GUILD_SETTINGS_SET_UP_DISCOVERY,
                  }),
              }),
              (0, s.jsx)(N.Z, {
                className: h.checklist,
                guild: t,
                guildId: t.id,
              }),
            ],
          })
        );
      };
    },
    190287: function (e, t, n) {
      "use strict";
      n(47120), n(653041);
      var s = n(735250),
        a = n(470079),
        i = n(120356),
        r = n.n(i),
        l = n(442837),
        o = n(481060),
        c = n(596454),
        d = n(296386),
        u = n(318766),
        _ = n(907040),
        I = n(999382),
        E = n(185923),
        T = n(689938),
        m = n(628660);
      let N = (e) => {
        var t;
        let {
            reason: n = "",
            emoji_name: i,
            onSetReason: d,
            onSelectEmoji: T,
            onClearPressed: N,
            reasonMinLength: S,
            reasonMaxLength: g,
            placeholder: h,
            position: C,
          } = e,
          [x, p] = a.useState(!1),
          R = (0, l.e7)([I.Z], () => I.Z.isGuildMetadataLoaded());
        return (0, s.jsxs)("div", {
          className: r()(m.reasonContainer),
          children: [
            (0, s.jsx)(o.Popout, {
              onRequestClose: () => {
                p(!1);
              },
              shouldShow: x,
              position: "right",
              align: "top",
              animation: o.Popout.Animation.NONE,
              renderPopout: (e) => {
                let { closePopout: t } = e;
                return (0, s.jsx)(_.Z, {
                  pickerIntention: E.Hz.COMMUNITY_CONTENT,
                  closePopout: t,
                  onSelectEmoji: (e, n) => {
                    null != e && T(e), n && t();
                  },
                });
              },
              children: () =>
                (0, s.jsx)("div", {
                  className: m.background,
                  children: (0, s.jsx)(u.Z, {
                    active: !1,
                    onClick: () => {
                      p(!0);
                    },
                    tabIndex: 0,
                    renderButtonContents:
                      null != i
                        ? () => (0, s.jsx)(c.Z, { emojiName: i, animated: !1 })
                        : null,
                  }),
                }),
            }),
            (0, s.jsxs)("div", {
              className: m.inputContainer,
              children: [
                (0, s.jsx)(
                  o.TextInput,
                  {
                    inputClassName: m.reason,
                    placeholder: h,
                    value: n,
                    minLength: S,
                    maxLength: g,
                    onChange: (e) => {
                      d(e);
                    },
                    defaultDirty: (null == n ? void 0 : n.length) > 0,
                  },
                  "text-input-".concat(C, "-").concat(R),
                ),
                (null !== (t = null == n ? void 0 : n.length) && void 0 !== t
                  ? t
                  : 0) > 0 || null != i
                  ? (0, s.jsx)(o.Button, {
                      className: m.clearStatusButton,
                      onClick: N,
                      look: o.Button.Looks.BLANK,
                      size: o.Button.Sizes.NONE,
                      tabIndex: -1,
                      "aria-hidden": !0,
                      children: (0, s.jsx)(o.CircleXIcon, {
                        size: "md",
                        color: "currentColor",
                        className: m.clearStatusIcon,
                      }),
                    })
                  : null,
              ],
            }),
          ],
        });
      };
      t.Z = (e) => {
        let {
            reasonMinLength: t,
            reasonMaxLength: n,
            guildId: a,
            reasons: i,
          } = e,
          r = [
            T.Z.Messages.DISCOVERY_LANDING_PAGE_REASONS_TO_JOIN_PLACEHOLDER_ONE,
            T.Z.Messages.DISCOVERY_LANDING_PAGE_REASONS_TO_JOIN_PLACEHOLDER_TWO,
            T.Z.Messages
              .DISCOVERY_LANDING_PAGE_REASONS_TO_JOIN_PLACEHOLDER_THREE,
            T.Z.Messages
              .DISCOVERY_LANDING_PAGE_REASONS_TO_JOIN_PLACEHOLDER_FOUR,
          ],
          l = [];
        for (let e = 0; e < 4; e++)
          l.push(
            (0, s.jsx)(
              N,
              {
                position: e,
                placeholder: r[e],
                ...i[e],
                onSetReason: (t) => {
                  let n = [...i],
                    s = Object.assign({}, i[e], { reason: t });
                  (n[e] = s), (0, d.P$)(a, n);
                },
                onSelectEmoji: (t) => {
                  let n = [...i],
                    s = Object.assign({}, i[e], {
                      emoji_name: t.optionallyDiverseSequence,
                    });
                  (n[e] = s), (0, d.P$)(a, n);
                },
                onClearPressed: () => {
                  let t = [...i],
                    n = { reason: "", emoji_name: null };
                  (t[e] = n), (0, d.P$)(a, t);
                },
                reasonMinLength: t,
                reasonMaxLength: n,
              },
              "reasonListItem-" + e,
            ),
          );
        return (0, s.jsx)("div", { children: l });
      };
    },
    70409: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return u;
        },
      });
      var s = n(735250);
      n(470079);
      var a = n(481060),
        i = n(372444),
        r = n(267642),
        l = n(981631),
        o = n(474936),
        c = n(689938),
        d = n(696969);
      function u(e) {
        let { guild: t, numSounds: n, isOutOfSlots: u } = e,
          _ = t.premiumTier,
          I = (0, r.FZ)(_, t.id),
          E = o._k[_] - 2;
        if (null == I || _ === l.Eu4.TIER_3 || n < E) return null;
        let T = u
          ? {
              color: a.ButtonColors.GREEN,
              look: a.ButtonLooks.FILLED,
              text: c.Z.Messages.GUILD_SETTINGS_SOUNDBOARD_CTA,
            }
          : void 0;
        return (0, s.jsx)(i.Z, {
          header: c.Z.Messages.PREMIUM_GUILD_SUBSCRIPTION_UPSELL_BANNER_HEADER,
          text: c.Z.Messages.GUILD_SETTINGS_SOUNDBOARD_UPSELL_BANNER_TEXT.format(
            { level: I, numAdditional: (0, r.Je)(I) },
          ),
          headerColor: "header-primary",
          textColor: "text-normal",
          buttonProps: T,
          guild: t,
          analyticsLocation: {
            page: l.ZY5.GUILD_SETTINGS,
            section: l.jXE.GUILD_SETTINGS_SOUNDBOARD,
            object: l.qAy.BOOST_UPSELL_BANNER_SLOTS_FULL,
            objectType: (0, r.ge)(I),
          },
          className: d.container,
        });
      }
    },
    518936: function (e, t, n) {
      "use strict";
      function s() {
        let e =
            arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "",
          t =
            !(arguments.length > 1) || void 0 === arguments[1] || arguments[1],
          n = window.GLOBAL_ENV.GUILD_TEMPLATE_HOST;
        return ""
          .concat(t ? "".concat(location.protocol) : "", "//")
          .concat(n)
          .concat("/".concat(e));
      }
      n.d(t, {
        Z: function () {
          return s;
        },
      });
    },
    902807: function (e, t, n) {
      "use strict";
      var s = n(735250),
        a = n(470079),
        i = n(120356),
        r = n.n(i),
        l = n(526629),
        o = n(481060),
        c = n(286735);
      class d extends a.Component {
        render() {
          let { icon: e, ...t } = this.props;
          return (0, s.jsx)(e, { size: "md", ...t, color: "currentColor" });
        }
      }
      let u = (0, l.animated)(d);
      t.Z = function (e) {
        let { className: t, name: n, icon: a, iconClassName: i } = e,
          l = (0, o.useTransition)(
            { name: n, icon: a, iconClassName: i },
            {
              key: (e) => e.name,
              initial: null,
              from: { opacity: 0 },
              enter: { opacity: 1 },
              leave: { opacity: 0 },
            },
            "animate-always",
          );
        return (0, s.jsx)("div", {
          className: r()(c.crossfade, t),
          children: l((e, t) => {
            let { icon: n, iconClassName: a } = t;
            return (0, s.jsx)(u, {
              icon: n,
              className: r()(c.icon, a),
              style: e,
            });
          }),
        });
      };
    },
    884858: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return r;
        },
      });
      var s = n(531643),
        a = n(403182),
        i = n(689938);
      function r(e) {
        (0, s.openUploadError)({
          title: i.Z.Messages.UPLOAD_AREA_TOO_LARGE_TITLE,
          help: i.Z.Messages.UPLOAD_AREA_TOO_LARGE_HELP.format({
            maxSize: (0, a.Ng)(e),
          }),
        });
      }
    },
    516129: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return T;
        },
      });
      var s = n(735250);
      n(470079);
      var a = n(120356),
        i = n.n(a),
        r = n(780384),
        l = n(481060),
        o = n(410030),
        c = n(44315),
        d = n(208567),
        u = n(981631),
        _ = n(686550);
      let I = u.Ilk.PRIMARY_400,
        E = u.Ilk.PRIMARY_500;
      function T(e) {
        let {
            enabled: t,
            imageClassName: n,
            iconWrapperClassName: a,
            ...u
          } = e,
          T = (0, o.ZP)(),
          m = (0, r.wj)(T) ? I : E,
          N = { height: 18, width: 18, color: (0, c.Lq)(m) };
        return (0, s.jsx)(d.Z, {
          className: i()({
            [_.avatarUploader]: t,
            [_.avatarUploaderDisabled]: !t,
          }),
          imageClassName: i()(n, _.avatarUploaderInnerSquare, {
            [_.avatarUploaderInnerSquareDisabled]: !t,
          }),
          icon:
            null != u.image && "" !== u.image
              ? (0, s.jsx)(l.PencilIcon, { size: "custom", ...N })
              : (0, s.jsx)(l.ImagePlusIcon, { size: "custom", ...N }),
          iconClassName: i()(_.avatarUploadIcon, _.hideDefaultIcon),
          iconWrapperClassName: a,
          showIcon: !0,
          showIconDisabled: !0,
          hideSize: !0,
          ...u,
        });
      }
    },
    426642: function (e, t, n) {
      "use strict";
      n.d(t, {
        d: function () {
          return a;
        },
      });
      var s,
        a,
        i = n(735250);
      n(470079);
      var r = n(692547),
        l = n(481060),
        o = n(752657),
        c = n(689938),
        d = n(514923);
      ((s = a || (a = {}))[(s.TOO_BIG = 0)] = "TOO_BIG"),
        (s[(s.RATE_LIMIT = 1)] = "RATE_LIMIT"),
        (s[(s.TOO_MANY_EMOJI = 2)] = "TOO_MANY_EMOJI"),
        (s[(s.TOO_MANY_ANIMATED_EMOJI = 3)] = "TOO_MANY_ANIMATED_EMOJI"),
        (s[(s.WRONG_TYPE = 4)] = "WRONG_TYPE"),
        (s[(s.RESIZE_GIF = 5)] = "RESIZE_GIF");
      t.Z = (e) => {
        let { error: t } = e,
          { type: n, filename: s } = t,
          {
            icon: a,
            description: u,
            color: _,
            tooltip: I,
          } = {
            0: {
              icon: l.FileWarningIcon,
              description: c.Z.Messages.UPLOAD_ERROR_TOO_LARGE,
              color: r.Z.unsafe_rawColors.RED_400.css,
              tooltip: c.Z.Messages.UPLOAD_ERROR_TITLE,
            },
            4: {
              icon: l.FileDenyIcon,
              description: c.Z.Messages.UPLOAD_ERROR_WRONG_TYPE,
              color: r.Z.unsafe_rawColors.RED_400.css,
              tooltip: c.Z.Messages.UPLOAD_ERROR_TITLE,
            },
            5: {
              icon: o.Z,
              description: c.Z.Messages.UPLOAD_ERROR_RESIZE_GIF,
              color: r.Z.unsafe_rawColors.RED_400.css,
              tooltip: c.Z.Messages.UPLOAD_ERROR_TITLE,
            },
            1: {
              icon: l.SpeedometerIcon,
              description: c.Z.Messages.UPLOAD_ERROR_RATE_LIMIT,
              color: r.Z.unsafe_rawColors.ORANGE_345.css,
              tooltip: c.Z.Messages.UPLOAD_ERROR_RETRY,
            },
            2: {
              icon: l.CircleInformationIcon,
              description: c.Z.Messages.UPLOAD_ERROR_TOO_MANY_EMOJI,
              color: r.Z.unsafe_rawColors.RED_400.css,
              tooltip: c.Z.Messages.UPLOAD_ERROR_TITLE,
            },
            3: {
              icon: l.CircleInformationIcon,
              description: c.Z.Messages.UPLOAD_ERROR_TOO_MANY_ANIMATED_EMOJI,
              color: r.Z.unsafe_rawColors.RED_400.css,
              tooltip: c.Z.Messages.UPLOAD_ERROR_TITLE,
            },
          }[n];
        return (0, i.jsxs)("div", {
          className: d.emojiErrorItem,
          children: [
            (0, i.jsx)(a, {
              className: d.fileIcon,
              color: r.Z.unsafe_rawColors.PRIMARY_300.css,
            }),
            (0, i.jsxs)(l.FormSection, {
              className: d.fileInfo,
              children: [
                (0, i.jsx)(l.FormTitle, { className: d.fileName, children: s }),
                (0, i.jsx)(l.FormText, {
                  type: l.FormTextTypes.DESCRIPTION,
                  children: u,
                }),
              ],
            }),
            (0, i.jsx)(l.TooltipContainer, {
              position: "right",
              text: I,
              children: (0, i.jsx)(l.CircleWarningIcon, {
                size: "custom",
                width: 20,
                height: 20,
                color: _,
              }),
            }),
          ],
        });
      };
    },
    372129: function (e, t, n) {
      "use strict";
      n.d(t, {
        _: function () {
          return u;
        },
      }),
        n(411104),
        n(653041),
        n(47120);
      var s = n(735250),
        a = n(470079),
        i = n(481060),
        r = n(53281),
        l = n(813197),
        o = n(426642),
        c = n(869783);
      async function d(e) {
        try {
          var t;
          let n = await ((t = e),
            new Promise((e, n) => {
              if (null != t) {
                let s = new FileReader();
                (s.onload = (t) => {
                  var s;
                  "string" ==
                  typeof (null === (s = t.target) || void 0 === s
                    ? void 0
                    : s.result)
                    ? e(t.target.result)
                    : n(Error("Failed to read file"));
                }),
                  s.readAsDataURL(t);
              }
            })),
            s = new Image();
          return (s.src = n), await s.decode(), { image: s, dataURI: n };
        } catch {
          throw o.d.WRONG_TYPE;
        }
      }
      async function u(e, t) {
        let n = [];
        for (let s = 0; s < e.length; s++) {
          let a = e[s];
          try {
            let { image: e, dataURI: s } = await d(a),
              i = a.type === c.m.MP4 ? await t(s, a) : await t(s, a, e);
            null != i && n.push({ type: i, filename: a.name });
          } catch (e) {
            n.push({ type: e, filename: a.name });
          }
        }
        n.length > 0 && _(n);
      }
      let _ = (e) => {
        (0, i.openModalLazy)(async () => {
          let { default: t } = await n.e("68720").then(n.bind(n, 70846));
          return (n) => (0, s.jsx)(t, { errors: e, ...n });
        });
      };
      t.Z = (e) => {
        let {
            onChange: t,
            multiple: o = !0,
            disabled: c,
            className: d,
            tabIndex: _ = -1,
            "aria-label": I,
            filters: E,
            setLoading: T,
          } = e,
          m = a.createRef(),
          N = a.useRef(null),
          [S, g] = a.useState(!1);
        a.useEffect(() => {
          S && h();
        }, [S]);
        let h = () => {
            null !== N.current &&
              ((0, i.closeModal)(N.current), (N.current = null));
          },
          C = async (e) => {
            null == T || T(!0), await u(e, t), g(!0), null == T || T(!1);
          },
          x = async (e) => {
            var t, a, r;
            if (
              (e.stopPropagation(),
              e.preventDefault(),
              (null === (t = e.currentTarget) || void 0 === t
                ? void 0
                : t.files) == null ||
                (null === (r = e.currentTarget) || void 0 === r
                  ? void 0
                  : null === (a = r.files) || void 0 === a
                    ? void 0
                    : a.length) === 0)
            )
              return;
            let l = e.currentTarget.files;
            N.current = await (0, i.openModalLazy)(async () => {
              let { default: e } = await n.e("16169").then(n.bind(n, 935333));
              return (t) => (0, s.jsx)(e, { processFiles: () => C(l), ...t });
            });
          };
        return (0, s.jsx)(r.Z, {
          onChange: x,
          filters: null != E ? E : (0, l.Zj)(),
          multiple: o,
          disabled: c,
          className: d,
          tabIndex: _,
          "aria-label": I,
          ref: m,
        });
      };
    },
    970648: function (e, t, n) {
      "use strict";
      n(411104);
      var s = n(772848),
        a = n(544891),
        i = n(981631);
      async function r(e) {
        let {
          body: { handoff_token: t },
        } = await a.tn.post({
          url: i.ANM.HANDOFF,
          body: { key: e },
          oldFormErrors: !0,
          retries: 1,
        });
        if (null != t) return t;
        throw Error("Missing handoff token!");
      }
      t.Z = {
        generateNonce: function () {
          return (0, s.Z)();
        },
        createHandoffToken: r,
      };
    },
    323502: function (e, t, n) {
      "use strict";
      n.d(t, {
        S: function () {
          return r;
        },
      });
      var s = n(544891),
        a = n(570140),
        i = n(981631);
      function r(e) {
        return s.tn
          .get({ url: i.ANM.GUILD_TOP_READ_CHANNELS(e), oldFormErrors: !0 })
          .then((t) => {
            let { body: n } = t;
            a.Z.dispatch({
              type: "GUILD_TOP_READ_CHANNELS_FETCH_SUCCESS",
              guildId: e,
              topChannelIds: n,
            });
          });
      }
    },
    958832: function (e, t, n) {
      "use strict";
      var s = n(442837),
        a = n(570140);
      let i = {};
      class r extends s.ZP.Store {
        hasFetched(e) {
          return null != i[e];
        }
        getTopChannelIds(e) {
          return "874345844743213126" === e
            ? [
                "1041887225819955252",
                "985996080107892776",
                "1035280727610241166",
              ]
            : i[e];
        }
      }
      t.Z = new r(a.Z, {
        GUILD_TOP_READ_CHANNELS_FETCH_SUCCESS: function (e) {
          let { guildId: t, topChannelIds: n } = e;
          i[t] = n;
        },
      });
    },
    232473: function (e, t, n) {
      "use strict";
      n.d(t, {
        C: function () {
          return i;
        },
      });
      var s = n(544891),
        a = n(981631);
      let i = async (e, t) =>
        (await s.tn.get({ url: a.ANM.PAYMENT_PAYOUT_GROUPS(e), query: t }))
          .body;
    },
    198139: function (e, t, n) {
      "use strict";
      var s, a, i, r, l, o, c, d;
      n.d(t, {
        XL: function () {
          return r;
        },
        jw: function () {
          return i;
        },
        uw: function () {
          return a;
        },
        x_: function () {
          return s;
        },
      }),
        ((l = s || (s = {}))[(l.OPEN = 1)] = "OPEN"),
        (l[(l.PAYOUT_CREATED = 2)] = "PAYOUT_CREATED"),
        (l[(l.CANCELED = 3)] = "CANCELED"),
        (l[(l.PAYOUT_DEFERRED = 4)] = "PAYOUT_DEFERRED"),
        ((o = a || (a = {})).MARKETPLACE = "marketplace"),
        (o.STAGE_EVENT_SKU = "stage_event_sku"),
        (o.SERVER_ROLE_SUBSCRIPTION = "server_role_subscription"),
        (o.GUILD_PRODUCT = "guild_product"),
        ((c = i || (i = {}))[(c.OPEN = 1)] = "OPEN"),
        (c[(c.PAID = 2)] = "PAID"),
        (c[(c.PENDING = 3)] = "PENDING"),
        (c[(c.MANUAL = 4)] = "MANUAL"),
        (c[(c.CANCELED = 5)] = "CANCELED"),
        (c[(c.DEFERRED = 6)] = "DEFERRED"),
        (c[(c.DEFERRED_INTERNAL = 7)] = "DEFERRED_INTERNAL"),
        (c[(c.PROCESSING = 8)] = "PROCESSING"),
        (c[(c.ERROR = 9)] = "ERROR"),
        (c[(c.REJECTED = 10)] = "REJECTED"),
        (c[(c.RISK_REVIEW = 11)] = "RISK_REVIEW"),
        (c[(c.SUBMITTED = 12)] = "SUBMITTED"),
        (c[(c.PENDING_FUNDS = 13)] = "PENDING_FUNDS"),
        ((d = r || (r = {}))[(d.MINIMUM_NOT_REACHED = 1)] =
          "MINIMUM_NOT_REACHED"),
        (d[(d.BILLING_PROFILE_INACTIVE = 2)] = "BILLING_PROFILE_INACTIVE"),
        (d[(d.PAYOUT_FAILED = 3)] = "PAYOUT_FAILED"),
        (d[(d.APPLICATION_NOT_APPROVED = 4)] = "APPLICATION_NOT_APPROVED"),
        (d[(d.PAYOUT_SEIZED = 5)] = "PAYOUT_SEIZED");
    },
    733683: function (e, t, n) {
      "use strict";
      n.d(t, {
        x: function () {
          return S;
        },
      }),
        n(47120);
      var s,
        a = n(735250),
        i = n(470079),
        r = n(120356),
        l = n.n(r),
        o = n(526629),
        c = n(772848),
        d = n(374470),
        u = n(477690),
        _ = n(481060),
        I = n(624138),
        E = n(981631),
        T = n(689938),
        m = n(788883);
      function N(e, t, n) {
        return (
          t in e
            ? Object.defineProperty(e, t, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0,
              })
            : (e[t] = n),
          e
        );
      }
      let S = -1,
        g = (0, I.Mg)(u.Z.PREMIUM_GUILD_PROGRESS_BAR_PROGRESS_BAR_WIDTH),
        h = (0, I.Mg)(u.Z.PREMIUM_GUILD_PROGRESS_BAR_TIER_MARKER_SIZE),
        C = { tension: 140, friction: 30 },
        x = { tension: 800, friction: 20 };
      class p extends (s = i.Component) {
        getTotalHeight() {
          let { tiers: e } = this.props;
          return e[e.length - 1].y + h / 2;
        }
        getProgressHeight(e) {
          let { tiers: t, progress: n } = this.props,
            s = t[e],
            a = t[e + 1];
          if (null == a || n === s.numRequired) return s.y;
          let i = a.y - s.y,
            r = a.numRequired - s.numRequired,
            l = n - s.numRequired;
          return s.y + (l / r) * i;
        }
        getCurrentTierIndex() {
          let { tiers: e, progress: t } = this.props;
          for (let n = e.length - 1; n > 0; n--)
            if (t >= e[n].numRequired) return n;
          return 0;
        }
        renderForegroundTooltip() {
          let { progress: e, tiers: t } = this.props,
            { showForegroundTooltip: n, foregroundTooltipY: s } = this.state;
          if (!n || null == this.foregroundTooltipElementRef.current)
            return null;
          let i = t[this.getCurrentTierIndex() + 1],
            r = null != i ? i.numRequired : null,
            l = null != r ? r - e : null;
          return (0, a.jsxs)(
            _.TooltipLayer,
            {
              targetElementRef: this.foregroundTooltipElementRef,
              position: "right",
              color: _.Tooltip.Colors.BLACK,
              tooltipClassName: m.foregroundTooltip,
              children: [
                (0, a.jsx)("div", {
                  children:
                    T.Z.Messages.PREMIUM_GUILD_SUBSCRIPTION_NUM_SUBSCRIPTIONS.format(
                      { numSubscriptions: e },
                    ),
                }),
                null != l && null != i
                  ? (0, a.jsx)("div", {
                      className: m.tooltipMuted,
                      children:
                        T.Z.Messages.PREMIUM_GUILD_SETTINGS_MEMBERS_SUBSCRIBED_NEEDED.format(
                          { number: l, tier: i.name },
                        ),
                    })
                  : null,
              ],
            },
            s,
          );
        }
        renderTierMarkerTooltip(e) {
          let { progress: t } = this.props;
          if (null == e.name || e.key === E.Eu4.NONE) return null;
          let n = Math.min(t, e.numRequired);
          return (0, a.jsxs)("div", {
            className: m.__invalid_tierTooltip,
            children: [
              (0, a.jsx)("div", { children: e.name }),
              (0, a.jsx)("div", {
                children:
                  T.Z.Messages.PREMIUM_GUILD_SETTINGS_X_OF_Y_SUBSCRIPTIONS.format(
                    { subscribers: n, numRequired: e.numRequired },
                  ),
              }),
            ],
          });
        }
        renderTierMarker(e, t, n) {
          var s;
          let i;
          let { progress: r, tiers: l } = this.props,
            c = l[n],
            d = r >= e.numRequired,
            u = null != c && e.key === c.key,
            I = e.key === l[0].key;
          i = I
            ? m.tierFirst
            : u
              ? m.tierCurrent
              : d
                ? m.tierAccomplished
                : m.tierInProgress;
          let E = e.y - (I ? 0 : h / 2),
            T = this.state.tierMarkerActive === t,
            N = !I && u && T;
          return (0, a.jsx)(
            _.Tooltip,
            {
              text: this.renderTierMarkerTooltip(e),
              position: "right",
              "aria-label": null !== (s = e.name) && void 0 !== s ? s : "",
              children: (e) =>
                (0, a.jsx)(_.Spring, {
                  from: { scale: 1 },
                  to: { scale: N ? 1.625 : 1 },
                  config: x,
                  children: (t) =>
                    (0, a.jsx)(o.animated.div, {
                      ...e,
                      className: i,
                      style: {
                        top: E,
                        transform: t.scale.interpolate((e) =>
                          "scale(".concat(e, ")"),
                        ),
                      },
                      children:
                        N &&
                        (0, a.jsx)(_.CheckmarkLargeIcon, {
                          size: "md",
                          color: "currentColor",
                          className: m.currentTierIcon,
                        }),
                    }),
                }),
            },
            e.key,
          );
        }
        renderProgressMask(e) {
          let { tiers: t } = this.props;
          return (0, a.jsxs)("mask", {
            id: "".concat(this.tierMarkerMaskId),
            children: [
              (0, a.jsx)("rect", {
                x: "0",
                y: "0",
                width: g,
                height: e,
                fill: "white",
              }),
              t.map((e) =>
                (0, a.jsx)(
                  "circle",
                  { cx: g / 2, cy: e.y, r: g / 2, fill: "black" },
                  e.key,
                ),
              ),
            ],
          });
        }
        renderProgressBar(e, t) {
          let n = this.getProgressHeight(t),
            { finishedInitialAnimation: s, showForegroundTooltip: i } =
              this.state;
          return (0, a.jsxs)("g", {
            mask: "url(#".concat(this.tierMarkerMaskId, ")"),
            children: [
              (0, a.jsx)("rect", {
                className: m.background,
                height: e,
                fill: "currentColor",
              }),
              (0, a.jsx)(_.Spring, {
                from: { height: 0 },
                to: { height: n },
                config: C,
                delay: s ? 0 : this.props.initialAnimationDelay,
                onChange: this.handleForegroundFrame,
                onRest: s ? void 0 : this.handleFinishedInitialAnimation,
                children: (e) =>
                  (0, a.jsx)(o.animated.rect, {
                    className: m.foreground,
                    height: e.height.interpolate((e) => Math.max(0, e)),
                    onMouseEnter: this.handleForegroundMouseEnter,
                    onMouseLeave: this.handleForegroundMouseLeave,
                    onMouseMove: i ? this.handleForegroundMouseMove : void 0,
                    fill: "currentColor",
                  }),
              }),
            ],
          });
        }
        render() {
          let { className: e, tiers: t } = this.props,
            n = this.getCurrentTierIndex(),
            s = this.getTotalHeight();
          return (0, a.jsxs)("div", {
            className: l()(e, m.progressBar),
            style: { height: s },
            children: [
              (0, a.jsxs)("svg", {
                viewBox: "0 0 ".concat(g, " ").concat(s),
                width: g,
                height: s,
                children: [
                  this.renderProgressMask(s),
                  this.renderProgressBar(s, n),
                ],
              }),
              (0, a.jsx)("div", {
                ref: this.foregroundTooltipElementRef,
                style: { top: this.state.foregroundTooltipY },
                className: m.foregroundTooltipPosition,
              }),
              t.map((e, t) => this.renderTierMarker(e, t, n)),
              this.renderForegroundTooltip(),
            ],
          });
        }
        constructor(...e) {
          super(...e),
            N(this, "state", {
              showForegroundTooltip: !1,
              foregroundTooltipY: 0,
              tierMarkerActive: 0,
              finishedInitialAnimation: !1,
            }),
            N(this, "foregroundTooltipElementRef", i.createRef()),
            N(this, "tierMarkerMaskId", (0, c.Z)()),
            N(this, "handleForegroundMouseEnter", (e) => {
              this.setState({ showForegroundTooltip: !0 }),
                this.handleForegroundMouseMove(e);
            }),
            N(this, "handleForegroundMouseMove", (e) => {
              if (!(0, d.k)(e.target)) return;
              let t = e.target.getBoundingClientRect(),
                n = e.clientY - t.top;
              n !== this.state.foregroundTooltipY &&
                this.setState({ foregroundTooltipY: n });
            }),
            N(this, "handleForegroundMouseLeave", () => {
              this.setState({ showForegroundTooltip: !1 });
            }),
            N(this, "handleForegroundFrame", (e) => {
              let { height: t } = e,
                { tiers: n, progress: s, onAnimatedTierMaker: a } = this.props,
                { tierMarkerActive: i } = this.state;
              for (let e = n.length - 1; e > 0; e--) {
                let r = n[e],
                  l = i === e;
                if (t + 20 >= r.y && s >= r.numRequired) {
                  !l &&
                    (this.setState({ tierMarkerActive: e }), null != a && a(r));
                  return;
                }
              }
            }),
            N(this, "handleFinishedInitialAnimation", () => {
              this.setState({ finishedInitialAnimation: !0 });
            });
        }
      }
      N(p, "defaultProps", { initialAnimationDelay: 0 }), (t.Z = p);
    },
    338327: function (e, t, n) {
      "use strict";
      var s = n(735250);
      n(470079);
      var a = n(481060);
      t.Z = {
        open() {
          (0, a.openModalLazy)(async () => {
            let { default: e } = await n.e("57486").then(n.bind(n, 87026));
            return (t) => (0, s.jsx)(e, { ...t });
          });
        },
      };
    },
    386937: function (e, t, n) {
      "use strict";
      n(47120);
      var s = n(735250),
        a = n(470079),
        i = n(120356),
        r = n.n(i),
        l = n(392711),
        o = n.n(l),
        c = n(442837),
        d = n(477690),
        u = n(481060),
        _ = n(179360),
        I = n(129861),
        E = n(999382),
        T = n(733683),
        m = n(237583),
        N = n(899667),
        S = n(271383),
        g = n(594174),
        h = n(267642),
        C = n(624138),
        x = n(981631),
        p = n(689938),
        R = n(366667);
      function L(e, t, n) {
        return (
          t in e
            ? Object.defineProperty(e, t, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0,
              })
            : (e[t] = n),
          e
        );
      }
      let f = (0, C.Mg)(
        d.Z
          .GUILD_SETTINGS_PREMIUM_TIER_STATUS_PROGRESS_WITH_SUBSCRIPTIONS_MARGIN_TOP,
      );
      class O extends a.Component {
        componentDidMount() {
          this.measure();
          let { guildId: e } = this.props;
          null != e && (0, _.C0)(e),
            window.addEventListener("resize", this.measure);
        }
        componentWillUnmount() {
          window.removeEventListener("resize", this.measure);
        }
        componentDidUpdate() {
          if (
            !(
              null != this.state.tierPositions ||
              Object.values(this.tierRefs).some((e) => null == e)
            )
          )
            this.measure();
        }
        getSubscriptionCount() {
          let { subscriptions: e } = this.props;
          return null != e ? e.length : 0;
        }
        renderProgressBar(e) {
          let { tierPositions: t } = this.state,
            { guildId: n } = this.props,
            a = this.getSubscriptionCount();
          if (null == t || null == n) return null;
          let i = { numRequired: 0, y: 0, key: T.x },
            r = (0, h.vn)(n),
            l = e.map((e) => {
              var n;
              return {
                numRequired: r[e.tier],
                name: (0, h.nW)(e.tier),
                y: null !== (n = t[e.tier]) && void 0 !== n ? n : 0,
                key: e.tier,
              };
            });
          return (0, s.jsx)(T.Z, {
            className: a > 0 ? R.progressWithSubscriptions : R.progress,
            progress: a,
            tiers: [i, ...l],
            initialAnimationDelay: 500,
            onAnimatedTierMaker: this.handleAnimatedTier,
          });
        }
        renderTierNone() {
          return (0, s.jsxs)("div", {
            className: R.tierDefaultUnlocked,
            ref: this.defaultTierRef,
            children: [
              (0, s.jsx)(u.FormText, {
                type: u.FormText.Types.LABEL_BOLD,
                children:
                  p.Z.Messages.GUILD_SETTINGS_GUILD_PREMIUM_PERKS_TITLE_NONE,
              }),
              (0, s.jsx)(u.FormText, {
                type: u.FormText.Types.DESCRIPTION,
                className: R.tierDefaultUnlockedDescription,
                children:
                  p.Z.Messages
                    .GUILD_SETTINGS_GUILD_PREMIUM_PERKS_DESCRIPTION_NONE,
              }),
            ],
          });
        }
        renderSubscribers() {
          let { subscribers: e, subscriberCount: t, guildId: n } = this.props;
          return (0, s.jsxs)("div", {
            ref: this.defaultTierRef,
            className: R.subscribers,
            children: [
              (0, s.jsx)(m.Z, {
                guildId: null != n ? n : void 0,
                users: e,
                renderUser: this.renderSubscriber,
                renderMoreUsers: this.renderMoreSubscribers,
                max: 5,
              }),
              (0, s.jsx)("div", {
                className: R.subscriberCount,
                children:
                  p.Z.Messages.GUILD_SETTINGS_PREMIUM_GUILD_COUNT_SUBSCRIBERS.format(
                    { count: t },
                  ),
              }),
            ],
          });
        }
        render() {
          let {
            guildId: e,
            renderTier: t,
            subscriptions: n,
            subscriberCount: a,
            tiers: i,
          } = this.props;
          if (null == n)
            return (0, s.jsx)(u.Spinner, {
              type: u.Spinner.Type.SPINNING_CIRCLE,
            });
          if (null == e) return null;
          let r = (0, h.vn)(e);
          return (0, s.jsx)("div", {
            children: (0, s.jsxs)("div", {
              className: R.content,
              children: [
                this.renderProgressBar(i),
                (0, s.jsxs)("div", {
                  className: R.tiers,
                  children: [
                    0 === a ? this.renderTierNone() : this.renderSubscribers(),
                    i.map((n, s, a) =>
                      t({
                        tier: n,
                        tiers: a,
                        tierIndex: s,
                        onSetRef: this.setTierRef,
                        isAnimatedTo: r[this.state.animatedTier] >= r[n.tier],
                        subscriptionCount: this.getSubscriptionCount(),
                        guildId: e,
                      }),
                    ),
                  ],
                }),
              ],
            }),
          });
        }
        constructor(...e) {
          super(...e),
            L(this, "tierRefs", {}),
            L(this, "defaultTierRef", a.createRef()),
            L(this, "state", { tierPositions: null, animatedTier: x.Eu4.NONE }),
            L(this, "measure", () => {
              let { subscriberCount: e } = this.props,
                t = this.defaultTierRef.current;
              if (null == t) return;
              let { top: n } = t.getBoundingClientRect(),
                s = {};
              for (let [t, a] of Object.entries(this.tierRefs)) {
                if (null == a) return;
                let { top: i } = a.getBoundingClientRect(),
                  r = e > 0 ? f : 0;
                s[t] = i - n + 32 - r;
              }
              this.setState({ tierPositions: s });
            }),
            L(this, "setTierRef", (e, t) => {
              this.tierRefs[t.tier] = e;
            }),
            L(this, "handleAnimatedTier", (e) => {
              this.setState({ animatedTier: e.key });
            }),
            L(this, "renderSubscriber", (e, t, n) => {
              var a;
              return null == e
                ? null
                : (0, s.jsx)(
                    u.Tooltip,
                    {
                      text: (0, s.jsx)(I.Z, { user: e.user, nick: e.nick }),
                      "aria-label":
                        null !== (a = e.nick) && void 0 !== a ? a : e.user.tag,
                      children: (n) =>
                        (0, s.jsx)(u.Avatar, {
                          ...n,
                          tabIndex: -1,
                          src:
                            null != e
                              ? e.user.getAvatarURL(this.props.guildId, 32)
                              : null,
                          className: r()(
                            R.avatar,
                            t,
                            null != t ? R.subscriberMask : null,
                          ),
                          size: u.AvatarSizes.SIZE_32,
                        }),
                    },
                    n,
                  );
            }),
            L(this, "renderSubscribersPopout", () =>
              (0, s.jsx)(u.Scroller, {
                className: R.subscribersPopout,
                children: this.props.subscribers.map((e) =>
                  (0, s.jsxs)(
                    "div",
                    {
                      className: R.subscribersPopoutUser,
                      children: [
                        (0, s.jsx)(u.Avatar, {
                          src: e.user.getAvatarURL(this.props.guildId, 32),
                          "aria-label": e.user.username,
                          size: u.AvatarSizes.SIZE_32,
                          className: R.avatar,
                        }),
                        (0, s.jsx)("div", {
                          className: R.subscribersPopoutUsername,
                          children: (0, s.jsx)(I.Z, {
                            user: e.user,
                            nick: e.nick,
                          }),
                        }),
                      ],
                    },
                    e.user.id,
                  ),
                ),
              }),
            ),
            L(this, "renderMoreSubscribers", (e, t, n) =>
              (0, s.jsx)(
                u.Popout,
                {
                  renderPopout: this.renderSubscribersPopout,
                  position: "bottom",
                  autoInvert: !1,
                  children: (t) =>
                    (0, s.jsx)("div", {
                      className: R.moreSubscribers,
                      ...t,
                      children: e,
                    }),
                },
                n,
              ),
            );
        }
      }
      let A = c.ZP.connectStores([E.Z, g.default, N.Z, S.ZP], () => {
        let e = E.Z.getGuildId(),
          t = null != e ? N.Z.getAppliedGuildBoostsForGuild(e) : null,
          n = o()(null != t ? t : []).uniqBy((e) => e.userId),
          s = n
            .map((t) => ({
              user: g.default.getUser(t.userId),
              nick: S.ZP.getNick(e, t.userId),
            }))
            .filter((e) => null != e.user)
            .value();
        return {
          guildId: e,
          subscriptions: t,
          subscribers: s,
          subscriberCount: n.size(),
        };
      })(O);
      t.Z = A;
    },
    316350: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return L;
        },
      }),
        n(47120);
      var s,
        a,
        i,
        r,
        l = n(735250),
        o = n(470079),
        c = n(120356),
        d = n.n(c),
        u = n(526629),
        _ = n(481060),
        I = n(205641),
        E = n(119331),
        T = n(902807),
        m = n(402766),
        N = n(267642),
        S = n(981631),
        g = n(689938),
        h = n(366667);
      let C = { tension: 200, friction: 20 },
        x = { ...C, clamp: !0 };
      function p(e) {
        let [t, n] = o.useState(0),
          { numUnlocked: s, numRequired: a } = e,
          i = () => {
            n(1);
          },
          r = () => {
            n(2);
          },
          c = 2 === t,
          E = 1 === t;
        if (!(!(s >= a) && s / a >= 0.8) || c) return null;
        let T = E || c ? h.hidden : null,
          m = E ? I.Z.Stages.FLYING : I.Z.Stages.HOVERING;
        return (0, l.jsx)(_.Spring, {
          from: { opacity: 0 },
          to: { opacity: 1 },
          config: x,
          shouldAnimate: "animate-always",
          children: (e) =>
            (0, l.jsxs)(u.animated.div, {
              className: h.tierClose,
              style: e,
              children: [
                (0, l.jsx)(I.Z, {
                  className: h.tierCloseMechaWumpus,
                  stage: m,
                  onFlyingComplete: r,
                }),
                (0, l.jsx)("div", {
                  className: d()(h.tierCloseHint, T),
                  children:
                    g.Z.Messages.GUILD_SETTINGS_PREMIUM_GUILD_CLOSE_HINT.format(
                      { numLeft: a - s },
                    ),
                }),
                (0, l.jsx)(_.Clickable, {
                  onClick: i,
                  className: d()(h.tierCloseClose, T),
                  children: (0, l.jsx)(_.CircleXIcon, {
                    size: "md",
                    color: "currentColor",
                    className: h.tierCloseCloseIcon,
                  }),
                }),
              ],
            }),
        });
      }
      function R(e) {
        let {
            withCardBody: t,
            isAnimatedTo: n,
            hasAnimatedUnlocked: s,
            onSetRef: a,
            tier: i,
            showHeaderLockStatus: r,
            headerButton: c = null,
            subscriptionsRequired: u,
            subscriptionCount: I,
            className: E,
          } = e,
          T = (e) => {
            null == a || a(e);
          },
          [N, S] = o.useState(0);
        return (
          o.useLayoutEffect(() => {
            n && S(1);
          }, [n]),
          (0, l.jsx)(_.Spring, {
            from: { unlockedTranslateY: 50 },
            to: { unlockedTranslateY: 0 === N ? 50 : 0 },
            config: C,
            children: (e) =>
              (0, l.jsx)("div", {
                className: d()(
                  {
                    [h.tierHeaderWithoutCardBody]: !t,
                    [h.tierHeaderUnlocked]: s,
                    [h.tierHeaderLocked]: !s,
                  },
                  E,
                ),
                ref: T,
                children: (0, l.jsxs)("div", {
                  className: h.tierHeaderContent,
                  children: [
                    (0, l.jsx)(m.Z, {
                      tier: i.tier,
                      className: d()(h.tierIcon, { [h.tierIconLocked]: !s }),
                    }),
                    (0, l.jsx)("div", {
                      className: d()(h.tierTitle, { [h.tierTitleActive]: s }),
                      children: i.title,
                    }),
                    r
                      ? (0, l.jsx)(f, {
                          transform:
                            null == e
                              ? void 0
                              : e.unlockedTranslateY.to((e) =>
                                  "translate3d(0, ".concat(e, "px, 0)"),
                                ),
                          headerButton: c,
                          subscriptionsRequired: u,
                          hasAnimatedUnlocked: s,
                        })
                      : null,
                    (0, l.jsx)(p, { numUnlocked: I, numRequired: u }),
                  ],
                }),
              }),
          })
        );
      }
      function L(e) {
        let {
            children: t,
            subscriptionCount: n,
            onSetRef: s,
            tier: a,
            isAnimatedTo: i,
            hasBottomMargin: r,
            headerButton: o = null,
            withCardBody: c = !0,
            guildId: u,
            showHeaderLockStatus: I = !0,
          } = e,
          m = (0, N.vn)(u)[a.tier],
          C = i && n >= m,
          x = a.tier !== S.Eu4.NONE && a.tier !== S.Eu4.TIER_1,
          p = (e, t) => {
            var n;
            let { icon: s, className: a } = (0, E.t)(e.icon, t);
            return (0, l.jsxs)(
              "div",
              {
                className: h.perk,
                children: [
                  (0, l.jsx)(T.Z, {
                    name: String(e.icon),
                    icon: s,
                    className: h.perkIcon,
                    iconClassName: a,
                  }),
                  (0, l.jsxs)("div", {
                    className: h.perkText,
                    children: [
                      (0, l.jsxs)("div", {
                        className: h.perkTitle,
                        children: [
                          e.title,
                          e.isNew
                            ? (0, l.jsx)(_.TextBadge, {
                                className: h.newBadge,
                                text: g.Z.Messages.NEW,
                              })
                            : null,
                        ],
                      }),
                      (0, l.jsx)("div", {
                        className: h.perkDescription,
                        children: e.description,
                      }),
                    ],
                  }),
                ],
              },
              null === (n = e.title) || void 0 === n ? void 0 : n.toString(),
            );
          };
        return (0, l.jsxs)(
          "div",
          {
            className: d()(h.tier, { [h.tierBottomMargin]: r }),
            children: [
              (0, l.jsx)(R, {
                subscriptionCount: n,
                tier: a,
                headerButton: o,
                showHeaderLockStatus: I,
                onSetRef: (e) => {
                  null != s && s(e, a);
                },
                withCardBody: c,
                guildId: u,
                hasBottomMargin: r,
                subscriptionsRequired: m,
                hasAnimatedUnlocked: C,
                isAnimatedTo: i,
              }),
              (0, l.jsx)("div", {
                className: d()({ [h.tierBody]: c }),
                children:
                  null != t
                    ? t
                    : (0, l.jsxs)(l.Fragment, {
                        children: [
                          x
                            ? (0, l.jsx)("div", {
                                className: h.previousPerks,
                                children:
                                  g.Z.Messages
                                    .GUILD_SETTINGS_GUILD_PREMIUM_PERKS_PREVIOUS_PERKS,
                              })
                            : null,
                          null != a.perks &&
                            (0, l.jsx)("div", {
                              className: h.perks,
                              children: a.perks.map((e) => p(e, C)),
                            }),
                        ],
                      }),
              }),
            ],
          },
          a.tier,
        );
      }
      ((i = s || (s = {}))[(i.OPEN = 0)] = "OPEN"),
        (i[(i.CLOSING = 1)] = "CLOSING"),
        (i[(i.CLOSED = 2)] = "CLOSED"),
        ((r = a || (a = {}))[(r.NONE = 0)] = "NONE"),
        (r[(r.UNLOCKED_SLIDE = 1)] = "UNLOCKED_SLIDE");
      let f = (e) => {
          let {
            transform: t,
            hasAnimatedUnlocked: n,
            headerButton: s,
            subscriptionsRequired: a,
          } = e;
          return null !== s
            ? s
            : n
              ? (0, l.jsx)(O, { transform: t })
              : (0, l.jsx)(A, { subscriptionsRequired: a });
        },
        O = (e) => {
          let { transform: t } = e;
          return (0, l.jsx)(u.animated.div, {
            style: { transform: t },
            className: h.tierUnlocked,
            children: g.Z.Messages.GUILD_SETTINGS_PREMIUM_GUILD_UNLOCKED,
          });
        },
        A = (e) => {
          let { subscriptionsRequired: t } = e;
          return (0, l.jsxs)(l.Fragment, {
            children: [
              (0, l.jsx)("div", {
                className: h.tierRequirement,
                children:
                  g.Z.Messages.GUILD_SETTINGS_PREMIUM_GUILD_TIER_REQUIREMENT.format(
                    { required: t },
                  ),
              }),
              (0, l.jsx)(_.LockIcon, {
                size: "md",
                color: "currentColor",
                className: h.tierLock,
              }),
            ],
          });
        };
    },
    863562: function (e, t, n) {
      "use strict";
      n(47120);
      var s = n(735250),
        a = n(470079),
        i = n(120356),
        r = n.n(i),
        l = n(481060),
        o = n(700582),
        c = n(330726),
        d = n(268350),
        u = n(419922),
        _ = n(689938),
        I = n(102017);
      t.Z = (e) => {
        let {
            className: t,
            isDisabled: i,
            sticker: E,
            canManageSticker: T,
          } = e,
          [m, N] = a.useState(!1),
          [S, g] = (0, c.Z)(null, 4e3),
          h = () => {
            (0, l.openModalLazy)(async () => {
              let { default: e } = await Promise.all([
                n.e("93626"),
                n.e("2901"),
              ]).then(n.bind(n, 136735));
              return (t) =>
                (0, s.jsx)(e, { sticker: E, guildId: E.guild_id, ...t });
            });
          },
          C = async () => {
            g(null), N(!0);
            try {
              await (0, d.Um)(E);
            } catch (e) {
              g(e.body.message), N(!1);
            }
          };
        return (0, s.jsx)(l.Tooltip, {
          color: l.Tooltip.Colors.RED,
          forceOpen: null != S,
          text: S,
          children: () =>
            (0, s.jsxs)("div", {
              className: r()(I.wrapper, t, { [I.wrapperDisabled]: i }),
              children: [
                (0, s.jsxs)("div", {
                  className: r()(I.content, { [I.contentRemoving]: m }),
                  children: [
                    (0, s.jsx)(u.ZP, {
                      className: I.sticker,
                      size: 72,
                      sticker: E,
                    }),
                    (0, s.jsxs)("div", {
                      children: [
                        (0, s.jsx)(l.Text, {
                          color: "header-primary",
                          variant: "text-xs/semibold",
                          className: I.stickerName,
                          children: E.name,
                        }),
                        null != E.user &&
                          (0, s.jsxs)("div", {
                            className: I.user,
                            children: [
                              (0, s.jsx)(o.Z, {
                                className: I.userAvatar,
                                size: l.AvatarSizes.SIZE_16,
                                user: E.user,
                              }),
                              (0, s.jsx)(l.Text, {
                                color: "header-secondary",
                                variant: "text-xs/normal",
                                children: E.user.username,
                              }),
                            ],
                          }),
                      ],
                    }),
                    T
                      ? (0, s.jsxs)("div", {
                          className: I.actions,
                          children: [
                            (0, s.jsx)(l.Clickable, {
                              className: r()(I.action, I.__invalid_actionEdit),
                              onClick: h,
                              "aria-label": _.Z.Messages.EDIT,
                              children: (0, s.jsx)(l.PencilIcon, {
                                size: "xs",
                                color: "currentColor",
                                className: I.icon,
                              }),
                            }),
                            (0, s.jsx)(l.Clickable, {
                              className: r()(I.action, I.actionRemove),
                              onClick: C,
                              "aria-label": _.Z.Messages.REMOVE,
                              children: (0, s.jsx)(l.XSmallIcon, {
                                size: "md",
                                color: "currentColor",
                                className: I.icon,
                              }),
                            }),
                          ],
                        })
                      : null,
                  ],
                }),
                m && (0, s.jsx)(l.Spinner, { className: I.spinner }),
              ],
            }),
        });
      };
    },
    145499: function (e, t, n) {
      "use strict";
      n(47120), n(653041);
      var s = n(735250),
        a = n(470079),
        i = n(120356),
        r = n.n(i),
        l = n(442837),
        o = n(481060),
        c = n(274136),
        d = n(2052),
        u = n(906732),
        _ = n(678558),
        I = n(852679),
        E = n(357156),
        T = n(626135),
        m = n(267642),
        N = n(268350),
        S = n(926491),
        g = n(386937),
        h = n(316350),
        C = n(863562),
        x = n(981631),
        p = n(689938),
        R = n(444466);
      let L = (e, t) =>
          e < (0, m.A3)(x.Eu4.NONE)
            ? x.Eu4.NONE
            : e < (0, m.A3)(x.Eu4.TIER_1)
              ? x.Eu4.TIER_1
              : e < (0, m.A3)(x.Eu4.TIER_2)
                ? x.Eu4.TIER_2
                : e < (0, m.A3)(x.Eu4.TIER_3) ||
                    (null != t &&
                      t.hasFeature(x.oNc.MORE_STICKERS) &&
                      e < c.D.MAX_STICKER_SLOTS)
                  ? x.Eu4.TIER_3
                  : x.Eu4.NONE,
        f = (e) => {
          let {
              children: t,
              currentGuildTier: n,
              guildStickers: a,
              tier: i,
            } = e,
            r = n < i,
            l = (0, m.ig)(i);
          return (0, s.jsxs)(s.Fragment, {
            children: [
              (0, s.jsx)(o.Heading, {
                color: "header-primary",
                variant: "heading-md/semibold",
                children: t,
              }),
              !r &&
                (0, s.jsx)(o.Text, {
                  variant: "text-xs/normal",
                  children:
                    p.Z.Messages.GUILD_STICKER_SETTINGS_REMAINING_SLOTS_AVAILABLE.format(
                      { numTotal: l, numAvailable: (0, m.Qi)(a, i) },
                    ),
                }),
            ],
          });
        },
        O = (e) => {
          let { guildId: t } = e;
          (0, o.openModalLazy)(async () => {
            let { default: e } = await Promise.all([
              n.e("93626"),
              n.e("2901"),
            ]).then(n.bind(n, 136735));
            return (n) => (0, s.jsx)(e, { guildId: t, ...n });
          });
        },
        A = () =>
          (0, s.jsx)("div", {
            className: R.placeholderCard,
            children: (0, s.jsx)("img", {
              className: R.placeholderImg,
              alt: p.Z.Messages.GUILD_STICKER_SETTINGS_PLACEHOLDER_ALT_TEXT,
              src: n(872732),
            }),
          }),
        M = (e) => {
          let { guild: t } = e,
            { location: n } = (0, d.O)(),
            { canCreateExpressions: a } = (0, E.XJ)(t);
          return (0, s.jsx)(o.Button, {
            size: o.Button.Sizes.SMALL,
            color: o.Button.Colors.BRAND,
            onClick: () => {
              T.default.track(x.rMx.OPEN_MODAL, {
                type: x.jXE.CREATE_STICKER_MODAL,
                location: n,
              }),
                O({ guildId: t.id });
            },
            disabled: !a,
            children: p.Z.Messages.GUILD_STICKER_GRID_UPLOAD_LABEL,
          });
        };
      t.Z = (e) => {
        let { guild: t } = e,
          [i, c] = a.useState(!0),
          d = (0, l.e7)(
            [S.Z],
            () => {
              var e;
              return null !== (e = S.Z.getStickersByGuildId(t.id)) &&
                void 0 !== e
                ? e
                : [];
            },
            [t],
          ),
          { analyticsLocations: T } = (0, u.ZP)(),
          O = t.hasFeature(x.oNc.MORE_STICKERS) ? x.Eu4.TIER_3 : t.premiumTier,
          D = t.hasFeature(x.oNc.MORE_STICKERS)
            ? (0, m.vn)(t.id)[x.Eu4.TIER_3]
            : t.premiumSubscriberCount;
        if (
          (a.useEffect(() => {
            let e = !1;
            return (
              (async () => {
                c(!0), await (0, N.pk)(t.id), !e && c(!1);
              })(),
              () => {
                e = !0;
              }
            );
          }, [t]),
          a.useEffect(() => {
            window.dispatchEvent(new Event("resize"));
          }, [d]),
          i)
        )
          return (0, s.jsx)(o.Spinner, {});
        let v = (e, n) => {
            let s = null;
            n === x.Eu4.TIER_1
              ? (s = x.Qqv.TIER_1)
              : n === x.Eu4.TIER_2
                ? (s = x.Qqv.TIER_2)
                : n === x.Eu4.TIER_3 && (s = x.Qqv.TIER_3),
              (0, I.Z)({
                analyticsLocations: T,
                analyticsLocation: {
                  page: x.ZY5.GUILD_SETTINGS,
                  section: x.jXE.GUILD_SETTINGS_STICKERS,
                  object: x.qAy.BOOST_LEVEL_UPSELL_BUTTON,
                  objectType: s,
                },
                guildId: t.id,
                totalNumberOfSlotsToAssign: e,
              });
          },
          j = [
            {
              tier: x.Eu4.NONE,
              title: (0, s.jsx)(f, {
                guildStickers: d,
                currentGuildTier: O,
                tier: x.Eu4.NONE,
                children:
                  p.Z.Messages.GUILD_SETTINGS_STICKERS_FREE_SLOTS_HEADER,
              }),
            },
            {
              tier: x.Eu4.TIER_1,
              title: (0, s.jsx)(f, {
                guildStickers: d,
                currentGuildTier: O,
                tier: x.Eu4.TIER_1,
                children: p.Z.Messages.PREMIUM_GUILD_TIER_1,
              }),
            },
            {
              tier: x.Eu4.TIER_2,
              title: (0, s.jsx)(f, {
                guildStickers: d,
                currentGuildTier: O,
                tier: x.Eu4.TIER_2,
                children: p.Z.Messages.PREMIUM_GUILD_TIER_2,
              }),
            },
            {
              tier: x.Eu4.TIER_3,
              title: (0, s.jsx)(f, {
                guildStickers: d,
                currentGuildTier: O,
                tier: x.Eu4.TIER_3,
                children: p.Z.Messages.PREMIUM_GUILD_TIER_3,
              }),
            },
          ];
        return (0, s.jsx)(g.Z, {
          tiers: j,
          renderTier: (e) => {
            let a,
              {
                isAnimatedTo: i,
                onSetRef: l,
                tier: c,
                tiers: u,
                tierIndex: I,
              } = e,
              { canCreateExpressions: T, canManageGuildExpression: N } = (0,
              E.Gw)(t),
              S = u[I - 1],
              g = null != S ? (0, m.A3)(S.tier) : 0,
              f = (0, m.A3)(c.tier, t),
              j = (0, m.ig)(c.tier),
              Z = d.slice(g, f),
              b = Z.length > 0,
              U = O < c.tier,
              G = L(d.length, t),
              P = T && !U && G === c.tier && f !== Z.length,
              B = P || Z.length > 0,
              y = f - g,
              F = n(872732),
              k = j - Z.length,
              w = P ? Math.min(5 - ((Z.length + 0) % 5), k) : 0,
              H = [];
            for (let e = 0; e < w; e++)
              H.push((0, s.jsx)(A, {}, "placeholder-".concat(e)));
            let V = G === I + 1 && G > O,
              Y = P || V || I > O;
            return (
              V
                ? (a = (0, s.jsx)(_.Z, {
                    guild: t,
                    size: o.Button.Sizes.SMALL,
                    color: o.Button.Colors.GREEN,
                    buttonText:
                      p.Z.Messages.GUILD_STICKER_SETTINGS_UNLOCK_SLOTS,
                    targetBoostedGuildTier: O + 1,
                    analyticsLocation: {
                      page: x.ZY5.GUILD_SETTINGS,
                      section: x.jXE.GUILD_SETTINGS_STICKERS,
                      object: x.qAy.BOOST_UPSELL_NEXT_LEVEL_HEADER,
                      objectType: (0, m.ge)(c.tier),
                    },
                  }))
                : P && (a = (0, s.jsx)(M, { guild: t })),
              (0, s.jsxs)(
                h.Z,
                {
                  subscriptionCount: D,
                  tier: c,
                  onSetRef: l,
                  isAnimatedTo: i,
                  hasBottomMargin: I !== u.length - 1,
                  withCardBody: !B,
                  headerButton: a,
                  showHeaderLockStatus: Y,
                  guildId: t.id,
                  children: [
                    B &&
                      (0, s.jsxs)("div", {
                        className: R.grid,
                        children: [
                          Z.map((e) =>
                            (0, s.jsx)(
                              C.Z,
                              {
                                isDisabled: U,
                                sticker: e,
                                canManageSticker: N(e),
                              },
                              e.id,
                            ),
                          ),
                          H,
                        ],
                      }),
                    !U &&
                      !P &&
                      0 === Z.length &&
                      (0, s.jsx)("div", {
                        className: r()(R.emptyTierWrapper, R.unusedTierWrapper),
                        children: (0, s.jsx)(o.Text, {
                          variant: "text-md/normal",
                          color: "header-secondary",
                          children: p.Z.Messages.GUILD_STICKER_UNUSED_TIER,
                        }),
                      }),
                    U &&
                      !b &&
                      (0, s.jsxs)("div", {
                        className: R.emptyTierWrapper,
                        children: [
                          (0, s.jsx)("img", {
                            alt: p.Z.Messages
                              .GUILD_STICKER_SETTINGS_ICON_ALT_TEXT,
                            className: R.emptyTierImage,
                            src: F,
                          }),
                          (0, s.jsx)(o.Text, {
                            className: R.unlockTierCtaHeading,
                            variant: "text-md/normal",
                            color: "header-secondary",
                            children:
                              c.tier === x.Eu4.TIER_1
                                ? p.Z.Messages.GUILD_STICKER_SETTINGS_ADDITIONAL_SLOTS_WITHOUT_TOTAL.format(
                                    { numAdditional: y },
                                  )
                                : p.Z.Messages.GUILD_STICKER_SETTINGS_ADDITIONAL_SLOTS.format(
                                    { numAdditional: y, numTotal: f },
                                  ),
                          }),
                          (0, s.jsx)(o.Button, {
                            color: o.Button.Colors.GREEN,
                            onClick: () =>
                              v(
                                (0, m.vn)(t.id)[c.tier] -
                                  t.premiumSubscriberCount,
                                c.tier,
                              ),
                            children:
                              p.Z.Messages.GUILD_STICKER_SETTINGS_BUY_LEVEL,
                          }),
                        ],
                      }),
                  ],
                },
                c.tier,
              )
            );
          },
        });
      };
    },
    586739: function (e, t, n) {
      "use strict";
      var s = n(544891),
        a = n(981631);
      t.Z = {
        fetchTeams() {
          let e =
            arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
          return s.tn.get({
            url: a.ANM.TEAMS,
            query: { include_payout_account_status: e },
          });
        },
      };
    },
    829857: function (e, t, n) {
      "use strict";
      var s, a;
      n.d(t, {
        C: function () {
          return s;
        },
      }),
        ((a = s || (s = {}))[(a.UNSUBMITTED = 1)] = "UNSUBMITTED"),
        (a[(a.PENDING = 2)] = "PENDING"),
        (a[(a.ACTION_REQUIRED = 3)] = "ACTION_REQUIRED"),
        (a[(a.ACTIVE = 4)] = "ACTIVE"),
        (a[(a.BLOCKED = 5)] = "BLOCKED"),
        (a[(a.SUSPENDED = 6)] = "SUSPENDED");
    },
    30624: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return a;
        },
      });
      var s = n(421535);
      function a(e, t) {
        var n, a, i;
        if (t.owner_user_id === e) return !0;
        return (
          (null ===
            ((a = t), (i = e), (n = a.members.find((e) => e.user.id === i))) ||
          void 0 === n
            ? void 0
            : n.role) === s.T.ADMIN
        );
      }
    },
    577275: function (e, t, n) {
      "use strict";
      n(47120);
      var s = n(470079),
        a = n(586739);
      t.Z = function () {
        let e =
            arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
          { refreshOnDepChange: t } = e,
          [n, i] = s.useState([]),
          [r, l] = s.useState(!0),
          o = async () => {
            l(!0);
            try {
              let e = await a.Z.fetchTeams(!0);
              i(e.body);
            } catch (e) {}
            l(!1);
          },
          c = s.useRef(!0);
        return (
          s.useEffect(() => {
            (c.current || t) && ((c.current = !1), o());
          }, [t]),
          { teams: n, loading: r, refresh: o }
        );
      };
    },
    575258: function (e, t, n) {
      "use strict";
      var s,
        a,
        i,
        r,
        l = n(442837),
        o = n(570140),
        c = n(430824),
        d = n(981631);
      let u = { description: "", channels: [], enabled: !1 },
        _ = u,
        I = !1,
        E = !1,
        T = u;
      function m(e) {
        let { welcomeScreen: t, guildId: n } = e,
          s = c.Z.getGuild(n);
        if (null != t) {
          var a, i;
          T = _ = {
            description: null !== (a = t.description) && void 0 !== a ? a : "",
            channels:
              null !== (i = t.welcome_channels) && void 0 !== i ? i : [],
            enabled:
              null == s ? void 0 : s.hasFeature(d.oNc.WELCOME_SCREEN_ENABLED),
          };
        } else T = _ = u;
        E = !1;
      }
      class N extends (r = l.ZP.Store) {
        initialize() {
          this.waitFor(c.Z);
        }
        get() {
          return T;
        }
        showNotice() {
          return E;
        }
        getSettingsProps() {
          return {
            submitting: I,
            hasErrors: E,
            welcomeSettings: T,
            originalWelcomeSettings: _,
          };
        }
      }
      (i = "WelcomeScreenSettingsStore"),
        (a = "displayName") in (s = N)
          ? Object.defineProperty(s, a, {
              value: i,
              enumerable: !0,
              configurable: !0,
              writable: !0,
            })
          : (s[a] = i),
        (t.Z = new N(o.Z, {
          WELCOME_SCREEN_FETCH_SUCCESS: m,
          WELCOME_SCREEN_UPDATE: m,
          WELCOME_SCREEN_SETTINGS_RESET: function () {
            (T = _), (E = !1);
          },
          WELCOME_SCREEN_SETTINGS_CLEAR: function () {
            (T = u), (_ = u);
          },
          WELCOME_SCREEN_SETTINGS_UPDATE: function (e) {
            let { settings: t } = e;
            T = { ...T, ...t };
          },
          WELCOME_SCREEN_SUBMIT: function () {
            I = !0;
          },
          WELCOME_SCREEN_SUBMIT_SUCCESS: function (e) {
            m(e), (I = !1);
          },
          WELCOME_SCREEN_SUBMIT_FAILURE: function () {
            (E = !0), (I = !1);
          },
        }));
    },
    276687: function (e, t, n) {
      "use strict";
      var s = n(735250);
      n(470079);
      var a = n(442837),
        i = n(852860),
        r = n(999382),
        l = n(524329),
        o = n(575258),
        c = n(689938);
      t.Z = () => {
        let { guild: e } = (0, a.e7)([r.Z], () => r.Z.getProps()),
          { submitting: t, welcomeSettings: n } = (0, a.e7)([o.Z], () =>
            o.Z.getSettingsProps(),
          );
        return null == e
          ? null
          : (0, s.jsx)(i.Z, {
              onSave: () => (0, l.Es)(e.id, n),
              onReset: l.Xb,
              submitting: t,
              onSaveText: c.Z.Messages.TRY_AGAIN,
              message:
                c.Z.Messages.GUILD_SETTINGS_PUBLIC_WELCOME_UPDATE_FAILURE,
            });
      };
    },
    514698: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return c;
        },
      });
      var s = n(735250);
      n(470079);
      var a = n(442837),
        i = n(481060),
        r = n(933557),
        l = n(592125),
        o = n(689938);
      function c(e) {
        let { onConfirm: t, onCancel: n, channelId: c } = e,
          d = (0, a.e7)([l.Z], () => (null != c ? l.Z.getChannel(c) : null)),
          u = (0, r.ZP)(d, !0);
        return (0, s.jsx)(i.DeclarativeConfirmModal, {
          dismissable: !0,
          header: o.Z.Messages.WELCOME_CHANNEL_DELETE_CONFIRM_TITLE,
          confirmText: o.Z.Messages.REMOVE,
          cancelText: o.Z.Messages.CANCEL,
          onConfirm: t,
          onCancel: n,
          children: (0, s.jsx)(i.Text, {
            variant: "text-sm/normal",
            children:
              null != d
                ? o.Z.Messages.WELCOME_CHANNEL_DELETE_CONFIRM_BODY.format({
                    channelName: u,
                  })
                : o.Z.Messages.WELCOME_CHANNEL_DELETE_CONFIRM_BODY_GENERIC,
          }),
        });
      }
    },
    40572: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return r;
        },
      });
      var s = n(81825),
        a = n(598077);
      function i(e, t, n) {
        return (
          t in e
            ? Object.defineProperty(e, t, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0,
              })
            : (e[t] = n),
          e
        );
      }
      class r extends s.Z {
        constructor(e) {
          super(),
            i(this, "id", void 0),
            i(this, "name", void 0),
            i(this, "managed", void 0),
            i(this, "roles", void 0),
            i(this, "requiredColons", void 0),
            i(this, "user", void 0),
            i(this, "animated", void 0),
            i(this, "available", void 0),
            (this.id = e.id),
            (this.name = e.name),
            (this.managed = e.managed),
            (this.roles = e.roles),
            (this.requiredColons = e.requiredColons),
            (this.user = new a.Z(e.user)),
            (this.animated = e.animated),
            (this.available = e.available);
        }
      }
    },
    402766: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return o;
        },
      }),
        n(411104);
      var s = n(735250);
      n(470079);
      var a = n(67523),
        i = n(865267),
        r = n(125664),
        l = n(981631);
      function o(e) {
        let { tier: t, ...n } = e;
        switch (t) {
          case l.Eu4.TIER_1:
            return (0, s.jsx)(a.Z, { ...n });
          case l.Eu4.TIER_2:
            return (0, s.jsx)(i.Z, { ...n });
          case l.Eu4.TIER_3:
            return (0, s.jsx)(r.Z, { ...n });
          case l.Eu4.NONE:
            return null;
          default:
            throw Error("Not a valid tier type");
        }
      }
    },
    67523: function (e, t, n) {
      "use strict";
      var s = n(735250);
      n(470079);
      var a = n(960259),
        i = n(672917),
        r = n(325767);
      t.Z = (0, a.hN)(
        function (e) {
          let {
            width: t = 24,
            height: n = 24,
            color: a = "currentColor",
            foreground: i,
            ...l
          } = e;
          return (0, s.jsx)("svg", {
            ...(0, r.Z)(l),
            width: t,
            height: n,
            viewBox: "0 0 32 32",
            children: (0, s.jsx)("path", {
              fill: a,
              className: i,
              d: "M16 1L7 10V22L16 31L25 22V10L16 1ZM20.62 11.27L16.5 7.16V2.91L23.62 10.03L20.62 11.27ZM12 19.93V12.07L16 8.07L20 12.07V19.93L16 23.93L12 19.93ZM15.5 7.16L11.38 11.28L8.38 10.04L15.5 2.91V7.16ZM11 12.2V19.8L8 21.04V10.96L11 12.2ZM11.38 20.73L15.5 24.85V29.09L8.38 21.97L11.38 20.73ZM16.5 24.84L20.62 20.72L23.62 21.96L16.5 29.09V24.84ZM21 19.8V12.2L24 10.96V21.05L21 19.8Z",
            }),
          });
        },
        i.X,
        void 0,
        { size: 24 },
      );
    },
    865267: function (e, t, n) {
      "use strict";
      var s = n(735250);
      n(470079);
      var a = n(960259),
        i = n(827334),
        r = n(325767);
      t.Z = (0, a.hN)(
        function (e) {
          let {
            width: t = 24,
            height: n = 24,
            color: a = "currentColor",
            foreground: i,
            ...l
          } = e;
          return (0, s.jsx)("svg", {
            ...(0, r.Z)(l),
            width: t,
            height: n,
            viewBox: "0 0 32 32",
            children: (0, s.jsx)("path", {
              fill: a,
              className: i,
              fillRule: "evenodd",
              clipRule: "evenodd",
              d: "M16.5 1.46002L24.62 9.58002L20.62 11.23L16.5 7.12002V1.46002ZM11 12.16L7 10.5V21.42L11 19.76V12.16ZM16.5 24.8001V30.4601L24.62 22.3401L20.62 20.6801L16.5 24.8001ZM15.5 7.12004V1.46004L7.38 9.58004L11.38 11.23L15.5 7.12004ZM15.5 30.46L7.38 22.34L11.38 20.68L15.5 24.8V30.46ZM21 19.76L25 21.42V10.5L21 12.16V19.76ZM16 8.03003L20 12.03V19.89L16 23.89L12 19.89V12.03L16 8.03003Z",
            }),
          });
        },
        i.$,
        void 0,
        { size: 24 },
      );
    },
    125664: function (e, t, n) {
      "use strict";
      var s = n(735250);
      n(470079);
      var a = n(960259),
        i = n(410319),
        r = n(325767);
      t.Z = (0, a.hN)(
        function (e) {
          let {
            width: t = 24,
            height: n = 24,
            color: a = "currentColor",
            foreground: i,
            ...l
          } = e;
          return (0, s.jsx)("svg", {
            ...(0, r.Z)(l),
            width: t,
            height: n,
            viewBox: "0 0 32 32",
            children: (0, s.jsx)("path", {
              fill: a,
              className: i,
              fillRule: "evenodd",
              clipRule: "evenodd",
              d: "M29 2C29 2.55 28.55 3 28 3C27.45 3 27 2.55 27 2V1C27 0.45 27.45 0 28 0C28.55 0 29 0.45 29 1V2ZM2.94 25.94L4 24L5.06 25.94L7 27L5.06 28.06L4 30L2.94 28.06L1 27L2.94 25.94ZM28 5C27.45 5 27 5.45 27 6V7C27 7.55 27.45 8 28 8C28.55 8 29 7.55 29 7V6C29 5.45 28.56 5 28 5ZM30 3H31C31.56 3 32 3.45 32 4C32 4.55 31.55 5 31 5H30C29.45 5 29 4.55 29 4C29 3.45 29.45 3 30 3ZM26 3H25C24.45 3 24 3.45 24 4C24 4.55 24.45 5 25 5H26C26.55 5 27 4.55 27 4C27 3.45 26.56 3 26 3ZM15.6201 1.46002V7.12002L11.5001 11.23L7.50012 9.58002L15.6201 1.46002ZM24.7401 9.58002L16.6201 1.46002V7.12002L20.7401 11.23L24.7401 9.58002ZM7.12012 10.5L11.1201 12.16V19.76L7.12012 21.42V10.5ZM16.6201 24.8V30.46L24.7401 22.34L20.7401 20.68L16.6201 24.8ZM15.6201 30.46L7.50012 22.34L11.5001 20.68L15.6201 24.8V30.46ZM21.1201 19.76L25.1201 21.42V10.5L21.1201 12.16V19.76ZM19.7301 11.64L20.1201 12.03V19.89L16.1201 23.89L12.1201 19.89V19.38L19.7301 11.64ZM12.1201 17.95L19.0201 10.93L18.2401 10.15L12.1201 16.38V17.95ZM17.5301 9.44002L12.1201 14.95V12.03L16.1201 8.03002L17.5301 9.44002Z",
            }),
          });
        },
        i.i,
        void 0,
        { size: 24 },
      );
    },
    925221: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return i;
        },
      });
      var s = n(735250);
      n(470079);
      var a = n(325767);
      function i(e) {
        let {
          width: t = 16,
          height: n = 16,
          color: i = "currentColor",
          ...r
        } = e;
        return (0, s.jsxs)("svg", {
          ...(0, a.Z)(r),
          width: t,
          height: n,
          viewBox: "0 0 20 20",
          fill: "none",
          xmlns: "http://www.w3.org/2000/svg",
          children: [
            (0, s.jsx)("path", {
              fillRule: "evenodd",
              clipRule: "evenodd",
              d: "M0 10C0 4.47716 4.47716 0 10 0C15.5229 0 20 4.47716 20 10C20 15.5229 15.5229 20 10 20C4.47716 20 0 15.5229 0 10ZM10 2C5.58172 2 2 5.58172 2 10C2 14.4183 5.58172 18 10 18C14.4183 18 18 14.4183 18 10C18 5.58172 14.4183 2 10 2Z",
              fill: i,
            }),
            (0, s.jsx)("path", {
              fillRule: "evenodd",
              clipRule: "evenodd",
              d: "M7 11.25C7.30378 11.25 7.5911 11.3881 7.78087 11.6253L8.5 12.5242L9.21913 11.6253C9.4089 11.3881 9.69622 11.25 10 11.25C10.3038 11.25 10.5911 11.3881 10.7809 11.6253L11.5 12.5242L12.2191 11.6253C12.4089 11.3881 12.6962 11.25 13 11.25C13.3038 11.25 13.5911 11.3881 13.7809 11.6253L15.2809 13.5003C15.6259 13.9316 15.556 14.5609 15.1247 14.9059C14.6934 15.2509 14.0641 15.181 13.7191 14.7497L13 13.8508L12.2809 14.7497C12.0911 14.9869 11.8038 15.125 11.5 15.125C11.1962 15.125 10.9089 14.9869 10.7191 14.7497L10 13.8508L9.28087 14.7497C9.0911 14.9869 8.80378 15.125 8.5 15.125C8.19622 15.125 7.9089 14.9869 7.71913 14.7497L7 13.8508L6.28087 14.7497C5.93586 15.181 5.30657 15.2509 4.87531 14.9059C4.44404 14.5609 4.37412 13.9316 4.71913 13.5003L6.21913 11.6253C6.4089 11.3881 6.69622 11.25 7 11.25Z",
              fill: i,
            }),
            (0, s.jsx)("path", {
              d: "M6.625 9.25C7.24632 9.25 7.75 8.7463 7.75 8.125C7.75 7.50368 7.24632 7 6.625 7C6.00368 7 5.5 7.50368 5.5 8.125C5.5 8.7463 6.00368 9.25 6.625 9.25Z",
              fill: i,
            }),
            (0, s.jsx)("path", {
              d: "M13.375 9.25C13.9963 9.25 14.5 8.7463 14.5 8.125C14.5 7.50368 13.9963 7 13.375 7C12.7537 7 12.25 7.50368 12.25 8.125C12.25 8.7463 12.7537 9.25 13.375 9.25Z",
              fill: i,
            }),
          ],
        });
      }
    },
    752657: function (e, t, n) {
      "use strict";
      n.d(t, {
        Z: function () {
          return i;
        },
      });
      var s = n(735250);
      n(470079);
      var a = n(325767);
      function i(e) {
        let {
          width: t = 18,
          height: n = 22,
          color: i = "currentColor",
          ...r
        } = e;
        return (0, s.jsx)("svg", {
          ...(0, a.Z)(r),
          width: t,
          height: n,
          viewBox: "0 0 18 22",
          xmlns: "http://www.w3.org/2000/svg",
          children: (0, s.jsx)("path", {
            fillRule: "evenodd",
            clipRule: "evenodd",
            d: "M2 0H13.414L18 4.586V20C18 21.103 17.103 22 16 22H2C0.897 22 0 21.103 0 20V2C0 0.898 0.897 0 2 0ZM12 1V6H17L12 1ZM11.9444 10.2778L10.6667 9H14V12.3333L12.7222 11.0556L11.1278 12.6611L10.3389 11.8722L11.9444 10.2778ZM5.27778 11.0556L4 12.3333V9H7.33333L6.05556 10.2778L7.66111 11.8722L6.87222 12.6611L5.27778 11.0556ZM6.05556 17.7222L7.33333 19H4V15.6667L5.27778 16.9444L6.87222 15.3389L7.66111 16.1278L6.05556 17.7222ZM12.7222 16.9444L14 15.6667V19H10.6667L11.9444 17.7222L10.3389 16.1278L11.1278 15.3389L12.7222 16.9444Z",
            fill: i,
          }),
        });
      }
    },
    355011: function (e, t, n) {
      "use strict";
      var s = n(735250);
      n(470079);
      t.Z = (e) => {
        let {
          width: t = 24,
          height: n = 24,
          color: a = "currentColor",
          className: i,
        } = e;
        return (0, s.jsx)("svg", {
          className: i,
          width: t,
          height: n,
          viewBox: "0 0 14 12",
          children: (0, s.jsx)("path", {
            d: "M7 0L13.9282 12H0.0717969L7 0Z",
            fill: a,
          }),
        });
      };
    },
    82923: function (e, t, n) {
      "use strict";
      n(47120);
      var s = n(748780);
      function a(e, t, n) {
        return (
          t in e
            ? Object.defineProperty(e, t, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0,
              })
            : (e[t] = n),
          e
        );
      }
      class i {
        start() {
          return new Promise((e) => {
            this.animation.start(() => {
              e();
            });
          });
        }
        stop() {
          this.animation.stop();
        }
        constructor(e) {
          a(this, "animation", void 0), (this.animation = e);
        }
      }
      class r {
        _map(e) {
          return this.animations.map(e);
        }
        start() {
          return new Promise((e) =>
            Promise.all(this._map((e) => e.start())).then(() => e()),
          );
        }
        stop() {
          this._map((e) => e.stop());
        }
        constructor(e) {
          a(this, "animations", void 0), (this.animations = e);
        }
      }
      class l {
        async start() {
          for (let e of ((this.stopped = !1), this.animations)) {
            if (this.stopped) return;
            await e.start();
          }
        }
        stop() {
          (this.stopped = !0), this.animations.map((e) => e.stop());
        }
        constructor(e) {
          a(this, "animations", void 0),
            a(this, "stopped", !1),
            (this.animations = e);
        }
      }
      function o(e, t, n) {
        return new i(n(e, { ...t }));
      }
      t.Z = {
        ...s.Z,
        timing: function (e, t) {
          return o(e, t, s.Z.timing);
        },
        spring: function (e, t) {
          return o(e, t, s.Z.spring);
        },
        parallel: function (e) {
          return new r(e);
        },
        sequence: function (e) {
          return new l(e);
        },
      };
    },
    421535: function (e, t, n) {
      "use strict";
      var s, a;
      n.d(t, {
        T: function () {
          return s;
        },
      }),
        ((a = s || (s = {})).ADMIN = "admin"),
        (a.DEVELOPER = "developer"),
        (a.READ_ONLY = "read_only");
    },
    36793: function (e, t, n) {
      "use strict";
      function s(e, t, n, s) {
        let a = e.naturalWidth / e.width,
          i = t.width / 2,
          r = t.height / 2,
          l = (e.width / 2 - i - n.x) * a,
          o = (e.height / 2 - r - n.y) * a,
          c = t.width * a,
          d = t.height * a,
          u = Math.min(c, s.width),
          _ = Math.min(d, s.height);
        return {
          x: l,
          y: o,
          scaledCropWidth: c,
          scaledCropHeight: d,
          canvasWidth: u,
          canvasHeight: _,
        };
      }
      function a(e, t, n, a) {
        let {
            x: i,
            y: r,
            scaledCropWidth: l,
            scaledCropHeight: o,
            canvasWidth: c,
            canvasHeight: d,
          } = s(e, t, n, a),
          u = document.createElement("canvas");
        (u.width = c), (u.height = d);
        let _ = u.getContext("2d");
        return (
          null != _ && _.drawImage(e, i, r, l, o, 0, 0, u.width, u.height),
          u.toDataURL("image/png")
        );
      }
      function i(e, t, n) {
        let s = e.naturalWidth / e.naturalHeight,
          i = t,
          r = n;
        e.naturalWidth > e.naturalHeight ? (i /= s) : (r *= s);
        let l = { height: i, width: r };
        return a(e, { width: e.width, height: e.height }, { x: 0, y: 0 }, l);
      }
      n.d(t, {
        Ae: function () {
          return i;
        },
        PT: function () {
          return a;
        },
        eu: function () {
          return s;
        },
      });
    },
    640358: function (e, t, n) {
      "use strict";
      n.d(t, {
        o: function () {
          return a;
        },
      });
      var s = n(330711);
      let a = (e, t) => {
        let n = Math.round(10 * e) / 10;
        if (e < 1e6)
          return new Intl.NumberFormat(t, {
            maximumFractionDigits: n % 1 == 0 ? 0 : 1,
          }).format(e);
        let a = Math.round((e / 1e6) * 10) / 10,
          i = new Intl.NumberFormat(t, {
            maximumFractionDigits: a % 1 == 0 ? 0 : 1,
          }).format(e / 1e6);
        return s.Z.Messages.NumberAbbreviations.MILLION.format({ num: i });
      };
    },
    993617: function (e, t, n) {
      "use strict";
      e.exports = {
        analyticsCard: "analyticsCard_d4b8cc",
        analyticsCardTitle: "analyticsCardTitle_d4b8cc",
        infoIcon: "infoIcon_d4b8cc",
        analyticsCardContent: "analyticsCardContent_d4b8cc",
        analyticsCardNumber: "analyticsCardNumber_d4b8cc",
        analyticsCardNumberNotAvailable:
          "analyticsCardNumberNotAvailable_d4b8cc",
        analyticsCardArrowSubText: "analyticsCardArrowSubText_d4b8cc",
        trendingArrow: "trendingArrow_d4b8cc",
        trendingArrowIconDown:
          "trendingArrowIconDown_d4b8cc trendingArrow_d4b8cc",
      };
    },
    681130: function (e, t, n) {
      "use strict";
      e.exports = { button: "button_f23d00" };
    },
    159720: function (e, t, n) {
      "use strict";
      e.exports = {
        inputWrapper: "inputWrapper_a8fde9",
        inputOuter: "inputOuter_a8fde9",
        inputInner: "inputInner_a8fde9",
        tag: "tag_a8fde9",
        closeWrapper: "closeWrapper_a8fde9",
        close: "close_a8fde9",
        disabled: "disabled_a8fde9",
      };
    },
    814961: function (e, t, n) {
      "use strict";
      e.exports = {
        animation: "animation_c88ed7",
        wumpus: "wumpus_c88ed7 image_c88ed7",
        fireTopWrapper: "fireTopWrapper_c88ed7 fireWrapper_c88ed7",
        fireBottomWrapper: "fireBottomWrapper_c88ed7 fireWrapper_c88ed7",
        fire: "fire_c88ed7 image_c88ed7",
      };
    },
    766064: function (e, t, n) {
      "use strict";
      e.exports = {
        modal: "modal_a78559",
        closeButton: "closeButton_a78559",
        modalContents: "modalContents_a78559",
        noticeRegion: "noticeRegion_a78559",
        sidebarWrapper: "sidebarWrapper_a78559",
        sidebar: "sidebar_a78559",
        mainContent: "mainContent_a78559",
        deleteItem: "deleteItem_a78559",
        statusDanger: "statusDanger_a78559",
        settingsTab: "settingsTab_a78559",
        errorIcon: "errorIcon_a78559",
        tooltip: "tooltip_a78559",
        tooltipContents: "tooltipContents_a78559",
        errorIconTooltip: "errorIconTooltip_a78559",
      };
    },
    776362: function (e, t, n) {
      "use strict";
      e.exports = {
        guildProductRoleIcon: "guildProductRoleIcon_f5157e",
        shine: "shine_f5157e",
      };
    },
    60303: function (e, t, n) {
      "use strict";
      e.exports = {
        container: "container_ffc909",
        content: "content_ffc909",
        pillContainer: "pillContainer_ffc909",
        row: "row_ffc909",
        pill: "pill_ffc909",
        ctaContent: "ctaContent_ffc909",
        getStartedButton: "getStartedButton_ffc909",
        getStartedButtonContents: "getStartedButtonContents_ffc909",
        getStartedArrow: "getStartedArrow_ffc909",
        muralImageContainer: "muralImageContainer_ffc909",
        muralImage: "muralImage_ffc909",
        muralImageReducedWidth: "muralImageReducedWidth_ffc909",
        responsive: "responsive_ffc909",
      };
    },
    371412: function (e, t, n) {
      "use strict";
      e.exports = {
        container: "container_b981c5",
        text: "text_b981c5",
        noticeIcon: "noticeIcon_b981c5",
      };
    },
    400698: function (e, t, n) {
      "use strict";
      e.exports = { tabBarItem: "tabBarItem_c95252" };
    },
    422041: function (e, t, n) {
      "use strict";
      e.exports = {
        table: "table_d2aca9",
        tableWithoutSeparators: "tableWithoutSeparators_d2aca9",
        tableContainer: "tableContainer_d2aca9",
        rowWithSeparators: "rowWithSeparators_d2aca9",
        header: "header_d2aca9",
        headerWithoutSeparators: "headerWithoutSeparators_d2aca9",
        listingImage: "listingImage_d2aca9",
        cell: "cell_d2aca9",
        headerCell: "headerCell_d2aca9",
        cellAlignRight: "cellAlignRight_d2aca9",
        listingNameCell: "listingNameCell_d2aca9",
        personCountCell: "personCountCell_d2aca9",
        personCountIcon: "personCountIcon_d2aca9",
        unpublishedBadge: "unpublishedBadge_d2aca9",
        listingNameLabel: "listingNameLabel_d2aca9",
      };
    },
    363620: function (e, t, n) {
      "use strict";
      e.exports = {
        toggleExpandColumn: "toggleExpandColumn_a01ffa",
        toggleExpandCell: "toggleExpandCell_a01ffa",
        caretIcon: "caretIcon_a01ffa",
        caretDownIcon: "caretDownIcon_a01ffa",
      };
    },
    853909: function (e, t, n) {
      "use strict";
      e.exports = {
        periodColumn: "periodColumn_c5de95",
        amountColumn: "amountColumn_c5de95",
        statusColumn: "statusColumn_c5de95",
        statusCell: "statusCell_c5de95",
        amountDisclaimer: "amountDisclaimer_c5de95",
        statusDisclaimer: "statusDisclaimer_c5de95",
        statusPaidIcon: "statusPaidIcon_c5de95",
        statusErrorIcon: "statusErrorIcon_c5de95",
        statusScheduledIcon: "statusScheduledIcon_c5de95",
        statusDeferredIcon: "statusDeferredIcon_c5de95",
      };
    },
    784206: function (e, t, n) {
      "use strict";
      e.exports = { paymentSections: "paymentSections_b43da7" };
    },
    967790: function (e, t, n) {
      "use strict";
      e.exports = {
        paymentInfoGroup: "paymentInfoGroup_bf27f7",
        metricsContainer: "metricsContainer_bf27f7",
        metricCard: "metricCard_bf27f7",
        metricCardLabelContainer: "metricCardLabelContainer_bf27f7",
        metricCardLabel: "metricCardLabel_bf27f7",
      };
    },
    583628: function (e, t, n) {
      "use strict";
      e.exports = {
        card: "card_b3f648",
        iconMask: "iconMask_b3f648",
        cardPlaceholder: "cardPlaceholder_b3f648",
        cardHeader: "cardHeader_b3f648",
        splash: "splash_b3f648",
        splashImage: "splashImage_b3f648",
        splashLoaded: "splashLoaded_b3f648",
        guildIcon: "guildIcon_b3f648",
        defaultIcon: "defaultIcon_b3f648",
        acronym: "acronym_b3f648",
        avatar: "avatar_b3f648",
        guildInfo: "guildInfo_b3f648",
        title: "title_b3f648",
        verifiedIcon: "verifiedIcon_b3f648",
        guildName: "guildName_b3f648",
        description: "description_b3f648",
        memberInfo: "memberInfo_b3f648",
        memberCount: "memberCount_b3f648",
        dotOnline: "dotOnline_b3f648 memberDot_b3f648",
        dotOffline: "dotOffline_b3f648 memberDot_b3f648",
        cardDisabled: "cardDisabled_b3f648",
        cardSmall: "cardSmall_b3f648",
      };
    },
    340051: function (e, t, n) {
      "use strict";
      e.exports = {
        container: "container_e32a43",
        headerBar: "headerBar_e32a43",
        headerText: "headerText_e32a43",
        headerCaret: "headerCaret_e32a43",
        categoryTitle: "categoryTitle_e32a43",
        button: "button_e32a43",
        row: "row_e32a43",
        rowText: "rowText_e32a43",
        rowIcon: "rowIcon_e32a43",
        rowIconChecked: "rowIconChecked_e32a43",
        rowIconEmpty: "rowIconEmpty_e32a43",
        divider: "divider_e32a43",
        progressBarOuter: "progressBarOuter_e32a43",
        progressBarInner: "progressBarInner_e32a43",
      };
    },
    485591: function (e, t, n) {
      "use strict";
      e.exports = {
        prefixInput: "prefixInput_a6236d",
        focused: "focused_a6236d",
        error: "error_a6236d",
        prefixInputInput: "prefixInputInput_a6236d",
        prefixInputPrefix: "prefixInputPrefix_a6236d",
      };
    },
    404934: function (e, t, n) {
      "use strict";
      e.exports = {
        select: "select_fbe7b1",
        error: "error_fbe7b1",
        errorMessage: "errorMessage_fbe7b1",
      };
    },
    463781: function (e, t, n) {
      "use strict";
      e.exports = { centerContainer: "centerContainer_c692e5" };
    },
    603211: function (e, t, n) {
      "use strict";
      e.exports = {
        helpUrl: "helpUrl_a7a160",
        descriptionHeader: "descriptionHeader_a7a160",
        description: "description_a7a160",
        descriptionContainer: "descriptionContainer_a7a160",
        descriptionAvatarContainer: "descriptionAvatarContainer_a7a160",
        categoryHeader: "categoryHeader_a7a160",
        categoryContainer: "categoryContainer_a7a160",
        textBadge: "textBadge_a7a160",
        automodBadgeText: "automodBadgeText_a7a160",
        automodText: "automodText_a7a160",
        checkmarkIcon: "checkmarkIcon_a7a160",
        endSpacer: "endSpacer_a7a160",
        explicitContentFilterSection: "explicitContentFilterSection_a7a160",
      };
    },
    540365: function (e, t, n) {
      "use strict";
      e.exports = {
        message: "message_d5bf6c",
        saveNoticeContainer: "saveNoticeContainer_d5bf6c",
      };
    },
    794078: function (e, t, n) {
      "use strict";
      e.exports = {
        actionContainer: "actionContainer_b6e944",
        actionIconContainer: "actionIconContainer_b6e944",
        actionIcon: "actionIcon_b6e944",
        actionTextContainer: "actionTextContainer_b6e944",
        editChannel: "editChannel_b6e944",
      };
    },
    359540: function (e, t, n) {
      "use strict";
      e.exports = {
        keywordTextAreaContainer: "keywordTextAreaContainer_a4df17",
        keywordTextArea: "keywordTextArea_a4df17",
        collapseable: "collapseable_a4df17",
        header: "header_a4df17",
        arrow: "arrow_a4df17",
      };
    },
    739864: function (e, t, n) {
      "use strict";
      e.exports = { cardContentsContainer: "cardContentsContainer_ceaee4" };
    },
    396601: function (e, t, n) {
      "use strict";
      e.exports = {
        chipletFlexContainer: "chipletFlexContainer_ef69fb",
        chipletContainer: "chipletContainer_ef69fb",
        smallBlink: "smallBlink_ef69fb",
        isSelected: "isSelected_ef69fb",
        isSelecting: "isSelecting_ef69fb",
        isEditing: "isEditing_ef69fb",
        isError: "isError_ef69fb",
        chipletContainerInner: "chipletContainerInner_ef69fb",
        chipletValue: "chipletValue_ef69fb",
        isOverflowing: "isOverflowing_ef69fb",
        chipletInput: "chipletInput_ef69fb",
        errorValue: "errorValue_ef69fb",
        errorTooltip: "errorTooltip_ef69fb",
        errorOverflowValue: "errorOverflowValue_ef69fb",
        closeIconContainer: "closeIconContainer_ef69fb",
        closeIcon: "closeIcon_ef69fb",
      };
    },
    89634: function (e, t, n) {
      "use strict";
      e.exports = {
        mainContainer: "mainContainer_bd9c39",
        textArea: "textArea_bd9c39",
        innerScroller: "innerScroller_bd9c39",
        resizeHandle: "resizeHandle_bd9c39",
        mainTextInput: "mainTextInput_bd9c39",
        isEditingOtherNodes: "isEditingOtherNodes_bd9c39",
        maxTags: "maxTags_bd9c39",
      };
    },
    357044: function (e, t, n) {
      "use strict";
      e.exports = {
        keywordListContainer: "keywordListContainer_f9f552",
        keywordListTextContainer: "keywordListTextContainer_f9f552",
        toggle: "toggle_f9f552",
      };
    },
    343189: function (e, t, n) {
      "use strict";
      e.exports = {
        textAreaContainer: "textAreaContainer_a779c5",
        collapseable: "collapseable_a779c5",
        header: "header_a779c5",
        arrow: "arrow_a779c5",
      };
    },
    301738: function (e, t, n) {
      "use strict";
      e.exports = {
        keywordsContainer: "keywordsContainer_e58e09",
        errorSpan: "errorSpan_e58e09",
        subtext: "subtext_e58e09",
      };
    },
    107636: function (e, t, n) {
      "use strict";
      e.exports = {
        keywordsTextArea: "keywordsTextArea_bdc518",
        paddingTop: "paddingTop_bdc518",
        errorText: "errorText_bdc518",
        keywordsContainer: "keywordsContainer_bdc518",
        keywordsCounter: "keywordsCounter_bdc518",
      };
    },
    375065: function (e, t, n) {
      "use strict";
      e.exports = {
        cardContentsContainer: "cardContentsContainer_fa2661",
        stepperContainer: "stepperContainer_fa2661",
        stepper: "stepper_fa2661",
        mentionLimitContainer: "mentionLimitContainer_fa2661",
        mentionLimitIconContainer: "mentionLimitIconContainer_fa2661",
        mentionLimitIcon: "mentionLimitIcon_fa2661",
        mentionLimitTextContainer: "mentionLimitTextContainer_fa2661",
        descriptionHint: "descriptionHint_fa2661",
      };
    },
    419704: function (e, t, n) {
      "use strict";
      e.exports = { exemptionHint: "exemptionHint_e1ddee" };
    },
    15327: function (e, t, n) {
      "use strict";
      e.exports = {
        mainContainer: "mainContainer_ea28e2",
        ruleIconContainer: "ruleIconContainer_ea28e2",
        actionRuleListContainer: "actionRuleListContainer_ea28e2",
        ruleIcon: "ruleIcon_ea28e2",
        menuIconButton: "menuIconButton_ea28e2",
        menuIcon: "menuIcon_ea28e2",
        ruleTextContainer: "ruleTextContainer_ea28e2",
        ruleTextHeaderContainer: "ruleTextHeaderContainer_ea28e2",
        ruleTextHeader: "ruleTextHeader_ea28e2",
        ruleSubtextHeader: "ruleSubtextHeader_ea28e2",
        ruleTextDescription: "ruleTextDescription_ea28e2",
        actionContainer: "actionContainer_ea28e2",
        toggle: "toggle_ea28e2",
        alphaBetaTag: "alphaBetaTag_ea28e2",
      };
    },
    753925: function (e, t, n) {
      "use strict";
      e.exports = { ruleNameInput: "ruleNameInput_d841d9" };
    },
    825723: function (e, t, n) {
      "use strict";
      e.exports = {
        addAnotherRuleCardContainer: "addAnotherRuleCardContainer_a57b58",
        mainRuleContainer: "mainRuleContainer_a57b58",
        plusIcon: "plusIcon_a57b58",
        animatedRuleCardContainer: "animatedRuleCardContainer_a57b58",
      };
    },
    707524: function (e, t, n) {
      "use strict";
      e.exports = {
        triggerContainer: "triggerContainer_df95ff",
        triggerMainContainer: "triggerMainContainer_df95ff",
        triggerCounterContainer: "triggerCounterContainer_df95ff",
        stepCountIcon: "stepCountIcon_df95ff",
        stepCount: "stepCount_df95ff",
        triggerHeader: "triggerHeader_df95ff",
        triggerSettingsContainer: "triggerSettingsContainer_df95ff",
      };
    },
    750959: function (e, t, n) {
      "use strict";
      e.exports = {
        dividerContainer: "dividerContainer_f9f9ba",
        dividerIconContainer: "dividerIconContainer_f9f9ba",
        dividierIcon: "dividierIcon_f9f9ba",
      };
    },
    633969: function (e, t, n) {
      "use strict";
      e.exports = {
        icon: "icon_d0ade3",
        unlocked: "unlocked_d0ade3",
        emoji: "emoji_d0ade3",
        animated: "animated_d0ade3",
        audio: "audio_d0ade3",
        customization: "customization_d0ade3",
        upload: "upload_d0ade3",
        vanity: "vanity_d0ade3",
        stream: "stream_d0ade3",
        sticker: "sticker_d0ade3",
        customRoleIcon: "customRoleIcon_d0ade3",
        stage: "stage_d0ade3",
        soundboard: "soundboard_d0ade3",
      };
    },
    618043: function (e, t, n) {
      "use strict";
      e.exports = {
        banner: "banner_ad4cb5",
        ctaContainer: "ctaContainer_ad4cb5",
        button: "button_ad4cb5",
        content: "content_ad4cb5",
        header: "header_ad4cb5",
      };
    },
    35879: function (e, t, n) {
      "use strict";
      e.exports = {
        tier0Container: "tier0Container_dc391a",
        tier0Card: "tier0Card_dc391a",
        tier0Heading: "tier0Heading_dc391a",
        tier0Button: "tier0Button_dc391a",
      };
    },
    907820: function (e, t, n) {
      "use strict";
      e.exports = {
        wrapper: "wrapper_c41ff0",
        heading: "heading_c41ff0",
        originalPrice: "originalPrice_c41ff0",
      };
    },
    844396: function (e, t, n) {
      "use strict";
      e.exports = {
        availabilityIndicator: "availabilityIndicator_b29edb",
        icon: "icon_b29edb",
        unlockedIcon: "unlockedIcon_b29edb icon_b29edb",
        description: "description_b29edb",
        clickable: "clickable_b29edb",
      };
    },
    472997: function (e, t, n) {
      "use strict";
      e.exports = {
        guildBanner: "guildBanner_f9de8e",
        guildHeader: "guildHeader_f9de8e",
        guildName: "guildName_f9de8e",
        dropdown: "dropdown_f9de8e",
      };
    },
    444383: function (e, t, n) {
      "use strict";
      e.exports = {
        settingsColumn: "settingsColumn_dd2627 " + n("156725").customColumn,
        settingsContainer:
          "settingsContainer_dd2627 " + n("156725").customContainer,
        settingsScroller:
          "settingsScroller_dd2627 " +
          n("156725").customScroller +
          " " +
          n("156725").contentRegionScroller,
        settingsContent:
          "settingsContent_dd2627 " +
          n("156725").contentColumnDefault +
          " settingsColumn_dd2627 " +
          n("156725").customColumn,
        header: "header_dd2627",
        tableContainer: "tableContainer_dd2627",
        mainTableContainer: "mainTableContainer_dd2627",
        movedTable: "movedTable_dd2627",
        noResultsContainer: "noResultsContainer_dd2627",
      };
    },
    837236: function (e, t, n) {
      "use strict";
      e.exports = {
        bannerContainer: "bannerContainer_cc2901",
        headingContainer: "headingContainer_cc2901",
        buttonContainer: "buttonContainer_cc2901",
      };
    },
    288617: function (e, t, n) {
      "use strict";
      e.exports = {
        coverContainer: "coverContainer_f130a3",
        centerArt: "centerArt_f130a3",
        mainIsland: "mainIsland_f130a3",
        balloonDog: "balloonDog_f130a3",
        leftArt: "leftArt_f130a3",
        grillingIsland: "grillingIsland_f130a3",
        rightArt: "rightArt_f130a3",
        waffleIsland: "waffleIsland_f130a3",
        float: "float_f130a3",
        altFloat: "altFloat_f130a3",
        centerContent: "centerContent_f130a3",
        coverContent: "coverContent_f130a3",
        coverTitle: "coverTitle_f130a3",
      };
    },
    689937: function (e, t, n) {
      "use strict";
      e.exports = {
        userContainer: "userContainer_d3081b",
        heroQuotes: "heroQuotes_d3081b quotes_d3081b",
        testimonialHeroContainer: "testimonialHeroContainer_d3081b",
        animatedContainer: "animatedContainer_d3081b",
        testimonial: "testimonial_d3081b",
        testimonialsControls: "testimonialsControls_d3081b",
        testimonialControl: "testimonialControl_d3081b",
        testimonialControlInner: "testimonialControlInner_d3081b",
        testimonialControlIcon: "testimonialControlIcon_d3081b",
      };
    },
    571413: function (e, t, n) {
      "use strict";
      e.exports = {
        container: "container_e3f878",
        action: "action_e3f878",
        clickableAction: "clickableAction_e3f878",
        actionInfo: "actionInfo_e3f878",
        channelIcon: "channelIcon_e3f878",
        tagIconContainer: "tagIconContainer_e3f878",
        channelIconContainer: "channelIconContainer_e3f878",
        rulesIconContainer: "rulesIconContainer_e3f878",
        rulesIcon: "rulesIcon_e3f878",
        checkCircle: "checkCircle_e3f878",
        checkCircleCompleted: "checkCircleCompleted_e3f878",
        icon: "icon_e3f878",
      };
    },
    36766: function (e, t, n) {
      "use strict";
      e.exports = {
        welcomeMessageContainer: "welcomeMessageContainer_a1289e",
        welcomeMessageProfileContainer: "welcomeMessageProfileContainer_a1289e",
        avatar: "avatar_a1289e",
        avatarBackground: "avatarBackground_a1289e",
        avatarBorder: "avatarBorder_a1289e",
        adminUsernameContainer: "adminUsernameContainer_a1289e",
        welcomeMessageContent: "welcomeMessageContent_a1289e",
        ownerIcon: "ownerIcon_a1289e",
      };
    },
    463446: function (e, t, n) {
      "use strict";
      e.exports = {
        productListingsHeader: "productListingsHeader_d3b294",
        productListings: "productListings_d3b294",
        addButton: "addButton_d3b294",
        addButtonInner: "addButtonInner_d3b294",
      };
    },
    85490: function (e, t, n) {
      "use strict";
      e.exports = {
        tabBarContainer: "tabBarContainer_f6df95",
        tabBar: "tabBar_f6df95",
        tabBarItem: "tabBarItem_f6df95",
        previewButton: "previewButton_f6df95",
      };
    },
    350438: function (e, t, n) {
      "use strict";
      e.exports = {
        listingNameColumn: "listingNameColumn_e8401a",
        paymentsCountColumn: "paymentsCountColumn_e8401a",
        priceColumn: "priceColumn_e8401a",
      };
    },
    169528: function (e, t, n) {
      "use strict";
      e.exports = { container: "container_e39b68", body: "body_e39b68" };
    },
    777926: function (e, t, n) {
      "use strict";
      e.exports = {
        container: "container_c8eec8",
        header: "header_c8eec8",
        headerWithDescription: "headerWithDescription_c8eec8",
        description: "description_c8eec8",
        caret: "caret_c8eec8",
        divider: "divider_c8eec8",
        content: "content_c8eec8",
      };
    },
    915938: function (e, t, n) {
      "use strict";
      e.exports = {
        yellowMessageBlock: "yellowMessageBlock_b74455 messageBlock_b74455",
        messageBlockIcon: "messageBlockIcon_b74455",
        redMessageBlock: "redMessageBlock_b74455 messageBlock_b74455",
        brownMessageBlock: "brownMessageBlock_b74455 messageBlock_b74455",
      };
    },
    729761: function (e, t, n) {
      "use strict";
      e.exports = { noticeContainer: "noticeContainer_ca1b5d" };
    },
    848435: function (e, t, n) {
      "use strict";
      e.exports = {
        container: "container_e08e86",
        innerContainer: "innerContainer_e08e86",
        iconWrapper: "iconWrapper_e08e86",
        star: "star_e08e86",
        sparkle: "sparkle_e08e86",
      };
    },
    861277: function (e, t, n) {
      "use strict";
      e.exports = {
        statusWarningBlock: "statusWarningBlock_e45fae",
        statusWarningBlockWithCta: "statusWarningBlockWithCta_e45fae",
        horizontalStatusWarningBlock: "horizontalStatusWarningBlock_e45fae",
        verticalStatusWarningBlock: "verticalStatusWarningBlock_e45fae",
        ctaButtonContainer: "ctaButtonContainer_e45fae",
        ctaButton: "ctaButton_e45fae",
        ctaBlackButton: "ctaBlackButton_e45fae",
        ctaButtonText: "ctaButtonText_e45fae",
      };
    },
    560755: function (e, t, n) {
      "use strict";
      e.exports = {
        root: "root_d6fc3a",
        carouselCaret: "carouselCaret_d6fc3a",
        carousel: "carousel_d6fc3a",
      };
    },
    976888: function (e, t, n) {
      "use strict";
      e.exports = { animator: "animator_d94229", item: "item_d94229" };
    },
    80204: function (e, t, n) {
      "use strict";
      e.exports = {
        label: "label_e8e89d",
        createLabel: "createLabel_e8e89d",
        labelIcon: "labelIcon_e8e89d",
        labelText: "labelText_e8e89d",
        labelTitle: "labelTitle_e8e89d",
        labelSubtitle: "labelSubtitle_e8e89d",
      };
    },
    626064: function (e, t, n) {
      "use strict";
      e.exports = {
        closeButton: "closeButton_b186cb",
        modalContent: "modalContent_b186cb",
        emojiInputContainer: "emojiInputContainer_b186cb",
        emojiButton: "emojiButton_b186cb",
        emoji: "emoji_b186cb",
        emojiText: "emojiText_b186cb",
        primaryButtons: "primaryButtons_b186cb",
        deleteButton: "deleteButton_b186cb",
        cancelButton: "cancelButton_b186cb",
      };
    },
    178959: function (e, t, n) {
      "use strict";
      e.exports = {
        container: "container_b9f8a6",
        divider: "divider_b9f8a6",
        card: "card_b9f8a6",
        cardDragging: "cardDragging_b9f8a6",
        emojiWrapper: "emojiWrapper_b9f8a6",
        dragIconWrapper: "dragIconWrapper_b9f8a6",
        dragIcon: "dragIcon_b9f8a6",
        cardText: "cardText_b9f8a6",
        cardActions: "cardActions_b9f8a6",
        cardActionButton: "cardActionButton_b9f8a6",
        cardActionButtonIcon: "cardActionButtonIcon_b9f8a6",
        disabled: "disabled_b9f8a6",
        isDragging: "isDragging_b9f8a6",
        emoji: "emoji_b9f8a6",
        addBenefit: "addBenefit_b9f8a6",
        addBenefitIcon: "addBenefitIcon_b9f8a6",
      };
    },
    246435: function (e, t, n) {
      "use strict";
      e.exports = {
        container: "container_c2bdca",
        emojiRow: "emojiRow_c2bdca",
        emojiImage: "emojiImage_c2bdca",
        emojiAlias: "emojiAlias_c2bdca",
        deleteButton: "deleteButton_c2bdca",
        disabled: "disabled_c2bdca",
        trashIcon: "trashIcon_c2bdca",
      };
    },
    15594: function (e, t, n) {
      "use strict";
      e.exports = {
        settingsColumn: "settingsColumn_fc6cb6 " + n("156725").customColumn,
        settingsContainer:
          "settingsContainer_fc6cb6 " + n("156725").customContainer,
        settingsScroller:
          "settingsScroller_fc6cb6 " +
          n("156725").customScroller +
          " " +
          n("156725").contentRegionScroller,
        settingsContent:
          "settingsContent_fc6cb6 " +
          n("156725").contentColumnDefault +
          " settingsColumn_fc6cb6 " +
          n("156725").customColumn,
      };
    },
    155161: function (e, t, n) {
      "use strict";
      e.exports = {
        container: "container_fea47d",
        formDescription: "formDescription_fea47d",
        divider: "divider_fea47d",
        formatOptionRadioItem: "formatOptionRadioItem_fea47d",
        formatRadioIconWrapper: "formatRadioIconWrapper_fea47d",
        radioGroupHorizontal: "radioGroupHorizontal_fea47d",
        formatOptionRadioBar: "formatOptionRadioBar_fea47d",
        formatOptionRadioItemIcon: "formatOptionRadioItemIcon_fea47d",
        formatRadioIcon: "formatRadioIcon_fea47d",
        coverImageUploader: "coverImageUploader_fea47d",
        coverImageUploaderInner: "coverImageUploaderInner_fea47d",
        coverImageUploaderIconWrapper: "coverImageUploaderIconWrapper_fea47d",
        coverImageUploaderIcon: "coverImageUploaderIcon_fea47d",
        contentRegion: "contentRegion_fea47d",
      };
    },
    143390: function (e, t, n) {
      "use strict";
      e.exports = {
        checklist: "checklist_dce733",
        container: "container_dce733",
        headerBar: "headerBar_dce733",
        headerText: "headerText_dce733",
        headerCaret: "headerCaret_dce733",
        categoryTitle: "categoryTitle_dce733",
        row: "row_dce733",
        rowText: "rowText_dce733",
        rowIcon: "rowIcon_dce733",
        rowIconChecked: "rowIconChecked_dce733",
        rowIconEmpty: "rowIconEmpty_dce733",
        divider: "divider_dce733",
        progressBarOuter: "progressBarOuter_dce733",
        progressBarInner: "progressBarInner_dce733",
      };
    },
    811843: function (e, t, n) {
      "use strict";
      e.exports = {
        container: "container_da7453",
        mainContent: "mainContent_da7453",
        tabBarContainer: "tabBarContainer_da7453",
        previewButton: "previewButton_da7453",
        tabBar: "tabBar_da7453",
      };
    },
    443305: function (e, t, n) {
      "use strict";
      e.exports = {
        container: "container_e6ac5f",
        groupListings: "groupListings_e6ac5f",
        createTierButton: "createTierButton_e6ac5f",
        createTierIcon: "createTierIcon_e6ac5f",
        contentRegion: "contentRegion_e6ac5f",
        disabled: "disabled_e6ac5f",
      };
    },
    842976: function (e, t, n) {
      "use strict";
      e.exports = {
        enableSwitch: "enableSwitch_abfcad",
        divider: "divider_abfcad",
        openPageButton: "openPageButton_abfcad",
        accentColorContainer: "accentColorContainer_abfcad",
        buttonPreview: "buttonPreview_abfcad",
        hideColorButtons: "hideColorButtons_abfcad",
        trailerInputWrapper: "trailerInputWrapper_abfcad",
        trailerInput: "trailerInput_abfcad",
        error: "error_abfcad",
        trailerInputWithCheckmark: "trailerInputWithCheckmark_abfcad",
        inputCheckmark: "inputCheckmark_abfcad",
        iconSwitchLabel: "iconSwitchLabel_abfcad",
        iconContainer: "iconContainer_abfcad",
        premiumMemberCountIcon: "premiumMemberCountIcon_abfcad",
        premiumMemberCountSwitchContainer:
          "premiumMemberCountSwitchContainer_abfcad",
        contentRegion: "contentRegion_abfcad",
        disabled: "disabled_abfcad",
      };
    },
    954477: function (e, t, n) {
      "use strict";
      e.exports = {
        modalContent: "modalContent_edb725",
        modalCloseButton: "modalCloseButton_edb725",
        section: "section_edb725",
        list: "list_edb725",
        row: "row_edb725",
        disabled: "disabled_edb725",
        rowIconWrapper: "rowIconWrapper_edb725",
        rowIcon: "rowIcon_edb725",
        rowText: "rowText_edb725",
        rowCheckbox: "rowCheckbox_edb725",
        checkboxInput: "checkboxInput_edb725",
        checkboxDisplay: "checkboxDisplay_edb725",
        checkboxIcon: "checkboxIcon_edb725",
        checked: "checked_edb725",
        roleRow: "roleRow_edb725 row_edb725",
        roleRowIconDefault: "roleRowIconDefault_edb725",
        slideForm: "slideForm_edb725",
      };
    },
    804258: function (e, t, n) {
      "use strict";
      e.exports = {
        container: "container_fb0b3c",
        row: "row_fb0b3c",
        rowIcon: "rowIcon_fb0b3c",
        listingImage: "listingImage_fb0b3c",
        rowBody: "rowBody_fb0b3c",
        rowText: "rowText_fb0b3c",
        listingName: "listingName_fb0b3c",
        importRoleCard: "importRoleCard_fb0b3c container_fb0b3c row_fb0b3c",
        caret: "caret_fb0b3c",
        disabled: "disabled_fb0b3c",
      };
    },
    51436: function (e, t, n) {
      "use strict";
      e.exports = {
        buttonsContainer: "buttonsContainer_c98499",
        colorSwatch: "colorSwatch_c98499",
        swatchDescription: "swatchDescription_c98499",
        swatch: "swatch_c98499",
        customSwatch: "customSwatch_c98499 swatch_c98499",
        defaultSwatch: "defaultSwatch_c98499",
        dropperIconButton: "dropperIconButton_c98499",
        dropperIcon: "dropperIcon_c98499",
        disabled: "disabled_c98499",
      };
    },
    819793: function (e, t, n) {
      "use strict";
      e.exports = {
        container: "container_fc2651",
        preview: "preview_fc2651",
        disabled: "disabled_fc2651",
        icon: "icon_fc2651",
        uploaderIcon: "uploaderIcon_fc2651",
      };
    },
    517194: function (e, t, n) {
      "use strict";
      e.exports = {
        container: "container_f03c49",
        autoWidth: "autoWidth_f03c49",
        formDescription: "formDescription_f03c49",
        formInput: "formInput_f03c49",
        header: "header_f03c49",
        headerExpanded: "headerExpanded_f03c49",
        cancel: "cancel_f03c49",
        headerImageContainer: "headerImageContainer_f03c49",
        headerImage: "headerImage_f03c49",
        starIcon: "starIcon_f03c49",
        headerListingInfo: "headerListingInfo_f03c49",
        headerDescriptionContainer: "headerDescriptionContainer_f03c49",
        draftBadge: "draftBadge_f03c49",
        archivedBadge: "archivedBadge_f03c49",
        unsavedBadge: "unsavedBadge_f03c49",
        pencilIcon: "pencilIcon_f03c49",
      };
    },
    303536: function (e, t, n) {
      "use strict";
      e.exports = {
        body: "body_b225f6",
        publishListing: "publishListing_b225f6",
        publishListingInfoHeader: "publishListingInfoHeader_b225f6",
        publishButton: "publishButton_b225f6",
      };
    },
    79489: function (e, t, n) {
      "use strict";
      e.exports = { deleteListingButton: "deleteListingButton_a0fddf" };
    },
    489982: function (e, t, n) {
      "use strict";
      e.exports = {
        formSplit: "formSplit_fe8653",
        formSplitHalf: "formSplitHalf_fe8653",
        iconSection: "iconSection_fe8653",
        iconSectionDescription: "iconSectionDescription_fe8653",
        iconUploader: "iconUploader_fe8653",
        tierSymbolUploaderInner: "tierSymbolUploaderInner_fe8653",
      };
    },
    252218: function (e, t, n) {
      "use strict";
      e.exports = {
        iconUploaderContainer: "iconUploaderContainer_bc431c",
        previewContainer: "previewContainer_bc431c",
        messageContainer: "messageContainer_bc431c",
      };
    },
    702792: function (e, t, n) {
      "use strict";
      e.exports = {
        waitlist: "waitlist_ecd61e",
        waitlistCtaButton: "waitlistCtaButton_ecd61e",
      };
    },
    585394: function (e, t, n) {
      "use strict";
      e.exports = {
        ctaContainer: "ctaContainer_f6ab4c " + n("162979").card,
        heroBanner: "heroBanner_f6ab4c",
        ctaContent: "ctaContent_f6ab4c",
        ctaButton: "ctaButton_f6ab4c",
        ineligibleButton: "ineligibleButton_f6ab4c ctaButton_f6ab4c",
        ineligibleButtonContent: "ineligibleButtonContent_f6ab4c",
      };
    },
    401257: function (e, t, n) {
      "use strict";
      e.exports = {
        creatorBenefitsContainer: "creatorBenefitsContainer_da92c3",
        earningBenefitCard:
          "earningBenefitCard_da92c3 creatorBenefitCard_da92c3 " +
          n("162979").card,
        followerBenefitCard:
          "followerBenefitCard_da92c3 creatorBenefitCard_da92c3 " +
          n("162979").card,
        revenueShareBenefitCard:
          "revenueShareBenefitCard_da92c3 creatorBenefitCard_da92c3 " +
          n("162979").card,
        earningsPreviewContainer: "earningsPreviewContainer_da92c3",
        avatarGridContainer: "avatarGridContainer_da92c3",
        avatarCard: "avatarCard_da92c3",
        roundAvatar: "roundAvatar_da92c3",
        verticalConnector: "verticalConnector_da92c3",
        horizontalConnector: "horizontalConnector_da92c3",
        followerBenefitText: "followerBenefitText_da92c3",
        roleSubscriptionSocial: "roleSubscriptionSocial_da92c3",
        roleSubscriptionLanyardIllo: "roleSubscriptionLanyardIllo_da92c3",
        revenueSharePercentageDark: "revenueSharePercentageDark_da92c3",
        revenueSharePercentageLight: "revenueSharePercentageLight_da92c3",
        roleSubscriptionEarningIllo: "roleSubscriptionEarningIllo_da92c3",
      };
    },
    674132: function (e, t, n) {
      "use strict";
      e.exports = {
        creatorGuildCarousel: "creatorGuildCarousel_adff39",
        guildCard: "guildCard_adff39 " + n("162979").card,
        guildCardHeader: "guildCardHeader_adff39",
        guildCardHeaderAvatar: "guildCardHeaderAvatar_adff39",
        guildCardHeaderTitle: "guildCardHeaderTitle_adff39",
        guildSubscriberCount: "guildSubscriberCount_adff39",
        subscriberCountValue: "subscriberCountValue_adff39",
        subscriberCountText: "subscriberCountText_adff39",
        guildCardQuote: "guildCardQuote_adff39",
        guildPremiumEmojis: "guildPremiumEmojis_adff39",
        premiumEmojisTitle: "premiumEmojisTitle_adff39",
        premiumEmojisRow: "premiumEmojisRow_adff39",
        emojisContainer: "emojisContainer_adff39",
        fullEmojisContainer: "fullEmojisContainer_adff39",
        emoji: "emoji_adff39",
        extraEmojiCount: "extraEmojiCount_adff39",
        viewServerButton: "viewServerButton_adff39",
        viewServerButtonText: "viewServerButtonText_adff39",
        roundedEdges: "roundedEdges_adff39",
      };
    },
    162979: function (e, t, n) {
      "use strict";
      n.r(
        (e.exports = {
          container: "container_ea91d1",
          sectionDivider: "sectionDivider_ea91d1",
          card: "card_ea91d1",
        }),
      );
    },
    740402: function (e, t, n) {
      "use strict";
      e.exports = {
        howItWorksContainer: "howItWorksContainer_aa72d6",
        howItWorksCard: "howItWorksCard_aa72d6 " + n("162979").card,
        howItWorksImageContainer: "howItWorksImageContainer_aa72d6",
        howItWorksImage: "howItWorksImage_aa72d6",
        howItWorksDescription: "howItWorksDescription_aa72d6",
      };
    },
    430994: function (e, t, n) {
      "use strict";
      e.exports = { container: "container_d27a86" };
    },
    468059: function (e, t, n) {
      "use strict";
      e.exports = {
        tierNameColumn: "tierNameColumn_c5ed9a",
        subscribersColumn: "subscribersColumn_c5ed9a",
        priceColumn: "priceColumn_c5ed9a",
        table: "table_c5ed9a",
        header: "header_c5ed9a",
        row: "row_c5ed9a",
        tierNameCell: "tierNameCell_c5ed9a",
        tierImage: "tierImage_c5ed9a",
      };
    },
    772236: function (e, t, n) {
      "use strict";
      e.exports = {
        metricsContainer: "metricsContainer_f0f3c8",
        totalMembersIcon: "totalMembersIcon_f0f3c8",
        currentMonthEarningsTable: "currentMonthEarningsTable_f0f3c8",
        formSection: "formSection_f0f3c8",
      };
    },
    383470: function (e, t, n) {
      "use strict";
      e.exports = {
        selectTeamContainer: "selectTeamContainer_a4eb46",
        teamSelect: "teamSelect_a4eb46",
        enableTicketingButton: "enableTicketingButton_a4eb46",
        error: "error_a4eb46",
        description: "description_a4eb46",
        nonOwnerNotice: "nonOwnerNotice_a4eb46",
        selfDemonetization: "selfDemonetization_a4eb46",
      };
    },
    539918: function (e, t, n) {
      "use strict";
      e.exports = {
        table: "table_edfdcc",
        tableContainer: "tableContainer_edfdcc",
        row: "row_edfdcc",
        header: "header_edfdcc",
        cellAlignRight: "cellAlignRight_edfdcc",
        cell: "cell_edfdcc",
        toggleExpandColumn: "toggleExpandColumn_edfdcc",
        toggleExpandCell: "toggleExpandCell_edfdcc",
        caretIcon: "caretIcon_edfdcc",
        caretDownIcon: "caretDownIcon_edfdcc",
        periodColumn: "periodColumn_edfdcc",
        periodCell: "periodCell_edfdcc",
        subscribersCell: "subscribersCell_edfdcc",
        subscribersIcon: "subscribersIcon_edfdcc",
        amountColumn: "amountColumn_edfdcc",
        amountDisclaimer: "amountDisclaimer_edfdcc",
        statusColumn: "statusColumn_edfdcc",
        statusDisclaimer: "statusDisclaimer_edfdcc",
        statusCell: "statusCell_edfdcc",
        statusPaidIcon: "statusPaidIcon_edfdcc",
        statusErrorIcon: "statusErrorIcon_edfdcc",
        statusScheduledIcon: "statusScheduledIcon_edfdcc",
        statusDeferredIcon: "statusDeferredIcon_edfdcc",
      };
    },
    117584: function (e, t, n) {
      "use strict";
      e.exports = {
        container: "container_b6010f",
        labelContainer: "labelContainer_b6010f",
        label: "label_b6010f",
        sublabel: "sublabel_b6010f",
        value: "value_b6010f",
        trendContainer: "trendContainer_b6010f",
        chartLineIcon: "chartLineIcon_b6010f",
        chartLineIconNegative: "chartLineIconNegative_b6010f",
        trendDescription: "trendDescription_b6010f",
        labelTooltipIcon: "labelTooltipIcon_b6010f",
      };
    },
    315185: function (e, t, n) {
      "use strict";
      e.exports = {
        formTitle: "formTitle_cfe282",
        customHeader: "customHeader_cfe282",
        quickSelect: "quickSelect_cfe282",
        selectFilterPopout: "selectFilterPopout_cfe282",
        divider: "divider_cfe282",
        discriminator: "discriminator_cfe282",
        scroller: "scroller_cfe282",
        content: "content_cfe282",
        row: "row_cfe282",
        avatar: "avatar_cfe282",
        loadMore: "loadMore_cfe282",
        empty: "empty_cfe282",
      };
    },
    697913: function (e, t, n) {
      "use strict";
      e.exports = {
        categoryRow: "categoryRow_a33fd3",
        uncategorized: "uncategorized_a33fd3",
        categoryText: "categoryText_a33fd3",
        channelText: "channelText_a33fd3",
        channelRow: "channelRow_a33fd3",
        disabled: "disabled_a33fd3",
        firstChannel: "firstChannel_a33fd3",
        lastChannel: "lastChannel_a33fd3",
        channelInfo: "channelInfo_a33fd3",
        channelActions: "channelActions_a33fd3",
        channelSubtitle: "channelSubtitle_a33fd3",
        subtitleSeparator: "subtitleSeparator_a33fd3",
        channelName: "channelName_a33fd3",
        separator: "separator_a33fd3",
        checkbox: "checkbox_a33fd3",
        checkboxInner: "checkboxInner_a33fd3",
        lockedPill: "lockedPill_a33fd3",
        lockedPillInner: "lockedPillInner_a33fd3",
      };
    },
    648637: function (e, t, n) {
      "use strict";
      e.exports = {
        container: "container_fe51c5",
        header: "header_fe51c5",
        channelList: "channelList_fe51c5",
        emptyState: "emptyState_fe51c5",
        emptyStateIcon: "emptyStateIcon_fe51c5",
        divider: "divider_fe51c5",
        channel: "channel_fe51c5",
        channelName: "channelName_fe51c5",
        chattableIndicator: "chattableIndicator_fe51c5",
        category: "category_fe51c5",
        caret: "caret_fe51c5",
        channelIcon: "channelIcon_fe51c5",
      };
    },
    435359: function (e, t, n) {
      "use strict";
      e.exports = {
        container: "container_eff583",
        header: "header_eff583",
        requiredItem: "requiredItem_eff583",
        icon: "icon_eff583",
      };
    },
    878443: function (e, t, n) {
      "use strict";
      e.exports = {
        container: "container_bdf6b7",
        stepHeader: "stepHeader_bdf6b7",
        header: "header_bdf6b7",
        button: "button_bdf6b7",
      };
    },
    818304: function (e, t, n) {
      "use strict";
      e.exports = {
        header: "header_fdea3f",
        columns: "columns_fdea3f",
        recommendations: "recommendations_fdea3f",
        recsSubheader: "recsSubheader_fdea3f",
        checkmark: "checkmark_fdea3f",
        dismissAll: "dismissAll_fdea3f",
        dismissAllText: "dismissAllText_fdea3f",
        recommendedChannels: "recommendedChannels_fdea3f",
        channelRow: "channelRow_fdea3f",
        channelInfo: "channelInfo_fdea3f",
        channelName: "channelName_fdea3f",
        addChannelCTA: "addChannelCTA_fdea3f",
        topic: "topic_fdea3f",
        separator: "separator_fdea3f",
        largeSeparator: "largeSeparator_fdea3f",
        channelBrowser: "channelBrowser_fdea3f",
        collapseButton: "collapseButton_fdea3f",
        channelBrowserOuter: "channelBrowserOuter_fdea3f",
        advancedModeQuestions: "advancedModeQuestions_fdea3f",
        lockedPill: "lockedPill_fdea3f",
        lockedPillInner: "lockedPillInner_fdea3f",
        advancedModeToggle: "advancedModeToggle_fdea3f",
        prejoinHeader: "prejoinHeader_fdea3f",
        prejoinSubHeader: "prejoinSubHeader_fdea3f",
      };
    },
    812315: function (e, t, n) {
      "use strict";
      e.exports = {
        page: "page_e88228",
        leftColumn: "leftColumn_e88228",
        rightColumn: "rightColumn_e88228",
        header: "header_e88228",
        section: "section_e88228",
        sectionSeparator: "sectionSeparator_e88228",
        descriptionSection: "descriptionSection_e88228",
        editWelcomeSection: "editWelcomeSection_e88228",
        editWelcomeButton: "editWelcomeButton_e88228",
        badExample: "badExample_e88228",
        example: "example_e88228",
        badExampleIcon: "badExampleIcon_e88228",
        actionItemContainer: "actionItemContainer_e88228",
        resourceChannelContainer: "resourceChannelContainer_e88228",
        actionItemError: "actionItemError_e88228",
        resourceChannelError: "resourceChannelError_e88228",
        actionItem: "actionItem_e88228",
        resourceChannel: "resourceChannel_e88228",
        dragIcon: "dragIcon_e88228",
        actionItemEmojiWrapper: "actionItemEmojiWrapper_e88228",
        resourceChannelContent: "resourceChannelContent_e88228",
        actionItemText: "actionItemText_e88228",
        resourceChannelTitle: "resourceChannelTitle_e88228",
        resourceChannelDescription: "resourceChannelDescription_e88228",
        iconWrapper: "iconWrapper_e88228",
        icon: "icon_e88228",
        actionItemEditButton: "actionItemEditButton_e88228",
        resourceChannelEditButton: "resourceChannelEditButton_e88228",
        actionItemEditButtonInner: "actionItemEditButtonInner_e88228",
        resourceChannelEditButtonInner: "resourceChannelEditButtonInner_e88228",
        addActionItem: "addActionItem_e88228",
        sectionHeader: "sectionHeader_e88228",
        boostIndicator: "boostIndicator_e88228",
        homeBannerExplainer: "homeBannerExplainer_e88228",
        upsellButton: "upsellButton_e88228",
        uploadButton: "uploadButton_e88228",
        upsellButtonInner: "upsellButtonInner_e88228",
        editResources: "editResources_e88228",
        bulletList: "bulletList_e88228",
        dragContainer: "dragContainer_e88228",
        dropIndicatorBefore: "dropIndicatorBefore_e88228",
        dropIndicatorAfter: "dropIndicatorAfter_e88228",
        previewImage: "previewImage_e88228",
        centeredSection: "centeredSection_e88228",
        suggestedChannelsSection: "suggestedChannelsSection_e88228",
        suggestedChannelsHeader: "suggestedChannelsHeader_e88228",
        suggestedChannels: "suggestedChannels_e88228",
        suggestedChannel: "suggestedChannel_e88228",
        suggestedChannelIcon: "suggestedChannelIcon_e88228",
        suggestedChannelText: "suggestedChannelText_e88228",
        suggestedChannelButton: "suggestedChannelButton_e88228",
        suggestedSeparator: "suggestedSeparator_e88228",
        suggestedChannelsDismiss: "suggestedChannelsDismiss_e88228",
        suggestedChannelsDismissCheck: "suggestedChannelsDismissCheck_e88228",
      };
    },
    14360: function (e, t, n) {
      "use strict";
      e.exports = {
        header: "header_addbba",
        subheader: "subheader_addbba",
        help: "help_addbba",
        helpSeparator: "helpSeparator_addbba",
        wumpus: "wumpus_addbba",
        notice: "notice_addbba",
        content: "content_addbba",
        review: "review_addbba",
        reviewHeaderText: "reviewHeaderText_addbba",
        divider: "divider_addbba",
        reviewHeader: "reviewHeader_addbba",
        reviewActions: "reviewActions_addbba",
        rolesWarning: "rolesWarning_addbba",
        warningIcon: "warningIcon_addbba",
      };
    },
    693310: function (e, t, n) {
      "use strict";
      e.exports = {
        container: "container_b5926e",
        flexContainer: "flexContainer_b5926e",
        educationUpsellRoot: "educationUpsellRoot_b5926e",
        wumpus: "wumpus_b5926e",
        educationUpsell: "educationUpsell_b5926e",
        educationUpsellArrow: "educationUpsellArrow_b5926e",
        actions: "actions_b5926e",
        next: "next_b5926e",
        button: "button_b5926e",
        hidden: "hidden_b5926e",
        arrow: "arrow_b5926e",
        noticeRegion: "noticeRegion_b5926e",
      };
    },
    84877: function (e, t, n) {
      "use strict";
      e.exports = {
        header: "header_df2e1e",
        prompts: "prompts_df2e1e",
        subtitle: "subtitle_df2e1e",
        separatorSection: "separatorSection_df2e1e",
        dropIndicatorBefore: "dropIndicatorBefore_df2e1e",
        dropIndicatorAfter: "dropIndicatorAfter_df2e1e",
        divider: "divider_df2e1e",
        addPrompt: "addPrompt_df2e1e",
        plusIcon: "plusIcon_df2e1e",
        links: "links_df2e1e",
        dot: "dot_df2e1e",
        channelCoverage: "channelCoverage_df2e1e",
        warningTextContainer: "warningTextContainer_df2e1e",
        warning: "warning_df2e1e",
        progressContainer: "progressContainer_df2e1e",
        coverageTitle: "coverageTitle_df2e1e",
        coverageHeader: "coverageHeader_df2e1e",
        coverageProgress: "coverageProgress_df2e1e",
        caret: "caret_df2e1e",
        channelCoverageDetails: "channelCoverageDetails_df2e1e",
        channels: "channels_df2e1e",
        channelPill: "channelPill_df2e1e",
        channel: "channel_df2e1e",
        channelCoverageHint: "channelCoverageHint_df2e1e",
      };
    },
    248641: function (e, t, n) {
      "use strict";
      e.exports = {
        upsellHeader: "upsellHeader_aa7c25",
        islands: "islands_aa7c25",
        mainIsland: "mainIsland_aa7c25",
        balloonDog: "balloonDog_aa7c25",
        upsellHeaderText: "upsellHeaderText_aa7c25",
        upsellButtons: "upsellButtons_aa7c25",
        valuesContainer: "valuesContainer_aa7c25",
        valueContainer: "valueContainer_aa7c25",
        valueText: "valueText_aa7c25",
        upsellContainer: "upsellContainer_aa7c25",
        upsellPreview: "upsellPreview_aa7c25",
        previewListItem: "previewListItem_aa7c25",
        selected: "selected_aa7c25",
        spacingSmall: "spacingSmall_aa7c25",
        spacingLarge: "spacingLarge_aa7c25",
        channelIcon: "channelIcon_aa7c25",
        channel: "channel_aa7c25",
        spaceBetween: "spaceBetween_aa7c25",
        checkbox: "checkbox_aa7c25",
        checkmark: "checkmark_aa7c25",
        checkboxCircle: "checkboxCircle_aa7c25",
        tooltip: "tooltip_aa7c25",
      };
    },
    277767: function (e, t, n) {
      "use strict";
      e.exports = {
        container: "container_a90bed",
        dragContainer: "dragContainer_a90bed",
        containerFocused: "containerFocused_a90bed",
        dragIcon: "dragIcon_a90bed",
        dropIndicatorBefore: "dropIndicatorBefore_a90bed",
        dropIndicatorAfter: "dropIndicatorAfter_a90bed",
        questionNumber: "questionNumber_a90bed",
        optionsHeader: "optionsHeader_a90bed",
        title: "title_a90bed",
        titleInput: "titleInput_a90bed",
        examplesSection: "examplesSection_a90bed",
        examples: "examples_a90bed",
        example: "example_a90bed",
        options: "options_a90bed",
        buttons: "buttons_a90bed",
        checkboxes: "checkboxes_a90bed",
        removeButton: "removeButton_a90bed",
        closeIcon: "closeIcon_a90bed",
        collapseButton: "collapseButton_a90bed",
      };
    },
    926916: function (e, t, n) {
      "use strict";
      e.exports = {
        optionCard: "optionCard_b19204",
        singleColumn: "singleColumn_b19204",
        optionCardRow: "optionCardRow_b19204",
        hasError: "hasError_b19204",
        addOptionCard: "addOptionCard_b19204",
        addFirstOptionCard: "addFirstOptionCard_b19204",
        dragContainer: "dragContainer_b19204",
        dropIndicatorBefore: "dropIndicatorBefore_b19204",
        dropIndicatorAfter: "dropIndicatorAfter_b19204",
        text: "text_b19204",
        description: "description_b19204",
        plusIcon: "plusIcon_b19204",
        emoji: "emoji_b19204",
      };
    },
    839754: function (e, t, n) {
      "use strict";
      e.exports = {
        onboardingStepContainer: "onboardingStepContainer_a85c10",
        leftContainer: "leftContainer_a85c10",
        iconContainer: "iconContainer_a85c10",
        channelIcon: "channelIcon_a85c10",
        onboardingStepText: "onboardingStepText_a85c10",
        rightContainer: "rightContainer_a85c10",
        checkmark: "checkmark_a85c10",
        danger: "danger_a85c10",
        warning: "warning_a85c10",
        statusText: "statusText_a85c10",
        cta: "cta_a85c10",
        ctaInner: "ctaInner_a85c10",
        inlineSwitch: "inlineSwitch_a85c10",
      };
    },
    77473: function (e, t, n) {
      "use strict";
      e.exports = {
        page: "page_e8251c",
        contentContainer: "contentContainer_e8251c",
      };
    },
    914908: function (e, t, n) {
      "use strict";
      e.exports = {
        container: "container_cc7b67",
        icon: "icon_cc7b67",
        description: "description_cc7b67",
        label: "label_cc7b67",
        arrow: "arrow_cc7b67",
      };
    },
    912111: function (e, t, n) {
      "use strict";
      e.exports = {
        section: "section_a210a0",
        bannerContainer: "bannerContainer_a210a0",
        banner: "banner_a210a0",
        bannerOut: "bannerOut_a210a0",
        bannerClubs: "bannerClubs_a210a0",
        bannerGaming: "bannerGaming_a210a0",
        bannerHobbies: "bannerHobbies_a210a0",
        profileCard: "profileCard_a210a0",
        avatarContainer: "avatarContainer_a210a0",
        avatarName: "avatarName_a210a0",
        roles: "roles_a210a0",
        rolesRow: "rolesRow_a210a0",
        roleTag: "roleTag_a210a0",
        roleDot: "roleDot_a210a0",
        roleText: "roleText_a210a0",
        container: "container_a210a0",
        introBody: "introBody_a210a0",
        button: "button_a210a0",
        divider: "divider_a210a0",
      };
    },
    956385: function (e, t, n) {
      "use strict";
      e.exports = {
        emptyRoles: "emptyRoles_a930f1",
        emptyRolesText: "emptyRolesText_a930f1",
        roleRow: "roleRow_a930f1",
        roleRowDragging: "roleRowDragging_a930f1",
        dragIcon: "dragIcon_a930f1",
        roleNameContainer: "roleNameContainer_a930f1",
        shield: "shield_a930f1 " + n("403600").desaturateUserColors,
        roleIcon: "roleIcon_a930f1",
        lock: "lock_a930f1",
        subscriptionRoleIcon: "subscriptionRoleIcon_a930f1",
        roleName: "roleName_a930f1",
        memberCountContainer: "memberCountContainer_a930f1",
        person: "person_a930f1",
        buttonsContainer: "buttonsContainer_a930f1",
        editButton: "editButton_a930f1",
        circleButton: "circleButton_a930f1",
        roleRowDisableHover: "roleRowDisableHover_a930f1",
        dragIconHidden: "dragIconHidden_a930f1",
        containerDragBefore: "containerDragBefore_a930f1",
        containerDragAfter: "containerDragAfter_a930f1",
        roleFlowerStar: "roleFlowerStar_a930f1",
      };
    },
    928014: function (e, t, n) {
      "use strict";
      e.exports = {
        helpText: "helpText_e72811",
        searchContainer: "searchContainer_e72811",
        createButton: "createButton_e72811",
        rolesTable: "rolesTable_e72811",
        tableHeader: "tableHeader_e72811",
        tableTitle: "tableTitle_e72811",
        dragSpacing: "dragSpacing_e72811",
        roleNameSpacing: "roleNameSpacing_e72811",
        memberSpacing: "memberSpacing_e72811",
        buttonsSpacing: "buttonsSpacing_e72811",
        description: "description_e72811",
      };
    },
    691440: function (e, t, n) {
      "use strict";
      e.exports = {
        container: "container_bdfce3",
        formTitle: "formTitle_bdfce3",
        availabilityIndicator: "availabilityIndicator_bdfce3",
        description: "description_bdfce3",
        button: "button_bdfce3",
        previewContainer: "previewContainer_bdfce3",
        preview: "preview_bdfce3",
        rolePreviewArea: "rolePreviewArea_bdfce3",
        roleIconPreview: "roleIconPreview_bdfce3",
      };
    },
    650593: function (e, t, n) {
      "use strict";
      e.exports = {
        container: "container_ae96a9",
        verifiedRow: "verifiedRow_ae96a9",
        verifiedRowWithMetadata: "verifiedRowWithMetadata_ae96a9",
        verifiedIcon: "verifiedIcon_ae96a9",
        verifiedText: "verifiedText_ae96a9",
        closeButton: "closeButton_ae96a9",
        closeIcon: "closeIcon_ae96a9",
        ruleContainer: "ruleContainer_ae96a9",
        ruleContainerLabel: "ruleContainerLabel_ae96a9",
        ruleItemHeader: "ruleItemHeader_ae96a9",
        ruleItemSwitch: "ruleItemSwitch_ae96a9",
        numericalRuleSubItemContainer: "numericalRuleSubItemContainer_ae96a9",
        numericalRuleSubText: "numericalRuleSubText_ae96a9",
        numericalRuleInput: "numericalRuleInput_ae96a9",
        fieldText: "fieldText_ae96a9",
      };
    },
    16297: function (e, t, n) {
      "use strict";
      e.exports = {
        scroller: "scroller_d02bd8",
        headerHeading: "headerHeading_d02bd8",
        headerNoConfigContainer: "headerNoConfigContainer_d02bd8",
        headerTitleTextContainer: "headerTitleTextContainer_d02bd8",
        headerTitleContainer: "headerTitleContainer_d02bd8",
        headerTitleButton: "headerTitleButton_d02bd8",
        configurationsContainer: "configurationsContainer_d02bd8",
        addVerificationButton: "addVerificationButton_d02bd8",
        addVerificationButtonAppend: "addVerificationButtonAppend_d02bd8",
        addVerificationButtonAppendTextContainer:
          "addVerificationButtonAppendTextContainer_d02bd8",
        operatorContainer: "operatorContainer_d02bd8",
        warningContainer: "warningContainer_d02bd8",
        warningIcon: "warningIcon_d02bd8",
      };
    },
    281654: function (e, t, n) {
      "use strict";
      e.exports = {
        scroller: "scroller_da1bd9",
        colorPicker: "colorPicker_da1bd9",
        colorDescription: "colorDescription_da1bd9",
        divider: "divider_da1bd9",
        noticeContainer: "noticeContainer_da1bd9",
        previewContainer: "previewContainer_da1bd9",
        messageContainer: "messageContainer_da1bd9",
      };
    },
    729824: function (e, t, n) {
      "use strict";
      e.exports = {
        titleContainer: "titleContainer_c69589",
        titleText: "titleText_c69589",
        menu: "menu_c69589",
        tabBar: "tabBar_c69589",
        tabBarItem: "tabBarItem_c69589",
      };
    },
    465848: function (e, t, n) {
      "use strict";
      e.exports = {
        container: "container_fe3229",
        headerContainer: "headerContainer_fe3229",
        searchContainer: "searchContainer_fe3229",
        searchWarning: "searchWarning_fe3229",
        addButton: "addButton_fe3229",
        memberRow: "memberRow_fe3229",
        emptyRowContainer: "emptyRowContainer_fe3229",
        emptyRowText: "emptyRowText_fe3229",
        memberDetails: "memberDetails_fe3229",
        list: "list_fe3229",
        removeButtonContainer: "removeButtonContainer_fe3229",
        removeButton: "removeButton_fe3229",
        removeButtonDisabled: "removeButtonDisabled_fe3229",
        removeTip: "removeTip_fe3229",
      };
    },
    366468: function (e, t, n) {
      "use strict";
      e.exports = {
        scroller: "scroller_a73849",
        noticeContainer: "noticeContainer_a73849",
        searchContainer: "searchContainer_a73849",
        permissionsWrapper: "permissionsWrapper_a73849",
        clearButtonWrapper: "clearButtonWrapper_a73849",
        clearButton: "clearButton_a73849",
        noResultsContainer: "noResultsContainer_a73849",
        noResults: "noResults_a73849",
        permissionsForm: "permissionsForm_a73849",
      };
    },
    571621: function (e, t, n) {
      "use strict";
      e.exports = {
        contentWidth: "contentWidth_bd05f1",
        header: "header_bd05f1",
        stickyHeader: "stickyHeader_bd05f1",
        stickyHeaderElevated: "stickyHeaderElevated_bd05f1",
      };
    },
    100161: function (e, t, n) {
      "use strict";
      e.exports = {
        sidebar: "sidebar_e87574",
        container: "container_e87574",
        titleContainer: "titleContainer_e87574",
        titleElevated: "titleElevated_e87574",
        title: "title_e87574",
        titleText: "titleText_e87574",
        addRole: "addRole_e87574",
        list: "list_e87574",
        row: "row_e87574",
        lock: "lock_e87574",
        dragBefore: "dragBefore_e87574",
        dragAfter: "dragAfter_e87574",
        tooltip: "tooltip_e87574",
        verifiedRoleIcon: "verifiedRoleIcon_e87574",
      };
    },
    657968: function (e, t, n) {
      "use strict";
      e.exports = {
        container: "container_d77eb0",
        button: "button_d77eb0",
        buttonInner: "buttonInner_d77eb0",
        arrowIcon: "arrowIcon_d77eb0",
      };
    },
    329070: function (e, t, n) {
      "use strict";
      e.exports = {
        notice: "notice_cca137",
        noticeIcon: "noticeIcon_cca137",
        noticeIconPowerful: "noticeIconPowerful_cca137",
      };
    },
    199712: function (e, t, n) {
      "use strict";
      e.exports = {
        container: "container_db5049",
        avatar: "avatar_db5049",
        textContainer: "textContainer_db5049",
        name: "name_db5049",
        botTag: "botTag_db5049",
        userTag: "userTag_db5049",
      };
    },
    579524: function (e, t, n) {
      "use strict";
      e.exports = {
        changelog: "changelog_abe1fa",
        changelogImage: "changelogImage_abe1fa",
        header: "header_abe1fa",
        updatesHeader: "updatesHeader_abe1fa",
        updatesDescription: "updatesDescription_abe1fa",
        safetyChecklist: "safetyChecklist_abe1fa",
        safetyStepRow: "safetyStepRow_abe1fa",
        safetyStepContent: "safetyStepContent_abe1fa",
        divider: "divider_abe1fa",
      };
    },
    382689: function (e, t, n) {
      "use strict";
      e.exports = {
        enableContainer: "enableContainer_a1879c",
        activeCircle: "activeCircle_a1879c iconCircle_a1879c",
        animate: "animate_a1879c",
        editCircle: "editCircle_a1879c iconCircle_a1879c",
        enableDescription: "enableDescription_a1879c",
        buttonContainer: "buttonContainer_a1879c",
        previewButton: "previewButton_a1879c",
      };
    },
    9917: function (e, t, n) {
      "use strict";
      e.exports = {
        serverBoostTabItem: "serverBoostTabItem_f7189e",
        icon: "icon_f7189e",
        landingPageTabLink: "landingPageTabLink_f7189e",
        roleSubLabel: "roleSubLabel_f7189e",
      };
    },
    396466: function (e, t, n) {
      "use strict";
      e.exports = {
        developerPortalCtaWrapper: "developerPortalCtaWrapper_cfaf72",
        developerPortalCta: "developerPortalCta_cfaf72",
        overviewData: "overviewData_cfaf72",
        placeholderImage: "placeholderImage_cfaf72",
        developerPortalCtaText: "developerPortalCtaText_cfaf72",
        notEnoughMembersError: "notEnoughMembersError_cfaf72",
        memberInsightsContainer: "memberInsightsContainer_cfaf72",
        insightsTitle: "insightsTitle_cfaf72",
        betaTag: "betaTag_cfaf72",
        insightsTooltip: "insightsTooltip_cfaf72",
        insightsTooltipIcon: "insightsTooltipIcon_cfaf72",
        insightsHeader: "insightsHeader_cfaf72",
        insightsIcon: "insightsIcon_cfaf72",
        title: "title_cfaf72",
        ratingGood: "ratingGood_cfaf72",
        ratingNeutral: "ratingNeutral_cfaf72",
        ratingBad: "ratingBad_cfaf72",
        description: "description_cfaf72",
        divider: "divider_cfaf72",
        tips: "tips_cfaf72",
        dividerInline: "dividerInline_cfaf72",
        insightsActions: "insightsActions_cfaf72",
        insightAction: "insightAction_cfaf72",
        actionText: "actionText_cfaf72",
        actionIcon: "actionIcon_cfaf72",
        ratingVeryGood: "ratingVeryGood_cfaf72",
        link: "link_cfaf72",
        streamerMode: "streamerMode_cfaf72",
      };
    },
    828965: function (e, t, n) {
      "use strict";
      e.exports = {
        searchBar: "searchBar_a9f4e8",
        settingsHeader: "settingsHeader_a9f4e8",
        bannedUser: "bannedUser_a9f4e8",
        username: "username_a9f4e8",
        bannedUserAvatar: "bannedUserAvatar_a9f4e8",
        discrim: "discrim_a9f4e8",
        description: "description_a9f4e8",
        emptyState: "emptyState_a9f4e8",
        spinner: "spinner_a9f4e8",
        bannedUserModal: "bannedUserModal_a9f4e8",
        header: "header_a9f4e8",
        footer: "footer_a9f4e8",
        userUsername: "userUsername_a9f4e8",
        userDiscrim: "userDiscrim_a9f4e8",
        reasonHeader: "reasonHeader_a9f4e8",
        content: "content_a9f4e8",
        error: "error_a9f4e8",
      };
    },
    264112: function (e, t, n) {
      "use strict";
      e.exports = {
        searchBar: "searchBar_c90ddb",
        settingsHeader: "settingsHeader_c90ddb",
        bannedUser: "bannedUser_c90ddb",
        username: "username_c90ddb",
        bannedUserAvatar: "bannedUserAvatar_c90ddb",
        discrim: "discrim_c90ddb",
        description: "description_c90ddb",
        emptyState: "emptyState_c90ddb",
        spinner: "spinner_c90ddb",
        bannedUserModal: "bannedUserModal_c90ddb",
        header: "header_c90ddb",
        footer: "footer_c90ddb",
        userUsername: "userUsername_c90ddb",
        userDiscrim: "userDiscrim_c90ddb",
        reasonHeader: "reasonHeader_c90ddb",
        content: "content_c90ddb",
        error: "error_c90ddb",
        container: "container_c90ddb",
        scrollerContainer: "scrollerContainer_c90ddb",
        bansSearchContainer: "bansSearchContainer_c90ddb",
        searchButton: "searchButton_c90ddb",
        paginationInput: "paginationInput_c90ddb",
      };
    },
    105459: function (e, t, n) {
      "use strict";
      e.exports = {
        twoColumnFormSection: "twoColumnFormSection_d0de76",
        descriptionColumn: "descriptionColumn_d0de76",
        selectColumn: "selectColumn_d0de76",
        firstSection: "firstSection_d0de76",
        formTitle: "formTitle_d0de76",
        divider: "divider_d0de76",
        description: "description_d0de76",
        upsellContainer: "upsellContainer_d0de76",
        upsellContent: "upsellContent_d0de76",
        upsellFooter: "upsellFooter_d0de76",
        upsellImage: "upsellImage_d0de76",
        upsellHeader: "upsellHeader_d0de76",
        upsellButton: "upsellButton_d0de76",
        upsellClose: "upsellClose_d0de76",
      };
    },
    333913: function (e, t, n) {
      "use strict";
      e.exports = {
        container: "container_b1a8d5",
        banner: "banner_b1a8d5",
        image: "image_b1a8d5",
        sparkles: "sparkles_b1a8d5",
        guildDetails: "guildDetails_b1a8d5",
        faded: "faded_b1a8d5",
        guildIcon: "guildIcon_b1a8d5",
        body: "body_b1a8d5",
        separator: "separator_b1a8d5",
        features: "features_b1a8d5",
        featureCard: "featureCard_b1a8d5",
        featureIcon: "featureIcon_b1a8d5",
        featureHeader: "featureHeader_b1a8d5",
        featuredText: "featuredText_b1a8d5",
        infoIcon: "infoIcon_b1a8d5",
        button: "button_b1a8d5",
      };
    },
    469466: function (e, t, n) {
      "use strict";
      e.exports = {
        welcomeDescription: "welcomeDescription_e803f7",
        exampleContainer: "exampleContainer_e803f7",
        header: "header_e803f7",
        exampleModal: "exampleModal_e803f7",
        optionContainer: "optionContainer_e803f7",
        exampleWumpus: "exampleWumpus_e803f7",
        wumpus: "wumpus_e803f7",
        tooltip: "tooltip_e803f7",
        tooltipPointer: "tooltipPointer_e803f7",
      };
    },
    740380: function (e, t, n) {
      "use strict";
      e.exports = {
        previewContainer: "previewContainer_dcd39d",
        icon: "icon_dcd39d",
        welcomeHeader: "welcomeHeader_dcd39d",
        welcomeTitle: "welcomeTitle_dcd39d",
        welcomeChannels: "welcomeChannels_dcd39d",
        headerGuildBadge: "headerGuildBadge_dcd39d",
        flowerStar: "flowerStar_dcd39d",
        descriptionWrapper: "descriptionWrapper_dcd39d",
        descriptionInput: "descriptionInput_dcd39d",
        divider: "divider_dcd39d",
        addChannelButton: "addChannelButton_dcd39d",
        addChannelSubtext: "addChannelSubtext_dcd39d",
        welcomeChannel: "welcomeChannel_dcd39d",
        dragging: "dragging_dcd39d",
        channelTitleIcon: "channelTitleIcon_dcd39d",
        channelIcon: "channelIcon_dcd39d",
        warningIcon: "warningIcon_dcd39d",
        channelDescriptionWrapper: "channelDescriptionWrapper_dcd39d",
        notice: "notice_dcd39d",
        noticeIcon: "noticeIcon_dcd39d",
        channelWarning: "channelWarning_dcd39d",
      };
    },
    606217: function (e, t, n) {
      "use strict";
      e.exports = {
        twoColumnFormSection: "twoColumnFormSection_e95c0f",
        formColumnLeft: "formColumnLeft_e95c0f",
        noDividerFormSection: "noDividerFormSection_e95c0f",
        formTitle: "formTitle_e95c0f",
        formDescription: "formDescription_e95c0f",
        description: "description_e95c0f",
        formSelect: "formSelect_e95c0f",
        divider: "divider_e95c0f",
        guildCard: "guildCard_e95c0f",
        imageUploaderInnerSquare: "imageUploaderInnerSquare_e95c0f",
        imageUploaderWrapper: "imageUploaderWrapper_e95c0f",
        error: "error_e95c0f",
      };
    },
    825267: function (e, t, n) {
      "use strict";
      e.exports = {
        settingsColumn: "settingsColumn_b2b948 " + n("156725").customColumn,
        settingsContainer:
          "settingsContainer_b2b948 " + n("156725").customContainer,
        settingsScroller:
          "settingsScroller_b2b948 " +
          n("156725").customScroller +
          " " +
          n("156725").contentRegionScroller,
        settingsContent:
          "settingsContent_b2b948 " +
          n("156725").contentColumnDefault +
          " settingsColumn_b2b948 " +
          n("156725").customColumn,
        container: "container_b2b948",
        mainContent: "mainContent_b2b948",
        betaTag: "betaTag_b2b948",
        twoColumnFormSection: "twoColumnFormSection_b2b948",
        checklist: "checklist_b2b948",
        textArea: "textArea_b2b948",
        socialLinksContainer: "socialLinksContainer_b2b948",
        validationButtonMin: "validationButtonMin_b2b948",
        validationButtonMax: "validationButtonMax_b2b948",
        deleteButtonMin: "deleteButtonMin_b2b948",
        deleteButtonMax: "deleteButtonMax_b2b948",
        deleteButtonHiddenMin: "deleteButtonHiddenMin_b2b948",
        deleteButtonHiddenMax: "deleteButtonHiddenMax_b2b948",
        socialLinksDropdownMin: "socialLinksDropdownMin_b2b948",
        socialLinksDropdownMax: "socialLinksDropdownMax_b2b948",
        socialLinksMin: "socialLinksMin_b2b948",
        socialLinksMax: "socialLinksMax_b2b948",
        reasonToJoin: "reasonToJoin_b2b948",
        noDividerFormSection: "noDividerFormSection_b2b948",
        formTitle: "formTitle_b2b948",
        formDescription: "formDescription_b2b948",
        description: "description_b2b948",
        tabMainDescription: "tabMainDescription_b2b948",
        divider: "divider_b2b948",
        viewPageButton: "viewPageButton_b2b948",
        imageUploaderInnerSquare: "imageUploaderInnerSquare_b2b948",
        error: "error_b2b948",
      };
    },
    337225: function (e, t, n) {
      "use strict";
      e.exports = {
        emojiAliasPlaceholder: "emojiAliasPlaceholder_dc1809",
        title: "title_dc1809",
        content: "content_dc1809",
        spinner: "spinner_dc1809",
        empty: "empty_dc1809",
        emojiTable: "emojiTable_dc1809",
        emojiColumn: "emojiColumn_dc1809",
        columnLabel: "columnLabel_dc1809",
        emojiAliasPlaceholderContent: "emojiAliasPlaceholderContent_dc1809",
        emojiAliasInput: "emojiAliasInput_dc1809",
        emojiRow: "emojiRow_dc1809",
        emojiInput: "emojiInput_dc1809",
        column: "column_dc1809",
        emojiRemove: "emojiRemove_dc1809",
        emojiImage: "emojiImage_dc1809",
        emojiRowText: "emojiRowText_dc1809",
        emojiAliasInputDisabled: "emojiAliasInputDisabled_dc1809",
        emojiDisabled: "emojiDisabled_dc1809",
        uploader: "uploader_dc1809",
        avatar: "avatar_dc1809",
        emojiUploadUploadRequirementsHeading:
          "emojiUploadUploadRequirementsHeading_dc1809",
        emojiUploadUploadRequirementsList:
          "emojiUploadUploadRequirementsList_dc1809",
        emojiSettings: "emojiSettings_dc1809",
        emojiUploadContainer: "emojiUploadContainer_dc1809",
        editEmojiRolesIcon: "editEmojiRolesIcon_dc1809",
        editEmojiRolesButton: "editEmojiRolesButton_dc1809",
      };
    },
    535633: function (e, t, n) {
      "use strict";
      e.exports = {
        linkIcon: "linkIcon_ebb2c7",
        rowContainer: "rowContainer_ebb2c7",
      };
    },
    930261: function (e, t, n) {
      "use strict";
      e.exports = {
        onboardingContainer: "onboardingContainer_a4e2c3",
        upsellOnTop: "upsellOnTop_a4e2c3",
        progressContainer: "progressContainer_a4e2c3",
        progressBarContainer: "progressBarContainer_a4e2c3",
        clickableProgressBar: "clickableProgressBar_a4e2c3",
        progressBar: "progressBar_a4e2c3",
        progressBarCurrent: "progressBarCurrent_a4e2c3",
        backButton: "backButton_a4e2c3",
        arrow: "arrow_a4e2c3",
      };
    },
    990063: function (e, t, n) {
      "use strict";
      e.exports = {
        avatarUploaderDisabled: "avatarUploaderDisabled_f0a9ff",
        iconError: "iconError_f0a9ff",
        divider: "divider_f0a9ff",
        avatarUploader: "avatarUploader_f0a9ff",
        avatarUploaderInner: "avatarUploaderInner_f0a9ff",
        avatarUploaderInnerEmpty: "avatarUploaderInnerEmpty_f0a9ff",
        flexFormTitle: "flexFormTitle_f0a9ff",
        guildFeatureAvailabilityIndicator:
          "guildFeatureAvailabilityIndicator_f0a9ff",
        upsell: "upsell_f0a9ff",
        upsellButton: "upsellButton_f0a9ff",
        premiumUpsellBadge: "premiumUpsellBadge_f0a9ff",
        progressBarImage: "progressBarImage_f0a9ff",
        marginTop16: "marginTop16_f0a9ff",
        marginTop8: "marginTop8_f0a9ff",
        marginBottom0: "marginBottom0_f0a9ff",
        marginBottom8: "marginBottom8_f0a9ff",
        marginTop20: "marginTop20_f0a9ff",
        marginBottom20: "marginBottom20_f0a9ff",
        flexRow: "flexRow_f0a9ff",
        badgedItem: "badgedItem_f0a9ff",
      };
    },
    720898: function (e, t, n) {
      "use strict";
      e.exports = {
        titleBlurb: "titleBlurb_f1f3b4",
        guildBoostingGracePeriodTitle: "guildBoostingGracePeriodTitle_f1f3b4",
        divider: "divider_f1f3b4",
      };
    },
    10105: function (e, t, n) {
      "use strict";
      e.exports = {
        betaTag: "betaTag_ebd904",
        headerContainer: "headerContainer_ebd904",
        divider: "divider_ebd904",
        switchItem: "switchItem_ebd904",
        switchItemTextContent: "switchItemTextContent_ebd904",
        setupContainer: "setupContainer_ebd904",
      };
    },
    275715: function (e, t, n) {
      "use strict";
      e.exports = {
        row: "row_b10b92",
        soundEditContainer: "soundEditContainer_b10b92",
        soundPreviewIcon: "soundPreviewIcon_b10b92",
        active: "active_b10b92",
        tableTitle: "tableTitle_b10b92",
        boostingIconWrapper: "boostingIconWrapper_b10b92",
        soundName: "soundName_b10b92",
        helpText: "helpText_b10b92",
        divider: "divider_b10b92",
        empty: "empty_b10b92",
        emptyText: "emptyText_b10b92",
        buttons: "buttons_b10b92",
        soundTable: "soundTable_b10b92",
        tableHeaders: "tableHeaders_b10b92",
        tableHeader: "tableHeader_b10b92",
        soundUpdate: "soundUpdate_b10b92 soundEdit_b10b92",
        soundRemove: "soundRemove_b10b92 soundEdit_b10b92",
        soundEditIcon: "soundEditIcon_b10b92",
        emoji: "emoji_b10b92",
        uploaderAvatar: "uploaderAvatar_b10b92",
        uploader: "uploader_b10b92",
        browserUnsupportedDialog: "browserUnsupportedDialog_b10b92",
      };
    },
    580765: function (e, t, n) {
      "use strict";
      e.exports = {
        upsellContainer: "upsellContainer_bb33d5",
        upsellHeader: "upsellHeader_bb33d5",
        upsellDescription: "upsellDescription_bb33d5",
        upsellButtons: "upsellButtons_bb33d5",
        upsellButtonPrimary: "upsellButtonPrimary_bb33d5",
        upsellButton: "upsellButton_bb33d5",
        divider: "divider_bb33d5",
      };
    },
    759985: function (e, t, n) {
      "use strict";
      e.exports = {
        descriptionBox: "descriptionBox_c38f8d",
        descriptionSection: "descriptionSection_c38f8d",
        descriptionRow: "descriptionRow_c38f8d",
        descriptionIcon: "descriptionIcon_c38f8d",
        divider: "divider_c38f8d",
        button: "button_c38f8d",
        rightButtonContainer: "rightButtonContainer_c38f8d",
        lastSync: "lastSync_c38f8d",
        buttonContainer: "buttonContainer_c38f8d",
      };
    },
    70683: function (e, t, n) {
      "use strict";
      e.exports = { dot: "dot_f92f5f", container: "container_f92f5f" };
    },
    279404: function (e, t, n) {
      "use strict";
      e.exports = {
        editVanityUrlCard: "editVanityUrlCard_ceb0aa",
        removeVanityUrlButton: "removeVanityUrlButton_ceb0aa",
        formTitleField: "formTitleField_ceb0aa",
        flexFormTitle: "flexFormTitle_ceb0aa",
        guildFeatureAvailabilityIndicator:
          "guildFeatureAvailabilityIndicator_ceb0aa",
        upsellButton: "upsellButton_ceb0aa",
        premiumUpsellBadge: "premiumUpsellBadge_ceb0aa",
        marginTop16: "marginTop16_ceb0aa",
      };
    },
    991680: function (e, t, n) {
      "use strict";
      e.exports = {
        infoWrapper: "infoWrapper_aad57c",
        infoItem: "infoItem_aad57c",
        divider: "divider_aad57c",
        spacing: "spacing_aad57c",
      };
    },
    446716: function (e, t, n) {
      "use strict";
      e.exports = {
        groupContainer: "groupContainer_f573e6",
        groupHeaderRow: "groupHeaderRow_f573e6",
        pointer: "pointer_f573e6",
        groupCollapsedContainer: "groupCollapsedContainer_f573e6",
      };
    },
    441519: function (e, t, n) {
      "use strict";
      e.exports = {
        radioItem: "radioItem_b34891",
        groupCollapsedRow: "groupCollapsedRow_b34891",
        selected: "selected_b34891",
      };
    },
    96956: function (e, t, n) {
      "use strict";
      n.r(
        (e.exports = {
          container: "container_e5c5d5",
          clickableContainer: "clickableContainer_e5c5d5",
          disabled: "disabled_e5c5d5",
          noAction: "noAction_e5c5d5",
          subsectionContainer: "subsectionContainer_e5c5d5",
          backgroundModifierContainer: "backgroundModifierContainer_e5c5d5",
          selected: "selected_e5c5d5",
          settingsDescriptionContainer: "settingsDescriptionContainer_e5c5d5",
          statusGreen: "statusGreen_e5c5d5",
          statusOrange: "statusOrange_e5c5d5",
          statusRed: "statusRed_e5c5d5",
          statusYellow: "statusYellow_e5c5d5",
          accent: "accent_e5c5d5",
          transparent: "transparent_e5c5d5",
          description: "description_e5c5d5",
        }),
      );
    },
    930871: function (e, t, n) {
      "use strict";
      e.exports = {
        subcategory: "subcategory_c7d2ee",
        closeWrapper: "closeWrapper_c7d2ee",
        close: "close_c7d2ee",
      };
    },
    23387: function (e, t, n) {
      "use strict";
      e.exports = {
        container: "container_bd2368",
        loaderContainer: "loaderContainer_bd2368",
        loadingText: "loadingText_bd2368",
        header: "header_bd2368",
        headerIcon: "headerIcon_bd2368",
        checklistItem: "checklistItem_bd2368",
        separator: "separator_bd2368",
        checklistIcon: "checklistIcon_bd2368",
        checklistText: "checklistText_bd2368",
        detailsButton: "detailsButton_bd2368",
        doesNot: "doesNot_bd2368",
        healthPending: "healthPending_bd2368",
        healthFailingDescription: "healthFailingDescription_bd2368",
        indent: "indent_bd2368",
      };
    },
    495994: function (e, t, n) {
      "use strict";
      e.exports = {
        background: "background_bbfa4c",
        discoverySettings: "discoverySettings_bbfa4c",
        disableDiscoveryButton: "disableDiscoveryButton_bbfa4c",
        image: "image_bbfa4c",
        header: "header_bbfa4c",
        description: "description_bbfa4c",
        checklist: "checklist_bbfa4c",
      };
    },
    445314: function (e, t, n) {
      "use strict";
      e.exports = {
        container: "container_d6d7a8",
        sparkles: "sparkles_d6d7a8",
        header: "header_d6d7a8",
        valueProp: "valueProp_d6d7a8",
        byline: "byline_d6d7a8",
        discoverPreview: "discoverPreview_d6d7a8",
        previewCard: "previewCard_d6d7a8",
        placeholderCard: "placeholderCard_d6d7a8",
        enableButton: "enableButton_d6d7a8",
        checklist: "checklist_d6d7a8",
      };
    },
    628660: function (e, t, n) {
      "use strict";
      e.exports = {
        reasonContainer: "reasonContainer_ad09cb",
        background: "background_ad09cb",
        reason: "reason_ad09cb",
        clearStatusIcon: "clearStatusIcon_ad09cb",
        clearStatusButton: "clearStatusButton_ad09cb",
        inputContainer: "inputContainer_ad09cb",
      };
    },
    696969: function (e, t, n) {
      "use strict";
      e.exports = { container: "container_d60263" };
    },
    286735: function (e, t, n) {
      "use strict";
      e.exports = { crossfade: "crossfade_e9fa7e", icon: "icon_e9fa7e" };
    },
    686550: function (e, t, n) {
      "use strict";
      e.exports = {
        avatarUploader: "avatarUploader_e9b3be",
        avatarUploaderDisabled: "avatarUploaderDisabled_e9b3be",
        avatarUploaderInnerSquare: "avatarUploaderInnerSquare_e9b3be",
        avatarUploaderInnerSquareDisabled:
          "avatarUploaderInnerSquareDisabled_e9b3be",
        avatarUploadIcon: "avatarUploadIcon_e9b3be",
        hideDefaultIcon: "hideDefaultIcon_e9b3be",
      };
    },
    514923: function (e, t, n) {
      "use strict";
      e.exports = {
        emojiErrorItem: "emojiErrorItem_e52bf8",
        fileIcon: "fileIcon_e52bf8",
        fileName: "fileName_e52bf8",
        fileInfo: "fileInfo_e52bf8",
      };
    },
    788883: function (e, t, n) {
      "use strict";
      e.exports = {
        progressBar: "progressBar_bfac79",
        background: "background_bfac79 bar_bfac79",
        foreground: "foreground_bfac79 bar_bfac79",
        foregroundTooltipPosition: "foregroundTooltipPosition_bfac79",
        tierInProgress: "tierInProgress_bfac79 tier_bfac79",
        tierAccomplished: "tierAccomplished_bfac79 tier_bfac79",
        tierFirst: "tierFirst_bfac79 tier_bfac79",
        tierCurrent: "tierCurrent_bfac79 tier_bfac79",
        currentTierIcon: "currentTierIcon_bfac79",
        foregroundTooltip: "foregroundTooltip_bfac79",
        tooltipMuted: "tooltipMuted_bfac79",
      };
    },
    366667: function (e, t, n) {
      "use strict";
      e.exports = {
        content: "content_da77bd",
        progress: "progress_da77bd",
        progressWithSubscriptions:
          "progressWithSubscriptions_da77bd progress_da77bd",
        tiers: "tiers_da77bd",
        subscriberCount: "subscriberCount_da77bd",
        subscribers: "subscribers_da77bd",
        subscriberMask: "subscriberMask_da77bd",
        moreSubscribers: "moreSubscribers_da77bd",
        subscribersPopout: "subscribersPopout_da77bd",
        subscribersPopoutUser: "subscribersPopoutUser_da77bd",
        subscribersPopoutUsername: "subscribersPopoutUsername_da77bd",
        tierDefaultUnlocked: "tierDefaultUnlocked_da77bd",
        tierDefaultUnlockedDescription: "tierDefaultUnlockedDescription_da77bd",
        tier: "tier_da77bd",
        tierBottomMargin: "tierBottomMargin_da77bd",
        tierHeaderWithoutCardBody: "tierHeaderWithoutCardBody_da77bd",
        tierHeaderContent: "tierHeaderContent_da77bd",
        tierHeaderLocked: "tierHeaderLocked_da77bd tierHeader_da77bd",
        tierHeaderUnlocked: "tierHeaderUnlocked_da77bd tierHeader_da77bd",
        tierIcon: "tierIcon_da77bd",
        tierIconLocked: "tierIconLocked_da77bd",
        tierTitle: "tierTitle_da77bd",
        tierTitleActive: "tierTitleActive_da77bd",
        tierRequirement: "tierRequirement_da77bd",
        tierLock: "tierLock_da77bd",
        tierUnlocked: "tierUnlocked_da77bd",
        tierClose: "tierClose_da77bd",
        tierCloseMechaWumpus: "tierCloseMechaWumpus_da77bd",
        tierCloseHint: "tierCloseHint_da77bd",
        tierCloseClose: "tierCloseClose_da77bd",
        tierCloseCloseIcon: "tierCloseCloseIcon_da77bd",
        hidden: "hidden_da77bd",
        tierBody: "tierBody_da77bd",
        previousPerks: "previousPerks_da77bd",
        perks: "perks_da77bd",
        perk: "perk_da77bd",
        perkIcon: "perkIcon_da77bd",
        perkText: "perkText_da77bd",
        perkTitle: "perkTitle_da77bd",
        perkDescription: "perkDescription_da77bd",
        avatar: "avatar_da77bd",
        newBadge: "newBadge_da77bd",
      };
    },
    102017: function (e, t, n) {
      "use strict";
      e.exports = {
        wrapper: "wrapper_d864ab",
        actions: "actions_d864ab",
        content: "content_d864ab",
        contentRemoving: "contentRemoving_d864ab",
        sticker: "sticker_d864ab",
        stickerName: "stickerName_d864ab",
        wrapperDisabled: "wrapperDisabled_d864ab",
        user: "user_d864ab",
        userAvatar: "userAvatar_d864ab",
        action: "action_d864ab",
        actionRemove: "actionRemove_d864ab",
        icon: "icon_d864ab",
        spinner: "spinner_d864ab",
      };
    },
    444466: function (e, t, n) {
      "use strict";
      e.exports = {
        grid: "grid_f8c5e7",
        placeholderCard: "placeholderCard_f8c5e7",
        placeholderImg: "placeholderImg_f8c5e7",
        emptyTierWrapper: "emptyTierWrapper_f8c5e7",
        unusedTierWrapper: "unusedTierWrapper_f8c5e7",
        emptyTierImage: "emptyTierImage_f8c5e7",
        unlockTierCtaHeading: "unlockTierCtaHeading_f8c5e7",
      };
    },
    84011: function (e, t, n) {
      "use strict";
      e.exports = {
        headerGuildName: "headerGuildName_e3f8c2",
        headerGuildBadge: "headerGuildBadge_e3f8c2",
        flowerStar: "flowerStar_e3f8c2",
        main: "main_e3f8c2",
        close: "close_e3f8c2",
        guildIcon: "guildIcon_e3f8c2",
        header: "header_e3f8c2",
        guildDescription: "guildDescription_e3f8c2",
        choiceHeader: "choiceHeader_e3f8c2",
        options: "options_e3f8c2",
        optionContainer: "optionContainer_e3f8c2",
        optionTextContainer: "optionTextContainer_e3f8c2",
        optionArrow: "optionArrow_e3f8c2",
        optionEmoji: "optionEmoji_e3f8c2",
        channelIcon: "channelIcon_e3f8c2",
        channelTitleIcon: "channelTitleIcon_e3f8c2",
        channelDescription: "channelDescription_e3f8c2",
        skip: "skip_e3f8c2",
        skipColor: "skipColor_e3f8c2",
      };
    },
  },
]);
//# sourceMappingURL=654affd86f11ab444aac.js.map
